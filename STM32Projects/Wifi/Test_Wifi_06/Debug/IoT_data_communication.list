
IoT_data_communication.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000013c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000e8f4  08000140  08000140  00010140  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000105c  0800ea38  0800ea38  0001ea38  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0800fa94  0800fa94  0001fa94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0800fa9c  0800fa9c  0001fa9c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0800faa0  0800faa0  0001faa0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         000001f0  20000008  0800faa4  00020008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00001570  200001f8  0800fc94  000201f8  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  20001768  0800fc94  00021768  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 10 .debug_info   00022d4b  00000000  00000000  00020228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00003d3c  00000000  00000000  00042f73  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000022c8  00000000  00000000  00046cb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 00002188  00000000  00000000  00048f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0002658f  00000000  00000000  0004b100  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0001f67a  00000000  00000000  0007168f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    000f6a75  00000000  00000000  00090d09  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000050  00000000  00000000  0018777e  2**0
                  CONTENTS, READONLY
 18 .debug_frame  0000aba0  00000000  00000000  001877d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000140 <__do_global_dtors_aux>:
 8000140:	b510      	push	{r4, lr}
 8000142:	4c05      	ldr	r4, [pc, #20]	; (8000158 <__do_global_dtors_aux+0x18>)
 8000144:	7823      	ldrb	r3, [r4, #0]
 8000146:	b933      	cbnz	r3, 8000156 <__do_global_dtors_aux+0x16>
 8000148:	4b04      	ldr	r3, [pc, #16]	; (800015c <__do_global_dtors_aux+0x1c>)
 800014a:	b113      	cbz	r3, 8000152 <__do_global_dtors_aux+0x12>
 800014c:	4804      	ldr	r0, [pc, #16]	; (8000160 <__do_global_dtors_aux+0x20>)
 800014e:	f3af 8000 	nop.w
 8000152:	2301      	movs	r3, #1
 8000154:	7023      	strb	r3, [r4, #0]
 8000156:	bd10      	pop	{r4, pc}
 8000158:	200001f8 	.word	0x200001f8
 800015c:	00000000 	.word	0x00000000
 8000160:	0800ea1c 	.word	0x0800ea1c

08000164 <frame_dummy>:
 8000164:	b508      	push	{r3, lr}
 8000166:	4b03      	ldr	r3, [pc, #12]	; (8000174 <frame_dummy+0x10>)
 8000168:	b11b      	cbz	r3, 8000172 <frame_dummy+0xe>
 800016a:	4903      	ldr	r1, [pc, #12]	; (8000178 <frame_dummy+0x14>)
 800016c:	4803      	ldr	r0, [pc, #12]	; (800017c <frame_dummy+0x18>)
 800016e:	f3af 8000 	nop.w
 8000172:	bd08      	pop	{r3, pc}
 8000174:	00000000 	.word	0x00000000
 8000178:	200001fc 	.word	0x200001fc
 800017c:	0800ea1c 	.word	0x0800ea1c

08000180 <strlen>:
 8000180:	4603      	mov	r3, r0
 8000182:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000186:	2a00      	cmp	r2, #0
 8000188:	d1fb      	bne.n	8000182 <strlen+0x2>
 800018a:	1a18      	subs	r0, r3, r0
 800018c:	3801      	subs	r0, #1
 800018e:	4770      	bx	lr

08000190 <memchr>:
 8000190:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000194:	2a10      	cmp	r2, #16
 8000196:	db2b      	blt.n	80001f0 <memchr+0x60>
 8000198:	f010 0f07 	tst.w	r0, #7
 800019c:	d008      	beq.n	80001b0 <memchr+0x20>
 800019e:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001a2:	3a01      	subs	r2, #1
 80001a4:	428b      	cmp	r3, r1
 80001a6:	d02d      	beq.n	8000204 <memchr+0x74>
 80001a8:	f010 0f07 	tst.w	r0, #7
 80001ac:	b342      	cbz	r2, 8000200 <memchr+0x70>
 80001ae:	d1f6      	bne.n	800019e <memchr+0xe>
 80001b0:	b4f0      	push	{r4, r5, r6, r7}
 80001b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001ba:	f022 0407 	bic.w	r4, r2, #7
 80001be:	f07f 0700 	mvns.w	r7, #0
 80001c2:	2300      	movs	r3, #0
 80001c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 80001c8:	3c08      	subs	r4, #8
 80001ca:	ea85 0501 	eor.w	r5, r5, r1
 80001ce:	ea86 0601 	eor.w	r6, r6, r1
 80001d2:	fa85 f547 	uadd8	r5, r5, r7
 80001d6:	faa3 f587 	sel	r5, r3, r7
 80001da:	fa86 f647 	uadd8	r6, r6, r7
 80001de:	faa5 f687 	sel	r6, r5, r7
 80001e2:	b98e      	cbnz	r6, 8000208 <memchr+0x78>
 80001e4:	d1ee      	bne.n	80001c4 <memchr+0x34>
 80001e6:	bcf0      	pop	{r4, r5, r6, r7}
 80001e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001ec:	f002 0207 	and.w	r2, r2, #7
 80001f0:	b132      	cbz	r2, 8000200 <memchr+0x70>
 80001f2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f6:	3a01      	subs	r2, #1
 80001f8:	ea83 0301 	eor.w	r3, r3, r1
 80001fc:	b113      	cbz	r3, 8000204 <memchr+0x74>
 80001fe:	d1f8      	bne.n	80001f2 <memchr+0x62>
 8000200:	2000      	movs	r0, #0
 8000202:	4770      	bx	lr
 8000204:	3801      	subs	r0, #1
 8000206:	4770      	bx	lr
 8000208:	2d00      	cmp	r5, #0
 800020a:	bf06      	itte	eq
 800020c:	4635      	moveq	r5, r6
 800020e:	3803      	subeq	r0, #3
 8000210:	3807      	subne	r0, #7
 8000212:	f015 0f01 	tst.w	r5, #1
 8000216:	d107      	bne.n	8000228 <memchr+0x98>
 8000218:	3001      	adds	r0, #1
 800021a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800021e:	bf02      	ittt	eq
 8000220:	3001      	addeq	r0, #1
 8000222:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000226:	3001      	addeq	r0, #1
 8000228:	bcf0      	pop	{r4, r5, r6, r7}
 800022a:	3801      	subs	r0, #1
 800022c:	4770      	bx	lr
 800022e:	bf00      	nop

08000230 <__aeabi_drsub>:
 8000230:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000234:	e002      	b.n	800023c <__adddf3>
 8000236:	bf00      	nop

08000238 <__aeabi_dsub>:
 8000238:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800023c <__adddf3>:
 800023c:	b530      	push	{r4, r5, lr}
 800023e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000242:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000246:	ea94 0f05 	teq	r4, r5
 800024a:	bf08      	it	eq
 800024c:	ea90 0f02 	teqeq	r0, r2
 8000250:	bf1f      	itttt	ne
 8000252:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000256:	ea55 0c02 	orrsne.w	ip, r5, r2
 800025a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800025e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000262:	f000 80e2 	beq.w	800042a <__adddf3+0x1ee>
 8000266:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800026a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800026e:	bfb8      	it	lt
 8000270:	426d      	neglt	r5, r5
 8000272:	dd0c      	ble.n	800028e <__adddf3+0x52>
 8000274:	442c      	add	r4, r5
 8000276:	ea80 0202 	eor.w	r2, r0, r2
 800027a:	ea81 0303 	eor.w	r3, r1, r3
 800027e:	ea82 0000 	eor.w	r0, r2, r0
 8000282:	ea83 0101 	eor.w	r1, r3, r1
 8000286:	ea80 0202 	eor.w	r2, r0, r2
 800028a:	ea81 0303 	eor.w	r3, r1, r3
 800028e:	2d36      	cmp	r5, #54	; 0x36
 8000290:	bf88      	it	hi
 8000292:	bd30      	pophi	{r4, r5, pc}
 8000294:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000298:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800029c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002a4:	d002      	beq.n	80002ac <__adddf3+0x70>
 80002a6:	4240      	negs	r0, r0
 80002a8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002ac:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002b4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002b8:	d002      	beq.n	80002c0 <__adddf3+0x84>
 80002ba:	4252      	negs	r2, r2
 80002bc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c0:	ea94 0f05 	teq	r4, r5
 80002c4:	f000 80a7 	beq.w	8000416 <__adddf3+0x1da>
 80002c8:	f1a4 0401 	sub.w	r4, r4, #1
 80002cc:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d0:	db0d      	blt.n	80002ee <__adddf3+0xb2>
 80002d2:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002d6:	fa22 f205 	lsr.w	r2, r2, r5
 80002da:	1880      	adds	r0, r0, r2
 80002dc:	f141 0100 	adc.w	r1, r1, #0
 80002e0:	fa03 f20e 	lsl.w	r2, r3, lr
 80002e4:	1880      	adds	r0, r0, r2
 80002e6:	fa43 f305 	asr.w	r3, r3, r5
 80002ea:	4159      	adcs	r1, r3
 80002ec:	e00e      	b.n	800030c <__adddf3+0xd0>
 80002ee:	f1a5 0520 	sub.w	r5, r5, #32
 80002f2:	f10e 0e20 	add.w	lr, lr, #32
 80002f6:	2a01      	cmp	r2, #1
 80002f8:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002fc:	bf28      	it	cs
 80002fe:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000302:	fa43 f305 	asr.w	r3, r3, r5
 8000306:	18c0      	adds	r0, r0, r3
 8000308:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800030c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000310:	d507      	bpl.n	8000322 <__adddf3+0xe6>
 8000312:	f04f 0e00 	mov.w	lr, #0
 8000316:	f1dc 0c00 	rsbs	ip, ip, #0
 800031a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800031e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000322:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000326:	d31b      	bcc.n	8000360 <__adddf3+0x124>
 8000328:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800032c:	d30c      	bcc.n	8000348 <__adddf3+0x10c>
 800032e:	0849      	lsrs	r1, r1, #1
 8000330:	ea5f 0030 	movs.w	r0, r0, rrx
 8000334:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000338:	f104 0401 	add.w	r4, r4, #1
 800033c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000340:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000344:	f080 809a 	bcs.w	800047c <__adddf3+0x240>
 8000348:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800034c:	bf08      	it	eq
 800034e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000352:	f150 0000 	adcs.w	r0, r0, #0
 8000356:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800035a:	ea41 0105 	orr.w	r1, r1, r5
 800035e:	bd30      	pop	{r4, r5, pc}
 8000360:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000364:	4140      	adcs	r0, r0
 8000366:	eb41 0101 	adc.w	r1, r1, r1
 800036a:	3c01      	subs	r4, #1
 800036c:	bf28      	it	cs
 800036e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000372:	d2e9      	bcs.n	8000348 <__adddf3+0x10c>
 8000374:	f091 0f00 	teq	r1, #0
 8000378:	bf04      	itt	eq
 800037a:	4601      	moveq	r1, r0
 800037c:	2000      	moveq	r0, #0
 800037e:	fab1 f381 	clz	r3, r1
 8000382:	bf08      	it	eq
 8000384:	3320      	addeq	r3, #32
 8000386:	f1a3 030b 	sub.w	r3, r3, #11
 800038a:	f1b3 0220 	subs.w	r2, r3, #32
 800038e:	da0c      	bge.n	80003aa <__adddf3+0x16e>
 8000390:	320c      	adds	r2, #12
 8000392:	dd08      	ble.n	80003a6 <__adddf3+0x16a>
 8000394:	f102 0c14 	add.w	ip, r2, #20
 8000398:	f1c2 020c 	rsb	r2, r2, #12
 800039c:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a0:	fa21 f102 	lsr.w	r1, r1, r2
 80003a4:	e00c      	b.n	80003c0 <__adddf3+0x184>
 80003a6:	f102 0214 	add.w	r2, r2, #20
 80003aa:	bfd8      	it	le
 80003ac:	f1c2 0c20 	rsble	ip, r2, #32
 80003b0:	fa01 f102 	lsl.w	r1, r1, r2
 80003b4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003b8:	bfdc      	itt	le
 80003ba:	ea41 010c 	orrle.w	r1, r1, ip
 80003be:	4090      	lslle	r0, r2
 80003c0:	1ae4      	subs	r4, r4, r3
 80003c2:	bfa2      	ittt	ge
 80003c4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003c8:	4329      	orrge	r1, r5
 80003ca:	bd30      	popge	{r4, r5, pc}
 80003cc:	ea6f 0404 	mvn.w	r4, r4
 80003d0:	3c1f      	subs	r4, #31
 80003d2:	da1c      	bge.n	800040e <__adddf3+0x1d2>
 80003d4:	340c      	adds	r4, #12
 80003d6:	dc0e      	bgt.n	80003f6 <__adddf3+0x1ba>
 80003d8:	f104 0414 	add.w	r4, r4, #20
 80003dc:	f1c4 0220 	rsb	r2, r4, #32
 80003e0:	fa20 f004 	lsr.w	r0, r0, r4
 80003e4:	fa01 f302 	lsl.w	r3, r1, r2
 80003e8:	ea40 0003 	orr.w	r0, r0, r3
 80003ec:	fa21 f304 	lsr.w	r3, r1, r4
 80003f0:	ea45 0103 	orr.w	r1, r5, r3
 80003f4:	bd30      	pop	{r4, r5, pc}
 80003f6:	f1c4 040c 	rsb	r4, r4, #12
 80003fa:	f1c4 0220 	rsb	r2, r4, #32
 80003fe:	fa20 f002 	lsr.w	r0, r0, r2
 8000402:	fa01 f304 	lsl.w	r3, r1, r4
 8000406:	ea40 0003 	orr.w	r0, r0, r3
 800040a:	4629      	mov	r1, r5
 800040c:	bd30      	pop	{r4, r5, pc}
 800040e:	fa21 f004 	lsr.w	r0, r1, r4
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	f094 0f00 	teq	r4, #0
 800041a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800041e:	bf06      	itte	eq
 8000420:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000424:	3401      	addeq	r4, #1
 8000426:	3d01      	subne	r5, #1
 8000428:	e74e      	b.n	80002c8 <__adddf3+0x8c>
 800042a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800042e:	bf18      	it	ne
 8000430:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000434:	d029      	beq.n	800048a <__adddf3+0x24e>
 8000436:	ea94 0f05 	teq	r4, r5
 800043a:	bf08      	it	eq
 800043c:	ea90 0f02 	teqeq	r0, r2
 8000440:	d005      	beq.n	800044e <__adddf3+0x212>
 8000442:	ea54 0c00 	orrs.w	ip, r4, r0
 8000446:	bf04      	itt	eq
 8000448:	4619      	moveq	r1, r3
 800044a:	4610      	moveq	r0, r2
 800044c:	bd30      	pop	{r4, r5, pc}
 800044e:	ea91 0f03 	teq	r1, r3
 8000452:	bf1e      	ittt	ne
 8000454:	2100      	movne	r1, #0
 8000456:	2000      	movne	r0, #0
 8000458:	bd30      	popne	{r4, r5, pc}
 800045a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800045e:	d105      	bne.n	800046c <__adddf3+0x230>
 8000460:	0040      	lsls	r0, r0, #1
 8000462:	4149      	adcs	r1, r1
 8000464:	bf28      	it	cs
 8000466:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800046a:	bd30      	pop	{r4, r5, pc}
 800046c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000470:	bf3c      	itt	cc
 8000472:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000476:	bd30      	popcc	{r4, r5, pc}
 8000478:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800047c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000480:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000484:	f04f 0000 	mov.w	r0, #0
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf1a      	itte	ne
 8000490:	4619      	movne	r1, r3
 8000492:	4610      	movne	r0, r2
 8000494:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000498:	bf1c      	itt	ne
 800049a:	460b      	movne	r3, r1
 800049c:	4602      	movne	r2, r0
 800049e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004a2:	bf06      	itte	eq
 80004a4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004a8:	ea91 0f03 	teqeq	r1, r3
 80004ac:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b0:	bd30      	pop	{r4, r5, pc}
 80004b2:	bf00      	nop

080004b4 <__aeabi_ui2d>:
 80004b4:	f090 0f00 	teq	r0, #0
 80004b8:	bf04      	itt	eq
 80004ba:	2100      	moveq	r1, #0
 80004bc:	4770      	bxeq	lr
 80004be:	b530      	push	{r4, r5, lr}
 80004c0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004c4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004c8:	f04f 0500 	mov.w	r5, #0
 80004cc:	f04f 0100 	mov.w	r1, #0
 80004d0:	e750      	b.n	8000374 <__adddf3+0x138>
 80004d2:	bf00      	nop

080004d4 <__aeabi_i2d>:
 80004d4:	f090 0f00 	teq	r0, #0
 80004d8:	bf04      	itt	eq
 80004da:	2100      	moveq	r1, #0
 80004dc:	4770      	bxeq	lr
 80004de:	b530      	push	{r4, r5, lr}
 80004e0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004e4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004e8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004ec:	bf48      	it	mi
 80004ee:	4240      	negmi	r0, r0
 80004f0:	f04f 0100 	mov.w	r1, #0
 80004f4:	e73e      	b.n	8000374 <__adddf3+0x138>
 80004f6:	bf00      	nop

080004f8 <__aeabi_f2d>:
 80004f8:	0042      	lsls	r2, r0, #1
 80004fa:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004fe:	ea4f 0131 	mov.w	r1, r1, rrx
 8000502:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000506:	bf1f      	itttt	ne
 8000508:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800050c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000510:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000514:	4770      	bxne	lr
 8000516:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800051a:	bf08      	it	eq
 800051c:	4770      	bxeq	lr
 800051e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000522:	bf04      	itt	eq
 8000524:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000528:	4770      	bxeq	lr
 800052a:	b530      	push	{r4, r5, lr}
 800052c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000534:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000538:	e71c      	b.n	8000374 <__adddf3+0x138>
 800053a:	bf00      	nop

0800053c <__aeabi_ul2d>:
 800053c:	ea50 0201 	orrs.w	r2, r0, r1
 8000540:	bf08      	it	eq
 8000542:	4770      	bxeq	lr
 8000544:	b530      	push	{r4, r5, lr}
 8000546:	f04f 0500 	mov.w	r5, #0
 800054a:	e00a      	b.n	8000562 <__aeabi_l2d+0x16>

0800054c <__aeabi_l2d>:
 800054c:	ea50 0201 	orrs.w	r2, r0, r1
 8000550:	bf08      	it	eq
 8000552:	4770      	bxeq	lr
 8000554:	b530      	push	{r4, r5, lr}
 8000556:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800055a:	d502      	bpl.n	8000562 <__aeabi_l2d+0x16>
 800055c:	4240      	negs	r0, r0
 800055e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000562:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000566:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800056a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800056e:	f43f aed8 	beq.w	8000322 <__adddf3+0xe6>
 8000572:	f04f 0203 	mov.w	r2, #3
 8000576:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800057a:	bf18      	it	ne
 800057c:	3203      	addne	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800058a:	f1c2 0320 	rsb	r3, r2, #32
 800058e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000592:	fa20 f002 	lsr.w	r0, r0, r2
 8000596:	fa01 fe03 	lsl.w	lr, r1, r3
 800059a:	ea40 000e 	orr.w	r0, r0, lr
 800059e:	fa21 f102 	lsr.w	r1, r1, r2
 80005a2:	4414      	add	r4, r2
 80005a4:	e6bd      	b.n	8000322 <__adddf3+0xe6>
 80005a6:	bf00      	nop

080005a8 <__aeabi_dmul>:
 80005a8:	b570      	push	{r4, r5, r6, lr}
 80005aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005b6:	bf1d      	ittte	ne
 80005b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005bc:	ea94 0f0c 	teqne	r4, ip
 80005c0:	ea95 0f0c 	teqne	r5, ip
 80005c4:	f000 f8de 	bleq	8000784 <__aeabi_dmul+0x1dc>
 80005c8:	442c      	add	r4, r5
 80005ca:	ea81 0603 	eor.w	r6, r1, r3
 80005ce:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005d2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005d6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005da:	bf18      	it	ne
 80005dc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005e4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005e8:	d038      	beq.n	800065c <__aeabi_dmul+0xb4>
 80005ea:	fba0 ce02 	umull	ip, lr, r0, r2
 80005ee:	f04f 0500 	mov.w	r5, #0
 80005f2:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005f6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005fa:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005fe:	f04f 0600 	mov.w	r6, #0
 8000602:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000606:	f09c 0f00 	teq	ip, #0
 800060a:	bf18      	it	ne
 800060c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000610:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000614:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000618:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800061c:	d204      	bcs.n	8000628 <__aeabi_dmul+0x80>
 800061e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000622:	416d      	adcs	r5, r5
 8000624:	eb46 0606 	adc.w	r6, r6, r6
 8000628:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800062c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000630:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000634:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000638:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800063c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000640:	bf88      	it	hi
 8000642:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000646:	d81e      	bhi.n	8000686 <__aeabi_dmul+0xde>
 8000648:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800064c:	bf08      	it	eq
 800064e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000652:	f150 0000 	adcs.w	r0, r0, #0
 8000656:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800065a:	bd70      	pop	{r4, r5, r6, pc}
 800065c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000660:	ea46 0101 	orr.w	r1, r6, r1
 8000664:	ea40 0002 	orr.w	r0, r0, r2
 8000668:	ea81 0103 	eor.w	r1, r1, r3
 800066c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000670:	bfc2      	ittt	gt
 8000672:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000676:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800067a:	bd70      	popgt	{r4, r5, r6, pc}
 800067c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000680:	f04f 0e00 	mov.w	lr, #0
 8000684:	3c01      	subs	r4, #1
 8000686:	f300 80ab 	bgt.w	80007e0 <__aeabi_dmul+0x238>
 800068a:	f114 0f36 	cmn.w	r4, #54	; 0x36
 800068e:	bfde      	ittt	le
 8000690:	2000      	movle	r0, #0
 8000692:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000696:	bd70      	pople	{r4, r5, r6, pc}
 8000698:	f1c4 0400 	rsb	r4, r4, #0
 800069c:	3c20      	subs	r4, #32
 800069e:	da35      	bge.n	800070c <__aeabi_dmul+0x164>
 80006a0:	340c      	adds	r4, #12
 80006a2:	dc1b      	bgt.n	80006dc <__aeabi_dmul+0x134>
 80006a4:	f104 0414 	add.w	r4, r4, #20
 80006a8:	f1c4 0520 	rsb	r5, r4, #32
 80006ac:	fa00 f305 	lsl.w	r3, r0, r5
 80006b0:	fa20 f004 	lsr.w	r0, r0, r4
 80006b4:	fa01 f205 	lsl.w	r2, r1, r5
 80006b8:	ea40 0002 	orr.w	r0, r0, r2
 80006bc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006c4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006c8:	fa21 f604 	lsr.w	r6, r1, r4
 80006cc:	eb42 0106 	adc.w	r1, r2, r6
 80006d0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006d4:	bf08      	it	eq
 80006d6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f1c4 040c 	rsb	r4, r4, #12
 80006e0:	f1c4 0520 	rsb	r5, r4, #32
 80006e4:	fa00 f304 	lsl.w	r3, r0, r4
 80006e8:	fa20 f005 	lsr.w	r0, r0, r5
 80006ec:	fa01 f204 	lsl.w	r2, r1, r4
 80006f0:	ea40 0002 	orr.w	r0, r0, r2
 80006f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006fc:	f141 0100 	adc.w	r1, r1, #0
 8000700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000704:	bf08      	it	eq
 8000706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800070a:	bd70      	pop	{r4, r5, r6, pc}
 800070c:	f1c4 0520 	rsb	r5, r4, #32
 8000710:	fa00 f205 	lsl.w	r2, r0, r5
 8000714:	ea4e 0e02 	orr.w	lr, lr, r2
 8000718:	fa20 f304 	lsr.w	r3, r0, r4
 800071c:	fa01 f205 	lsl.w	r2, r1, r5
 8000720:	ea43 0302 	orr.w	r3, r3, r2
 8000724:	fa21 f004 	lsr.w	r0, r1, r4
 8000728:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800072c:	fa21 f204 	lsr.w	r2, r1, r4
 8000730:	ea20 0002 	bic.w	r0, r0, r2
 8000734:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000738:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800073c:	bf08      	it	eq
 800073e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000742:	bd70      	pop	{r4, r5, r6, pc}
 8000744:	f094 0f00 	teq	r4, #0
 8000748:	d10f      	bne.n	800076a <__aeabi_dmul+0x1c2>
 800074a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800074e:	0040      	lsls	r0, r0, #1
 8000750:	eb41 0101 	adc.w	r1, r1, r1
 8000754:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000758:	bf08      	it	eq
 800075a:	3c01      	subeq	r4, #1
 800075c:	d0f7      	beq.n	800074e <__aeabi_dmul+0x1a6>
 800075e:	ea41 0106 	orr.w	r1, r1, r6
 8000762:	f095 0f00 	teq	r5, #0
 8000766:	bf18      	it	ne
 8000768:	4770      	bxne	lr
 800076a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800076e:	0052      	lsls	r2, r2, #1
 8000770:	eb43 0303 	adc.w	r3, r3, r3
 8000774:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000778:	bf08      	it	eq
 800077a:	3d01      	subeq	r5, #1
 800077c:	d0f7      	beq.n	800076e <__aeabi_dmul+0x1c6>
 800077e:	ea43 0306 	orr.w	r3, r3, r6
 8000782:	4770      	bx	lr
 8000784:	ea94 0f0c 	teq	r4, ip
 8000788:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800078c:	bf18      	it	ne
 800078e:	ea95 0f0c 	teqne	r5, ip
 8000792:	d00c      	beq.n	80007ae <__aeabi_dmul+0x206>
 8000794:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000798:	bf18      	it	ne
 800079a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800079e:	d1d1      	bne.n	8000744 <__aeabi_dmul+0x19c>
 80007a0:	ea81 0103 	eor.w	r1, r1, r3
 80007a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007a8:	f04f 0000 	mov.w	r0, #0
 80007ac:	bd70      	pop	{r4, r5, r6, pc}
 80007ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007b2:	bf06      	itte	eq
 80007b4:	4610      	moveq	r0, r2
 80007b6:	4619      	moveq	r1, r3
 80007b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007bc:	d019      	beq.n	80007f2 <__aeabi_dmul+0x24a>
 80007be:	ea94 0f0c 	teq	r4, ip
 80007c2:	d102      	bne.n	80007ca <__aeabi_dmul+0x222>
 80007c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007c8:	d113      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007ca:	ea95 0f0c 	teq	r5, ip
 80007ce:	d105      	bne.n	80007dc <__aeabi_dmul+0x234>
 80007d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007d4:	bf1c      	itt	ne
 80007d6:	4610      	movne	r0, r2
 80007d8:	4619      	movne	r1, r3
 80007da:	d10a      	bne.n	80007f2 <__aeabi_dmul+0x24a>
 80007dc:	ea81 0103 	eor.w	r1, r1, r3
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007e4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007ec:	f04f 0000 	mov.w	r0, #0
 80007f0:	bd70      	pop	{r4, r5, r6, pc}
 80007f2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007fa:	bd70      	pop	{r4, r5, r6, pc}

080007fc <__aeabi_ddiv>:
 80007fc:	b570      	push	{r4, r5, r6, lr}
 80007fe:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000802:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000806:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800080a:	bf1d      	ittte	ne
 800080c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000810:	ea94 0f0c 	teqne	r4, ip
 8000814:	ea95 0f0c 	teqne	r5, ip
 8000818:	f000 f8a7 	bleq	800096a <__aeabi_ddiv+0x16e>
 800081c:	eba4 0405 	sub.w	r4, r4, r5
 8000820:	ea81 0e03 	eor.w	lr, r1, r3
 8000824:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000828:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800082c:	f000 8088 	beq.w	8000940 <__aeabi_ddiv+0x144>
 8000830:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000834:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000838:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800083c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000840:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000844:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000848:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800084c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000850:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000854:	429d      	cmp	r5, r3
 8000856:	bf08      	it	eq
 8000858:	4296      	cmpeq	r6, r2
 800085a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800085e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000862:	d202      	bcs.n	800086a <__aeabi_ddiv+0x6e>
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	1ab6      	subs	r6, r6, r2
 800086c:	eb65 0503 	sbc.w	r5, r5, r3
 8000870:	085b      	lsrs	r3, r3, #1
 8000872:	ea4f 0232 	mov.w	r2, r2, rrx
 8000876:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800087a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 800087e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000882:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000886:	bf22      	ittt	cs
 8000888:	1ab6      	subcs	r6, r6, r2
 800088a:	4675      	movcs	r5, lr
 800088c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000890:	085b      	lsrs	r3, r3, #1
 8000892:	ea4f 0232 	mov.w	r2, r2, rrx
 8000896:	ebb6 0e02 	subs.w	lr, r6, r2
 800089a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800089e:	bf22      	ittt	cs
 80008a0:	1ab6      	subcs	r6, r6, r2
 80008a2:	4675      	movcs	r5, lr
 80008a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008a8:	085b      	lsrs	r3, r3, #1
 80008aa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80008b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008b6:	bf22      	ittt	cs
 80008b8:	1ab6      	subcs	r6, r6, r2
 80008ba:	4675      	movcs	r5, lr
 80008bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ce:	bf22      	ittt	cs
 80008d0:	1ab6      	subcs	r6, r6, r2
 80008d2:	4675      	movcs	r5, lr
 80008d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008d8:	ea55 0e06 	orrs.w	lr, r5, r6
 80008dc:	d018      	beq.n	8000910 <__aeabi_ddiv+0x114>
 80008de:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008fa:	d1c0      	bne.n	800087e <__aeabi_ddiv+0x82>
 80008fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000900:	d10b      	bne.n	800091a <__aeabi_ddiv+0x11e>
 8000902:	ea41 0100 	orr.w	r1, r1, r0
 8000906:	f04f 0000 	mov.w	r0, #0
 800090a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800090e:	e7b6      	b.n	800087e <__aeabi_ddiv+0x82>
 8000910:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000914:	bf04      	itt	eq
 8000916:	4301      	orreq	r1, r0
 8000918:	2000      	moveq	r0, #0
 800091a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800091e:	bf88      	it	hi
 8000920:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000924:	f63f aeaf 	bhi.w	8000686 <__aeabi_dmul+0xde>
 8000928:	ebb5 0c03 	subs.w	ip, r5, r3
 800092c:	bf04      	itt	eq
 800092e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000932:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000936:	f150 0000 	adcs.w	r0, r0, #0
 800093a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800093e:	bd70      	pop	{r4, r5, r6, pc}
 8000940:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000944:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000948:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800094c:	bfc2      	ittt	gt
 800094e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000952:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000956:	bd70      	popgt	{r4, r5, r6, pc}
 8000958:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800095c:	f04f 0e00 	mov.w	lr, #0
 8000960:	3c01      	subs	r4, #1
 8000962:	e690      	b.n	8000686 <__aeabi_dmul+0xde>
 8000964:	ea45 0e06 	orr.w	lr, r5, r6
 8000968:	e68d      	b.n	8000686 <__aeabi_dmul+0xde>
 800096a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800096e:	ea94 0f0c 	teq	r4, ip
 8000972:	bf08      	it	eq
 8000974:	ea95 0f0c 	teqeq	r5, ip
 8000978:	f43f af3b 	beq.w	80007f2 <__aeabi_dmul+0x24a>
 800097c:	ea94 0f0c 	teq	r4, ip
 8000980:	d10a      	bne.n	8000998 <__aeabi_ddiv+0x19c>
 8000982:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000986:	f47f af34 	bne.w	80007f2 <__aeabi_dmul+0x24a>
 800098a:	ea95 0f0c 	teq	r5, ip
 800098e:	f47f af25 	bne.w	80007dc <__aeabi_dmul+0x234>
 8000992:	4610      	mov	r0, r2
 8000994:	4619      	mov	r1, r3
 8000996:	e72c      	b.n	80007f2 <__aeabi_dmul+0x24a>
 8000998:	ea95 0f0c 	teq	r5, ip
 800099c:	d106      	bne.n	80009ac <__aeabi_ddiv+0x1b0>
 800099e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009a2:	f43f aefd 	beq.w	80007a0 <__aeabi_dmul+0x1f8>
 80009a6:	4610      	mov	r0, r2
 80009a8:	4619      	mov	r1, r3
 80009aa:	e722      	b.n	80007f2 <__aeabi_dmul+0x24a>
 80009ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b0:	bf18      	it	ne
 80009b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009b6:	f47f aec5 	bne.w	8000744 <__aeabi_dmul+0x19c>
 80009ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009be:	f47f af0d 	bne.w	80007dc <__aeabi_dmul+0x234>
 80009c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009c6:	f47f aeeb 	bne.w	80007a0 <__aeabi_dmul+0x1f8>
 80009ca:	e712      	b.n	80007f2 <__aeabi_dmul+0x24a>

080009cc <__gedf2>:
 80009cc:	f04f 3cff 	mov.w	ip, #4294967295
 80009d0:	e006      	b.n	80009e0 <__cmpdf2+0x4>
 80009d2:	bf00      	nop

080009d4 <__ledf2>:
 80009d4:	f04f 0c01 	mov.w	ip, #1
 80009d8:	e002      	b.n	80009e0 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__cmpdf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f0:	bf18      	it	ne
 80009f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009f6:	d01b      	beq.n	8000a30 <__cmpdf2+0x54>
 80009f8:	b001      	add	sp, #4
 80009fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009fe:	bf0c      	ite	eq
 8000a00:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a04:	ea91 0f03 	teqne	r1, r3
 8000a08:	bf02      	ittt	eq
 8000a0a:	ea90 0f02 	teqeq	r0, r2
 8000a0e:	2000      	moveq	r0, #0
 8000a10:	4770      	bxeq	lr
 8000a12:	f110 0f00 	cmn.w	r0, #0
 8000a16:	ea91 0f03 	teq	r1, r3
 8000a1a:	bf58      	it	pl
 8000a1c:	4299      	cmppl	r1, r3
 8000a1e:	bf08      	it	eq
 8000a20:	4290      	cmpeq	r0, r2
 8000a22:	bf2c      	ite	cs
 8000a24:	17d8      	asrcs	r0, r3, #31
 8000a26:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a2a:	f040 0001 	orr.w	r0, r0, #1
 8000a2e:	4770      	bx	lr
 8000a30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a38:	d102      	bne.n	8000a40 <__cmpdf2+0x64>
 8000a3a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a3e:	d107      	bne.n	8000a50 <__cmpdf2+0x74>
 8000a40:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a44:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a48:	d1d6      	bne.n	80009f8 <__cmpdf2+0x1c>
 8000a4a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a4e:	d0d3      	beq.n	80009f8 <__cmpdf2+0x1c>
 8000a50:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a54:	4770      	bx	lr
 8000a56:	bf00      	nop

08000a58 <__aeabi_cdrcmple>:
 8000a58:	4684      	mov	ip, r0
 8000a5a:	4610      	mov	r0, r2
 8000a5c:	4662      	mov	r2, ip
 8000a5e:	468c      	mov	ip, r1
 8000a60:	4619      	mov	r1, r3
 8000a62:	4663      	mov	r3, ip
 8000a64:	e000      	b.n	8000a68 <__aeabi_cdcmpeq>
 8000a66:	bf00      	nop

08000a68 <__aeabi_cdcmpeq>:
 8000a68:	b501      	push	{r0, lr}
 8000a6a:	f7ff ffb7 	bl	80009dc <__cmpdf2>
 8000a6e:	2800      	cmp	r0, #0
 8000a70:	bf48      	it	mi
 8000a72:	f110 0f00 	cmnmi.w	r0, #0
 8000a76:	bd01      	pop	{r0, pc}

08000a78 <__aeabi_dcmpeq>:
 8000a78:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a7c:	f7ff fff4 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a80:	bf0c      	ite	eq
 8000a82:	2001      	moveq	r0, #1
 8000a84:	2000      	movne	r0, #0
 8000a86:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a8a:	bf00      	nop

08000a8c <__aeabi_dcmplt>:
 8000a8c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a90:	f7ff ffea 	bl	8000a68 <__aeabi_cdcmpeq>
 8000a94:	bf34      	ite	cc
 8000a96:	2001      	movcc	r0, #1
 8000a98:	2000      	movcs	r0, #0
 8000a9a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a9e:	bf00      	nop

08000aa0 <__aeabi_dcmple>:
 8000aa0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aa4:	f7ff ffe0 	bl	8000a68 <__aeabi_cdcmpeq>
 8000aa8:	bf94      	ite	ls
 8000aaa:	2001      	movls	r0, #1
 8000aac:	2000      	movhi	r0, #0
 8000aae:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ab2:	bf00      	nop

08000ab4 <__aeabi_dcmpge>:
 8000ab4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ab8:	f7ff ffce 	bl	8000a58 <__aeabi_cdrcmple>
 8000abc:	bf94      	ite	ls
 8000abe:	2001      	movls	r0, #1
 8000ac0:	2000      	movhi	r0, #0
 8000ac2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_dcmpgt>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff ffc4 	bl	8000a58 <__aeabi_cdrcmple>
 8000ad0:	bf34      	ite	cc
 8000ad2:	2001      	movcc	r0, #1
 8000ad4:	2000      	movcs	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmpun>:
 8000adc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae4:	d102      	bne.n	8000aec <__aeabi_dcmpun+0x10>
 8000ae6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aea:	d10a      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000aec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af4:	d102      	bne.n	8000afc <__aeabi_dcmpun+0x20>
 8000af6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000afa:	d102      	bne.n	8000b02 <__aeabi_dcmpun+0x26>
 8000afc:	f04f 0000 	mov.w	r0, #0
 8000b00:	4770      	bx	lr
 8000b02:	f04f 0001 	mov.w	r0, #1
 8000b06:	4770      	bx	lr

08000b08 <__aeabi_d2iz>:
 8000b08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b0c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b10:	d215      	bcs.n	8000b3e <__aeabi_d2iz+0x36>
 8000b12:	d511      	bpl.n	8000b38 <__aeabi_d2iz+0x30>
 8000b14:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b18:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b1c:	d912      	bls.n	8000b44 <__aeabi_d2iz+0x3c>
 8000b1e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b22:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b26:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b2e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b32:	bf18      	it	ne
 8000b34:	4240      	negne	r0, r0
 8000b36:	4770      	bx	lr
 8000b38:	f04f 0000 	mov.w	r0, #0
 8000b3c:	4770      	bx	lr
 8000b3e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b42:	d105      	bne.n	8000b50 <__aeabi_d2iz+0x48>
 8000b44:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b48:	bf08      	it	eq
 8000b4a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b4e:	4770      	bx	lr
 8000b50:	f04f 0000 	mov.w	r0, #0
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <__aeabi_d2uiz>:
 8000b58:	004a      	lsls	r2, r1, #1
 8000b5a:	d211      	bcs.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d211      	bcs.n	8000b86 <__aeabi_d2uiz+0x2e>
 8000b62:	d50d      	bpl.n	8000b80 <__aeabi_d2uiz+0x28>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d40e      	bmi.n	8000b8c <__aeabi_d2uiz+0x34>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	fa23 f002 	lsr.w	r0, r3, r2
 8000b7e:	4770      	bx	lr
 8000b80:	f04f 0000 	mov.w	r0, #0
 8000b84:	4770      	bx	lr
 8000b86:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_d2uiz+0x3a>
 8000b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0000 	mov.w	r0, #0
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_uldivmod>:
 8000b98:	b953      	cbnz	r3, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9a:	b94a      	cbnz	r2, 8000bb0 <__aeabi_uldivmod+0x18>
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	bf08      	it	eq
 8000ba0:	2800      	cmpeq	r0, #0
 8000ba2:	bf1c      	itt	ne
 8000ba4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ba8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bac:	f000 b9aa 	b.w	8000f04 <__aeabi_idiv0>
 8000bb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bb8:	f000 f83c 	bl	8000c34 <__udivmoddi4>
 8000bbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bc4:	b004      	add	sp, #16
 8000bc6:	4770      	bx	lr

08000bc8 <__aeabi_d2lz>:
 8000bc8:	b538      	push	{r3, r4, r5, lr}
 8000bca:	2200      	movs	r2, #0
 8000bcc:	2300      	movs	r3, #0
 8000bce:	4604      	mov	r4, r0
 8000bd0:	460d      	mov	r5, r1
 8000bd2:	f7ff ff5b 	bl	8000a8c <__aeabi_dcmplt>
 8000bd6:	b928      	cbnz	r0, 8000be4 <__aeabi_d2lz+0x1c>
 8000bd8:	4620      	mov	r0, r4
 8000bda:	4629      	mov	r1, r5
 8000bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be0:	f000 b80a 	b.w	8000bf8 <__aeabi_d2ulz>
 8000be4:	4620      	mov	r0, r4
 8000be6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000bea:	f000 f805 	bl	8000bf8 <__aeabi_d2ulz>
 8000bee:	4240      	negs	r0, r0
 8000bf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000bf4:	bd38      	pop	{r3, r4, r5, pc}
 8000bf6:	bf00      	nop

08000bf8 <__aeabi_d2ulz>:
 8000bf8:	b5d0      	push	{r4, r6, r7, lr}
 8000bfa:	4b0c      	ldr	r3, [pc, #48]	; (8000c2c <__aeabi_d2ulz+0x34>)
 8000bfc:	2200      	movs	r2, #0
 8000bfe:	4606      	mov	r6, r0
 8000c00:	460f      	mov	r7, r1
 8000c02:	f7ff fcd1 	bl	80005a8 <__aeabi_dmul>
 8000c06:	f7ff ffa7 	bl	8000b58 <__aeabi_d2uiz>
 8000c0a:	4604      	mov	r4, r0
 8000c0c:	f7ff fc52 	bl	80004b4 <__aeabi_ui2d>
 8000c10:	4b07      	ldr	r3, [pc, #28]	; (8000c30 <__aeabi_d2ulz+0x38>)
 8000c12:	2200      	movs	r2, #0
 8000c14:	f7ff fcc8 	bl	80005a8 <__aeabi_dmul>
 8000c18:	4602      	mov	r2, r0
 8000c1a:	460b      	mov	r3, r1
 8000c1c:	4630      	mov	r0, r6
 8000c1e:	4639      	mov	r1, r7
 8000c20:	f7ff fb0a 	bl	8000238 <__aeabi_dsub>
 8000c24:	f7ff ff98 	bl	8000b58 <__aeabi_d2uiz>
 8000c28:	4621      	mov	r1, r4
 8000c2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000c2c:	3df00000 	.word	0x3df00000
 8000c30:	41f00000 	.word	0x41f00000

08000c34 <__udivmoddi4>:
 8000c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c38:	9d08      	ldr	r5, [sp, #32]
 8000c3a:	4604      	mov	r4, r0
 8000c3c:	468e      	mov	lr, r1
 8000c3e:	2b00      	cmp	r3, #0
 8000c40:	d14d      	bne.n	8000cde <__udivmoddi4+0xaa>
 8000c42:	428a      	cmp	r2, r1
 8000c44:	4694      	mov	ip, r2
 8000c46:	d969      	bls.n	8000d1c <__udivmoddi4+0xe8>
 8000c48:	fab2 f282 	clz	r2, r2
 8000c4c:	b152      	cbz	r2, 8000c64 <__udivmoddi4+0x30>
 8000c4e:	fa01 f302 	lsl.w	r3, r1, r2
 8000c52:	f1c2 0120 	rsb	r1, r2, #32
 8000c56:	fa20 f101 	lsr.w	r1, r0, r1
 8000c5a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c5e:	ea41 0e03 	orr.w	lr, r1, r3
 8000c62:	4094      	lsls	r4, r2
 8000c64:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000c68:	0c21      	lsrs	r1, r4, #16
 8000c6a:	fbbe f6f8 	udiv	r6, lr, r8
 8000c6e:	fa1f f78c 	uxth.w	r7, ip
 8000c72:	fb08 e316 	mls	r3, r8, r6, lr
 8000c76:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c7a:	fb06 f107 	mul.w	r1, r6, r7
 8000c7e:	4299      	cmp	r1, r3
 8000c80:	d90a      	bls.n	8000c98 <__udivmoddi4+0x64>
 8000c82:	eb1c 0303 	adds.w	r3, ip, r3
 8000c86:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c8a:	f080 811f 	bcs.w	8000ecc <__udivmoddi4+0x298>
 8000c8e:	4299      	cmp	r1, r3
 8000c90:	f240 811c 	bls.w	8000ecc <__udivmoddi4+0x298>
 8000c94:	3e02      	subs	r6, #2
 8000c96:	4463      	add	r3, ip
 8000c98:	1a5b      	subs	r3, r3, r1
 8000c9a:	b2a4      	uxth	r4, r4
 8000c9c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ca0:	fb08 3310 	mls	r3, r8, r0, r3
 8000ca4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000ca8:	fb00 f707 	mul.w	r7, r0, r7
 8000cac:	42a7      	cmp	r7, r4
 8000cae:	d90a      	bls.n	8000cc6 <__udivmoddi4+0x92>
 8000cb0:	eb1c 0404 	adds.w	r4, ip, r4
 8000cb4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cb8:	f080 810a 	bcs.w	8000ed0 <__udivmoddi4+0x29c>
 8000cbc:	42a7      	cmp	r7, r4
 8000cbe:	f240 8107 	bls.w	8000ed0 <__udivmoddi4+0x29c>
 8000cc2:	4464      	add	r4, ip
 8000cc4:	3802      	subs	r0, #2
 8000cc6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000cca:	1be4      	subs	r4, r4, r7
 8000ccc:	2600      	movs	r6, #0
 8000cce:	b11d      	cbz	r5, 8000cd8 <__udivmoddi4+0xa4>
 8000cd0:	40d4      	lsrs	r4, r2
 8000cd2:	2300      	movs	r3, #0
 8000cd4:	e9c5 4300 	strd	r4, r3, [r5]
 8000cd8:	4631      	mov	r1, r6
 8000cda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cde:	428b      	cmp	r3, r1
 8000ce0:	d909      	bls.n	8000cf6 <__udivmoddi4+0xc2>
 8000ce2:	2d00      	cmp	r5, #0
 8000ce4:	f000 80ef 	beq.w	8000ec6 <__udivmoddi4+0x292>
 8000ce8:	2600      	movs	r6, #0
 8000cea:	e9c5 0100 	strd	r0, r1, [r5]
 8000cee:	4630      	mov	r0, r6
 8000cf0:	4631      	mov	r1, r6
 8000cf2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cf6:	fab3 f683 	clz	r6, r3
 8000cfa:	2e00      	cmp	r6, #0
 8000cfc:	d14a      	bne.n	8000d94 <__udivmoddi4+0x160>
 8000cfe:	428b      	cmp	r3, r1
 8000d00:	d302      	bcc.n	8000d08 <__udivmoddi4+0xd4>
 8000d02:	4282      	cmp	r2, r0
 8000d04:	f200 80f9 	bhi.w	8000efa <__udivmoddi4+0x2c6>
 8000d08:	1a84      	subs	r4, r0, r2
 8000d0a:	eb61 0303 	sbc.w	r3, r1, r3
 8000d0e:	2001      	movs	r0, #1
 8000d10:	469e      	mov	lr, r3
 8000d12:	2d00      	cmp	r5, #0
 8000d14:	d0e0      	beq.n	8000cd8 <__udivmoddi4+0xa4>
 8000d16:	e9c5 4e00 	strd	r4, lr, [r5]
 8000d1a:	e7dd      	b.n	8000cd8 <__udivmoddi4+0xa4>
 8000d1c:	b902      	cbnz	r2, 8000d20 <__udivmoddi4+0xec>
 8000d1e:	deff      	udf	#255	; 0xff
 8000d20:	fab2 f282 	clz	r2, r2
 8000d24:	2a00      	cmp	r2, #0
 8000d26:	f040 8092 	bne.w	8000e4e <__udivmoddi4+0x21a>
 8000d2a:	eba1 010c 	sub.w	r1, r1, ip
 8000d2e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000d32:	fa1f fe8c 	uxth.w	lr, ip
 8000d36:	2601      	movs	r6, #1
 8000d38:	0c20      	lsrs	r0, r4, #16
 8000d3a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000d3e:	fb07 1113 	mls	r1, r7, r3, r1
 8000d42:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d46:	fb0e f003 	mul.w	r0, lr, r3
 8000d4a:	4288      	cmp	r0, r1
 8000d4c:	d908      	bls.n	8000d60 <__udivmoddi4+0x12c>
 8000d4e:	eb1c 0101 	adds.w	r1, ip, r1
 8000d52:	f103 38ff 	add.w	r8, r3, #4294967295
 8000d56:	d202      	bcs.n	8000d5e <__udivmoddi4+0x12a>
 8000d58:	4288      	cmp	r0, r1
 8000d5a:	f200 80cb 	bhi.w	8000ef4 <__udivmoddi4+0x2c0>
 8000d5e:	4643      	mov	r3, r8
 8000d60:	1a09      	subs	r1, r1, r0
 8000d62:	b2a4      	uxth	r4, r4
 8000d64:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d68:	fb07 1110 	mls	r1, r7, r0, r1
 8000d6c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000d70:	fb0e fe00 	mul.w	lr, lr, r0
 8000d74:	45a6      	cmp	lr, r4
 8000d76:	d908      	bls.n	8000d8a <__udivmoddi4+0x156>
 8000d78:	eb1c 0404 	adds.w	r4, ip, r4
 8000d7c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d80:	d202      	bcs.n	8000d88 <__udivmoddi4+0x154>
 8000d82:	45a6      	cmp	lr, r4
 8000d84:	f200 80bb 	bhi.w	8000efe <__udivmoddi4+0x2ca>
 8000d88:	4608      	mov	r0, r1
 8000d8a:	eba4 040e 	sub.w	r4, r4, lr
 8000d8e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d92:	e79c      	b.n	8000cce <__udivmoddi4+0x9a>
 8000d94:	f1c6 0720 	rsb	r7, r6, #32
 8000d98:	40b3      	lsls	r3, r6
 8000d9a:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d9e:	ea4c 0c03 	orr.w	ip, ip, r3
 8000da2:	fa20 f407 	lsr.w	r4, r0, r7
 8000da6:	fa01 f306 	lsl.w	r3, r1, r6
 8000daa:	431c      	orrs	r4, r3
 8000dac:	40f9      	lsrs	r1, r7
 8000dae:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000db2:	fa00 f306 	lsl.w	r3, r0, r6
 8000db6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000dba:	0c20      	lsrs	r0, r4, #16
 8000dbc:	fa1f fe8c 	uxth.w	lr, ip
 8000dc0:	fb09 1118 	mls	r1, r9, r8, r1
 8000dc4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dc8:	fb08 f00e 	mul.w	r0, r8, lr
 8000dcc:	4288      	cmp	r0, r1
 8000dce:	fa02 f206 	lsl.w	r2, r2, r6
 8000dd2:	d90b      	bls.n	8000dec <__udivmoddi4+0x1b8>
 8000dd4:	eb1c 0101 	adds.w	r1, ip, r1
 8000dd8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ddc:	f080 8088 	bcs.w	8000ef0 <__udivmoddi4+0x2bc>
 8000de0:	4288      	cmp	r0, r1
 8000de2:	f240 8085 	bls.w	8000ef0 <__udivmoddi4+0x2bc>
 8000de6:	f1a8 0802 	sub.w	r8, r8, #2
 8000dea:	4461      	add	r1, ip
 8000dec:	1a09      	subs	r1, r1, r0
 8000dee:	b2a4      	uxth	r4, r4
 8000df0:	fbb1 f0f9 	udiv	r0, r1, r9
 8000df4:	fb09 1110 	mls	r1, r9, r0, r1
 8000df8:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000dfc:	fb00 fe0e 	mul.w	lr, r0, lr
 8000e00:	458e      	cmp	lr, r1
 8000e02:	d908      	bls.n	8000e16 <__udivmoddi4+0x1e2>
 8000e04:	eb1c 0101 	adds.w	r1, ip, r1
 8000e08:	f100 34ff 	add.w	r4, r0, #4294967295
 8000e0c:	d26c      	bcs.n	8000ee8 <__udivmoddi4+0x2b4>
 8000e0e:	458e      	cmp	lr, r1
 8000e10:	d96a      	bls.n	8000ee8 <__udivmoddi4+0x2b4>
 8000e12:	3802      	subs	r0, #2
 8000e14:	4461      	add	r1, ip
 8000e16:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000e1a:	fba0 9402 	umull	r9, r4, r0, r2
 8000e1e:	eba1 010e 	sub.w	r1, r1, lr
 8000e22:	42a1      	cmp	r1, r4
 8000e24:	46c8      	mov	r8, r9
 8000e26:	46a6      	mov	lr, r4
 8000e28:	d356      	bcc.n	8000ed8 <__udivmoddi4+0x2a4>
 8000e2a:	d053      	beq.n	8000ed4 <__udivmoddi4+0x2a0>
 8000e2c:	b15d      	cbz	r5, 8000e46 <__udivmoddi4+0x212>
 8000e2e:	ebb3 0208 	subs.w	r2, r3, r8
 8000e32:	eb61 010e 	sbc.w	r1, r1, lr
 8000e36:	fa01 f707 	lsl.w	r7, r1, r7
 8000e3a:	fa22 f306 	lsr.w	r3, r2, r6
 8000e3e:	40f1      	lsrs	r1, r6
 8000e40:	431f      	orrs	r7, r3
 8000e42:	e9c5 7100 	strd	r7, r1, [r5]
 8000e46:	2600      	movs	r6, #0
 8000e48:	4631      	mov	r1, r6
 8000e4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e4e:	f1c2 0320 	rsb	r3, r2, #32
 8000e52:	40d8      	lsrs	r0, r3
 8000e54:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e58:	fa21 f303 	lsr.w	r3, r1, r3
 8000e5c:	4091      	lsls	r1, r2
 8000e5e:	4301      	orrs	r1, r0
 8000e60:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e64:	fa1f fe8c 	uxth.w	lr, ip
 8000e68:	fbb3 f0f7 	udiv	r0, r3, r7
 8000e6c:	fb07 3610 	mls	r6, r7, r0, r3
 8000e70:	0c0b      	lsrs	r3, r1, #16
 8000e72:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000e76:	fb00 f60e 	mul.w	r6, r0, lr
 8000e7a:	429e      	cmp	r6, r3
 8000e7c:	fa04 f402 	lsl.w	r4, r4, r2
 8000e80:	d908      	bls.n	8000e94 <__udivmoddi4+0x260>
 8000e82:	eb1c 0303 	adds.w	r3, ip, r3
 8000e86:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e8a:	d22f      	bcs.n	8000eec <__udivmoddi4+0x2b8>
 8000e8c:	429e      	cmp	r6, r3
 8000e8e:	d92d      	bls.n	8000eec <__udivmoddi4+0x2b8>
 8000e90:	3802      	subs	r0, #2
 8000e92:	4463      	add	r3, ip
 8000e94:	1b9b      	subs	r3, r3, r6
 8000e96:	b289      	uxth	r1, r1
 8000e98:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e9c:	fb07 3316 	mls	r3, r7, r6, r3
 8000ea0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ea4:	fb06 f30e 	mul.w	r3, r6, lr
 8000ea8:	428b      	cmp	r3, r1
 8000eaa:	d908      	bls.n	8000ebe <__udivmoddi4+0x28a>
 8000eac:	eb1c 0101 	adds.w	r1, ip, r1
 8000eb0:	f106 38ff 	add.w	r8, r6, #4294967295
 8000eb4:	d216      	bcs.n	8000ee4 <__udivmoddi4+0x2b0>
 8000eb6:	428b      	cmp	r3, r1
 8000eb8:	d914      	bls.n	8000ee4 <__udivmoddi4+0x2b0>
 8000eba:	3e02      	subs	r6, #2
 8000ebc:	4461      	add	r1, ip
 8000ebe:	1ac9      	subs	r1, r1, r3
 8000ec0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000ec4:	e738      	b.n	8000d38 <__udivmoddi4+0x104>
 8000ec6:	462e      	mov	r6, r5
 8000ec8:	4628      	mov	r0, r5
 8000eca:	e705      	b.n	8000cd8 <__udivmoddi4+0xa4>
 8000ecc:	4606      	mov	r6, r0
 8000ece:	e6e3      	b.n	8000c98 <__udivmoddi4+0x64>
 8000ed0:	4618      	mov	r0, r3
 8000ed2:	e6f8      	b.n	8000cc6 <__udivmoddi4+0x92>
 8000ed4:	454b      	cmp	r3, r9
 8000ed6:	d2a9      	bcs.n	8000e2c <__udivmoddi4+0x1f8>
 8000ed8:	ebb9 0802 	subs.w	r8, r9, r2
 8000edc:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ee0:	3801      	subs	r0, #1
 8000ee2:	e7a3      	b.n	8000e2c <__udivmoddi4+0x1f8>
 8000ee4:	4646      	mov	r6, r8
 8000ee6:	e7ea      	b.n	8000ebe <__udivmoddi4+0x28a>
 8000ee8:	4620      	mov	r0, r4
 8000eea:	e794      	b.n	8000e16 <__udivmoddi4+0x1e2>
 8000eec:	4640      	mov	r0, r8
 8000eee:	e7d1      	b.n	8000e94 <__udivmoddi4+0x260>
 8000ef0:	46d0      	mov	r8, sl
 8000ef2:	e77b      	b.n	8000dec <__udivmoddi4+0x1b8>
 8000ef4:	3b02      	subs	r3, #2
 8000ef6:	4461      	add	r1, ip
 8000ef8:	e732      	b.n	8000d60 <__udivmoddi4+0x12c>
 8000efa:	4630      	mov	r0, r6
 8000efc:	e709      	b.n	8000d12 <__udivmoddi4+0xde>
 8000efe:	4464      	add	r4, ip
 8000f00:	3802      	subs	r0, #2
 8000f02:	e742      	b.n	8000d8a <__udivmoddi4+0x156>

08000f04 <__aeabi_idiv0>:
 8000f04:	4770      	bx	lr
 8000f06:	bf00      	nop

08000f08 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000f08:	b480      	push	{r7}
 8000f0a:	b083      	sub	sp, #12
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000f10:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000f14:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000f18:	f003 0301 	and.w	r3, r3, #1
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d013      	beq.n	8000f48 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000f20:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000f24:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000f28:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	d00b      	beq.n	8000f48 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000f30:	e000      	b.n	8000f34 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000f32:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000f34:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000f38:	681b      	ldr	r3, [r3, #0]
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d0f9      	beq.n	8000f32 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000f3e:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000f42:	687a      	ldr	r2, [r7, #4]
 8000f44:	b2d2      	uxtb	r2, r2
 8000f46:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000f48:	687b      	ldr	r3, [r7, #4]
}
 8000f4a:	4618      	mov	r0, r3
 8000f4c:	370c      	adds	r7, #12
 8000f4e:	46bd      	mov	sp, r7
 8000f50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f54:	4770      	bx	lr

08000f56 <LL_RCC_LSE_SetDriveCapability>:
  *         @arg @ref LL_RCC_LSEDRIVE_MEDIUMHIGH
  *         @arg @ref LL_RCC_LSEDRIVE_HIGH
  * @retval None
  */
__STATIC_INLINE void LL_RCC_LSE_SetDriveCapability(uint32_t LSEDrive)
{
 8000f56:	b480      	push	{r7}
 8000f58:	b083      	sub	sp, #12
 8000f5a:	af00      	add	r7, sp, #0
 8000f5c:	6078      	str	r0, [r7, #4]
  MODIFY_REG(RCC->BDCR, RCC_BDCR_LSEDRV, LSEDrive);
 8000f5e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000f62:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8000f66:	f023 0218 	bic.w	r2, r3, #24
 8000f6a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	4313      	orrs	r3, r2
 8000f72:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
}
 8000f76:	bf00      	nop
 8000f78:	370c      	adds	r7, #12
 8000f7a:	46bd      	mov	sp, r7
 8000f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f80:	4770      	bx	lr

08000f82 <LL_AHB1_GRP1_EnableClock>:
  *         @arg @ref LL_AHB1_GRP1_PERIPH_TSC
  * @note  (*) Not supported by all the devices
  * @retval None
  */
__STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
{
 8000f82:	b480      	push	{r7}
 8000f84:	b085      	sub	sp, #20
 8000f86:	af00      	add	r7, sp, #0
 8000f88:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB1ENR, Periphs);
 8000f8a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000f8e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8000f90:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8000f94:	687b      	ldr	r3, [r7, #4]
 8000f96:	4313      	orrs	r3, r2
 8000f98:	648b      	str	r3, [r1, #72]	; 0x48
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB1ENR, Periphs);
 8000f9a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000f9e:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8000fa0:	687b      	ldr	r3, [r7, #4]
 8000fa2:	4013      	ands	r3, r2
 8000fa4:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8000fa6:	68fb      	ldr	r3, [r7, #12]
}
 8000fa8:	bf00      	nop
 8000faa:	3714      	adds	r7, #20
 8000fac:	46bd      	mov	sp, r7
 8000fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fb2:	4770      	bx	lr

08000fb4 <LL_AHB2_GRP1_EnableClock>:
  *         @arg @ref LL_AHB2_GRP1_PERIPH_AES1 (*)
  * @note  (*) Not supported by all the devices
  * @retval None
  */
__STATIC_INLINE void LL_AHB2_GRP1_EnableClock(uint32_t Periphs)
{
 8000fb4:	b480      	push	{r7}
 8000fb6:	b085      	sub	sp, #20
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	6078      	str	r0, [r7, #4]
  __IO uint32_t tmpreg;
  SET_BIT(RCC->AHB2ENR, Periphs);
 8000fbc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000fc0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000fc2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	4313      	orrs	r3, r2
 8000fca:	64cb      	str	r3, [r1, #76]	; 0x4c
  /* Delay after an RCC peripheral clock enabling */
  tmpreg = READ_BIT(RCC->AHB2ENR, Periphs);
 8000fcc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8000fd0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	4013      	ands	r3, r2
 8000fd6:	60fb      	str	r3, [r7, #12]
  (void)tmpreg;
 8000fd8:	68fb      	ldr	r3, [r7, #12]
}
 8000fda:	bf00      	nop
 8000fdc:	3714      	adds	r7, #20
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe4:	4770      	bx	lr
	...

08000fe8 <init_done>:
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
void init_done()
{
 8000fe8:	b580      	push	{r7, lr}
 8000fea:	b082      	sub	sp, #8
 8000fec:	af00      	add	r7, sp, #0
	for(int i=0; i<3; i++)
 8000fee:	2300      	movs	r3, #0
 8000ff0:	607b      	str	r3, [r7, #4]
 8000ff2:	e017      	b.n	8001024 <init_done+0x3c>
	{
		HAL_GPIO_TogglePin(LD1_GPIO_Port, LD1_Pin);
 8000ff4:	2120      	movs	r1, #32
 8000ff6:	4816      	ldr	r0, [pc, #88]	; (8001050 <init_done+0x68>)
 8000ff8:	f006 f8b0 	bl	800715c <HAL_GPIO_TogglePin>
		HAL_Delay(200);
 8000ffc:	20c8      	movs	r0, #200	; 0xc8
 8000ffe:	f004 f8db 	bl	80051b8 <HAL_Delay>
		HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 8001002:	2101      	movs	r1, #1
 8001004:	4812      	ldr	r0, [pc, #72]	; (8001050 <init_done+0x68>)
 8001006:	f006 f8a9 	bl	800715c <HAL_GPIO_TogglePin>
		HAL_Delay(200);
 800100a:	20c8      	movs	r0, #200	; 0xc8
 800100c:	f004 f8d4 	bl	80051b8 <HAL_Delay>
		HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8001010:	2102      	movs	r1, #2
 8001012:	480f      	ldr	r0, [pc, #60]	; (8001050 <init_done+0x68>)
 8001014:	f006 f8a2 	bl	800715c <HAL_GPIO_TogglePin>
		HAL_Delay(200);
 8001018:	20c8      	movs	r0, #200	; 0xc8
 800101a:	f004 f8cd 	bl	80051b8 <HAL_Delay>
	for(int i=0; i<3; i++)
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	3301      	adds	r3, #1
 8001022:	607b      	str	r3, [r7, #4]
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	2b02      	cmp	r3, #2
 8001028:	dde4      	ble.n	8000ff4 <init_done+0xc>
	}
	HAL_GPIO_WritePin(LD1_GPIO_Port, LD1_Pin, RESET);
 800102a:	2200      	movs	r2, #0
 800102c:	2120      	movs	r1, #32
 800102e:	4808      	ldr	r0, [pc, #32]	; (8001050 <init_done+0x68>)
 8001030:	f006 f87c 	bl	800712c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, RESET);
 8001034:	2200      	movs	r2, #0
 8001036:	2101      	movs	r1, #1
 8001038:	4805      	ldr	r0, [pc, #20]	; (8001050 <init_done+0x68>)
 800103a:	f006 f877 	bl	800712c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, RESET);
 800103e:	2200      	movs	r2, #0
 8001040:	2102      	movs	r1, #2
 8001042:	4803      	ldr	r0, [pc, #12]	; (8001050 <init_done+0x68>)
 8001044:	f006 f872 	bl	800712c <HAL_GPIO_WritePin>
}
 8001048:	bf00      	nop
 800104a:	3708      	adds	r7, #8
 800104c:	46bd      	mov	sp, r7
 800104e:	bd80      	pop	{r7, pc}
 8001050:	48000400 	.word	0x48000400

08001054 <acq_internal_temp>:

static HAL_StatusTypeDef acq_internal_temp(uint16_t *temperature)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	b084      	sub	sp, #16
 8001058:	af00      	add	r7, sp, #0
 800105a:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef ret = HAL_OK;
 800105c:	2300      	movs	r3, #0
 800105e:	73fb      	strb	r3, [r7, #15]
	HAL_ADCEx_Calibration_Start(&hadc1, ADC_SINGLE_ENDED);
 8001060:	217f      	movs	r1, #127	; 0x7f
 8001062:	481f      	ldr	r0, [pc, #124]	; (80010e0 <acq_internal_temp+0x8c>)
 8001064:	f005 fa36 	bl	80064d4 <HAL_ADCEx_Calibration_Start>
	if((ret = HAL_ADC_Start(&hadc1)) != HAL_OK)
 8001068:	481d      	ldr	r0, [pc, #116]	; (80010e0 <acq_internal_temp+0x8c>)
 800106a:	f004 fc17 	bl	800589c <HAL_ADC_Start>
 800106e:	4603      	mov	r3, r0
 8001070:	73fb      	strb	r3, [r7, #15]
 8001072:	7bfb      	ldrb	r3, [r7, #15]
 8001074:	2b00      	cmp	r3, #0
 8001076:	d001      	beq.n	800107c <acq_internal_temp+0x28>
		return ret;
 8001078:	7bfb      	ldrb	r3, [r7, #15]
 800107a:	e02d      	b.n	80010d8 <acq_internal_temp+0x84>
	HAL_Delay(1);
 800107c:	2001      	movs	r0, #1
 800107e:	f004 f89b 	bl	80051b8 <HAL_Delay>
	*temperature = __LL_ADC_CALC_TEMPERATURE(3300, HAL_ADC_GetValue(&hadc1), LL_ADC_RESOLUTION_12B);
 8001082:	4817      	ldr	r0, [pc, #92]	; (80010e0 <acq_internal_temp+0x8c>)
 8001084:	f004 fc91 	bl	80059aa <HAL_ADC_GetValue>
 8001088:	4603      	mov	r3, r0
 800108a:	f640 42e4 	movw	r2, #3300	; 0xce4
 800108e:	fb02 f303 	mul.w	r3, r2, r3
 8001092:	4a14      	ldr	r2, [pc, #80]	; (80010e4 <acq_internal_temp+0x90>)
 8001094:	fba2 2303 	umull	r2, r3, r2, r3
 8001098:	099b      	lsrs	r3, r3, #6
 800109a:	461a      	mov	r2, r3
 800109c:	4b12      	ldr	r3, [pc, #72]	; (80010e8 <acq_internal_temp+0x94>)
 800109e:	881b      	ldrh	r3, [r3, #0]
 80010a0:	1ad3      	subs	r3, r2, r3
 80010a2:	2264      	movs	r2, #100	; 0x64
 80010a4:	fb03 f202 	mul.w	r2, r3, r2
 80010a8:	4b10      	ldr	r3, [pc, #64]	; (80010ec <acq_internal_temp+0x98>)
 80010aa:	881b      	ldrh	r3, [r3, #0]
 80010ac:	4619      	mov	r1, r3
 80010ae:	4b0e      	ldr	r3, [pc, #56]	; (80010e8 <acq_internal_temp+0x94>)
 80010b0:	881b      	ldrh	r3, [r3, #0]
 80010b2:	1acb      	subs	r3, r1, r3
 80010b4:	fb92 f3f3 	sdiv	r3, r2, r3
 80010b8:	b29b      	uxth	r3, r3
 80010ba:	331e      	adds	r3, #30
 80010bc:	b29a      	uxth	r2, r3
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	801a      	strh	r2, [r3, #0]
	if((ret = HAL_ADC_Stop(&hadc1)) != HAL_OK)
 80010c2:	4807      	ldr	r0, [pc, #28]	; (80010e0 <acq_internal_temp+0x8c>)
 80010c4:	f004 fc3e 	bl	8005944 <HAL_ADC_Stop>
 80010c8:	4603      	mov	r3, r0
 80010ca:	73fb      	strb	r3, [r7, #15]
 80010cc:	7bfb      	ldrb	r3, [r7, #15]
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d001      	beq.n	80010d6 <acq_internal_temp+0x82>
		return ret;
 80010d2:	7bfb      	ldrb	r3, [r7, #15]
 80010d4:	e000      	b.n	80010d8 <acq_internal_temp+0x84>
	return ret;
 80010d6:	7bfb      	ldrb	r3, [r7, #15]
}
 80010d8:	4618      	mov	r0, r3
 80010da:	3710      	adds	r7, #16
 80010dc:	46bd      	mov	sp, r7
 80010de:	bd80      	pop	{r7, pc}
 80010e0:	20000214 	.word	0x20000214
 80010e4:	057619f1 	.word	0x057619f1
 80010e8:	1fff75a8 	.word	0x1fff75a8
 80010ec:	1fff75ca 	.word	0x1fff75ca

080010f0 <formate_json_button>:

static char* formate_json_button(int value)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b086      	sub	sp, #24
 80010f4:	af00      	add	r7, sp, #0
 80010f6:	6078      	str	r0, [r7, #4]
	JSON_Value *val = json_value_init_object();
 80010f8:	f003 fa54 	bl	80045a4 <json_value_init_object>
 80010fc:	6178      	str	r0, [r7, #20]
	if(val == NULL)
 80010fe:	697b      	ldr	r3, [r7, #20]
 8001100:	2b00      	cmp	r3, #0
 8001102:	d101      	bne.n	8001108 <formate_json_button+0x18>
		return NULL;
 8001104:	2300      	movs	r3, #0
 8001106:	e020      	b.n	800114a <formate_json_button+0x5a>

	JSON_Object *obj = json_value_get_object(val);
 8001108:	6978      	ldr	r0, [r7, #20]
 800110a:	f003 f993 	bl	8004434 <json_value_get_object>
 800110e:	6138      	str	r0, [r7, #16]
	if(obj == NULL)
 8001110:	693b      	ldr	r3, [r7, #16]
 8001112:	2b00      	cmp	r3, #0
 8001114:	d101      	bne.n	800111a <formate_json_button+0x2a>
		return NULL;
 8001116:	2300      	movs	r3, #0
 8001118:	e017      	b.n	800114a <formate_json_button+0x5a>

	if(json_object_set_number(obj, "id", value) != JSONSuccess)
 800111a:	6878      	ldr	r0, [r7, #4]
 800111c:	f7ff f9da 	bl	80004d4 <__aeabi_i2d>
 8001120:	4602      	mov	r2, r0
 8001122:	460b      	mov	r3, r1
 8001124:	ec43 2b10 	vmov	d0, r2, r3
 8001128:	490a      	ldr	r1, [pc, #40]	; (8001154 <formate_json_button+0x64>)
 800112a:	6938      	ldr	r0, [r7, #16]
 800112c:	f003 fc62 	bl	80049f4 <json_object_set_number>
 8001130:	4603      	mov	r3, r0
 8001132:	2b00      	cmp	r3, #0
 8001134:	d001      	beq.n	800113a <formate_json_button+0x4a>
		return NULL;
 8001136:	2300      	movs	r3, #0
 8001138:	e007      	b.n	800114a <formate_json_button+0x5a>

	char* serialized_string = json_serialize_to_string(val);
 800113a:	6978      	ldr	r0, [r7, #20]
 800113c:	f003 fb5e 	bl	80047fc <json_serialize_to_string>
 8001140:	60f8      	str	r0, [r7, #12]

	json_value_free(val);
 8001142:	6978      	ldr	r0, [r7, #20]
 8001144:	f003 fa00 	bl	8004548 <json_value_free>

	return serialized_string;
 8001148:	68fb      	ldr	r3, [r7, #12]
}
 800114a:	4618      	mov	r0, r3
 800114c:	3718      	adds	r7, #24
 800114e:	46bd      	mov	sp, r7
 8001150:	bd80      	pop	{r7, pc}
 8001152:	bf00      	nop
 8001154:	0800ea38 	.word	0x0800ea38

08001158 <formate_json_temp>:

static char* formate_json_temp(int value)
{
 8001158:	b580      	push	{r7, lr}
 800115a:	b086      	sub	sp, #24
 800115c:	af00      	add	r7, sp, #0
 800115e:	6078      	str	r0, [r7, #4]
	JSON_Value *val = json_value_init_object();
 8001160:	f003 fa20 	bl	80045a4 <json_value_init_object>
 8001164:	6178      	str	r0, [r7, #20]
	if(val == NULL)
 8001166:	697b      	ldr	r3, [r7, #20]
 8001168:	2b00      	cmp	r3, #0
 800116a:	d101      	bne.n	8001170 <formate_json_temp+0x18>
		return NULL;
 800116c:	2300      	movs	r3, #0
 800116e:	e020      	b.n	80011b2 <formate_json_temp+0x5a>

	JSON_Object *obj = json_value_get_object(val);
 8001170:	6978      	ldr	r0, [r7, #20]
 8001172:	f003 f95f 	bl	8004434 <json_value_get_object>
 8001176:	6138      	str	r0, [r7, #16]
	if(obj == NULL)
 8001178:	693b      	ldr	r3, [r7, #16]
 800117a:	2b00      	cmp	r3, #0
 800117c:	d101      	bne.n	8001182 <formate_json_temp+0x2a>
		return NULL;
 800117e:	2300      	movs	r3, #0
 8001180:	e017      	b.n	80011b2 <formate_json_temp+0x5a>

	if(json_object_set_number(obj, "value", value) != JSONSuccess)
 8001182:	6878      	ldr	r0, [r7, #4]
 8001184:	f7ff f9a6 	bl	80004d4 <__aeabi_i2d>
 8001188:	4602      	mov	r2, r0
 800118a:	460b      	mov	r3, r1
 800118c:	ec43 2b10 	vmov	d0, r2, r3
 8001190:	490a      	ldr	r1, [pc, #40]	; (80011bc <formate_json_temp+0x64>)
 8001192:	6938      	ldr	r0, [r7, #16]
 8001194:	f003 fc2e 	bl	80049f4 <json_object_set_number>
 8001198:	4603      	mov	r3, r0
 800119a:	2b00      	cmp	r3, #0
 800119c:	d001      	beq.n	80011a2 <formate_json_temp+0x4a>
		return NULL;
 800119e:	2300      	movs	r3, #0
 80011a0:	e007      	b.n	80011b2 <formate_json_temp+0x5a>

	char* serialized_string = json_serialize_to_string(val);
 80011a2:	6978      	ldr	r0, [r7, #20]
 80011a4:	f003 fb2a 	bl	80047fc <json_serialize_to_string>
 80011a8:	60f8      	str	r0, [r7, #12]

	json_value_free(val);
 80011aa:	6978      	ldr	r0, [r7, #20]
 80011ac:	f003 f9cc 	bl	8004548 <json_value_free>

	return serialized_string;
 80011b0:	68fb      	ldr	r3, [r7, #12]
}
 80011b2:	4618      	mov	r0, r3
 80011b4:	3718      	adds	r7, #24
 80011b6:	46bd      	mov	sp, r7
 80011b8:	bd80      	pop	{r7, pc}
 80011ba:	bf00      	nop
 80011bc:	0800ea3c 	.word	0x0800ea3c

080011c0 <check_subscription>:

static int check_subscription()
{
 80011c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80011c4:	b091      	sub	sp, #68	; 0x44
 80011c6:	af00      	add	r7, sp, #0
	if (UART_ESP32_RecvEndFlag == 1) {
 80011c8:	4b91      	ldr	r3, [pc, #580]	; (8001410 <check_subscription+0x250>)
 80011ca:	781b      	ldrb	r3, [r3, #0]
 80011cc:	b2db      	uxtb	r3, r3
 80011ce:	2b01      	cmp	r3, #1
 80011d0:	f040 8118 	bne.w	8001404 <check_subscription+0x244>
		char pattern[24];
		memset(pattern, 0, sizeof(pattern));
 80011d4:	1d3b      	adds	r3, r7, #4
 80011d6:	2218      	movs	r2, #24
 80011d8:	2100      	movs	r1, #0
 80011da:	4618      	mov	r0, r3
 80011dc:	f00a fc84 	bl	800bae8 <memset>
		//sprintf((char*) pattern, "+MQTTSUBRECV:0,\"isen%s/led\",", CARD_NUMBER);
		sprintf((char*) pattern, "+MQTTSUBRECV:0,\"%s/", MQTT_CLIENTID);
 80011e0:	1d3b      	adds	r3, r7, #4
 80011e2:	4a8c      	ldr	r2, [pc, #560]	; (8001414 <check_subscription+0x254>)
 80011e4:	498c      	ldr	r1, [pc, #560]	; (8001418 <check_subscription+0x258>)
 80011e6:	4618      	mov	r0, r3
 80011e8:	f00a fe04 	bl	800bdf4 <siprintf>
		uint16_t data_size = 0, off = sizeof(pattern)-1; // \0 not needed
 80011ec:	2300      	movs	r3, #0
 80011ee:	873b      	strh	r3, [r7, #56]	; 0x38
 80011f0:	2317      	movs	r3, #23
 80011f2:	877b      	strh	r3, [r7, #58]	; 0x3a
		if (strstr((const char*) UART_ESP32_RxBUF, pattern) != NULL) {
 80011f4:	1d3b      	adds	r3, r7, #4
 80011f6:	4619      	mov	r1, r3
 80011f8:	4888      	ldr	r0, [pc, #544]	; (800141c <check_subscription+0x25c>)
 80011fa:	f00a fe7f 	bl	800befc <strstr>
 80011fe:	4603      	mov	r3, r0
 8001200:	2b00      	cmp	r3, #0
 8001202:	f000 80f9 	beq.w	80013f8 <check_subscription+0x238>
			printf("APP: Match succeed\r\n");
 8001206:	4886      	ldr	r0, [pc, #536]	; (8001420 <check_subscription+0x260>)
 8001208:	f00a fddc 	bl	800bdc4 <puts>
			int topic_id = 0;
 800120c:	2300      	movs	r3, #0
 800120e:	63fb      	str	r3, [r7, #60]	; 0x3c
			// nul mais ok
			if(UART_ESP32_RxBUF[off] == 'l')
 8001210:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8001212:	4a82      	ldr	r2, [pc, #520]	; (800141c <check_subscription+0x25c>)
 8001214:	5cd3      	ldrb	r3, [r2, r3]
 8001216:	2b6c      	cmp	r3, #108	; 0x6c
 8001218:	d105      	bne.n	8001226 <check_subscription+0x66>
			{
				topic_id = 1;
 800121a:	2301      	movs	r3, #1
 800121c:	63fb      	str	r3, [r7, #60]	; 0x3c
				off+= 5;
 800121e:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8001220:	3305      	adds	r3, #5
 8001222:	877b      	strh	r3, [r7, #58]	; 0x3a
 8001224:	e004      	b.n	8001230 <check_subscription+0x70>
			}
			else
			{
				topic_id = 2;
 8001226:	2302      	movs	r3, #2
 8001228:	63fb      	str	r3, [r7, #60]	; 0x3c
				off+= 9;
 800122a:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 800122c:	3309      	adds	r3, #9
 800122e:	877b      	strh	r3, [r7, #58]	; 0x3a
			}

			if(topic_id == 1)
 8001230:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8001232:	2b01      	cmp	r3, #1
 8001234:	f040 80b9 	bne.w	80013aa <check_subscription+0x1ea>
			{
 8001238:	466b      	mov	r3, sp
 800123a:	461e      	mov	r6, r3
				data_size = atoi(&UART_ESP32_RxBUF[off]);
 800123c:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 800123e:	4a77      	ldr	r2, [pc, #476]	; (800141c <check_subscription+0x25c>)
 8001240:	4413      	add	r3, r2
 8001242:	4618      	mov	r0, r3
 8001244:	f00a f9ca 	bl	800b5dc <atoi>
 8001248:	4603      	mov	r3, r0
 800124a:	873b      	strh	r3, [r7, #56]	; 0x38
				if(data_size < 10)
 800124c:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 800124e:	2b09      	cmp	r3, #9
 8001250:	d803      	bhi.n	800125a <check_subscription+0x9a>
					off+=2;
 8001252:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 8001254:	3302      	adds	r3, #2
 8001256:	877b      	strh	r3, [r7, #58]	; 0x3a
 8001258:	e002      	b.n	8001260 <check_subscription+0xa0>
				else
					off+=3;
 800125a:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 800125c:	3303      	adds	r3, #3
 800125e:	877b      	strh	r3, [r7, #58]	; 0x3a
				uint8_t data[data_size];
 8001260:	8f39      	ldrh	r1, [r7, #56]	; 0x38
 8001262:	460b      	mov	r3, r1
 8001264:	3b01      	subs	r3, #1
 8001266:	633b      	str	r3, [r7, #48]	; 0x30
 8001268:	b28b      	uxth	r3, r1
 800126a:	2200      	movs	r2, #0
 800126c:	4698      	mov	r8, r3
 800126e:	4691      	mov	r9, r2
 8001270:	f04f 0200 	mov.w	r2, #0
 8001274:	f04f 0300 	mov.w	r3, #0
 8001278:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800127c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8001280:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8001284:	b28b      	uxth	r3, r1
 8001286:	2200      	movs	r2, #0
 8001288:	461c      	mov	r4, r3
 800128a:	4615      	mov	r5, r2
 800128c:	f04f 0200 	mov.w	r2, #0
 8001290:	f04f 0300 	mov.w	r3, #0
 8001294:	00eb      	lsls	r3, r5, #3
 8001296:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800129a:	00e2      	lsls	r2, r4, #3
 800129c:	460b      	mov	r3, r1
 800129e:	3307      	adds	r3, #7
 80012a0:	08db      	lsrs	r3, r3, #3
 80012a2:	00db      	lsls	r3, r3, #3
 80012a4:	ebad 0d03 	sub.w	sp, sp, r3
 80012a8:	466b      	mov	r3, sp
 80012aa:	3300      	adds	r3, #0
 80012ac:	62fb      	str	r3, [r7, #44]	; 0x2c
				memcpy(data,&UART_ESP32_RxBUF[off],data_size);
 80012ae:	8f7b      	ldrh	r3, [r7, #58]	; 0x3a
 80012b0:	4a5a      	ldr	r2, [pc, #360]	; (800141c <check_subscription+0x25c>)
 80012b2:	4413      	add	r3, r2
 80012b4:	8f3a      	ldrh	r2, [r7, #56]	; 0x38
 80012b6:	4619      	mov	r1, r3
 80012b8:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80012ba:	f00a fbed 	bl	800ba98 <memcpy>
				memset(UART_ESP32_RxBUF, 0, UART_ESP32_MAX_RECVLEN);
 80012be:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80012c2:	2100      	movs	r1, #0
 80012c4:	4855      	ldr	r0, [pc, #340]	; (800141c <check_subscription+0x25c>)
 80012c6:	f00a fc0f 	bl	800bae8 <memset>

				UART_ESP32_RxLen = 0;
 80012ca:	4b56      	ldr	r3, [pc, #344]	; (8001424 <check_subscription+0x264>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	701a      	strb	r2, [r3, #0]
				UART_ESP32_RecvEndFlag = 0;
 80012d0:	4b4f      	ldr	r3, [pc, #316]	; (8001410 <check_subscription+0x250>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	701a      	strb	r2, [r3, #0]
				HAL_UART_Receive_DMA(&hlpuart1, UART_ESP32_RxBUF, UART_ESP32_MAX_RECVLEN);
 80012d6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80012da:	4950      	ldr	r1, [pc, #320]	; (800141c <check_subscription+0x25c>)
 80012dc:	4852      	ldr	r0, [pc, #328]	; (8001428 <check_subscription+0x268>)
 80012de:	f008 f80d 	bl	80092fc <HAL_UART_Receive_DMA>

				JSON_Value *val = json_parse_string(data);
 80012e2:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80012e4:	f002 ffa8 	bl	8004238 <json_parse_string>
 80012e8:	62b8      	str	r0, [r7, #40]	; 0x28
				JSON_Object *obj = json_value_get_object(val);
 80012ea:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80012ec:	f003 f8a2 	bl	8004434 <json_value_get_object>
 80012f0:	6278      	str	r0, [r7, #36]	; 0x24
				int led_id = json_object_get_number (obj, "id");
 80012f2:	494e      	ldr	r1, [pc, #312]	; (800142c <check_subscription+0x26c>)
 80012f4:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80012f6:	f002 ffde 	bl	80042b6 <json_object_get_number>
 80012fa:	ec53 2b10 	vmov	r2, r3, d0
 80012fe:	4610      	mov	r0, r2
 8001300:	4619      	mov	r1, r3
 8001302:	f7ff fc01 	bl	8000b08 <__aeabi_d2iz>
 8001306:	4603      	mov	r3, r0
 8001308:	623b      	str	r3, [r7, #32]
				int led_state = json_object_get_number (obj, "state");
 800130a:	4949      	ldr	r1, [pc, #292]	; (8001430 <check_subscription+0x270>)
 800130c:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800130e:	f002 ffd2 	bl	80042b6 <json_object_get_number>
 8001312:	ec53 2b10 	vmov	r2, r3, d0
 8001316:	4610      	mov	r0, r2
 8001318:	4619      	mov	r1, r3
 800131a:	f7ff fbf5 	bl	8000b08 <__aeabi_d2iz>
 800131e:	4603      	mov	r3, r0
 8001320:	61fb      	str	r3, [r7, #28]
				json_value_free(val);
 8001322:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8001324:	f003 f910 	bl	8004548 <json_value_free>
				switch(led_id)
 8001328:	6a3b      	ldr	r3, [r7, #32]
 800132a:	2b03      	cmp	r3, #3
 800132c:	d027      	beq.n	800137e <check_subscription+0x1be>
 800132e:	6a3b      	ldr	r3, [r7, #32]
 8001330:	2b03      	cmp	r3, #3
 8001332:	dc33      	bgt.n	800139c <check_subscription+0x1dc>
 8001334:	6a3b      	ldr	r3, [r7, #32]
 8001336:	2b01      	cmp	r3, #1
 8001338:	d003      	beq.n	8001342 <check_subscription+0x182>
 800133a:	6a3b      	ldr	r3, [r7, #32]
 800133c:	2b02      	cmp	r3, #2
 800133e:	d00f      	beq.n	8001360 <check_subscription+0x1a0>
 8001340:	e02c      	b.n	800139c <check_subscription+0x1dc>
				{
				case 1:
					if(led_state)
 8001342:	69fb      	ldr	r3, [r7, #28]
 8001344:	2b00      	cmp	r3, #0
 8001346:	d005      	beq.n	8001354 <check_subscription+0x194>
						HAL_GPIO_WritePin(LD1_GPIO_Port, LD1_Pin, SET);
 8001348:	2201      	movs	r2, #1
 800134a:	2120      	movs	r1, #32
 800134c:	4839      	ldr	r0, [pc, #228]	; (8001434 <check_subscription+0x274>)
 800134e:	f005 feed 	bl	800712c <HAL_GPIO_WritePin>
					else
						HAL_GPIO_WritePin(LD1_GPIO_Port, LD1_Pin, RESET);
					break;
 8001352:	e028      	b.n	80013a6 <check_subscription+0x1e6>
						HAL_GPIO_WritePin(LD1_GPIO_Port, LD1_Pin, RESET);
 8001354:	2200      	movs	r2, #0
 8001356:	2120      	movs	r1, #32
 8001358:	4836      	ldr	r0, [pc, #216]	; (8001434 <check_subscription+0x274>)
 800135a:	f005 fee7 	bl	800712c <HAL_GPIO_WritePin>
					break;
 800135e:	e022      	b.n	80013a6 <check_subscription+0x1e6>
				case 2:
					if(led_state)
 8001360:	69fb      	ldr	r3, [r7, #28]
 8001362:	2b00      	cmp	r3, #0
 8001364:	d005      	beq.n	8001372 <check_subscription+0x1b2>
						HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, SET);
 8001366:	2201      	movs	r2, #1
 8001368:	2101      	movs	r1, #1
 800136a:	4832      	ldr	r0, [pc, #200]	; (8001434 <check_subscription+0x274>)
 800136c:	f005 fede 	bl	800712c <HAL_GPIO_WritePin>
					else
						HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, RESET);
					break;
 8001370:	e019      	b.n	80013a6 <check_subscription+0x1e6>
						HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, RESET);
 8001372:	2200      	movs	r2, #0
 8001374:	2101      	movs	r1, #1
 8001376:	482f      	ldr	r0, [pc, #188]	; (8001434 <check_subscription+0x274>)
 8001378:	f005 fed8 	bl	800712c <HAL_GPIO_WritePin>
					break;
 800137c:	e013      	b.n	80013a6 <check_subscription+0x1e6>
				case 3:
					if(led_state)
 800137e:	69fb      	ldr	r3, [r7, #28]
 8001380:	2b00      	cmp	r3, #0
 8001382:	d005      	beq.n	8001390 <check_subscription+0x1d0>
						HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, SET);
 8001384:	2201      	movs	r2, #1
 8001386:	2102      	movs	r1, #2
 8001388:	482a      	ldr	r0, [pc, #168]	; (8001434 <check_subscription+0x274>)
 800138a:	f005 fecf 	bl	800712c <HAL_GPIO_WritePin>
					else
						HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, RESET);
					break;
 800138e:	e00a      	b.n	80013a6 <check_subscription+0x1e6>
						HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, RESET);
 8001390:	2200      	movs	r2, #0
 8001392:	2102      	movs	r1, #2
 8001394:	4827      	ldr	r0, [pc, #156]	; (8001434 <check_subscription+0x274>)
 8001396:	f005 fec9 	bl	800712c <HAL_GPIO_WritePin>
					break;
 800139a:	e004      	b.n	80013a6 <check_subscription+0x1e6>
				default:
					printf("Bad led_id %d\n",led_id);
 800139c:	6a39      	ldr	r1, [r7, #32]
 800139e:	4826      	ldr	r0, [pc, #152]	; (8001438 <check_subscription+0x278>)
 80013a0:	f00a fc8a 	bl	800bcb8 <iprintf>
					break;
 80013a4:	bf00      	nop
 80013a6:	46b5      	mov	sp, r6
 80013a8:	e024      	b.n	80013f4 <check_subscription+0x234>
				}
			}
			else if(topic_id == 2)
 80013aa:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80013ac:	2b02      	cmp	r3, #2
 80013ae:	d11d      	bne.n	80013ec <check_subscription+0x22c>
			{
				// PUB ADC temperature
				uint16_t temp = 0;
 80013b0:	2300      	movs	r3, #0
 80013b2:	807b      	strh	r3, [r7, #2]
				acq_internal_temp(&temp);
 80013b4:	1cbb      	adds	r3, r7, #2
 80013b6:	4618      	mov	r0, r3
 80013b8:	f7ff fe4c 	bl	8001054 <acq_internal_temp>
				char *data = formate_json_temp((int)temp);
 80013bc:	887b      	ldrh	r3, [r7, #2]
 80013be:	4618      	mov	r0, r3
 80013c0:	f7ff feca 	bl	8001158 <formate_json_temp>
 80013c4:	6378      	str	r0, [r7, #52]	; 0x34
				if(esp8266_Publish_Temp_BrokerMQTT((uint8_t*)data,strlen(data)) != _PUBLISH_TEMP_MQTT)
 80013c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80013c8:	f7fe feda 	bl	8000180 <strlen>
 80013cc:	4603      	mov	r3, r0
 80013ce:	b29b      	uxth	r3, r3
 80013d0:	4619      	mov	r1, r3
 80013d2:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80013d4:	f00a f89a 	bl	800b50c <esp8266_Publish_Temp_BrokerMQTT>
 80013d8:	4603      	mov	r3, r0
 80013da:	2b0b      	cmp	r3, #11
 80013dc:	d002      	beq.n	80013e4 <check_subscription+0x224>
					printf("APP: TEMP esp8266_Publish_BrokerMQTT() failed\n");
 80013de:	4817      	ldr	r0, [pc, #92]	; (800143c <check_subscription+0x27c>)
 80013e0:	f00a fcf0 	bl	800bdc4 <puts>
				json_free_serialized_string(data);
 80013e4:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80013e6:	f003 fa3b 	bl	8004860 <json_free_serialized_string>
 80013ea:	e003      	b.n	80013f4 <check_subscription+0x234>
			}
			else
				printf("topic_id unknown %d\n",topic_id);
 80013ec:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 80013ee:	4814      	ldr	r0, [pc, #80]	; (8001440 <check_subscription+0x280>)
 80013f0:	f00a fc62 	bl	800bcb8 <iprintf>

			return 0;
 80013f4:	2300      	movs	r3, #0
 80013f6:	e006      	b.n	8001406 <check_subscription+0x246>
		}
		else
		{
			printf("APP: Match failed\r\n");
 80013f8:	4812      	ldr	r0, [pc, #72]	; (8001444 <check_subscription+0x284>)
 80013fa:	f00a fce3 	bl	800bdc4 <puts>
			return -1;
 80013fe:	f04f 33ff 	mov.w	r3, #4294967295
 8001402:	e000      	b.n	8001406 <check_subscription+0x246>
		}
	}
	else
	{
		return 1;
 8001404:	2301      	movs	r3, #1
	}
}
 8001406:	4618      	mov	r0, r3
 8001408:	3744      	adds	r7, #68	; 0x44
 800140a:	46bd      	mov	sp, r7
 800140c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001410:	20001755 	.word	0x20001755
 8001414:	0800ea44 	.word	0x0800ea44
 8001418:	0800ea4c 	.word	0x0800ea4c
 800141c:	20000f54 	.word	0x20000f54
 8001420:	0800ea60 	.word	0x0800ea60
 8001424:	20001754 	.word	0x20001754
 8001428:	20000278 	.word	0x20000278
 800142c:	0800ea38 	.word	0x0800ea38
 8001430:	0800ea74 	.word	0x0800ea74
 8001434:	48000400 	.word	0x48000400
 8001438:	0800ea7c 	.word	0x0800ea7c
 800143c:	0800ea8c 	.word	0x0800ea8c
 8001440:	0800eabc 	.word	0x0800eabc
 8001444:	0800ead4 	.word	0x0800ead4

08001448 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001448:	b580      	push	{r7, lr}
 800144a:	b084      	sub	sp, #16
 800144c:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 800144e:	f003 fe2d 	bl	80050ac <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001452:	f000 f8bd 	bl	80015d0 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 8001456:	f000 f931 	bl	80016bc <PeriphCommonClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800145a:	f000 fad1 	bl	8001a00 <MX_GPIO_Init>
  MX_DMA_Init();
 800145e:	f000 fabd 	bl	80019dc <MX_DMA_Init>
  MX_USART1_UART_Init();
 8001462:	f000 fa1d 	bl	80018a0 <MX_USART1_UART_Init>
  MX_USB_PCD_Init();
 8001466:	f000 fa91 	bl	800198c <MX_USB_PCD_Init>
  MX_LPUART1_UART_Init();
 800146a:	f000 f9bd 	bl	80017e8 <MX_LPUART1_UART_Init>
  MX_ADC1_Init();
 800146e:	f000 f957 	bl	8001720 <MX_ADC1_Init>
  MX_TIM17_Init();
 8001472:	f000 fa63 	bl	800193c <MX_TIM17_Init>
  /* USER CODE BEGIN 2 */
  if (esp8266_SetupIP() != _SUCCEED) {
 8001476:	f009 fc19 	bl	800acac <esp8266_SetupIP>
 800147a:	4603      	mov	r3, r0
 800147c:	2b01      	cmp	r3, #1
 800147e:	d00a      	beq.n	8001496 <main+0x4e>
	  printf("esp8266_SetupIP failed - RESTART and configure WIFI source\n");
 8001480:	4847      	ldr	r0, [pc, #284]	; (80015a0 <main+0x158>)
 8001482:	f00a fc9f 	bl	800bdc4 <puts>
	  while(1)
	  {
		  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8001486:	2102      	movs	r1, #2
 8001488:	4846      	ldr	r0, [pc, #280]	; (80015a4 <main+0x15c>)
 800148a:	f005 fe67 	bl	800715c <HAL_GPIO_TogglePin>
		  HAL_Delay(200);
 800148e:	20c8      	movs	r0, #200	; 0xc8
 8001490:	f003 fe92 	bl	80051b8 <HAL_Delay>
		  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 8001494:	e7f7      	b.n	8001486 <main+0x3e>
	  }
  }

  if(esp8266_SetupConnect_BrokerMQTT() != _SUCCEED_MQTT)
 8001496:	f009 fecb 	bl	800b230 <esp8266_SetupConnect_BrokerMQTT>
 800149a:	4603      	mov	r3, r0
 800149c:	2b01      	cmp	r3, #1
 800149e:	d00a      	beq.n	80014b6 <main+0x6e>
  {
	  printf("esp8266_SetupConnect_BrokerMQTT failed - RESTART and configure MQTT\n");
 80014a0:	4841      	ldr	r0, [pc, #260]	; (80015a8 <main+0x160>)
 80014a2:	f00a fc8f 	bl	800bdc4 <puts>
	  while(1)
	  {
		  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 80014a6:	2102      	movs	r1, #2
 80014a8:	483e      	ldr	r0, [pc, #248]	; (80015a4 <main+0x15c>)
 80014aa:	f005 fe57 	bl	800715c <HAL_GPIO_TogglePin>
		  HAL_Delay(200);
 80014ae:	20c8      	movs	r0, #200	; 0xc8
 80014b0:	f003 fe82 	bl	80051b8 <HAL_Delay>
		  HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 80014b4:	e7f7      	b.n	80014a6 <main+0x5e>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  init_done();
 80014b6:	f7ff fd97 	bl	8000fe8 <init_done>
	  //click button to start
	  printf("Waiting to start...\n");
 80014ba:	483c      	ldr	r0, [pc, #240]	; (80015ac <main+0x164>)
 80014bc:	f00a fc82 	bl	800bdc4 <puts>
	  while(HAL_GPIO_ReadPin(B3_GPIO_Port, B3_Pin) != GPIO_PIN_RESET)
 80014c0:	e006      	b.n	80014d0 <main+0x88>
	  {
		  HAL_GPIO_TogglePin(LD1_GPIO_Port, LD1_Pin);
 80014c2:	2120      	movs	r1, #32
 80014c4:	4837      	ldr	r0, [pc, #220]	; (80015a4 <main+0x15c>)
 80014c6:	f005 fe49 	bl	800715c <HAL_GPIO_TogglePin>
		  HAL_Delay(100);
 80014ca:	2064      	movs	r0, #100	; 0x64
 80014cc:	f003 fe74 	bl	80051b8 <HAL_Delay>
	  while(HAL_GPIO_ReadPin(B3_GPIO_Port, B3_Pin) != GPIO_PIN_RESET)
 80014d0:	2102      	movs	r1, #2
 80014d2:	4837      	ldr	r0, [pc, #220]	; (80015b0 <main+0x168>)
 80014d4:	f005 fe12 	bl	80070fc <HAL_GPIO_ReadPin>
 80014d8:	4603      	mov	r3, r0
 80014da:	2b00      	cmp	r3, #0
 80014dc:	d1f1      	bne.n	80014c2 <main+0x7a>
	  }
	  HAL_GPIO_WritePin(LD1_GPIO_Port, LD1_Pin, RESET);
 80014de:	2200      	movs	r2, #0
 80014e0:	2120      	movs	r1, #32
 80014e2:	4830      	ldr	r0, [pc, #192]	; (80015a4 <main+0x15c>)
 80014e4:	f005 fe22 	bl	800712c <HAL_GPIO_WritePin>

	  printf("App started...\n");
 80014e8:	4832      	ldr	r0, [pc, #200]	; (80015b4 <main+0x16c>)
 80014ea:	f00a fc6b 	bl	800bdc4 <puts>

	  // app part
	  while(1)
	  {
		  if(get_mqtt_state() < _SUBSCRIBED_LED_MQTT)
 80014ee:	f00a f869 	bl	800b5c4 <get_mqtt_state>
 80014f2:	4603      	mov	r3, r0
 80014f4:	2b07      	cmp	r3, #7
 80014f6:	d807      	bhi.n	8001508 <main+0xc0>
		  {
			  if(esp8266_Subscribe_Led_BrokerMQTT() != _SUBSCRIBED_LED_MQTT)
 80014f8:	f009 ff04 	bl	800b304 <esp8266_Subscribe_Led_BrokerMQTT>
 80014fc:	4603      	mov	r3, r0
 80014fe:	2b08      	cmp	r3, #8
 8001500:	d002      	beq.n	8001508 <main+0xc0>
				printf("APP: esp8266_Subscribe_Led_BrokerMQTT() failed\n");
 8001502:	482d      	ldr	r0, [pc, #180]	; (80015b8 <main+0x170>)
 8001504:	f00a fc5e 	bl	800bdc4 <puts>
		  }
		  if(get_mqtt_state() < _SUBSCRIBED_TEMP_MQTT)
 8001508:	f00a f85c 	bl	800b5c4 <get_mqtt_state>
 800150c:	4603      	mov	r3, r0
 800150e:	2b08      	cmp	r3, #8
 8001510:	d807      	bhi.n	8001522 <main+0xda>
		  {
			  if(esp8266_Subscribe_Temp_BrokerMQTT() != _SUBSCRIBED_TEMP_MQTT)
 8001512:	f009 ff4b 	bl	800b3ac <esp8266_Subscribe_Temp_BrokerMQTT>
 8001516:	4603      	mov	r3, r0
 8001518:	2b09      	cmp	r3, #9
 800151a:	d002      	beq.n	8001522 <main+0xda>
		  		printf("APP: esp8266_Subscribe_Temp_BrokerMQTT() failed\n");
 800151c:	4827      	ldr	r0, [pc, #156]	; (80015bc <main+0x174>)
 800151e:	f00a fc51 	bl	800bdc4 <puts>
		  }

		  //
		  switch(button_pushed)
 8001522:	4b27      	ldr	r3, [pc, #156]	; (80015c0 <main+0x178>)
 8001524:	881b      	ldrh	r3, [r3, #0]
 8001526:	2b01      	cmp	r3, #1
 8001528:	d002      	beq.n	8001530 <main+0xe8>
 800152a:	2b02      	cmp	r3, #2
 800152c:	d017      	beq.n	800155e <main+0x116>
 800152e:	e02a      	b.n	8001586 <main+0x13e>
		  {
		  case B1:
		  {
			  char *data = formate_json_button(1);
 8001530:	2001      	movs	r0, #1
 8001532:	f7ff fddd 	bl	80010f0 <formate_json_button>
 8001536:	60b8      	str	r0, [r7, #8]
			  if(esp8266_Publish_Button_BrokerMQTT((uint8_t*)data,strlen(data)) != _PUBLISH_BUTTON_MQTT)
 8001538:	68b8      	ldr	r0, [r7, #8]
 800153a:	f7fe fe21 	bl	8000180 <strlen>
 800153e:	4603      	mov	r3, r0
 8001540:	b29b      	uxth	r3, r3
 8001542:	4619      	mov	r1, r3
 8001544:	68b8      	ldr	r0, [r7, #8]
 8001546:	f009 ff85 	bl	800b454 <esp8266_Publish_Button_BrokerMQTT>
 800154a:	4603      	mov	r3, r0
 800154c:	2b0a      	cmp	r3, #10
 800154e:	d002      	beq.n	8001556 <main+0x10e>
				printf("APP: B1 esp8266_Publish_Button_BrokerMQTT() failed\n");
 8001550:	481c      	ldr	r0, [pc, #112]	; (80015c4 <main+0x17c>)
 8001552:	f00a fc37 	bl	800bdc4 <puts>
			  json_free_serialized_string(data);
 8001556:	68b8      	ldr	r0, [r7, #8]
 8001558:	f003 f982 	bl	8004860 <json_free_serialized_string>
		  }
			  break;
 800155c:	e013      	b.n	8001586 <main+0x13e>
		  case B2:
		  {
			  char *data = formate_json_button(2);
 800155e:	2002      	movs	r0, #2
 8001560:	f7ff fdc6 	bl	80010f0 <formate_json_button>
 8001564:	60f8      	str	r0, [r7, #12]
			  if(esp8266_Publish_Button_BrokerMQTT((uint8_t*)data,strlen(data)) != _PUBLISH_BUTTON_MQTT)
 8001566:	68f8      	ldr	r0, [r7, #12]
 8001568:	f7fe fe0a 	bl	8000180 <strlen>
 800156c:	4603      	mov	r3, r0
 800156e:	b29b      	uxth	r3, r3
 8001570:	4619      	mov	r1, r3
 8001572:	68f8      	ldr	r0, [r7, #12]
 8001574:	f009 ff6e 	bl	800b454 <esp8266_Publish_Button_BrokerMQTT>
 8001578:	4603      	mov	r3, r0
 800157a:	2b0a      	cmp	r3, #10
 800157c:	d002      	beq.n	8001584 <main+0x13c>
				printf("APP: B2 esp8266_Publish_Button_BrokerMQTT() failed\n");
 800157e:	4812      	ldr	r0, [pc, #72]	; (80015c8 <main+0x180>)
 8001580:	f00a fc20 	bl	800bdc4 <puts>
		  }
			  break;
 8001584:	bf00      	nop
		  }
		  button_pushed = NONE;
 8001586:	4b0e      	ldr	r3, [pc, #56]	; (80015c0 <main+0x178>)
 8001588:	2200      	movs	r2, #0
 800158a:	801a      	strh	r2, [r3, #0]

		  int sub_status = check_subscription();
 800158c:	f7ff fe18 	bl	80011c0 <check_subscription>
 8001590:	6078      	str	r0, [r7, #4]
		  if(sub_status == 0)
 8001592:	687b      	ldr	r3, [r7, #4]
 8001594:	2b00      	cmp	r3, #0
 8001596:	d1aa      	bne.n	80014ee <main+0xa6>
			  printf("APP: check_subscription() SUB MQTT RCV\n");
 8001598:	480c      	ldr	r0, [pc, #48]	; (80015cc <main+0x184>)
 800159a:	f00a fc13 	bl	800bdc4 <puts>
	  {
 800159e:	e7a6      	b.n	80014ee <main+0xa6>
 80015a0:	0800eae8 	.word	0x0800eae8
 80015a4:	48000400 	.word	0x48000400
 80015a8:	0800eb24 	.word	0x0800eb24
 80015ac:	0800eb68 	.word	0x0800eb68
 80015b0:	48000c00 	.word	0x48000c00
 80015b4:	0800eb7c 	.word	0x0800eb7c
 80015b8:	0800eb8c 	.word	0x0800eb8c
 80015bc:	0800ebbc 	.word	0x0800ebbc
 80015c0:	20000740 	.word	0x20000740
 80015c4:	0800ebec 	.word	0x0800ebec
 80015c8:	0800ec20 	.word	0x0800ec20
 80015cc:	0800ec54 	.word	0x0800ec54

080015d0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80015d0:	b580      	push	{r7, lr}
 80015d2:	b09a      	sub	sp, #104	; 0x68
 80015d4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80015d6:	f107 0320 	add.w	r3, r7, #32
 80015da:	2248      	movs	r2, #72	; 0x48
 80015dc:	2100      	movs	r1, #0
 80015de:	4618      	mov	r0, r3
 80015e0:	f00a fa82 	bl	800bae8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80015e4:	1d3b      	adds	r3, r7, #4
 80015e6:	2200      	movs	r2, #0
 80015e8:	601a      	str	r2, [r3, #0]
 80015ea:	605a      	str	r2, [r3, #4]
 80015ec:	609a      	str	r2, [r3, #8]
 80015ee:	60da      	str	r2, [r3, #12]
 80015f0:	611a      	str	r2, [r3, #16]
 80015f2:	615a      	str	r2, [r3, #20]
 80015f4:	619a      	str	r2, [r3, #24]

  /** Macro to configure the PLL multiplication factor
  */
  __HAL_RCC_PLL_PLLM_CONFIG(RCC_PLLM_DIV1);
 80015f6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80015fa:	68db      	ldr	r3, [r3, #12]
 80015fc:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8001600:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001604:	60d3      	str	r3, [r2, #12]

  /** Macro to configure the PLL clock source
  */
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_MSI);
 8001606:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800160a:	68db      	ldr	r3, [r3, #12]
 800160c:	f023 0303 	bic.w	r3, r3, #3
 8001610:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8001614:	f043 0301 	orr.w	r3, r3, #1
 8001618:	60d3      	str	r3, [r2, #12]

  /** Configure LSE Drive Capability
  */
  HAL_PWR_EnableBkUpAccess();
 800161a:	f005 fed5 	bl	80073c8 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 800161e:	2000      	movs	r0, #0
 8001620:	f7ff fc99 	bl	8000f56 <LL_RCC_LSE_SetDriveCapability>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001624:	4b24      	ldr	r3, [pc, #144]	; (80016b8 <SystemClock_Config+0xe8>)
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 800162c:	4a22      	ldr	r2, [pc, #136]	; (80016b8 <SystemClock_Config+0xe8>)
 800162e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001632:	6013      	str	r3, [r2, #0]
 8001634:	4b20      	ldr	r3, [pc, #128]	; (80016b8 <SystemClock_Config+0xe8>)
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800163c:	603b      	str	r3, [r7, #0]
 800163e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE
 8001640:	2327      	movs	r3, #39	; 0x27
 8001642:	623b      	str	r3, [r7, #32]
                              |RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001644:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001648:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 800164a:	2301      	movs	r3, #1
 800164c:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800164e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001652:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8001654:	2301      	movs	r3, #1
 8001656:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001658:	2340      	movs	r3, #64	; 0x40
 800165a:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 800165c:	2300      	movs	r3, #0
 800165e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8001660:	2360      	movs	r3, #96	; 0x60
 8001662:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001664:	2300      	movs	r3, #0
 8001666:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001668:	f107 0320 	add.w	r3, r7, #32
 800166c:	4618      	mov	r0, r3
 800166e:	f006 fa3f 	bl	8007af0 <HAL_RCC_OscConfig>
 8001672:	4603      	mov	r3, r0
 8001674:	2b00      	cmp	r3, #0
 8001676:	d001      	beq.n	800167c <SystemClock_Config+0xac>
  {
    Error_Handler();
 8001678:	f000 fa80 	bl	8001b7c <Error_Handler>
  }

  /** Configure the SYSCLKSource, HCLK, PCLK1 and PCLK2 clocks dividers
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK4|RCC_CLOCKTYPE_HCLK2
 800167c:	236f      	movs	r3, #111	; 0x6f
 800167e:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSE;
 8001680:	2302      	movs	r3, #2
 8001682:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001684:	2300      	movs	r3, #0
 8001686:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001688:	2300      	movs	r3, #0
 800168a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800168c:	2300      	movs	r3, #0
 800168e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.AHBCLK2Divider = RCC_SYSCLK_DIV1;
 8001690:	2300      	movs	r3, #0
 8001692:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.AHBCLK4Divider = RCC_SYSCLK_DIV1;
 8001694:	2300      	movs	r3, #0
 8001696:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8001698:	1d3b      	adds	r3, r7, #4
 800169a:	2101      	movs	r1, #1
 800169c:	4618      	mov	r0, r3
 800169e:	f006 fd9b 	bl	80081d8 <HAL_RCC_ClockConfig>
 80016a2:	4603      	mov	r3, r0
 80016a4:	2b00      	cmp	r3, #0
 80016a6:	d001      	beq.n	80016ac <SystemClock_Config+0xdc>
  {
    Error_Handler();
 80016a8:	f000 fa68 	bl	8001b7c <Error_Handler>
  }

  /** Enable MSI Auto calibration
  */
  HAL_RCCEx_EnableMSIPLLMode();
 80016ac:	f007 fb56 	bl	8008d5c <HAL_RCCEx_EnableMSIPLLMode>
}
 80016b0:	bf00      	nop
 80016b2:	3768      	adds	r7, #104	; 0x68
 80016b4:	46bd      	mov	sp, r7
 80016b6:	bd80      	pop	{r7, pc}
 80016b8:	58000400 	.word	0x58000400

080016bc <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 80016bc:	b580      	push	{r7, lr}
 80016be:	b094      	sub	sp, #80	; 0x50
 80016c0:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80016c2:	463b      	mov	r3, r7
 80016c4:	2250      	movs	r2, #80	; 0x50
 80016c6:	2100      	movs	r1, #0
 80016c8:	4618      	mov	r0, r3
 80016ca:	f00a fa0d 	bl	800bae8 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SMPS|RCC_PERIPHCLK_USB
 80016ce:	f44f 5314 	mov.w	r3, #9472	; 0x2500
 80016d2:	603b      	str	r3, [r7, #0]
                              |RCC_PERIPHCLK_ADC;
  PeriphClkInitStruct.PLLSAI1.PLLN = 24;
 80016d4:	2318      	movs	r3, #24
 80016d6:	607b      	str	r3, [r7, #4]
  PeriphClkInitStruct.PLLSAI1.PLLP = RCC_PLLP_DIV2;
 80016d8:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80016dc:	60bb      	str	r3, [r7, #8]
  PeriphClkInitStruct.PLLSAI1.PLLQ = RCC_PLLQ_DIV2;
 80016de:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80016e2:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI1.PLLR = RCC_PLLR_DIV2;
 80016e4:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 80016e8:	613b      	str	r3, [r7, #16]
  PeriphClkInitStruct.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_USBCLK|RCC_PLLSAI1_ADCCLK;
 80016ea:	f04f 5388 	mov.w	r3, #285212672	; 0x11000000
 80016ee:	617b      	str	r3, [r7, #20]
  PeriphClkInitStruct.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 80016f0:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 80016f4:	637b      	str	r3, [r7, #52]	; 0x34
  PeriphClkInitStruct.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 80016f6:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80016fa:	63fb      	str	r3, [r7, #60]	; 0x3c
  PeriphClkInitStruct.SmpsClockSelection = RCC_SMPSCLKSOURCE_HSI;
 80016fc:	2300      	movs	r3, #0
 80016fe:	64bb      	str	r3, [r7, #72]	; 0x48
  PeriphClkInitStruct.SmpsDivSelection = RCC_SMPSCLKDIV_RANGE0;
 8001700:	2300      	movs	r3, #0
 8001702:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001704:	463b      	mov	r3, r7
 8001706:	4618      	mov	r0, r3
 8001708:	f007 f9b2 	bl	8008a70 <HAL_RCCEx_PeriphCLKConfig>
 800170c:	4603      	mov	r3, r0
 800170e:	2b00      	cmp	r3, #0
 8001710:	d001      	beq.n	8001716 <PeriphCommonClock_Config+0x5a>
  {
    Error_Handler();
 8001712:	f000 fa33 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN Smps */

  /* USER CODE END Smps */
}
 8001716:	bf00      	nop
 8001718:	3750      	adds	r7, #80	; 0x50
 800171a:	46bd      	mov	sp, r7
 800171c:	bd80      	pop	{r7, pc}
	...

08001720 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001720:	b580      	push	{r7, lr}
 8001722:	b086      	sub	sp, #24
 8001724:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001726:	463b      	mov	r3, r7
 8001728:	2200      	movs	r2, #0
 800172a:	601a      	str	r2, [r3, #0]
 800172c:	605a      	str	r2, [r3, #4]
 800172e:	609a      	str	r2, [r3, #8]
 8001730:	60da      	str	r2, [r3, #12]
 8001732:	611a      	str	r2, [r3, #16]
 8001734:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8001736:	4b29      	ldr	r3, [pc, #164]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001738:	4a29      	ldr	r2, [pc, #164]	; (80017e0 <MX_ADC1_Init+0xc0>)
 800173a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 800173c:	4b27      	ldr	r3, [pc, #156]	; (80017dc <MX_ADC1_Init+0xbc>)
 800173e:	2200      	movs	r2, #0
 8001740:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001742:	4b26      	ldr	r3, [pc, #152]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001744:	2200      	movs	r2, #0
 8001746:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001748:	4b24      	ldr	r3, [pc, #144]	; (80017dc <MX_ADC1_Init+0xbc>)
 800174a:	2200      	movs	r2, #0
 800174c:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 800174e:	4b23      	ldr	r3, [pc, #140]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001750:	2200      	movs	r2, #0
 8001752:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001754:	4b21      	ldr	r3, [pc, #132]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001756:	2204      	movs	r2, #4
 8001758:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 800175a:	4b20      	ldr	r3, [pc, #128]	; (80017dc <MX_ADC1_Init+0xbc>)
 800175c:	2200      	movs	r2, #0
 800175e:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001760:	4b1e      	ldr	r3, [pc, #120]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001762:	2200      	movs	r2, #0
 8001764:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8001766:	4b1d      	ldr	r3, [pc, #116]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001768:	2201      	movs	r2, #1
 800176a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800176c:	4b1b      	ldr	r3, [pc, #108]	; (80017dc <MX_ADC1_Init+0xbc>)
 800176e:	2200      	movs	r2, #0
 8001770:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001774:	4b19      	ldr	r3, [pc, #100]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001776:	2200      	movs	r2, #0
 8001778:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800177a:	4b18      	ldr	r3, [pc, #96]	; (80017dc <MX_ADC1_Init+0xbc>)
 800177c:	2200      	movs	r2, #0
 800177e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001780:	4b16      	ldr	r3, [pc, #88]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001782:	2200      	movs	r2, #0
 8001784:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8001788:	4b14      	ldr	r3, [pc, #80]	; (80017dc <MX_ADC1_Init+0xbc>)
 800178a:	2200      	movs	r2, #0
 800178c:	635a      	str	r2, [r3, #52]	; 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 800178e:	4b13      	ldr	r3, [pc, #76]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001790:	2200      	movs	r2, #0
 8001792:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001796:	4811      	ldr	r0, [pc, #68]	; (80017dc <MX_ADC1_Init+0xbc>)
 8001798:	f003 ff34 	bl	8005604 <HAL_ADC_Init>
 800179c:	4603      	mov	r3, r0
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d001      	beq.n	80017a6 <MX_ADC1_Init+0x86>
  {
    Error_Handler();
 80017a2:	f000 f9eb 	bl	8001b7c <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 80017a6:	4b0f      	ldr	r3, [pc, #60]	; (80017e4 <MX_ADC1_Init+0xc4>)
 80017a8:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 80017aa:	2306      	movs	r3, #6
 80017ac:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_640CYCLES_5;
 80017ae:	2307      	movs	r3, #7
 80017b0:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 80017b2:	237f      	movs	r3, #127	; 0x7f
 80017b4:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 80017b6:	2304      	movs	r3, #4
 80017b8:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 80017ba:	2300      	movs	r3, #0
 80017bc:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80017be:	463b      	mov	r3, r7
 80017c0:	4619      	mov	r1, r3
 80017c2:	4806      	ldr	r0, [pc, #24]	; (80017dc <MX_ADC1_Init+0xbc>)
 80017c4:	f004 f8fe 	bl	80059c4 <HAL_ADC_ConfigChannel>
 80017c8:	4603      	mov	r3, r0
 80017ca:	2b00      	cmp	r3, #0
 80017cc:	d001      	beq.n	80017d2 <MX_ADC1_Init+0xb2>
  {
    Error_Handler();
 80017ce:	f000 f9d5 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80017d2:	bf00      	nop
 80017d4:	3718      	adds	r7, #24
 80017d6:	46bd      	mov	sp, r7
 80017d8:	bd80      	pop	{r7, pc}
 80017da:	bf00      	nop
 80017dc:	20000214 	.word	0x20000214
 80017e0:	50040000 	.word	0x50040000
 80017e4:	c7520000 	.word	0xc7520000

080017e8 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 80017e8:	b580      	push	{r7, lr}
 80017ea:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 80017ec:	4b29      	ldr	r3, [pc, #164]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 80017ee:	4a2a      	ldr	r2, [pc, #168]	; (8001898 <MX_LPUART1_UART_Init+0xb0>)
 80017f0:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 80017f2:	4b28      	ldr	r3, [pc, #160]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 80017f4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80017f8:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 80017fa:	4b26      	ldr	r3, [pc, #152]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 80017fc:	2200      	movs	r2, #0
 80017fe:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8001800:	4b24      	ldr	r3, [pc, #144]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001802:	2200      	movs	r2, #0
 8001804:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 8001806:	4b23      	ldr	r3, [pc, #140]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001808:	2200      	movs	r2, #0
 800180a:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 800180c:	4b21      	ldr	r3, [pc, #132]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 800180e:	220c      	movs	r2, #12
 8001810:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001812:	4b20      	ldr	r3, [pc, #128]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001814:	2200      	movs	r2, #0
 8001816:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001818:	4b1e      	ldr	r3, [pc, #120]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 800181a:	2200      	movs	r2, #0
 800181c:	621a      	str	r2, [r3, #32]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800181e:	4b1d      	ldr	r3, [pc, #116]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001820:	2200      	movs	r2, #0
 8001822:	625a      	str	r2, [r3, #36]	; 0x24
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001824:	4b1b      	ldr	r3, [pc, #108]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001826:	2200      	movs	r2, #0
 8001828:	629a      	str	r2, [r3, #40]	; 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 800182a:	4b1a      	ldr	r3, [pc, #104]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 800182c:	2200      	movs	r2, #0
 800182e:	665a      	str	r2, [r3, #100]	; 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 8001830:	4818      	ldr	r0, [pc, #96]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001832:	f007 fc85 	bl	8009140 <HAL_UART_Init>
 8001836:	4603      	mov	r3, r0
 8001838:	2b00      	cmp	r3, #0
 800183a:	d001      	beq.n	8001840 <MX_LPUART1_UART_Init+0x58>
  {
    Error_Handler();
 800183c:	f000 f99e 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001840:	2100      	movs	r1, #0
 8001842:	4814      	ldr	r0, [pc, #80]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001844:	f008 ffaa 	bl	800a79c <HAL_UARTEx_SetTxFifoThreshold>
 8001848:	4603      	mov	r3, r0
 800184a:	2b00      	cmp	r3, #0
 800184c:	d001      	beq.n	8001852 <MX_LPUART1_UART_Init+0x6a>
  {
    Error_Handler();
 800184e:	f000 f995 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001852:	2100      	movs	r1, #0
 8001854:	480f      	ldr	r0, [pc, #60]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001856:	f008 ffdf 	bl	800a818 <HAL_UARTEx_SetRxFifoThreshold>
 800185a:	4603      	mov	r3, r0
 800185c:	2b00      	cmp	r3, #0
 800185e:	d001      	beq.n	8001864 <MX_LPUART1_UART_Init+0x7c>
  {
    Error_Handler();
 8001860:	f000 f98c 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&hlpuart1) != HAL_OK)
 8001864:	480b      	ldr	r0, [pc, #44]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001866:	f008 ff60 	bl	800a72a <HAL_UARTEx_DisableFifoMode>
 800186a:	4603      	mov	r3, r0
 800186c:	2b00      	cmp	r3, #0
 800186e:	d001      	beq.n	8001874 <MX_LPUART1_UART_Init+0x8c>
  {
    Error_Handler();
 8001870:	f000 f984 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */
  __HAL_UART_ENABLE_IT(&hlpuart1, UART_IT_IDLE);
 8001874:	4b07      	ldr	r3, [pc, #28]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	681a      	ldr	r2, [r3, #0]
 800187a:	4b06      	ldr	r3, [pc, #24]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 800187c:	681b      	ldr	r3, [r3, #0]
 800187e:	f042 0210 	orr.w	r2, r2, #16
 8001882:	601a      	str	r2, [r3, #0]
  	HAL_UART_Receive_DMA(&hlpuart1, UART_ESP32_RxBUF, UART_ESP32_MAX_RECVLEN);
 8001884:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001888:	4904      	ldr	r1, [pc, #16]	; (800189c <MX_LPUART1_UART_Init+0xb4>)
 800188a:	4802      	ldr	r0, [pc, #8]	; (8001894 <MX_LPUART1_UART_Init+0xac>)
 800188c:	f007 fd36 	bl	80092fc <HAL_UART_Receive_DMA>
  /* USER CODE END LPUART1_Init 2 */

}
 8001890:	bf00      	nop
 8001892:	bd80      	pop	{r7, pc}
 8001894:	20000278 	.word	0x20000278
 8001898:	40008000 	.word	0x40008000
 800189c:	20000f54 	.word	0x20000f54

080018a0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80018a0:	b580      	push	{r7, lr}
 80018a2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80018a4:	4b23      	ldr	r3, [pc, #140]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018a6:	4a24      	ldr	r2, [pc, #144]	; (8001938 <MX_USART1_UART_Init+0x98>)
 80018a8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80018aa:	4b22      	ldr	r3, [pc, #136]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80018b0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_7B;
 80018b2:	4b20      	ldr	r3, [pc, #128]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80018b8:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80018ba:	4b1e      	ldr	r3, [pc, #120]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018bc:	2200      	movs	r2, #0
 80018be:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80018c0:	4b1c      	ldr	r3, [pc, #112]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018c2:	2200      	movs	r2, #0
 80018c4:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80018c6:	4b1b      	ldr	r3, [pc, #108]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018c8:	220c      	movs	r2, #12
 80018ca:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80018cc:	4b19      	ldr	r3, [pc, #100]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018ce:	2200      	movs	r2, #0
 80018d0:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80018d2:	4b18      	ldr	r3, [pc, #96]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018d4:	2200      	movs	r2, #0
 80018d6:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80018d8:	4b16      	ldr	r3, [pc, #88]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018da:	2200      	movs	r2, #0
 80018dc:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80018de:	4b15      	ldr	r3, [pc, #84]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018e0:	2200      	movs	r2, #0
 80018e2:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80018e4:	4b13      	ldr	r3, [pc, #76]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018e6:	2200      	movs	r2, #0
 80018e8:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80018ea:	4812      	ldr	r0, [pc, #72]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018ec:	f007 fc28 	bl	8009140 <HAL_UART_Init>
 80018f0:	4603      	mov	r3, r0
 80018f2:	2b00      	cmp	r3, #0
 80018f4:	d001      	beq.n	80018fa <MX_USART1_UART_Init+0x5a>
  {
    Error_Handler();
 80018f6:	f000 f941 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80018fa:	2100      	movs	r1, #0
 80018fc:	480d      	ldr	r0, [pc, #52]	; (8001934 <MX_USART1_UART_Init+0x94>)
 80018fe:	f008 ff4d 	bl	800a79c <HAL_UARTEx_SetTxFifoThreshold>
 8001902:	4603      	mov	r3, r0
 8001904:	2b00      	cmp	r3, #0
 8001906:	d001      	beq.n	800190c <MX_USART1_UART_Init+0x6c>
  {
    Error_Handler();
 8001908:	f000 f938 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800190c:	2100      	movs	r1, #0
 800190e:	4809      	ldr	r0, [pc, #36]	; (8001934 <MX_USART1_UART_Init+0x94>)
 8001910:	f008 ff82 	bl	800a818 <HAL_UARTEx_SetRxFifoThreshold>
 8001914:	4603      	mov	r3, r0
 8001916:	2b00      	cmp	r3, #0
 8001918:	d001      	beq.n	800191e <MX_USART1_UART_Init+0x7e>
  {
    Error_Handler();
 800191a:	f000 f92f 	bl	8001b7c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 800191e:	4805      	ldr	r0, [pc, #20]	; (8001934 <MX_USART1_UART_Init+0x94>)
 8001920:	f008 ff03 	bl	800a72a <HAL_UARTEx_DisableFifoMode>
 8001924:	4603      	mov	r3, r0
 8001926:	2b00      	cmp	r3, #0
 8001928:	d001      	beq.n	800192e <MX_USART1_UART_Init+0x8e>
  {
    Error_Handler();
 800192a:	f000 f927 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800192e:	bf00      	nop
 8001930:	bd80      	pop	{r7, pc}
 8001932:	bf00      	nop
 8001934:	2000030c 	.word	0x2000030c
 8001938:	40013800 	.word	0x40013800

0800193c <MX_TIM17_Init>:
  * @brief TIM17 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM17_Init(void)
{
 800193c:	b580      	push	{r7, lr}
 800193e:	af00      	add	r7, sp, #0
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 8001940:	4b10      	ldr	r3, [pc, #64]	; (8001984 <MX_TIM17_Init+0x48>)
 8001942:	4a11      	ldr	r2, [pc, #68]	; (8001988 <MX_TIM17_Init+0x4c>)
 8001944:	601a      	str	r2, [r3, #0]
  htim17.Init.Prescaler = 32000;
 8001946:	4b0f      	ldr	r3, [pc, #60]	; (8001984 <MX_TIM17_Init+0x48>)
 8001948:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 800194c:	605a      	str	r2, [r3, #4]
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 800194e:	4b0d      	ldr	r3, [pc, #52]	; (8001984 <MX_TIM17_Init+0x48>)
 8001950:	2200      	movs	r2, #0
 8001952:	609a      	str	r2, [r3, #8]
  htim17.Init.Period = 30000;
 8001954:	4b0b      	ldr	r3, [pc, #44]	; (8001984 <MX_TIM17_Init+0x48>)
 8001956:	f247 5230 	movw	r2, #30000	; 0x7530
 800195a:	60da      	str	r2, [r3, #12]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800195c:	4b09      	ldr	r3, [pc, #36]	; (8001984 <MX_TIM17_Init+0x48>)
 800195e:	2200      	movs	r2, #0
 8001960:	611a      	str	r2, [r3, #16]
  htim17.Init.RepetitionCounter = 0;
 8001962:	4b08      	ldr	r3, [pc, #32]	; (8001984 <MX_TIM17_Init+0x48>)
 8001964:	2200      	movs	r2, #0
 8001966:	615a      	str	r2, [r3, #20]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001968:	4b06      	ldr	r3, [pc, #24]	; (8001984 <MX_TIM17_Init+0x48>)
 800196a:	2200      	movs	r2, #0
 800196c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 800196e:	4805      	ldr	r0, [pc, #20]	; (8001984 <MX_TIM17_Init+0x48>)
 8001970:	f007 fb0b 	bl	8008f8a <HAL_TIM_Base_Init>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d001      	beq.n	800197e <MX_TIM17_Init+0x42>
  {
    Error_Handler();
 800197a:	f000 f8ff 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 800197e:	bf00      	nop
 8001980:	bd80      	pop	{r7, pc}
 8001982:	bf00      	nop
 8001984:	20000400 	.word	0x20000400
 8001988:	40014800 	.word	0x40014800

0800198c <MX_USB_PCD_Init>:
  * @brief USB Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_PCD_Init(void)
{
 800198c:	b580      	push	{r7, lr}
 800198e:	af00      	add	r7, sp, #0
  /* USER CODE END USB_Init 0 */

  /* USER CODE BEGIN USB_Init 1 */

  /* USER CODE END USB_Init 1 */
  hpcd_USB_FS.Instance = USB;
 8001990:	4b10      	ldr	r3, [pc, #64]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 8001992:	4a11      	ldr	r2, [pc, #68]	; (80019d8 <MX_USB_PCD_Init+0x4c>)
 8001994:	601a      	str	r2, [r3, #0]
  hpcd_USB_FS.Init.dev_endpoints = 8;
 8001996:	4b0f      	ldr	r3, [pc, #60]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 8001998:	2208      	movs	r2, #8
 800199a:	605a      	str	r2, [r3, #4]
  hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 800199c:	4b0d      	ldr	r3, [pc, #52]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 800199e:	2202      	movs	r2, #2
 80019a0:	609a      	str	r2, [r3, #8]
  hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 80019a2:	4b0c      	ldr	r3, [pc, #48]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019a4:	2202      	movs	r2, #2
 80019a6:	611a      	str	r2, [r3, #16]
  hpcd_USB_FS.Init.Sof_enable = DISABLE;
 80019a8:	4b0a      	ldr	r3, [pc, #40]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019aa:	2200      	movs	r2, #0
 80019ac:	615a      	str	r2, [r3, #20]
  hpcd_USB_FS.Init.low_power_enable = DISABLE;
 80019ae:	4b09      	ldr	r3, [pc, #36]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019b0:	2200      	movs	r2, #0
 80019b2:	619a      	str	r2, [r3, #24]
  hpcd_USB_FS.Init.lpm_enable = DISABLE;
 80019b4:	4b07      	ldr	r3, [pc, #28]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019b6:	2200      	movs	r2, #0
 80019b8:	61da      	str	r2, [r3, #28]
  hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 80019ba:	4b06      	ldr	r3, [pc, #24]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019bc:	2200      	movs	r2, #0
 80019be:	621a      	str	r2, [r3, #32]
  if (HAL_PCD_Init(&hpcd_USB_FS) != HAL_OK)
 80019c0:	4804      	ldr	r0, [pc, #16]	; (80019d4 <MX_USB_PCD_Init+0x48>)
 80019c2:	f005 fbfd 	bl	80071c0 <HAL_PCD_Init>
 80019c6:	4603      	mov	r3, r0
 80019c8:	2b00      	cmp	r3, #0
 80019ca:	d001      	beq.n	80019d0 <MX_USB_PCD_Init+0x44>
  {
    Error_Handler();
 80019cc:	f000 f8d6 	bl	8001b7c <Error_Handler>
  }
  /* USER CODE BEGIN USB_Init 2 */

  /* USER CODE END USB_Init 2 */

}
 80019d0:	bf00      	nop
 80019d2:	bd80      	pop	{r7, pc}
 80019d4:	2000044c 	.word	0x2000044c
 80019d8:	40006800 	.word	0x40006800

080019dc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80019dc:	b580      	push	{r7, lr}
 80019de:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMAMUX1_CLK_ENABLE();
 80019e0:	2004      	movs	r0, #4
 80019e2:	f7ff face 	bl	8000f82 <LL_AHB1_GRP1_EnableClock>
  __HAL_RCC_DMA1_CLK_ENABLE();
 80019e6:	2001      	movs	r0, #1
 80019e8:	f7ff facb 	bl	8000f82 <LL_AHB1_GRP1_EnableClock>

  /* DMA interrupt init */
  /* DMA1_Channel1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 80019ec:	2200      	movs	r2, #0
 80019ee:	2100      	movs	r1, #0
 80019f0:	200b      	movs	r0, #11
 80019f2:	f004 feac 	bl	800674e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 80019f6:	200b      	movs	r0, #11
 80019f8:	f004 fec3 	bl	8006782 <HAL_NVIC_EnableIRQ>

}
 80019fc:	bf00      	nop
 80019fe:	bd80      	pop	{r7, pc}

08001a00 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001a00:	b580      	push	{r7, lr}
 8001a02:	b086      	sub	sp, #24
 8001a04:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a06:	1d3b      	adds	r3, r7, #4
 8001a08:	2200      	movs	r2, #0
 8001a0a:	601a      	str	r2, [r3, #0]
 8001a0c:	605a      	str	r2, [r3, #4]
 8001a0e:	609a      	str	r2, [r3, #8]
 8001a10:	60da      	str	r2, [r3, #12]
 8001a12:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a14:	2004      	movs	r0, #4
 8001a16:	f7ff facd 	bl	8000fb4 <LL_AHB2_GRP1_EnableClock>
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a1a:	2001      	movs	r0, #1
 8001a1c:	f7ff faca 	bl	8000fb4 <LL_AHB2_GRP1_EnableClock>
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a20:	2002      	movs	r0, #2
 8001a22:	f7ff fac7 	bl	8000fb4 <LL_AHB2_GRP1_EnableClock>
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a26:	2008      	movs	r0, #8
 8001a28:	f7ff fac4 	bl	8000fb4 <LL_AHB2_GRP1_EnableClock>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(ESP32_RST_GPIO_Port, ESP32_RST_Pin, GPIO_PIN_RESET);
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	2108      	movs	r1, #8
 8001a30:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001a34:	f005 fb7a 	bl	800712c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD2_Pin|LD3_Pin|LD1_Pin, GPIO_PIN_RESET);
 8001a38:	2200      	movs	r2, #0
 8001a3a:	2123      	movs	r1, #35	; 0x23
 8001a3c:	482a      	ldr	r0, [pc, #168]	; (8001ae8 <MX_GPIO_Init+0xe8>)
 8001a3e:	f005 fb75 	bl	800712c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : ESP32_RST_Pin */
  GPIO_InitStruct.Pin = ESP32_RST_Pin;
 8001a42:	2308      	movs	r3, #8
 8001a44:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a46:	2301      	movs	r3, #1
 8001a48:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a4e:	2300      	movs	r3, #0
 8001a50:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(ESP32_RST_GPIO_Port, &GPIO_InitStruct);
 8001a52:	1d3b      	adds	r3, r7, #4
 8001a54:	4619      	mov	r1, r3
 8001a56:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8001a5a:	f005 f9df 	bl	8006e1c <HAL_GPIO_Init>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001a5e:	2310      	movs	r3, #16
 8001a60:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a62:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001a66:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a68:	2301      	movs	r3, #1
 8001a6a:	60fb      	str	r3, [r7, #12]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001a6c:	1d3b      	adds	r3, r7, #4
 8001a6e:	4619      	mov	r1, r3
 8001a70:	481e      	ldr	r0, [pc, #120]	; (8001aec <MX_GPIO_Init+0xec>)
 8001a72:	f005 f9d3 	bl	8006e1c <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin LD3_Pin LD1_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|LD3_Pin|LD1_Pin;
 8001a76:	2323      	movs	r3, #35	; 0x23
 8001a78:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001a7a:	2301      	movs	r3, #1
 8001a7c:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a7e:	2300      	movs	r3, #0
 8001a80:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a82:	2300      	movs	r3, #0
 8001a84:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a86:	1d3b      	adds	r3, r7, #4
 8001a88:	4619      	mov	r1, r3
 8001a8a:	4817      	ldr	r0, [pc, #92]	; (8001ae8 <MX_GPIO_Init+0xe8>)
 8001a8c:	f005 f9c6 	bl	8006e1c <HAL_GPIO_Init>

  /*Configure GPIO pin : B2_Pin */
  GPIO_InitStruct.Pin = B2_Pin;
 8001a90:	2301      	movs	r3, #1
 8001a92:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001a94:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001a98:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a9a:	2301      	movs	r3, #1
 8001a9c:	60fb      	str	r3, [r7, #12]
  HAL_GPIO_Init(B2_GPIO_Port, &GPIO_InitStruct);
 8001a9e:	1d3b      	adds	r3, r7, #4
 8001aa0:	4619      	mov	r1, r3
 8001aa2:	4813      	ldr	r0, [pc, #76]	; (8001af0 <MX_GPIO_Init+0xf0>)
 8001aa4:	f005 f9ba 	bl	8006e1c <HAL_GPIO_Init>

  /*Configure GPIO pin : B3_Pin */
  GPIO_InitStruct.Pin = B3_Pin;
 8001aa8:	2302      	movs	r3, #2
 8001aaa:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001aac:	2300      	movs	r3, #0
 8001aae:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	60fb      	str	r3, [r7, #12]
  HAL_GPIO_Init(B3_GPIO_Port, &GPIO_InitStruct);
 8001ab4:	1d3b      	adds	r3, r7, #4
 8001ab6:	4619      	mov	r1, r3
 8001ab8:	480d      	ldr	r0, [pc, #52]	; (8001af0 <MX_GPIO_Init+0xf0>)
 8001aba:	f005 f9af 	bl	8006e1c <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI0_IRQn, 0, 0);
 8001abe:	2200      	movs	r2, #0
 8001ac0:	2100      	movs	r1, #0
 8001ac2:	2006      	movs	r0, #6
 8001ac4:	f004 fe43 	bl	800674e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 8001ac8:	2006      	movs	r0, #6
 8001aca:	f004 fe5a 	bl	8006782 <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI4_IRQn, 0, 0);
 8001ace:	2200      	movs	r2, #0
 8001ad0:	2100      	movs	r1, #0
 8001ad2:	200a      	movs	r0, #10
 8001ad4:	f004 fe3b 	bl	800674e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_IRQn);
 8001ad8:	200a      	movs	r0, #10
 8001ada:	f004 fe52 	bl	8006782 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001ade:	bf00      	nop
 8001ae0:	3718      	adds	r7, #24
 8001ae2:	46bd      	mov	sp, r7
 8001ae4:	bd80      	pop	{r7, pc}
 8001ae6:	bf00      	nop
 8001ae8:	48000400 	.word	0x48000400
 8001aec:	48000800 	.word	0x48000800
 8001af0:	48000c00 	.word	0x48000c00

08001af4 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 4 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8001af4:	b580      	push	{r7, lr}
 8001af6:	b082      	sub	sp, #8
 8001af8:	af00      	add	r7, sp, #0
 8001afa:	6078      	str	r0, [r7, #4]
	printf("CALLBACK LPUART\n");
 8001afc:	4803      	ldr	r0, [pc, #12]	; (8001b0c <HAL_UART_RxCpltCallback+0x18>)
 8001afe:	f00a f961 	bl	800bdc4 <puts>
}
 8001b02:	bf00      	nop
 8001b04:	3708      	adds	r7, #8
 8001b06:	46bd      	mov	sp, r7
 8001b08:	bd80      	pop	{r7, pc}
 8001b0a:	bf00      	nop
 8001b0c:	0800ec7c 	.word	0x0800ec7c

08001b10 <_write>:

int _write(int file, char *ptr, int len)
{
 8001b10:	b580      	push	{r7, lr}
 8001b12:	b086      	sub	sp, #24
 8001b14:	af00      	add	r7, sp, #0
 8001b16:	60f8      	str	r0, [r7, #12]
 8001b18:	60b9      	str	r1, [r7, #8]
 8001b1a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	617b      	str	r3, [r7, #20]
 8001b20:	e009      	b.n	8001b36 <_write+0x26>
	{
	//__io_putchar(*ptr++);
	ITM_SendChar(*ptr++);
 8001b22:	68bb      	ldr	r3, [r7, #8]
 8001b24:	1c5a      	adds	r2, r3, #1
 8001b26:	60ba      	str	r2, [r7, #8]
 8001b28:	781b      	ldrb	r3, [r3, #0]
 8001b2a:	4618      	mov	r0, r3
 8001b2c:	f7ff f9ec 	bl	8000f08 <ITM_SendChar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001b30:	697b      	ldr	r3, [r7, #20]
 8001b32:	3301      	adds	r3, #1
 8001b34:	617b      	str	r3, [r7, #20]
 8001b36:	697a      	ldr	r2, [r7, #20]
 8001b38:	687b      	ldr	r3, [r7, #4]
 8001b3a:	429a      	cmp	r2, r3
 8001b3c:	dbf1      	blt.n	8001b22 <_write+0x12>
	}
	return len;
 8001b3e:	687b      	ldr	r3, [r7, #4]
}
 8001b40:	4618      	mov	r0, r3
 8001b42:	3718      	adds	r7, #24
 8001b44:	46bd      	mov	sp, r7
 8001b46:	bd80      	pop	{r7, pc}

08001b48 <HAL_GPIO_EXTI_Callback>:

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8001b48:	b480      	push	{r7}
 8001b4a:	b083      	sub	sp, #12
 8001b4c:	af00      	add	r7, sp, #0
 8001b4e:	4603      	mov	r3, r0
 8001b50:	80fb      	strh	r3, [r7, #6]
	switch(GPIO_Pin)
 8001b52:	88fb      	ldrh	r3, [r7, #6]
 8001b54:	2b01      	cmp	r3, #1
 8001b56:	d005      	beq.n	8001b64 <HAL_GPIO_EXTI_Callback+0x1c>
 8001b58:	2b10      	cmp	r3, #16
 8001b5a:	d107      	bne.n	8001b6c <HAL_GPIO_EXTI_Callback+0x24>
	{
	case B1_Pin:
		button_pushed = B1;
 8001b5c:	4b06      	ldr	r3, [pc, #24]	; (8001b78 <HAL_GPIO_EXTI_Callback+0x30>)
 8001b5e:	2201      	movs	r2, #1
 8001b60:	801a      	strh	r2, [r3, #0]
		break;
 8001b62:	e003      	b.n	8001b6c <HAL_GPIO_EXTI_Callback+0x24>
	case B2_Pin:
		button_pushed = B2;
 8001b64:	4b04      	ldr	r3, [pc, #16]	; (8001b78 <HAL_GPIO_EXTI_Callback+0x30>)
 8001b66:	2202      	movs	r2, #2
 8001b68:	801a      	strh	r2, [r3, #0]
		break;
 8001b6a:	bf00      	nop
	}
}
 8001b6c:	bf00      	nop
 8001b6e:	370c      	adds	r7, #12
 8001b70:	46bd      	mov	sp, r7
 8001b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b76:	4770      	bx	lr
 8001b78:	20000740 	.word	0x20000740

08001b7c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001b7c:	b480      	push	{r7}
 8001b7e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001b80:	b672      	cpsid	i
}
 8001b82:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001b84:	e7fe      	b.n	8001b84 <Error_Handler+0x8>
	...

08001b88 <serialize_int>:
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	ed87 0b02 	vstr	d0, [r7, #8]
 8001b92:	6078      	str	r0, [r7, #4]
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d102      	bne.n	8001ba0 <serialize_int+0x18>
 8001b9a:	f04f 33ff 	mov.w	r3, #4294967295
 8001b9e:	e00a      	b.n	8001bb6 <serialize_int+0x2e>
 8001ba0:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8001ba4:	f7fe ffb0 	bl	8000b08 <__aeabi_d2iz>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	461a      	mov	r2, r3
 8001bac:	4904      	ldr	r1, [pc, #16]	; (8001bc0 <serialize_int+0x38>)
 8001bae:	6878      	ldr	r0, [r7, #4]
 8001bb0:	f00a f920 	bl	800bdf4 <siprintf>
 8001bb4:	4603      	mov	r3, r0
 8001bb6:	4618      	mov	r0, r3
 8001bb8:	3710      	adds	r7, #16
 8001bba:	46bd      	mov	sp, r7
 8001bbc:	bd80      	pop	{r7, pc}
 8001bbe:	bf00      	nop
 8001bc0:	0800ec8c 	.word	0x0800ec8c

08001bc4 <parson_strndup>:
 8001bc4:	b580      	push	{r7, lr}
 8001bc6:	b084      	sub	sp, #16
 8001bc8:	af00      	add	r7, sp, #0
 8001bca:	6078      	str	r0, [r7, #4]
 8001bcc:	6039      	str	r1, [r7, #0]
 8001bce:	4b0d      	ldr	r3, [pc, #52]	; (8001c04 <parson_strndup+0x40>)
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	683a      	ldr	r2, [r7, #0]
 8001bd4:	3201      	adds	r2, #1
 8001bd6:	4610      	mov	r0, r2
 8001bd8:	4798      	blx	r3
 8001bda:	60f8      	str	r0, [r7, #12]
 8001bdc:	68fb      	ldr	r3, [r7, #12]
 8001bde:	2b00      	cmp	r3, #0
 8001be0:	d101      	bne.n	8001be6 <parson_strndup+0x22>
 8001be2:	2300      	movs	r3, #0
 8001be4:	e00a      	b.n	8001bfc <parson_strndup+0x38>
 8001be6:	68fa      	ldr	r2, [r7, #12]
 8001be8:	683b      	ldr	r3, [r7, #0]
 8001bea:	4413      	add	r3, r2
 8001bec:	2200      	movs	r2, #0
 8001bee:	701a      	strb	r2, [r3, #0]
 8001bf0:	683a      	ldr	r2, [r7, #0]
 8001bf2:	6879      	ldr	r1, [r7, #4]
 8001bf4:	68f8      	ldr	r0, [r7, #12]
 8001bf6:	f009 ff4f 	bl	800ba98 <memcpy>
 8001bfa:	68fb      	ldr	r3, [r7, #12]
 8001bfc:	4618      	mov	r0, r3
 8001bfe:	3710      	adds	r7, #16
 8001c00:	46bd      	mov	sp, r7
 8001c02:	bd80      	pop	{r7, pc}
 8001c04:	20000008 	.word	0x20000008

08001c08 <parson_strdup>:
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	6078      	str	r0, [r7, #4]
 8001c10:	6878      	ldr	r0, [r7, #4]
 8001c12:	f7fe fab5 	bl	8000180 <strlen>
 8001c16:	4603      	mov	r3, r0
 8001c18:	4619      	mov	r1, r3
 8001c1a:	6878      	ldr	r0, [r7, #4]
 8001c1c:	f7ff ffd2 	bl	8001bc4 <parson_strndup>
 8001c20:	4603      	mov	r3, r0
 8001c22:	4618      	mov	r0, r3
 8001c24:	3708      	adds	r7, #8
 8001c26:	46bd      	mov	sp, r7
 8001c28:	bd80      	pop	{r7, pc}

08001c2a <hex_char_to_int>:
 8001c2a:	b480      	push	{r7}
 8001c2c:	b083      	sub	sp, #12
 8001c2e:	af00      	add	r7, sp, #0
 8001c30:	4603      	mov	r3, r0
 8001c32:	71fb      	strb	r3, [r7, #7]
 8001c34:	79fb      	ldrb	r3, [r7, #7]
 8001c36:	2b2f      	cmp	r3, #47	; 0x2f
 8001c38:	d905      	bls.n	8001c46 <hex_char_to_int+0x1c>
 8001c3a:	79fb      	ldrb	r3, [r7, #7]
 8001c3c:	2b39      	cmp	r3, #57	; 0x39
 8001c3e:	d802      	bhi.n	8001c46 <hex_char_to_int+0x1c>
 8001c40:	79fb      	ldrb	r3, [r7, #7]
 8001c42:	3b30      	subs	r3, #48	; 0x30
 8001c44:	e013      	b.n	8001c6e <hex_char_to_int+0x44>
 8001c46:	79fb      	ldrb	r3, [r7, #7]
 8001c48:	2b60      	cmp	r3, #96	; 0x60
 8001c4a:	d905      	bls.n	8001c58 <hex_char_to_int+0x2e>
 8001c4c:	79fb      	ldrb	r3, [r7, #7]
 8001c4e:	2b66      	cmp	r3, #102	; 0x66
 8001c50:	d802      	bhi.n	8001c58 <hex_char_to_int+0x2e>
 8001c52:	79fb      	ldrb	r3, [r7, #7]
 8001c54:	3b57      	subs	r3, #87	; 0x57
 8001c56:	e00a      	b.n	8001c6e <hex_char_to_int+0x44>
 8001c58:	79fb      	ldrb	r3, [r7, #7]
 8001c5a:	2b40      	cmp	r3, #64	; 0x40
 8001c5c:	d905      	bls.n	8001c6a <hex_char_to_int+0x40>
 8001c5e:	79fb      	ldrb	r3, [r7, #7]
 8001c60:	2b46      	cmp	r3, #70	; 0x46
 8001c62:	d802      	bhi.n	8001c6a <hex_char_to_int+0x40>
 8001c64:	79fb      	ldrb	r3, [r7, #7]
 8001c66:	3b37      	subs	r3, #55	; 0x37
 8001c68:	e001      	b.n	8001c6e <hex_char_to_int+0x44>
 8001c6a:	f04f 33ff 	mov.w	r3, #4294967295
 8001c6e:	4618      	mov	r0, r3
 8001c70:	370c      	adds	r7, #12
 8001c72:	46bd      	mov	sp, r7
 8001c74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c78:	4770      	bx	lr

08001c7a <parse_utf16_hex>:
 8001c7a:	b580      	push	{r7, lr}
 8001c7c:	b086      	sub	sp, #24
 8001c7e:	af00      	add	r7, sp, #0
 8001c80:	6078      	str	r0, [r7, #4]
 8001c82:	6039      	str	r1, [r7, #0]
 8001c84:	687b      	ldr	r3, [r7, #4]
 8001c86:	781b      	ldrb	r3, [r3, #0]
 8001c88:	2b00      	cmp	r3, #0
 8001c8a:	d00e      	beq.n	8001caa <parse_utf16_hex+0x30>
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	3301      	adds	r3, #1
 8001c90:	781b      	ldrb	r3, [r3, #0]
 8001c92:	2b00      	cmp	r3, #0
 8001c94:	d009      	beq.n	8001caa <parse_utf16_hex+0x30>
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	3302      	adds	r3, #2
 8001c9a:	781b      	ldrb	r3, [r3, #0]
 8001c9c:	2b00      	cmp	r3, #0
 8001c9e:	d004      	beq.n	8001caa <parse_utf16_hex+0x30>
 8001ca0:	687b      	ldr	r3, [r7, #4]
 8001ca2:	3303      	adds	r3, #3
 8001ca4:	781b      	ldrb	r3, [r3, #0]
 8001ca6:	2b00      	cmp	r3, #0
 8001ca8:	d102      	bne.n	8001cb0 <parse_utf16_hex+0x36>
 8001caa:	f04f 33ff 	mov.w	r3, #4294967295
 8001cae:	e03b      	b.n	8001d28 <parse_utf16_hex+0xae>
 8001cb0:	687b      	ldr	r3, [r7, #4]
 8001cb2:	781b      	ldrb	r3, [r3, #0]
 8001cb4:	4618      	mov	r0, r3
 8001cb6:	f7ff ffb8 	bl	8001c2a <hex_char_to_int>
 8001cba:	6178      	str	r0, [r7, #20]
 8001cbc:	687b      	ldr	r3, [r7, #4]
 8001cbe:	3301      	adds	r3, #1
 8001cc0:	781b      	ldrb	r3, [r3, #0]
 8001cc2:	4618      	mov	r0, r3
 8001cc4:	f7ff ffb1 	bl	8001c2a <hex_char_to_int>
 8001cc8:	6138      	str	r0, [r7, #16]
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	3302      	adds	r3, #2
 8001cce:	781b      	ldrb	r3, [r3, #0]
 8001cd0:	4618      	mov	r0, r3
 8001cd2:	f7ff ffaa 	bl	8001c2a <hex_char_to_int>
 8001cd6:	60f8      	str	r0, [r7, #12]
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	3303      	adds	r3, #3
 8001cdc:	781b      	ldrb	r3, [r3, #0]
 8001cde:	4618      	mov	r0, r3
 8001ce0:	f7ff ffa3 	bl	8001c2a <hex_char_to_int>
 8001ce4:	60b8      	str	r0, [r7, #8]
 8001ce6:	697b      	ldr	r3, [r7, #20]
 8001ce8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cec:	d00b      	beq.n	8001d06 <parse_utf16_hex+0x8c>
 8001cee:	693b      	ldr	r3, [r7, #16]
 8001cf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cf4:	d007      	beq.n	8001d06 <parse_utf16_hex+0x8c>
 8001cf6:	68fb      	ldr	r3, [r7, #12]
 8001cf8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cfc:	d003      	beq.n	8001d06 <parse_utf16_hex+0x8c>
 8001cfe:	68bb      	ldr	r3, [r7, #8]
 8001d00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d04:	d102      	bne.n	8001d0c <parse_utf16_hex+0x92>
 8001d06:	f04f 33ff 	mov.w	r3, #4294967295
 8001d0a:	e00d      	b.n	8001d28 <parse_utf16_hex+0xae>
 8001d0c:	697b      	ldr	r3, [r7, #20]
 8001d0e:	031a      	lsls	r2, r3, #12
 8001d10:	693b      	ldr	r3, [r7, #16]
 8001d12:	021b      	lsls	r3, r3, #8
 8001d14:	431a      	orrs	r2, r3
 8001d16:	68fb      	ldr	r3, [r7, #12]
 8001d18:	011b      	lsls	r3, r3, #4
 8001d1a:	431a      	orrs	r2, r3
 8001d1c:	68bb      	ldr	r3, [r7, #8]
 8001d1e:	4313      	orrs	r3, r2
 8001d20:	461a      	mov	r2, r3
 8001d22:	683b      	ldr	r3, [r7, #0]
 8001d24:	601a      	str	r2, [r3, #0]
 8001d26:	2300      	movs	r3, #0
 8001d28:	4618      	mov	r0, r3
 8001d2a:	3718      	adds	r7, #24
 8001d2c:	46bd      	mov	sp, r7
 8001d2e:	bd80      	pop	{r7, pc}

08001d30 <is_decimal>:
 8001d30:	b580      	push	{r7, lr}
 8001d32:	b082      	sub	sp, #8
 8001d34:	af00      	add	r7, sp, #0
 8001d36:	6078      	str	r0, [r7, #4]
 8001d38:	6039      	str	r1, [r7, #0]
 8001d3a:	683b      	ldr	r3, [r7, #0]
 8001d3c:	2b01      	cmp	r3, #1
 8001d3e:	d90a      	bls.n	8001d56 <is_decimal+0x26>
 8001d40:	687b      	ldr	r3, [r7, #4]
 8001d42:	781b      	ldrb	r3, [r3, #0]
 8001d44:	2b30      	cmp	r3, #48	; 0x30
 8001d46:	d106      	bne.n	8001d56 <is_decimal+0x26>
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	3301      	adds	r3, #1
 8001d4c:	781b      	ldrb	r3, [r3, #0]
 8001d4e:	2b2e      	cmp	r3, #46	; 0x2e
 8001d50:	d001      	beq.n	8001d56 <is_decimal+0x26>
 8001d52:	2300      	movs	r3, #0
 8001d54:	e024      	b.n	8001da0 <is_decimal+0x70>
 8001d56:	683b      	ldr	r3, [r7, #0]
 8001d58:	2b02      	cmp	r3, #2
 8001d5a:	d91b      	bls.n	8001d94 <is_decimal+0x64>
 8001d5c:	2202      	movs	r2, #2
 8001d5e:	4912      	ldr	r1, [pc, #72]	; (8001da8 <is_decimal+0x78>)
 8001d60:	6878      	ldr	r0, [r7, #4]
 8001d62:	f00a f8b7 	bl	800bed4 <strncmp>
 8001d66:	4603      	mov	r3, r0
 8001d68:	2b00      	cmp	r3, #0
 8001d6a:	d113      	bne.n	8001d94 <is_decimal+0x64>
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	3302      	adds	r3, #2
 8001d70:	781b      	ldrb	r3, [r3, #0]
 8001d72:	2b2e      	cmp	r3, #46	; 0x2e
 8001d74:	d00e      	beq.n	8001d94 <is_decimal+0x64>
 8001d76:	2300      	movs	r3, #0
 8001d78:	e012      	b.n	8001da0 <is_decimal+0x70>
 8001d7a:	687a      	ldr	r2, [r7, #4]
 8001d7c:	683b      	ldr	r3, [r7, #0]
 8001d7e:	4413      	add	r3, r2
 8001d80:	781b      	ldrb	r3, [r3, #0]
 8001d82:	4619      	mov	r1, r3
 8001d84:	4809      	ldr	r0, [pc, #36]	; (8001dac <is_decimal+0x7c>)
 8001d86:	f00a f898 	bl	800beba <strchr>
 8001d8a:	4603      	mov	r3, r0
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d001      	beq.n	8001d94 <is_decimal+0x64>
 8001d90:	2300      	movs	r3, #0
 8001d92:	e005      	b.n	8001da0 <is_decimal+0x70>
 8001d94:	683b      	ldr	r3, [r7, #0]
 8001d96:	1e5a      	subs	r2, r3, #1
 8001d98:	603a      	str	r2, [r7, #0]
 8001d9a:	2b00      	cmp	r3, #0
 8001d9c:	d1ed      	bne.n	8001d7a <is_decimal+0x4a>
 8001d9e:	2301      	movs	r3, #1
 8001da0:	4618      	mov	r0, r3
 8001da2:	3708      	adds	r7, #8
 8001da4:	46bd      	mov	sp, r7
 8001da6:	bd80      	pop	{r7, pc}
 8001da8:	0800ec94 	.word	0x0800ec94
 8001dac:	0800ec98 	.word	0x0800ec98

08001db0 <hash_string>:
 8001db0:	b480      	push	{r7}
 8001db2:	b087      	sub	sp, #28
 8001db4:	af00      	add	r7, sp, #0
 8001db6:	6078      	str	r0, [r7, #4]
 8001db8:	6039      	str	r1, [r7, #0]
 8001dba:	f241 5305 	movw	r3, #5381	; 0x1505
 8001dbe:	617b      	str	r3, [r7, #20]
 8001dc0:	2300      	movs	r3, #0
 8001dc2:	613b      	str	r3, [r7, #16]
 8001dc4:	2300      	movs	r3, #0
 8001dc6:	613b      	str	r3, [r7, #16]
 8001dc8:	e011      	b.n	8001dee <hash_string+0x3e>
 8001dca:	687a      	ldr	r2, [r7, #4]
 8001dcc:	693b      	ldr	r3, [r7, #16]
 8001dce:	4413      	add	r3, r2
 8001dd0:	781b      	ldrb	r3, [r3, #0]
 8001dd2:	73fb      	strb	r3, [r7, #15]
 8001dd4:	7bfb      	ldrb	r3, [r7, #15]
 8001dd6:	2b00      	cmp	r3, #0
 8001dd8:	d00e      	beq.n	8001df8 <hash_string+0x48>
 8001dda:	697b      	ldr	r3, [r7, #20]
 8001ddc:	015a      	lsls	r2, r3, #5
 8001dde:	697b      	ldr	r3, [r7, #20]
 8001de0:	441a      	add	r2, r3
 8001de2:	7bfb      	ldrb	r3, [r7, #15]
 8001de4:	4413      	add	r3, r2
 8001de6:	617b      	str	r3, [r7, #20]
 8001de8:	693b      	ldr	r3, [r7, #16]
 8001dea:	3301      	adds	r3, #1
 8001dec:	613b      	str	r3, [r7, #16]
 8001dee:	693a      	ldr	r2, [r7, #16]
 8001df0:	683b      	ldr	r3, [r7, #0]
 8001df2:	429a      	cmp	r2, r3
 8001df4:	d3e9      	bcc.n	8001dca <hash_string+0x1a>
 8001df6:	e000      	b.n	8001dfa <hash_string+0x4a>
 8001df8:	bf00      	nop
 8001dfa:	697b      	ldr	r3, [r7, #20]
 8001dfc:	4618      	mov	r0, r3
 8001dfe:	371c      	adds	r7, #28
 8001e00:	46bd      	mov	sp, r7
 8001e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e06:	4770      	bx	lr

08001e08 <json_object_make>:
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	b084      	sub	sp, #16
 8001e0c:	af00      	add	r7, sp, #0
 8001e0e:	6078      	str	r0, [r7, #4]
 8001e10:	f04f 33ff 	mov.w	r3, #4294967295
 8001e14:	60fb      	str	r3, [r7, #12]
 8001e16:	4b10      	ldr	r3, [pc, #64]	; (8001e58 <json_object_make+0x50>)
 8001e18:	681b      	ldr	r3, [r3, #0]
 8001e1a:	2024      	movs	r0, #36	; 0x24
 8001e1c:	4798      	blx	r3
 8001e1e:	60b8      	str	r0, [r7, #8]
 8001e20:	68bb      	ldr	r3, [r7, #8]
 8001e22:	2b00      	cmp	r3, #0
 8001e24:	d101      	bne.n	8001e2a <json_object_make+0x22>
 8001e26:	2300      	movs	r3, #0
 8001e28:	e011      	b.n	8001e4e <json_object_make+0x46>
 8001e2a:	68bb      	ldr	r3, [r7, #8]
 8001e2c:	687a      	ldr	r2, [r7, #4]
 8001e2e:	601a      	str	r2, [r3, #0]
 8001e30:	2100      	movs	r1, #0
 8001e32:	68b8      	ldr	r0, [r7, #8]
 8001e34:	f000 f814 	bl	8001e60 <json_object_init>
 8001e38:	60f8      	str	r0, [r7, #12]
 8001e3a:	68fb      	ldr	r3, [r7, #12]
 8001e3c:	2b00      	cmp	r3, #0
 8001e3e:	d005      	beq.n	8001e4c <json_object_make+0x44>
 8001e40:	4b06      	ldr	r3, [pc, #24]	; (8001e5c <json_object_make+0x54>)
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	68b8      	ldr	r0, [r7, #8]
 8001e46:	4798      	blx	r3
 8001e48:	2300      	movs	r3, #0
 8001e4a:	e000      	b.n	8001e4e <json_object_make+0x46>
 8001e4c:	68bb      	ldr	r3, [r7, #8]
 8001e4e:	4618      	mov	r0, r3
 8001e50:	3710      	adds	r7, #16
 8001e52:	46bd      	mov	sp, r7
 8001e54:	bd80      	pop	{r7, pc}
 8001e56:	bf00      	nop
 8001e58:	20000008 	.word	0x20000008
 8001e5c:	2000000c 	.word	0x2000000c

08001e60 <json_object_init>:
 8001e60:	b580      	push	{r7, lr}
 8001e62:	b084      	sub	sp, #16
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
 8001e68:	6039      	str	r1, [r7, #0]
 8001e6a:	2300      	movs	r3, #0
 8001e6c:	60fb      	str	r3, [r7, #12]
 8001e6e:	687b      	ldr	r3, [r7, #4]
 8001e70:	2200      	movs	r2, #0
 8001e72:	605a      	str	r2, [r3, #4]
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	2200      	movs	r2, #0
 8001e78:	60da      	str	r2, [r3, #12]
 8001e7a:	687b      	ldr	r3, [r7, #4]
 8001e7c:	2200      	movs	r2, #0
 8001e7e:	611a      	str	r2, [r3, #16]
 8001e80:	687b      	ldr	r3, [r7, #4]
 8001e82:	2200      	movs	r2, #0
 8001e84:	615a      	str	r2, [r3, #20]
 8001e86:	687b      	ldr	r3, [r7, #4]
 8001e88:	2200      	movs	r2, #0
 8001e8a:	609a      	str	r2, [r3, #8]
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	2200      	movs	r2, #0
 8001e90:	619a      	str	r2, [r3, #24]
 8001e92:	687b      	ldr	r3, [r7, #4]
 8001e94:	683a      	ldr	r2, [r7, #0]
 8001e96:	621a      	str	r2, [r3, #32]
 8001e98:	683b      	ldr	r3, [r7, #0]
 8001e9a:	ee07 3a90 	vmov	s15, r3
 8001e9e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001ea2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8001fc0 <json_object_init+0x160>
 8001ea6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001eaa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001eae:	ee17 2a90 	vmov	r2, s15
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	61da      	str	r2, [r3, #28]
 8001eb6:	683b      	ldr	r3, [r7, #0]
 8001eb8:	2b00      	cmp	r3, #0
 8001eba:	d101      	bne.n	8001ec0 <json_object_init+0x60>
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	e07b      	b.n	8001fb8 <json_object_init+0x158>
 8001ec0:	4b40      	ldr	r3, [pc, #256]	; (8001fc4 <json_object_init+0x164>)
 8001ec2:	681b      	ldr	r3, [r3, #0]
 8001ec4:	687a      	ldr	r2, [r7, #4]
 8001ec6:	6a12      	ldr	r2, [r2, #32]
 8001ec8:	0092      	lsls	r2, r2, #2
 8001eca:	4610      	mov	r0, r2
 8001ecc:	4798      	blx	r3
 8001ece:	4602      	mov	r2, r0
 8001ed0:	687b      	ldr	r3, [r7, #4]
 8001ed2:	605a      	str	r2, [r3, #4]
 8001ed4:	4b3b      	ldr	r3, [pc, #236]	; (8001fc4 <json_object_init+0x164>)
 8001ed6:	681b      	ldr	r3, [r3, #0]
 8001ed8:	687a      	ldr	r2, [r7, #4]
 8001eda:	69d2      	ldr	r2, [r2, #28]
 8001edc:	0092      	lsls	r2, r2, #2
 8001ede:	4610      	mov	r0, r2
 8001ee0:	4798      	blx	r3
 8001ee2:	4602      	mov	r2, r0
 8001ee4:	687b      	ldr	r3, [r7, #4]
 8001ee6:	60da      	str	r2, [r3, #12]
 8001ee8:	4b36      	ldr	r3, [pc, #216]	; (8001fc4 <json_object_init+0x164>)
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	687a      	ldr	r2, [r7, #4]
 8001eee:	69d2      	ldr	r2, [r2, #28]
 8001ef0:	0092      	lsls	r2, r2, #2
 8001ef2:	4610      	mov	r0, r2
 8001ef4:	4798      	blx	r3
 8001ef6:	4602      	mov	r2, r0
 8001ef8:	687b      	ldr	r3, [r7, #4]
 8001efa:	611a      	str	r2, [r3, #16]
 8001efc:	4b31      	ldr	r3, [pc, #196]	; (8001fc4 <json_object_init+0x164>)
 8001efe:	681b      	ldr	r3, [r3, #0]
 8001f00:	687a      	ldr	r2, [r7, #4]
 8001f02:	69d2      	ldr	r2, [r2, #28]
 8001f04:	0092      	lsls	r2, r2, #2
 8001f06:	4610      	mov	r0, r2
 8001f08:	4798      	blx	r3
 8001f0a:	4602      	mov	r2, r0
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	615a      	str	r2, [r3, #20]
 8001f10:	4b2c      	ldr	r3, [pc, #176]	; (8001fc4 <json_object_init+0x164>)
 8001f12:	681b      	ldr	r3, [r3, #0]
 8001f14:	687a      	ldr	r2, [r7, #4]
 8001f16:	69d2      	ldr	r2, [r2, #28]
 8001f18:	0092      	lsls	r2, r2, #2
 8001f1a:	4610      	mov	r0, r2
 8001f1c:	4798      	blx	r3
 8001f1e:	4602      	mov	r2, r0
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	609a      	str	r2, [r3, #8]
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	685b      	ldr	r3, [r3, #4]
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d024      	beq.n	8001f76 <json_object_init+0x116>
 8001f2c:	687b      	ldr	r3, [r7, #4]
 8001f2e:	68db      	ldr	r3, [r3, #12]
 8001f30:	2b00      	cmp	r3, #0
 8001f32:	d020      	beq.n	8001f76 <json_object_init+0x116>
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	691b      	ldr	r3, [r3, #16]
 8001f38:	2b00      	cmp	r3, #0
 8001f3a:	d01c      	beq.n	8001f76 <json_object_init+0x116>
 8001f3c:	687b      	ldr	r3, [r7, #4]
 8001f3e:	695b      	ldr	r3, [r3, #20]
 8001f40:	2b00      	cmp	r3, #0
 8001f42:	d018      	beq.n	8001f76 <json_object_init+0x116>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	689b      	ldr	r3, [r3, #8]
 8001f48:	2b00      	cmp	r3, #0
 8001f4a:	d014      	beq.n	8001f76 <json_object_init+0x116>
 8001f4c:	2300      	movs	r3, #0
 8001f4e:	60fb      	str	r3, [r7, #12]
 8001f50:	e00a      	b.n	8001f68 <json_object_init+0x108>
 8001f52:	687b      	ldr	r3, [r7, #4]
 8001f54:	685a      	ldr	r2, [r3, #4]
 8001f56:	68fb      	ldr	r3, [r7, #12]
 8001f58:	009b      	lsls	r3, r3, #2
 8001f5a:	4413      	add	r3, r2
 8001f5c:	f04f 32ff 	mov.w	r2, #4294967295
 8001f60:	601a      	str	r2, [r3, #0]
 8001f62:	68fb      	ldr	r3, [r7, #12]
 8001f64:	3301      	adds	r3, #1
 8001f66:	60fb      	str	r3, [r7, #12]
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	6a1b      	ldr	r3, [r3, #32]
 8001f6c:	68fa      	ldr	r2, [r7, #12]
 8001f6e:	429a      	cmp	r2, r3
 8001f70:	d3ef      	bcc.n	8001f52 <json_object_init+0xf2>
 8001f72:	2300      	movs	r3, #0
 8001f74:	e020      	b.n	8001fb8 <json_object_init+0x158>
 8001f76:	bf00      	nop
 8001f78:	4b13      	ldr	r3, [pc, #76]	; (8001fc8 <json_object_init+0x168>)
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	687a      	ldr	r2, [r7, #4]
 8001f7e:	6852      	ldr	r2, [r2, #4]
 8001f80:	4610      	mov	r0, r2
 8001f82:	4798      	blx	r3
 8001f84:	4b10      	ldr	r3, [pc, #64]	; (8001fc8 <json_object_init+0x168>)
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	687a      	ldr	r2, [r7, #4]
 8001f8a:	68d2      	ldr	r2, [r2, #12]
 8001f8c:	4610      	mov	r0, r2
 8001f8e:	4798      	blx	r3
 8001f90:	4b0d      	ldr	r3, [pc, #52]	; (8001fc8 <json_object_init+0x168>)
 8001f92:	681b      	ldr	r3, [r3, #0]
 8001f94:	687a      	ldr	r2, [r7, #4]
 8001f96:	6912      	ldr	r2, [r2, #16]
 8001f98:	4610      	mov	r0, r2
 8001f9a:	4798      	blx	r3
 8001f9c:	4b0a      	ldr	r3, [pc, #40]	; (8001fc8 <json_object_init+0x168>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	687a      	ldr	r2, [r7, #4]
 8001fa2:	6952      	ldr	r2, [r2, #20]
 8001fa4:	4610      	mov	r0, r2
 8001fa6:	4798      	blx	r3
 8001fa8:	4b07      	ldr	r3, [pc, #28]	; (8001fc8 <json_object_init+0x168>)
 8001faa:	681b      	ldr	r3, [r3, #0]
 8001fac:	687a      	ldr	r2, [r7, #4]
 8001fae:	6892      	ldr	r2, [r2, #8]
 8001fb0:	4610      	mov	r0, r2
 8001fb2:	4798      	blx	r3
 8001fb4:	f04f 33ff 	mov.w	r3, #4294967295
 8001fb8:	4618      	mov	r0, r3
 8001fba:	3710      	adds	r7, #16
 8001fbc:	46bd      	mov	sp, r7
 8001fbe:	bd80      	pop	{r7, pc}
 8001fc0:	3f333333 	.word	0x3f333333
 8001fc4:	20000008 	.word	0x20000008
 8001fc8:	2000000c 	.word	0x2000000c

08001fcc <json_object_deinit>:
 8001fcc:	b580      	push	{r7, lr}
 8001fce:	b086      	sub	sp, #24
 8001fd0:	af00      	add	r7, sp, #0
 8001fd2:	60f8      	str	r0, [r7, #12]
 8001fd4:	60b9      	str	r1, [r7, #8]
 8001fd6:	607a      	str	r2, [r7, #4]
 8001fd8:	2300      	movs	r3, #0
 8001fda:	617b      	str	r3, [r7, #20]
 8001fdc:	2300      	movs	r3, #0
 8001fde:	617b      	str	r3, [r7, #20]
 8001fe0:	e01b      	b.n	800201a <json_object_deinit+0x4e>
 8001fe2:	68bb      	ldr	r3, [r7, #8]
 8001fe4:	2b00      	cmp	r3, #0
 8001fe6:	d009      	beq.n	8001ffc <json_object_deinit+0x30>
 8001fe8:	4b2b      	ldr	r3, [pc, #172]	; (8002098 <json_object_deinit+0xcc>)
 8001fea:	681b      	ldr	r3, [r3, #0]
 8001fec:	68fa      	ldr	r2, [r7, #12]
 8001fee:	68d1      	ldr	r1, [r2, #12]
 8001ff0:	697a      	ldr	r2, [r7, #20]
 8001ff2:	0092      	lsls	r2, r2, #2
 8001ff4:	440a      	add	r2, r1
 8001ff6:	6812      	ldr	r2, [r2, #0]
 8001ff8:	4610      	mov	r0, r2
 8001ffa:	4798      	blx	r3
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	2b00      	cmp	r3, #0
 8002000:	d008      	beq.n	8002014 <json_object_deinit+0x48>
 8002002:	68fb      	ldr	r3, [r7, #12]
 8002004:	691a      	ldr	r2, [r3, #16]
 8002006:	697b      	ldr	r3, [r7, #20]
 8002008:	009b      	lsls	r3, r3, #2
 800200a:	4413      	add	r3, r2
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	4618      	mov	r0, r3
 8002010:	f002 fa9a 	bl	8004548 <json_value_free>
 8002014:	697b      	ldr	r3, [r7, #20]
 8002016:	3301      	adds	r3, #1
 8002018:	617b      	str	r3, [r7, #20]
 800201a:	68fb      	ldr	r3, [r7, #12]
 800201c:	699b      	ldr	r3, [r3, #24]
 800201e:	697a      	ldr	r2, [r7, #20]
 8002020:	429a      	cmp	r2, r3
 8002022:	d3de      	bcc.n	8001fe2 <json_object_deinit+0x16>
 8002024:	68fb      	ldr	r3, [r7, #12]
 8002026:	2200      	movs	r2, #0
 8002028:	619a      	str	r2, [r3, #24]
 800202a:	68fb      	ldr	r3, [r7, #12]
 800202c:	2200      	movs	r2, #0
 800202e:	61da      	str	r2, [r3, #28]
 8002030:	68fb      	ldr	r3, [r7, #12]
 8002032:	2200      	movs	r2, #0
 8002034:	621a      	str	r2, [r3, #32]
 8002036:	4b18      	ldr	r3, [pc, #96]	; (8002098 <json_object_deinit+0xcc>)
 8002038:	681b      	ldr	r3, [r3, #0]
 800203a:	68fa      	ldr	r2, [r7, #12]
 800203c:	6852      	ldr	r2, [r2, #4]
 800203e:	4610      	mov	r0, r2
 8002040:	4798      	blx	r3
 8002042:	4b15      	ldr	r3, [pc, #84]	; (8002098 <json_object_deinit+0xcc>)
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	68fa      	ldr	r2, [r7, #12]
 8002048:	68d2      	ldr	r2, [r2, #12]
 800204a:	4610      	mov	r0, r2
 800204c:	4798      	blx	r3
 800204e:	4b12      	ldr	r3, [pc, #72]	; (8002098 <json_object_deinit+0xcc>)
 8002050:	681b      	ldr	r3, [r3, #0]
 8002052:	68fa      	ldr	r2, [r7, #12]
 8002054:	6912      	ldr	r2, [r2, #16]
 8002056:	4610      	mov	r0, r2
 8002058:	4798      	blx	r3
 800205a:	4b0f      	ldr	r3, [pc, #60]	; (8002098 <json_object_deinit+0xcc>)
 800205c:	681b      	ldr	r3, [r3, #0]
 800205e:	68fa      	ldr	r2, [r7, #12]
 8002060:	6952      	ldr	r2, [r2, #20]
 8002062:	4610      	mov	r0, r2
 8002064:	4798      	blx	r3
 8002066:	4b0c      	ldr	r3, [pc, #48]	; (8002098 <json_object_deinit+0xcc>)
 8002068:	681b      	ldr	r3, [r3, #0]
 800206a:	68fa      	ldr	r2, [r7, #12]
 800206c:	6892      	ldr	r2, [r2, #8]
 800206e:	4610      	mov	r0, r2
 8002070:	4798      	blx	r3
 8002072:	68fb      	ldr	r3, [r7, #12]
 8002074:	2200      	movs	r2, #0
 8002076:	605a      	str	r2, [r3, #4]
 8002078:	68fb      	ldr	r3, [r7, #12]
 800207a:	2200      	movs	r2, #0
 800207c:	60da      	str	r2, [r3, #12]
 800207e:	68fb      	ldr	r3, [r7, #12]
 8002080:	2200      	movs	r2, #0
 8002082:	611a      	str	r2, [r3, #16]
 8002084:	68fb      	ldr	r3, [r7, #12]
 8002086:	2200      	movs	r2, #0
 8002088:	615a      	str	r2, [r3, #20]
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	2200      	movs	r2, #0
 800208e:	609a      	str	r2, [r3, #8]
 8002090:	bf00      	nop
 8002092:	3718      	adds	r7, #24
 8002094:	46bd      	mov	sp, r7
 8002096:	bd80      	pop	{r7, pc}
 8002098:	2000000c 	.word	0x2000000c

0800209c <json_object_grow_and_rehash>:
 800209c:	b5b0      	push	{r4, r5, r7, lr}
 800209e:	b092      	sub	sp, #72	; 0x48
 80020a0:	af00      	add	r7, sp, #0
 80020a2:	6078      	str	r0, [r7, #4]
 80020a4:	2300      	movs	r3, #0
 80020a6:	643b      	str	r3, [r7, #64]	; 0x40
 80020a8:	2300      	movs	r3, #0
 80020aa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80020ac:	2300      	movs	r3, #0
 80020ae:	63bb      	str	r3, [r7, #56]	; 0x38
 80020b0:	2300      	movs	r3, #0
 80020b2:	647b      	str	r3, [r7, #68]	; 0x44
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	6a1b      	ldr	r3, [r3, #32]
 80020b8:	005b      	lsls	r3, r3, #1
 80020ba:	2b10      	cmp	r3, #16
 80020bc:	bf38      	it	cc
 80020be:	2310      	movcc	r3, #16
 80020c0:	637b      	str	r3, [r7, #52]	; 0x34
 80020c2:	f107 030c 	add.w	r3, r7, #12
 80020c6:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80020c8:	4618      	mov	r0, r3
 80020ca:	f7ff fec9 	bl	8001e60 <json_object_init>
 80020ce:	6338      	str	r0, [r7, #48]	; 0x30
 80020d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80020d2:	2b00      	cmp	r3, #0
 80020d4:	d002      	beq.n	80020dc <json_object_grow_and_rehash+0x40>
 80020d6:	f04f 33ff 	mov.w	r3, #4294967295
 80020da:	e046      	b.n	800216a <json_object_grow_and_rehash+0xce>
 80020dc:	6878      	ldr	r0, [r7, #4]
 80020de:	f002 f949 	bl	8004374 <json_object_get_wrapping_value>
 80020e2:	6438      	str	r0, [r7, #64]	; 0x40
 80020e4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80020e6:	60fb      	str	r3, [r7, #12]
 80020e8:	2300      	movs	r3, #0
 80020ea:	647b      	str	r3, [r7, #68]	; 0x44
 80020ec:	e028      	b.n	8002140 <json_object_grow_and_rehash+0xa4>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	68da      	ldr	r2, [r3, #12]
 80020f2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80020f4:	009b      	lsls	r3, r3, #2
 80020f6:	4413      	add	r3, r2
 80020f8:	681b      	ldr	r3, [r3, #0]
 80020fa:	63fb      	str	r3, [r7, #60]	; 0x3c
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	691a      	ldr	r2, [r3, #16]
 8002100:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8002102:	009b      	lsls	r3, r3, #2
 8002104:	4413      	add	r3, r2
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	63bb      	str	r3, [r7, #56]	; 0x38
 800210a:	f107 030c 	add.w	r3, r7, #12
 800210e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8002110:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8002112:	4618      	mov	r0, r3
 8002114:	f000 f897 	bl	8002246 <json_object_add>
 8002118:	6338      	str	r0, [r7, #48]	; 0x30
 800211a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800211c:	2b00      	cmp	r3, #0
 800211e:	d009      	beq.n	8002134 <json_object_grow_and_rehash+0x98>
 8002120:	f107 030c 	add.w	r3, r7, #12
 8002124:	2200      	movs	r2, #0
 8002126:	2100      	movs	r1, #0
 8002128:	4618      	mov	r0, r3
 800212a:	f7ff ff4f 	bl	8001fcc <json_object_deinit>
 800212e:	f04f 33ff 	mov.w	r3, #4294967295
 8002132:	e01a      	b.n	800216a <json_object_grow_and_rehash+0xce>
 8002134:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002136:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8002138:	601a      	str	r2, [r3, #0]
 800213a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800213c:	3301      	adds	r3, #1
 800213e:	647b      	str	r3, [r7, #68]	; 0x44
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	699b      	ldr	r3, [r3, #24]
 8002144:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8002146:	429a      	cmp	r2, r3
 8002148:	d3d1      	bcc.n	80020ee <json_object_grow_and_rehash+0x52>
 800214a:	2200      	movs	r2, #0
 800214c:	2100      	movs	r1, #0
 800214e:	6878      	ldr	r0, [r7, #4]
 8002150:	f7ff ff3c 	bl	8001fcc <json_object_deinit>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	461d      	mov	r5, r3
 8002158:	f107 040c 	add.w	r4, r7, #12
 800215c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800215e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002160:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002162:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002164:	6823      	ldr	r3, [r4, #0]
 8002166:	602b      	str	r3, [r5, #0]
 8002168:	2300      	movs	r3, #0
 800216a:	4618      	mov	r0, r3
 800216c:	3748      	adds	r7, #72	; 0x48
 800216e:	46bd      	mov	sp, r7
 8002170:	bdb0      	pop	{r4, r5, r7, pc}

08002172 <json_object_get_cell_ix>:
 8002172:	b580      	push	{r7, lr}
 8002174:	b08c      	sub	sp, #48	; 0x30
 8002176:	af00      	add	r7, sp, #0
 8002178:	60f8      	str	r0, [r7, #12]
 800217a:	60b9      	str	r1, [r7, #8]
 800217c:	607a      	str	r2, [r7, #4]
 800217e:	603b      	str	r3, [r7, #0]
 8002180:	68fb      	ldr	r3, [r7, #12]
 8002182:	6a1b      	ldr	r3, [r3, #32]
 8002184:	3b01      	subs	r3, #1
 8002186:	683a      	ldr	r2, [r7, #0]
 8002188:	4013      	ands	r3, r2
 800218a:	62bb      	str	r3, [r7, #40]	; 0x28
 800218c:	2300      	movs	r3, #0
 800218e:	627b      	str	r3, [r7, #36]	; 0x24
 8002190:	2300      	movs	r3, #0
 8002192:	623b      	str	r3, [r7, #32]
 8002194:	2300      	movs	r3, #0
 8002196:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002198:	2300      	movs	r3, #0
 800219a:	61fb      	str	r3, [r7, #28]
 800219c:	2300      	movs	r3, #0
 800219e:	61bb      	str	r3, [r7, #24]
 80021a0:	2300      	movs	r3, #0
 80021a2:	617b      	str	r3, [r7, #20]
 80021a4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80021a6:	2200      	movs	r2, #0
 80021a8:	601a      	str	r2, [r3, #0]
 80021aa:	2300      	movs	r3, #0
 80021ac:	62fb      	str	r3, [r7, #44]	; 0x2c
 80021ae:	e03f      	b.n	8002230 <json_object_get_cell_ix+0xbe>
 80021b0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80021b2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80021b4:	441a      	add	r2, r3
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	6a1b      	ldr	r3, [r3, #32]
 80021ba:	3b01      	subs	r3, #1
 80021bc:	4013      	ands	r3, r2
 80021be:	623b      	str	r3, [r7, #32]
 80021c0:	68fb      	ldr	r3, [r7, #12]
 80021c2:	685a      	ldr	r2, [r3, #4]
 80021c4:	6a3b      	ldr	r3, [r7, #32]
 80021c6:	009b      	lsls	r3, r3, #2
 80021c8:	4413      	add	r3, r2
 80021ca:	681b      	ldr	r3, [r3, #0]
 80021cc:	627b      	str	r3, [r7, #36]	; 0x24
 80021ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80021d4:	d101      	bne.n	80021da <json_object_get_cell_ix+0x68>
 80021d6:	6a3b      	ldr	r3, [r7, #32]
 80021d8:	e031      	b.n	800223e <json_object_get_cell_ix+0xcc>
 80021da:	68fb      	ldr	r3, [r7, #12]
 80021dc:	689a      	ldr	r2, [r3, #8]
 80021de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021e0:	009b      	lsls	r3, r3, #2
 80021e2:	4413      	add	r3, r2
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	61fb      	str	r3, [r7, #28]
 80021e8:	683a      	ldr	r2, [r7, #0]
 80021ea:	69fb      	ldr	r3, [r7, #28]
 80021ec:	429a      	cmp	r2, r3
 80021ee:	d11b      	bne.n	8002228 <json_object_get_cell_ix+0xb6>
 80021f0:	68fb      	ldr	r3, [r7, #12]
 80021f2:	68da      	ldr	r2, [r3, #12]
 80021f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80021f6:	009b      	lsls	r3, r3, #2
 80021f8:	4413      	add	r3, r2
 80021fa:	681b      	ldr	r3, [r3, #0]
 80021fc:	61bb      	str	r3, [r7, #24]
 80021fe:	69b8      	ldr	r0, [r7, #24]
 8002200:	f7fd ffbe 	bl	8000180 <strlen>
 8002204:	6178      	str	r0, [r7, #20]
 8002206:	697a      	ldr	r2, [r7, #20]
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	429a      	cmp	r2, r3
 800220c:	d10d      	bne.n	800222a <json_object_get_cell_ix+0xb8>
 800220e:	687a      	ldr	r2, [r7, #4]
 8002210:	69b9      	ldr	r1, [r7, #24]
 8002212:	68b8      	ldr	r0, [r7, #8]
 8002214:	f009 fe5e 	bl	800bed4 <strncmp>
 8002218:	4603      	mov	r3, r0
 800221a:	2b00      	cmp	r3, #0
 800221c:	d105      	bne.n	800222a <json_object_get_cell_ix+0xb8>
 800221e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002220:	2201      	movs	r2, #1
 8002222:	601a      	str	r2, [r3, #0]
 8002224:	6a3b      	ldr	r3, [r7, #32]
 8002226:	e00a      	b.n	800223e <json_object_get_cell_ix+0xcc>
 8002228:	bf00      	nop
 800222a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800222c:	3301      	adds	r3, #1
 800222e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002230:	68fb      	ldr	r3, [r7, #12]
 8002232:	6a1b      	ldr	r3, [r3, #32]
 8002234:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002236:	429a      	cmp	r2, r3
 8002238:	d3ba      	bcc.n	80021b0 <json_object_get_cell_ix+0x3e>
 800223a:	f04f 33ff 	mov.w	r3, #4294967295
 800223e:	4618      	mov	r0, r3
 8002240:	3730      	adds	r7, #48	; 0x30
 8002242:	46bd      	mov	sp, r7
 8002244:	bd80      	pop	{r7, pc}

08002246 <json_object_add>:
 8002246:	b580      	push	{r7, lr}
 8002248:	b08a      	sub	sp, #40	; 0x28
 800224a:	af02      	add	r7, sp, #8
 800224c:	60f8      	str	r0, [r7, #12]
 800224e:	60b9      	str	r1, [r7, #8]
 8002250:	607a      	str	r2, [r7, #4]
 8002252:	2300      	movs	r3, #0
 8002254:	61bb      	str	r3, [r7, #24]
 8002256:	2300      	movs	r3, #0
 8002258:	613b      	str	r3, [r7, #16]
 800225a:	2300      	movs	r3, #0
 800225c:	61fb      	str	r3, [r7, #28]
 800225e:	f04f 33ff 	mov.w	r3, #4294967295
 8002262:	617b      	str	r3, [r7, #20]
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	2b00      	cmp	r3, #0
 8002268:	d005      	beq.n	8002276 <json_object_add+0x30>
 800226a:	68bb      	ldr	r3, [r7, #8]
 800226c:	2b00      	cmp	r3, #0
 800226e:	d002      	beq.n	8002276 <json_object_add+0x30>
 8002270:	687b      	ldr	r3, [r7, #4]
 8002272:	2b00      	cmp	r3, #0
 8002274:	d102      	bne.n	800227c <json_object_add+0x36>
 8002276:	f04f 33ff 	mov.w	r3, #4294967295
 800227a:	e06e      	b.n	800235a <json_object_add+0x114>
 800227c:	68b8      	ldr	r0, [r7, #8]
 800227e:	f7fd ff7f 	bl	8000180 <strlen>
 8002282:	4603      	mov	r3, r0
 8002284:	4619      	mov	r1, r3
 8002286:	68b8      	ldr	r0, [r7, #8]
 8002288:	f7ff fd92 	bl	8001db0 <hash_string>
 800228c:	61b8      	str	r0, [r7, #24]
 800228e:	2300      	movs	r3, #0
 8002290:	613b      	str	r3, [r7, #16]
 8002292:	68b8      	ldr	r0, [r7, #8]
 8002294:	f7fd ff74 	bl	8000180 <strlen>
 8002298:	4602      	mov	r2, r0
 800229a:	f107 0310 	add.w	r3, r7, #16
 800229e:	9300      	str	r3, [sp, #0]
 80022a0:	69bb      	ldr	r3, [r7, #24]
 80022a2:	68b9      	ldr	r1, [r7, #8]
 80022a4:	68f8      	ldr	r0, [r7, #12]
 80022a6:	f7ff ff64 	bl	8002172 <json_object_get_cell_ix>
 80022aa:	61f8      	str	r0, [r7, #28]
 80022ac:	693b      	ldr	r3, [r7, #16]
 80022ae:	2b00      	cmp	r3, #0
 80022b0:	d002      	beq.n	80022b8 <json_object_add+0x72>
 80022b2:	f04f 33ff 	mov.w	r3, #4294967295
 80022b6:	e050      	b.n	800235a <json_object_add+0x114>
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	699a      	ldr	r2, [r3, #24]
 80022bc:	68fb      	ldr	r3, [r7, #12]
 80022be:	69db      	ldr	r3, [r3, #28]
 80022c0:	429a      	cmp	r2, r3
 80022c2:	d316      	bcc.n	80022f2 <json_object_add+0xac>
 80022c4:	68f8      	ldr	r0, [r7, #12]
 80022c6:	f7ff fee9 	bl	800209c <json_object_grow_and_rehash>
 80022ca:	6178      	str	r0, [r7, #20]
 80022cc:	697b      	ldr	r3, [r7, #20]
 80022ce:	2b00      	cmp	r3, #0
 80022d0:	d002      	beq.n	80022d8 <json_object_add+0x92>
 80022d2:	f04f 33ff 	mov.w	r3, #4294967295
 80022d6:	e040      	b.n	800235a <json_object_add+0x114>
 80022d8:	68b8      	ldr	r0, [r7, #8]
 80022da:	f7fd ff51 	bl	8000180 <strlen>
 80022de:	4602      	mov	r2, r0
 80022e0:	f107 0310 	add.w	r3, r7, #16
 80022e4:	9300      	str	r3, [sp, #0]
 80022e6:	69bb      	ldr	r3, [r7, #24]
 80022e8:	68b9      	ldr	r1, [r7, #8]
 80022ea:	68f8      	ldr	r0, [r7, #12]
 80022ec:	f7ff ff41 	bl	8002172 <json_object_get_cell_ix>
 80022f0:	61f8      	str	r0, [r7, #28]
 80022f2:	68fb      	ldr	r3, [r7, #12]
 80022f4:	68da      	ldr	r2, [r3, #12]
 80022f6:	68fb      	ldr	r3, [r7, #12]
 80022f8:	699b      	ldr	r3, [r3, #24]
 80022fa:	009b      	lsls	r3, r3, #2
 80022fc:	4413      	add	r3, r2
 80022fe:	68ba      	ldr	r2, [r7, #8]
 8002300:	601a      	str	r2, [r3, #0]
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	685a      	ldr	r2, [r3, #4]
 8002306:	69fb      	ldr	r3, [r7, #28]
 8002308:	009b      	lsls	r3, r3, #2
 800230a:	4413      	add	r3, r2
 800230c:	68fa      	ldr	r2, [r7, #12]
 800230e:	6992      	ldr	r2, [r2, #24]
 8002310:	601a      	str	r2, [r3, #0]
 8002312:	68fb      	ldr	r3, [r7, #12]
 8002314:	691a      	ldr	r2, [r3, #16]
 8002316:	68fb      	ldr	r3, [r7, #12]
 8002318:	699b      	ldr	r3, [r3, #24]
 800231a:	009b      	lsls	r3, r3, #2
 800231c:	4413      	add	r3, r2
 800231e:	687a      	ldr	r2, [r7, #4]
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	68fb      	ldr	r3, [r7, #12]
 8002324:	695a      	ldr	r2, [r3, #20]
 8002326:	68fb      	ldr	r3, [r7, #12]
 8002328:	699b      	ldr	r3, [r3, #24]
 800232a:	009b      	lsls	r3, r3, #2
 800232c:	4413      	add	r3, r2
 800232e:	69fa      	ldr	r2, [r7, #28]
 8002330:	601a      	str	r2, [r3, #0]
 8002332:	68fb      	ldr	r3, [r7, #12]
 8002334:	689a      	ldr	r2, [r3, #8]
 8002336:	68fb      	ldr	r3, [r7, #12]
 8002338:	699b      	ldr	r3, [r3, #24]
 800233a:	009b      	lsls	r3, r3, #2
 800233c:	4413      	add	r3, r2
 800233e:	69ba      	ldr	r2, [r7, #24]
 8002340:	601a      	str	r2, [r3, #0]
 8002342:	68fb      	ldr	r3, [r7, #12]
 8002344:	699b      	ldr	r3, [r3, #24]
 8002346:	1c5a      	adds	r2, r3, #1
 8002348:	68fb      	ldr	r3, [r7, #12]
 800234a:	619a      	str	r2, [r3, #24]
 800234c:	68f8      	ldr	r0, [r7, #12]
 800234e:	f002 f811 	bl	8004374 <json_object_get_wrapping_value>
 8002352:	4602      	mov	r2, r0
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	601a      	str	r2, [r3, #0]
 8002358:	2300      	movs	r3, #0
 800235a:	4618      	mov	r0, r3
 800235c:	3720      	adds	r7, #32
 800235e:	46bd      	mov	sp, r7
 8002360:	bd80      	pop	{r7, pc}

08002362 <json_object_getn_value>:
 8002362:	b580      	push	{r7, lr}
 8002364:	b08a      	sub	sp, #40	; 0x28
 8002366:	af02      	add	r7, sp, #8
 8002368:	60f8      	str	r0, [r7, #12]
 800236a:	60b9      	str	r1, [r7, #8]
 800236c:	607a      	str	r2, [r7, #4]
 800236e:	2300      	movs	r3, #0
 8002370:	61fb      	str	r3, [r7, #28]
 8002372:	2300      	movs	r3, #0
 8002374:	613b      	str	r3, [r7, #16]
 8002376:	2300      	movs	r3, #0
 8002378:	61bb      	str	r3, [r7, #24]
 800237a:	2300      	movs	r3, #0
 800237c:	617b      	str	r3, [r7, #20]
 800237e:	68fb      	ldr	r3, [r7, #12]
 8002380:	2b00      	cmp	r3, #0
 8002382:	d002      	beq.n	800238a <json_object_getn_value+0x28>
 8002384:	68bb      	ldr	r3, [r7, #8]
 8002386:	2b00      	cmp	r3, #0
 8002388:	d101      	bne.n	800238e <json_object_getn_value+0x2c>
 800238a:	2300      	movs	r3, #0
 800238c:	e022      	b.n	80023d4 <json_object_getn_value+0x72>
 800238e:	6879      	ldr	r1, [r7, #4]
 8002390:	68b8      	ldr	r0, [r7, #8]
 8002392:	f7ff fd0d 	bl	8001db0 <hash_string>
 8002396:	61f8      	str	r0, [r7, #28]
 8002398:	2300      	movs	r3, #0
 800239a:	613b      	str	r3, [r7, #16]
 800239c:	f107 0310 	add.w	r3, r7, #16
 80023a0:	9300      	str	r3, [sp, #0]
 80023a2:	69fb      	ldr	r3, [r7, #28]
 80023a4:	687a      	ldr	r2, [r7, #4]
 80023a6:	68b9      	ldr	r1, [r7, #8]
 80023a8:	68f8      	ldr	r0, [r7, #12]
 80023aa:	f7ff fee2 	bl	8002172 <json_object_get_cell_ix>
 80023ae:	61b8      	str	r0, [r7, #24]
 80023b0:	693b      	ldr	r3, [r7, #16]
 80023b2:	2b00      	cmp	r3, #0
 80023b4:	d101      	bne.n	80023ba <json_object_getn_value+0x58>
 80023b6:	2300      	movs	r3, #0
 80023b8:	e00c      	b.n	80023d4 <json_object_getn_value+0x72>
 80023ba:	68fb      	ldr	r3, [r7, #12]
 80023bc:	685a      	ldr	r2, [r3, #4]
 80023be:	69bb      	ldr	r3, [r7, #24]
 80023c0:	009b      	lsls	r3, r3, #2
 80023c2:	4413      	add	r3, r2
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	617b      	str	r3, [r7, #20]
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	691a      	ldr	r2, [r3, #16]
 80023cc:	697b      	ldr	r3, [r7, #20]
 80023ce:	009b      	lsls	r3, r3, #2
 80023d0:	4413      	add	r3, r2
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	4618      	mov	r0, r3
 80023d6:	3720      	adds	r7, #32
 80023d8:	46bd      	mov	sp, r7
 80023da:	bd80      	pop	{r7, pc}

080023dc <json_object_free>:
 80023dc:	b580      	push	{r7, lr}
 80023de:	b082      	sub	sp, #8
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	2201      	movs	r2, #1
 80023e6:	2101      	movs	r1, #1
 80023e8:	6878      	ldr	r0, [r7, #4]
 80023ea:	f7ff fdef 	bl	8001fcc <json_object_deinit>
 80023ee:	4b04      	ldr	r3, [pc, #16]	; (8002400 <json_object_free+0x24>)
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	6878      	ldr	r0, [r7, #4]
 80023f4:	4798      	blx	r3
 80023f6:	bf00      	nop
 80023f8:	3708      	adds	r7, #8
 80023fa:	46bd      	mov	sp, r7
 80023fc:	bd80      	pop	{r7, pc}
 80023fe:	bf00      	nop
 8002400:	2000000c 	.word	0x2000000c

08002404 <json_array_make>:
 8002404:	b580      	push	{r7, lr}
 8002406:	b084      	sub	sp, #16
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	4b0d      	ldr	r3, [pc, #52]	; (8002444 <json_array_make+0x40>)
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	2010      	movs	r0, #16
 8002412:	4798      	blx	r3
 8002414:	60f8      	str	r0, [r7, #12]
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	2b00      	cmp	r3, #0
 800241a:	d101      	bne.n	8002420 <json_array_make+0x1c>
 800241c:	2300      	movs	r3, #0
 800241e:	e00c      	b.n	800243a <json_array_make+0x36>
 8002420:	68fb      	ldr	r3, [r7, #12]
 8002422:	687a      	ldr	r2, [r7, #4]
 8002424:	601a      	str	r2, [r3, #0]
 8002426:	68fb      	ldr	r3, [r7, #12]
 8002428:	2200      	movs	r2, #0
 800242a:	605a      	str	r2, [r3, #4]
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	2200      	movs	r2, #0
 8002430:	60da      	str	r2, [r3, #12]
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	2200      	movs	r2, #0
 8002436:	609a      	str	r2, [r3, #8]
 8002438:	68fb      	ldr	r3, [r7, #12]
 800243a:	4618      	mov	r0, r3
 800243c:	3710      	adds	r7, #16
 800243e:	46bd      	mov	sp, r7
 8002440:	bd80      	pop	{r7, pc}
 8002442:	bf00      	nop
 8002444:	20000008 	.word	0x20000008

08002448 <json_array_add>:
 8002448:	b580      	push	{r7, lr}
 800244a:	b084      	sub	sp, #16
 800244c:	af00      	add	r7, sp, #0
 800244e:	6078      	str	r0, [r7, #4]
 8002450:	6039      	str	r1, [r7, #0]
 8002452:	687b      	ldr	r3, [r7, #4]
 8002454:	689a      	ldr	r2, [r3, #8]
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	68db      	ldr	r3, [r3, #12]
 800245a:	429a      	cmp	r2, r3
 800245c:	d310      	bcc.n	8002480 <json_array_add+0x38>
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	68db      	ldr	r3, [r3, #12]
 8002462:	005b      	lsls	r3, r3, #1
 8002464:	2b10      	cmp	r3, #16
 8002466:	bf38      	it	cc
 8002468:	2310      	movcc	r3, #16
 800246a:	60fb      	str	r3, [r7, #12]
 800246c:	68f9      	ldr	r1, [r7, #12]
 800246e:	6878      	ldr	r0, [r7, #4]
 8002470:	f000 f81e 	bl	80024b0 <json_array_resize>
 8002474:	4603      	mov	r3, r0
 8002476:	2b00      	cmp	r3, #0
 8002478:	d002      	beq.n	8002480 <json_array_add+0x38>
 800247a:	f04f 33ff 	mov.w	r3, #4294967295
 800247e:	e013      	b.n	80024a8 <json_array_add+0x60>
 8002480:	6878      	ldr	r0, [r7, #4]
 8002482:	f001 ffb4 	bl	80043ee <json_array_get_wrapping_value>
 8002486:	4602      	mov	r2, r0
 8002488:	683b      	ldr	r3, [r7, #0]
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	685a      	ldr	r2, [r3, #4]
 8002490:	687b      	ldr	r3, [r7, #4]
 8002492:	689b      	ldr	r3, [r3, #8]
 8002494:	009b      	lsls	r3, r3, #2
 8002496:	4413      	add	r3, r2
 8002498:	683a      	ldr	r2, [r7, #0]
 800249a:	601a      	str	r2, [r3, #0]
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	689b      	ldr	r3, [r3, #8]
 80024a0:	1c5a      	adds	r2, r3, #1
 80024a2:	687b      	ldr	r3, [r7, #4]
 80024a4:	609a      	str	r2, [r3, #8]
 80024a6:	2300      	movs	r3, #0
 80024a8:	4618      	mov	r0, r3
 80024aa:	3710      	adds	r7, #16
 80024ac:	46bd      	mov	sp, r7
 80024ae:	bd80      	pop	{r7, pc}

080024b0 <json_array_resize>:
 80024b0:	b580      	push	{r7, lr}
 80024b2:	b084      	sub	sp, #16
 80024b4:	af00      	add	r7, sp, #0
 80024b6:	6078      	str	r0, [r7, #4]
 80024b8:	6039      	str	r1, [r7, #0]
 80024ba:	2300      	movs	r3, #0
 80024bc:	60fb      	str	r3, [r7, #12]
 80024be:	683b      	ldr	r3, [r7, #0]
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d102      	bne.n	80024ca <json_array_resize+0x1a>
 80024c4:	f04f 33ff 	mov.w	r3, #4294967295
 80024c8:	e02a      	b.n	8002520 <json_array_resize+0x70>
 80024ca:	4b17      	ldr	r3, [pc, #92]	; (8002528 <json_array_resize+0x78>)
 80024cc:	681b      	ldr	r3, [r3, #0]
 80024ce:	683a      	ldr	r2, [r7, #0]
 80024d0:	0092      	lsls	r2, r2, #2
 80024d2:	4610      	mov	r0, r2
 80024d4:	4798      	blx	r3
 80024d6:	60f8      	str	r0, [r7, #12]
 80024d8:	68fb      	ldr	r3, [r7, #12]
 80024da:	2b00      	cmp	r3, #0
 80024dc:	d102      	bne.n	80024e4 <json_array_resize+0x34>
 80024de:	f04f 33ff 	mov.w	r3, #4294967295
 80024e2:	e01d      	b.n	8002520 <json_array_resize+0x70>
 80024e4:	687b      	ldr	r3, [r7, #4]
 80024e6:	685b      	ldr	r3, [r3, #4]
 80024e8:	2b00      	cmp	r3, #0
 80024ea:	d00c      	beq.n	8002506 <json_array_resize+0x56>
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	689b      	ldr	r3, [r3, #8]
 80024f0:	2b00      	cmp	r3, #0
 80024f2:	d008      	beq.n	8002506 <json_array_resize+0x56>
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	6859      	ldr	r1, [r3, #4]
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	689b      	ldr	r3, [r3, #8]
 80024fc:	009b      	lsls	r3, r3, #2
 80024fe:	461a      	mov	r2, r3
 8002500:	68f8      	ldr	r0, [r7, #12]
 8002502:	f009 fac9 	bl	800ba98 <memcpy>
 8002506:	4b09      	ldr	r3, [pc, #36]	; (800252c <json_array_resize+0x7c>)
 8002508:	681b      	ldr	r3, [r3, #0]
 800250a:	687a      	ldr	r2, [r7, #4]
 800250c:	6852      	ldr	r2, [r2, #4]
 800250e:	4610      	mov	r0, r2
 8002510:	4798      	blx	r3
 8002512:	687b      	ldr	r3, [r7, #4]
 8002514:	68fa      	ldr	r2, [r7, #12]
 8002516:	605a      	str	r2, [r3, #4]
 8002518:	687b      	ldr	r3, [r7, #4]
 800251a:	683a      	ldr	r2, [r7, #0]
 800251c:	60da      	str	r2, [r3, #12]
 800251e:	2300      	movs	r3, #0
 8002520:	4618      	mov	r0, r3
 8002522:	3710      	adds	r7, #16
 8002524:	46bd      	mov	sp, r7
 8002526:	bd80      	pop	{r7, pc}
 8002528:	20000008 	.word	0x20000008
 800252c:	2000000c 	.word	0x2000000c

08002530 <json_array_free>:
 8002530:	b580      	push	{r7, lr}
 8002532:	b084      	sub	sp, #16
 8002534:	af00      	add	r7, sp, #0
 8002536:	6078      	str	r0, [r7, #4]
 8002538:	2300      	movs	r3, #0
 800253a:	60fb      	str	r3, [r7, #12]
 800253c:	e00b      	b.n	8002556 <json_array_free+0x26>
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	685a      	ldr	r2, [r3, #4]
 8002542:	68fb      	ldr	r3, [r7, #12]
 8002544:	009b      	lsls	r3, r3, #2
 8002546:	4413      	add	r3, r2
 8002548:	681b      	ldr	r3, [r3, #0]
 800254a:	4618      	mov	r0, r3
 800254c:	f001 fffc 	bl	8004548 <json_value_free>
 8002550:	68fb      	ldr	r3, [r7, #12]
 8002552:	3301      	adds	r3, #1
 8002554:	60fb      	str	r3, [r7, #12]
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	689b      	ldr	r3, [r3, #8]
 800255a:	68fa      	ldr	r2, [r7, #12]
 800255c:	429a      	cmp	r2, r3
 800255e:	d3ee      	bcc.n	800253e <json_array_free+0xe>
 8002560:	4b06      	ldr	r3, [pc, #24]	; (800257c <json_array_free+0x4c>)
 8002562:	681b      	ldr	r3, [r3, #0]
 8002564:	687a      	ldr	r2, [r7, #4]
 8002566:	6852      	ldr	r2, [r2, #4]
 8002568:	4610      	mov	r0, r2
 800256a:	4798      	blx	r3
 800256c:	4b03      	ldr	r3, [pc, #12]	; (800257c <json_array_free+0x4c>)
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	6878      	ldr	r0, [r7, #4]
 8002572:	4798      	blx	r3
 8002574:	bf00      	nop
 8002576:	3710      	adds	r7, #16
 8002578:	46bd      	mov	sp, r7
 800257a:	bd80      	pop	{r7, pc}
 800257c:	2000000c 	.word	0x2000000c

08002580 <json_value_init_string_no_copy>:
 8002580:	b580      	push	{r7, lr}
 8002582:	b084      	sub	sp, #16
 8002584:	af00      	add	r7, sp, #0
 8002586:	6078      	str	r0, [r7, #4]
 8002588:	6039      	str	r1, [r7, #0]
 800258a:	4b0d      	ldr	r3, [pc, #52]	; (80025c0 <json_value_init_string_no_copy+0x40>)
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	2010      	movs	r0, #16
 8002590:	4798      	blx	r3
 8002592:	60f8      	str	r0, [r7, #12]
 8002594:	68fb      	ldr	r3, [r7, #12]
 8002596:	2b00      	cmp	r3, #0
 8002598:	d101      	bne.n	800259e <json_value_init_string_no_copy+0x1e>
 800259a:	2300      	movs	r3, #0
 800259c:	e00c      	b.n	80025b8 <json_value_init_string_no_copy+0x38>
 800259e:	68fb      	ldr	r3, [r7, #12]
 80025a0:	2200      	movs	r2, #0
 80025a2:	601a      	str	r2, [r3, #0]
 80025a4:	68fb      	ldr	r3, [r7, #12]
 80025a6:	2202      	movs	r2, #2
 80025a8:	605a      	str	r2, [r3, #4]
 80025aa:	68fb      	ldr	r3, [r7, #12]
 80025ac:	687a      	ldr	r2, [r7, #4]
 80025ae:	609a      	str	r2, [r3, #8]
 80025b0:	68fb      	ldr	r3, [r7, #12]
 80025b2:	683a      	ldr	r2, [r7, #0]
 80025b4:	60da      	str	r2, [r3, #12]
 80025b6:	68fb      	ldr	r3, [r7, #12]
 80025b8:	4618      	mov	r0, r3
 80025ba:	3710      	adds	r7, #16
 80025bc:	46bd      	mov	sp, r7
 80025be:	bd80      	pop	{r7, pc}
 80025c0:	20000008 	.word	0x20000008

080025c4 <skip_quotes>:
 80025c4:	b480      	push	{r7}
 80025c6:	b083      	sub	sp, #12
 80025c8:	af00      	add	r7, sp, #0
 80025ca:	6078      	str	r0, [r7, #4]
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	781b      	ldrb	r3, [r3, #0]
 80025d2:	2b22      	cmp	r3, #34	; 0x22
 80025d4:	d002      	beq.n	80025dc <skip_quotes+0x18>
 80025d6:	f04f 33ff 	mov.w	r3, #4294967295
 80025da:	e02f      	b.n	800263c <skip_quotes+0x78>
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	681b      	ldr	r3, [r3, #0]
 80025e0:	1c5a      	adds	r2, r3, #1
 80025e2:	687b      	ldr	r3, [r7, #4]
 80025e4:	601a      	str	r2, [r3, #0]
 80025e6:	e01e      	b.n	8002626 <skip_quotes+0x62>
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	681b      	ldr	r3, [r3, #0]
 80025ec:	781b      	ldrb	r3, [r3, #0]
 80025ee:	2b00      	cmp	r3, #0
 80025f0:	d102      	bne.n	80025f8 <skip_quotes+0x34>
 80025f2:	f04f 33ff 	mov.w	r3, #4294967295
 80025f6:	e021      	b.n	800263c <skip_quotes+0x78>
 80025f8:	687b      	ldr	r3, [r7, #4]
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	781b      	ldrb	r3, [r3, #0]
 80025fe:	2b5c      	cmp	r3, #92	; 0x5c
 8002600:	d10c      	bne.n	800261c <skip_quotes+0x58>
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	681b      	ldr	r3, [r3, #0]
 8002606:	1c5a      	adds	r2, r3, #1
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	601a      	str	r2, [r3, #0]
 800260c:	687b      	ldr	r3, [r7, #4]
 800260e:	681b      	ldr	r3, [r3, #0]
 8002610:	781b      	ldrb	r3, [r3, #0]
 8002612:	2b00      	cmp	r3, #0
 8002614:	d102      	bne.n	800261c <skip_quotes+0x58>
 8002616:	f04f 33ff 	mov.w	r3, #4294967295
 800261a:	e00f      	b.n	800263c <skip_quotes+0x78>
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	1c5a      	adds	r2, r3, #1
 8002622:	687b      	ldr	r3, [r7, #4]
 8002624:	601a      	str	r2, [r3, #0]
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	681b      	ldr	r3, [r3, #0]
 800262a:	781b      	ldrb	r3, [r3, #0]
 800262c:	2b22      	cmp	r3, #34	; 0x22
 800262e:	d1db      	bne.n	80025e8 <skip_quotes+0x24>
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	1c5a      	adds	r2, r3, #1
 8002636:	687b      	ldr	r3, [r7, #4]
 8002638:	601a      	str	r2, [r3, #0]
 800263a:	2300      	movs	r3, #0
 800263c:	4618      	mov	r0, r3
 800263e:	370c      	adds	r7, #12
 8002640:	46bd      	mov	sp, r7
 8002642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002646:	4770      	bx	lr

08002648 <parse_utf16>:
 8002648:	b580      	push	{r7, lr}
 800264a:	b088      	sub	sp, #32
 800264c:	af00      	add	r7, sp, #0
 800264e:	6078      	str	r0, [r7, #4]
 8002650:	6039      	str	r1, [r7, #0]
 8002652:	683b      	ldr	r3, [r7, #0]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	61fb      	str	r3, [r7, #28]
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	681b      	ldr	r3, [r3, #0]
 800265c:	61bb      	str	r3, [r7, #24]
 800265e:	f04f 33ff 	mov.w	r3, #4294967295
 8002662:	617b      	str	r3, [r7, #20]
 8002664:	69bb      	ldr	r3, [r7, #24]
 8002666:	3301      	adds	r3, #1
 8002668:	61bb      	str	r3, [r7, #24]
 800266a:	f107 030c 	add.w	r3, r7, #12
 800266e:	4619      	mov	r1, r3
 8002670:	69b8      	ldr	r0, [r7, #24]
 8002672:	f7ff fb02 	bl	8001c7a <parse_utf16_hex>
 8002676:	6178      	str	r0, [r7, #20]
 8002678:	697b      	ldr	r3, [r7, #20]
 800267a:	2b00      	cmp	r3, #0
 800267c:	d002      	beq.n	8002684 <parse_utf16+0x3c>
 800267e:	f04f 33ff 	mov.w	r3, #4294967295
 8002682:	e0ce      	b.n	8002822 <parse_utf16+0x1da>
 8002684:	68fb      	ldr	r3, [r7, #12]
 8002686:	2b7f      	cmp	r3, #127	; 0x7f
 8002688:	d804      	bhi.n	8002694 <parse_utf16+0x4c>
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	b2da      	uxtb	r2, r3
 800268e:	69fb      	ldr	r3, [r7, #28]
 8002690:	701a      	strb	r2, [r3, #0]
 8002692:	e0bc      	b.n	800280e <parse_utf16+0x1c6>
 8002694:	68fb      	ldr	r3, [r7, #12]
 8002696:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800269a:	d219      	bcs.n	80026d0 <parse_utf16+0x88>
 800269c:	68fb      	ldr	r3, [r7, #12]
 800269e:	099b      	lsrs	r3, r3, #6
 80026a0:	b2db      	uxtb	r3, r3
 80026a2:	f003 031f 	and.w	r3, r3, #31
 80026a6:	b2db      	uxtb	r3, r3
 80026a8:	f063 033f 	orn	r3, r3, #63	; 0x3f
 80026ac:	b2da      	uxtb	r2, r3
 80026ae:	69fb      	ldr	r3, [r7, #28]
 80026b0:	701a      	strb	r2, [r3, #0]
 80026b2:	68fb      	ldr	r3, [r7, #12]
 80026b4:	b2db      	uxtb	r3, r3
 80026b6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80026ba:	b2da      	uxtb	r2, r3
 80026bc:	69fb      	ldr	r3, [r7, #28]
 80026be:	3301      	adds	r3, #1
 80026c0:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80026c4:	b2d2      	uxtb	r2, r2
 80026c6:	701a      	strb	r2, [r3, #0]
 80026c8:	69fb      	ldr	r3, [r7, #28]
 80026ca:	3301      	adds	r3, #1
 80026cc:	61fb      	str	r3, [r7, #28]
 80026ce:	e09e      	b.n	800280e <parse_utf16+0x1c6>
 80026d0:	68fb      	ldr	r3, [r7, #12]
 80026d2:	f5b3 4f58 	cmp.w	r3, #55296	; 0xd800
 80026d6:	d303      	bcc.n	80026e0 <parse_utf16+0x98>
 80026d8:	68fb      	ldr	r3, [r7, #12]
 80026da:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 80026de:	d325      	bcc.n	800272c <parse_utf16+0xe4>
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	0b1b      	lsrs	r3, r3, #12
 80026e4:	b2db      	uxtb	r3, r3
 80026e6:	f003 030f 	and.w	r3, r3, #15
 80026ea:	b2db      	uxtb	r3, r3
 80026ec:	f063 031f 	orn	r3, r3, #31
 80026f0:	b2da      	uxtb	r2, r3
 80026f2:	69fb      	ldr	r3, [r7, #28]
 80026f4:	701a      	strb	r2, [r3, #0]
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	099b      	lsrs	r3, r3, #6
 80026fa:	b2db      	uxtb	r3, r3
 80026fc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002700:	b2da      	uxtb	r2, r3
 8002702:	69fb      	ldr	r3, [r7, #28]
 8002704:	3301      	adds	r3, #1
 8002706:	f062 027f 	orn	r2, r2, #127	; 0x7f
 800270a:	b2d2      	uxtb	r2, r2
 800270c:	701a      	strb	r2, [r3, #0]
 800270e:	68fb      	ldr	r3, [r7, #12]
 8002710:	b2db      	uxtb	r3, r3
 8002712:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002716:	b2da      	uxtb	r2, r3
 8002718:	69fb      	ldr	r3, [r7, #28]
 800271a:	3302      	adds	r3, #2
 800271c:	f062 027f 	orn	r2, r2, #127	; 0x7f
 8002720:	b2d2      	uxtb	r2, r2
 8002722:	701a      	strb	r2, [r3, #0]
 8002724:	69fb      	ldr	r3, [r7, #28]
 8002726:	3302      	adds	r3, #2
 8002728:	61fb      	str	r3, [r7, #28]
 800272a:	e070      	b.n	800280e <parse_utf16+0x1c6>
 800272c:	68fb      	ldr	r3, [r7, #12]
 800272e:	f5b3 4f58 	cmp.w	r3, #55296	; 0xd800
 8002732:	d369      	bcc.n	8002808 <parse_utf16+0x1c0>
 8002734:	68fb      	ldr	r3, [r7, #12]
 8002736:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 800273a:	d265      	bcs.n	8002808 <parse_utf16+0x1c0>
 800273c:	68fb      	ldr	r3, [r7, #12]
 800273e:	613b      	str	r3, [r7, #16]
 8002740:	69bb      	ldr	r3, [r7, #24]
 8002742:	3304      	adds	r3, #4
 8002744:	61bb      	str	r3, [r7, #24]
 8002746:	69bb      	ldr	r3, [r7, #24]
 8002748:	1c5a      	adds	r2, r3, #1
 800274a:	61ba      	str	r2, [r7, #24]
 800274c:	781b      	ldrb	r3, [r3, #0]
 800274e:	2b5c      	cmp	r3, #92	; 0x5c
 8002750:	d105      	bne.n	800275e <parse_utf16+0x116>
 8002752:	69bb      	ldr	r3, [r7, #24]
 8002754:	1c5a      	adds	r2, r3, #1
 8002756:	61ba      	str	r2, [r7, #24]
 8002758:	781b      	ldrb	r3, [r3, #0]
 800275a:	2b75      	cmp	r3, #117	; 0x75
 800275c:	d002      	beq.n	8002764 <parse_utf16+0x11c>
 800275e:	f04f 33ff 	mov.w	r3, #4294967295
 8002762:	e05e      	b.n	8002822 <parse_utf16+0x1da>
 8002764:	f107 0308 	add.w	r3, r7, #8
 8002768:	4619      	mov	r1, r3
 800276a:	69b8      	ldr	r0, [r7, #24]
 800276c:	f7ff fa85 	bl	8001c7a <parse_utf16_hex>
 8002770:	6178      	str	r0, [r7, #20]
 8002772:	697b      	ldr	r3, [r7, #20]
 8002774:	2b00      	cmp	r3, #0
 8002776:	d107      	bne.n	8002788 <parse_utf16+0x140>
 8002778:	68bb      	ldr	r3, [r7, #8]
 800277a:	f5b3 4f5c 	cmp.w	r3, #56320	; 0xdc00
 800277e:	d303      	bcc.n	8002788 <parse_utf16+0x140>
 8002780:	68bb      	ldr	r3, [r7, #8]
 8002782:	f5b3 4f60 	cmp.w	r3, #57344	; 0xe000
 8002786:	d302      	bcc.n	800278e <parse_utf16+0x146>
 8002788:	f04f 33ff 	mov.w	r3, #4294967295
 800278c:	e049      	b.n	8002822 <parse_utf16+0x1da>
 800278e:	693b      	ldr	r3, [r7, #16]
 8002790:	029a      	lsls	r2, r3, #10
 8002792:	4b26      	ldr	r3, [pc, #152]	; (800282c <parse_utf16+0x1e4>)
 8002794:	4013      	ands	r3, r2
 8002796:	68ba      	ldr	r2, [r7, #8]
 8002798:	f3c2 0209 	ubfx	r2, r2, #0, #10
 800279c:	4313      	orrs	r3, r2
 800279e:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 80027a2:	60fb      	str	r3, [r7, #12]
 80027a4:	68fb      	ldr	r3, [r7, #12]
 80027a6:	0c9b      	lsrs	r3, r3, #18
 80027a8:	b2db      	uxtb	r3, r3
 80027aa:	f003 0307 	and.w	r3, r3, #7
 80027ae:	b2db      	uxtb	r3, r3
 80027b0:	f063 030f 	orn	r3, r3, #15
 80027b4:	b2da      	uxtb	r2, r3
 80027b6:	69fb      	ldr	r3, [r7, #28]
 80027b8:	701a      	strb	r2, [r3, #0]
 80027ba:	68fb      	ldr	r3, [r7, #12]
 80027bc:	0b1b      	lsrs	r3, r3, #12
 80027be:	b2db      	uxtb	r3, r3
 80027c0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80027c4:	b2da      	uxtb	r2, r3
 80027c6:	69fb      	ldr	r3, [r7, #28]
 80027c8:	3301      	adds	r3, #1
 80027ca:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80027ce:	b2d2      	uxtb	r2, r2
 80027d0:	701a      	strb	r2, [r3, #0]
 80027d2:	68fb      	ldr	r3, [r7, #12]
 80027d4:	099b      	lsrs	r3, r3, #6
 80027d6:	b2db      	uxtb	r3, r3
 80027d8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80027dc:	b2da      	uxtb	r2, r3
 80027de:	69fb      	ldr	r3, [r7, #28]
 80027e0:	3302      	adds	r3, #2
 80027e2:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80027e6:	b2d2      	uxtb	r2, r2
 80027e8:	701a      	strb	r2, [r3, #0]
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	b2db      	uxtb	r3, r3
 80027ee:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80027f2:	b2da      	uxtb	r2, r3
 80027f4:	69fb      	ldr	r3, [r7, #28]
 80027f6:	3303      	adds	r3, #3
 80027f8:	f062 027f 	orn	r2, r2, #127	; 0x7f
 80027fc:	b2d2      	uxtb	r2, r2
 80027fe:	701a      	strb	r2, [r3, #0]
 8002800:	69fb      	ldr	r3, [r7, #28]
 8002802:	3303      	adds	r3, #3
 8002804:	61fb      	str	r3, [r7, #28]
 8002806:	e002      	b.n	800280e <parse_utf16+0x1c6>
 8002808:	f04f 33ff 	mov.w	r3, #4294967295
 800280c:	e009      	b.n	8002822 <parse_utf16+0x1da>
 800280e:	69bb      	ldr	r3, [r7, #24]
 8002810:	3303      	adds	r3, #3
 8002812:	61bb      	str	r3, [r7, #24]
 8002814:	683b      	ldr	r3, [r7, #0]
 8002816:	69fa      	ldr	r2, [r7, #28]
 8002818:	601a      	str	r2, [r3, #0]
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	69ba      	ldr	r2, [r7, #24]
 800281e:	601a      	str	r2, [r3, #0]
 8002820:	2300      	movs	r3, #0
 8002822:	4618      	mov	r0, r3
 8002824:	3720      	adds	r7, #32
 8002826:	46bd      	mov	sp, r7
 8002828:	bd80      	pop	{r7, pc}
 800282a:	bf00      	nop
 800282c:	000ffc00 	.word	0x000ffc00

08002830 <process_string>:
 8002830:	b580      	push	{r7, lr}
 8002832:	b08a      	sub	sp, #40	; 0x28
 8002834:	af00      	add	r7, sp, #0
 8002836:	60f8      	str	r0, [r7, #12]
 8002838:	60b9      	str	r1, [r7, #8]
 800283a:	607a      	str	r2, [r7, #4]
 800283c:	68fb      	ldr	r3, [r7, #12]
 800283e:	617b      	str	r3, [r7, #20]
 8002840:	68bb      	ldr	r3, [r7, #8]
 8002842:	3301      	adds	r3, #1
 8002844:	627b      	str	r3, [r7, #36]	; 0x24
 8002846:	2300      	movs	r3, #0
 8002848:	623b      	str	r3, [r7, #32]
 800284a:	2300      	movs	r3, #0
 800284c:	61fb      	str	r3, [r7, #28]
 800284e:	2300      	movs	r3, #0
 8002850:	613b      	str	r3, [r7, #16]
 8002852:	2300      	movs	r3, #0
 8002854:	61bb      	str	r3, [r7, #24]
 8002856:	4b69      	ldr	r3, [pc, #420]	; (80029fc <process_string+0x1cc>)
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800285c:	4798      	blx	r3
 800285e:	61f8      	str	r0, [r7, #28]
 8002860:	69fb      	ldr	r3, [r7, #28]
 8002862:	2b00      	cmp	r3, #0
 8002864:	f000 80b9 	beq.w	80029da <process_string+0x1aa>
 8002868:	69fb      	ldr	r3, [r7, #28]
 800286a:	613b      	str	r3, [r7, #16]
 800286c:	e08a      	b.n	8002984 <process_string+0x154>
 800286e:	697b      	ldr	r3, [r7, #20]
 8002870:	781b      	ldrb	r3, [r3, #0]
 8002872:	2b5c      	cmp	r3, #92	; 0x5c
 8002874:	d176      	bne.n	8002964 <process_string+0x134>
 8002876:	697b      	ldr	r3, [r7, #20]
 8002878:	3301      	adds	r3, #1
 800287a:	617b      	str	r3, [r7, #20]
 800287c:	697b      	ldr	r3, [r7, #20]
 800287e:	781b      	ldrb	r3, [r3, #0]
 8002880:	2b75      	cmp	r3, #117	; 0x75
 8002882:	f300 80ac 	bgt.w	80029de <process_string+0x1ae>
 8002886:	2b5c      	cmp	r3, #92	; 0x5c
 8002888:	da04      	bge.n	8002894 <process_string+0x64>
 800288a:	2b22      	cmp	r3, #34	; 0x22
 800288c:	d03e      	beq.n	800290c <process_string+0xdc>
 800288e:	2b2f      	cmp	r3, #47	; 0x2f
 8002890:	d044      	beq.n	800291c <process_string+0xec>
 8002892:	e0a4      	b.n	80029de <process_string+0x1ae>
 8002894:	3b5c      	subs	r3, #92	; 0x5c
 8002896:	2b19      	cmp	r3, #25
 8002898:	f200 80a1 	bhi.w	80029de <process_string+0x1ae>
 800289c:	a201      	add	r2, pc, #4	; (adr r2, 80028a4 <process_string+0x74>)
 800289e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028a2:	bf00      	nop
 80028a4:	08002915 	.word	0x08002915
 80028a8:	080029df 	.word	0x080029df
 80028ac:	080029df 	.word	0x080029df
 80028b0:	080029df 	.word	0x080029df
 80028b4:	080029df 	.word	0x080029df
 80028b8:	080029df 	.word	0x080029df
 80028bc:	08002925 	.word	0x08002925
 80028c0:	080029df 	.word	0x080029df
 80028c4:	080029df 	.word	0x080029df
 80028c8:	080029df 	.word	0x080029df
 80028cc:	0800292d 	.word	0x0800292d
 80028d0:	080029df 	.word	0x080029df
 80028d4:	080029df 	.word	0x080029df
 80028d8:	080029df 	.word	0x080029df
 80028dc:	080029df 	.word	0x080029df
 80028e0:	080029df 	.word	0x080029df
 80028e4:	080029df 	.word	0x080029df
 80028e8:	080029df 	.word	0x080029df
 80028ec:	08002935 	.word	0x08002935
 80028f0:	080029df 	.word	0x080029df
 80028f4:	080029df 	.word	0x080029df
 80028f8:	080029df 	.word	0x080029df
 80028fc:	0800293d 	.word	0x0800293d
 8002900:	080029df 	.word	0x080029df
 8002904:	08002945 	.word	0x08002945
 8002908:	0800294d 	.word	0x0800294d
 800290c:	693b      	ldr	r3, [r7, #16]
 800290e:	2222      	movs	r2, #34	; 0x22
 8002910:	701a      	strb	r2, [r3, #0]
 8002912:	e031      	b.n	8002978 <process_string+0x148>
 8002914:	693b      	ldr	r3, [r7, #16]
 8002916:	225c      	movs	r2, #92	; 0x5c
 8002918:	701a      	strb	r2, [r3, #0]
 800291a:	e02d      	b.n	8002978 <process_string+0x148>
 800291c:	693b      	ldr	r3, [r7, #16]
 800291e:	222f      	movs	r2, #47	; 0x2f
 8002920:	701a      	strb	r2, [r3, #0]
 8002922:	e029      	b.n	8002978 <process_string+0x148>
 8002924:	693b      	ldr	r3, [r7, #16]
 8002926:	2208      	movs	r2, #8
 8002928:	701a      	strb	r2, [r3, #0]
 800292a:	e025      	b.n	8002978 <process_string+0x148>
 800292c:	693b      	ldr	r3, [r7, #16]
 800292e:	220c      	movs	r2, #12
 8002930:	701a      	strb	r2, [r3, #0]
 8002932:	e021      	b.n	8002978 <process_string+0x148>
 8002934:	693b      	ldr	r3, [r7, #16]
 8002936:	220a      	movs	r2, #10
 8002938:	701a      	strb	r2, [r3, #0]
 800293a:	e01d      	b.n	8002978 <process_string+0x148>
 800293c:	693b      	ldr	r3, [r7, #16]
 800293e:	220d      	movs	r2, #13
 8002940:	701a      	strb	r2, [r3, #0]
 8002942:	e019      	b.n	8002978 <process_string+0x148>
 8002944:	693b      	ldr	r3, [r7, #16]
 8002946:	2209      	movs	r2, #9
 8002948:	701a      	strb	r2, [r3, #0]
 800294a:	e015      	b.n	8002978 <process_string+0x148>
 800294c:	f107 0210 	add.w	r2, r7, #16
 8002950:	f107 0314 	add.w	r3, r7, #20
 8002954:	4611      	mov	r1, r2
 8002956:	4618      	mov	r0, r3
 8002958:	f7ff fe76 	bl	8002648 <parse_utf16>
 800295c:	4603      	mov	r3, r0
 800295e:	2b00      	cmp	r3, #0
 8002960:	d009      	beq.n	8002976 <process_string+0x146>
 8002962:	e041      	b.n	80029e8 <process_string+0x1b8>
 8002964:	697b      	ldr	r3, [r7, #20]
 8002966:	781b      	ldrb	r3, [r3, #0]
 8002968:	2b1f      	cmp	r3, #31
 800296a:	d93a      	bls.n	80029e2 <process_string+0x1b2>
 800296c:	697a      	ldr	r2, [r7, #20]
 800296e:	693b      	ldr	r3, [r7, #16]
 8002970:	7812      	ldrb	r2, [r2, #0]
 8002972:	701a      	strb	r2, [r3, #0]
 8002974:	e000      	b.n	8002978 <process_string+0x148>
 8002976:	bf00      	nop
 8002978:	693b      	ldr	r3, [r7, #16]
 800297a:	3301      	adds	r3, #1
 800297c:	613b      	str	r3, [r7, #16]
 800297e:	697b      	ldr	r3, [r7, #20]
 8002980:	3301      	adds	r3, #1
 8002982:	617b      	str	r3, [r7, #20]
 8002984:	697b      	ldr	r3, [r7, #20]
 8002986:	781b      	ldrb	r3, [r3, #0]
 8002988:	2b00      	cmp	r3, #0
 800298a:	d007      	beq.n	800299c <process_string+0x16c>
 800298c:	697a      	ldr	r2, [r7, #20]
 800298e:	68fb      	ldr	r3, [r7, #12]
 8002990:	1ad3      	subs	r3, r2, r3
 8002992:	461a      	mov	r2, r3
 8002994:	68bb      	ldr	r3, [r7, #8]
 8002996:	4293      	cmp	r3, r2
 8002998:	f63f af69 	bhi.w	800286e <process_string+0x3e>
 800299c:	693b      	ldr	r3, [r7, #16]
 800299e:	2200      	movs	r2, #0
 80029a0:	701a      	strb	r2, [r3, #0]
 80029a2:	693a      	ldr	r2, [r7, #16]
 80029a4:	69fb      	ldr	r3, [r7, #28]
 80029a6:	1ad3      	subs	r3, r2, r3
 80029a8:	3301      	adds	r3, #1
 80029aa:	623b      	str	r3, [r7, #32]
 80029ac:	4b13      	ldr	r3, [pc, #76]	; (80029fc <process_string+0x1cc>)
 80029ae:	681b      	ldr	r3, [r3, #0]
 80029b0:	6a38      	ldr	r0, [r7, #32]
 80029b2:	4798      	blx	r3
 80029b4:	61b8      	str	r0, [r7, #24]
 80029b6:	69bb      	ldr	r3, [r7, #24]
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	d014      	beq.n	80029e6 <process_string+0x1b6>
 80029bc:	6a3a      	ldr	r2, [r7, #32]
 80029be:	69f9      	ldr	r1, [r7, #28]
 80029c0:	69b8      	ldr	r0, [r7, #24]
 80029c2:	f009 f869 	bl	800ba98 <memcpy>
 80029c6:	6a3b      	ldr	r3, [r7, #32]
 80029c8:	1e5a      	subs	r2, r3, #1
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	601a      	str	r2, [r3, #0]
 80029ce:	4b0c      	ldr	r3, [pc, #48]	; (8002a00 <process_string+0x1d0>)
 80029d0:	681b      	ldr	r3, [r3, #0]
 80029d2:	69f8      	ldr	r0, [r7, #28]
 80029d4:	4798      	blx	r3
 80029d6:	69bb      	ldr	r3, [r7, #24]
 80029d8:	e00b      	b.n	80029f2 <process_string+0x1c2>
 80029da:	bf00      	nop
 80029dc:	e004      	b.n	80029e8 <process_string+0x1b8>
 80029de:	bf00      	nop
 80029e0:	e002      	b.n	80029e8 <process_string+0x1b8>
 80029e2:	bf00      	nop
 80029e4:	e000      	b.n	80029e8 <process_string+0x1b8>
 80029e6:	bf00      	nop
 80029e8:	4b05      	ldr	r3, [pc, #20]	; (8002a00 <process_string+0x1d0>)
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	69f8      	ldr	r0, [r7, #28]
 80029ee:	4798      	blx	r3
 80029f0:	2300      	movs	r3, #0
 80029f2:	4618      	mov	r0, r3
 80029f4:	3728      	adds	r7, #40	; 0x28
 80029f6:	46bd      	mov	sp, r7
 80029f8:	bd80      	pop	{r7, pc}
 80029fa:	bf00      	nop
 80029fc:	20000008 	.word	0x20000008
 8002a00:	2000000c 	.word	0x2000000c

08002a04 <get_quoted_string>:
 8002a04:	b580      	push	{r7, lr}
 8002a06:	b086      	sub	sp, #24
 8002a08:	af00      	add	r7, sp, #0
 8002a0a:	6078      	str	r0, [r7, #4]
 8002a0c:	6039      	str	r1, [r7, #0]
 8002a0e:	687b      	ldr	r3, [r7, #4]
 8002a10:	681b      	ldr	r3, [r3, #0]
 8002a12:	617b      	str	r3, [r7, #20]
 8002a14:	2300      	movs	r3, #0
 8002a16:	613b      	str	r3, [r7, #16]
 8002a18:	6878      	ldr	r0, [r7, #4]
 8002a1a:	f7ff fdd3 	bl	80025c4 <skip_quotes>
 8002a1e:	60f8      	str	r0, [r7, #12]
 8002a20:	68fb      	ldr	r3, [r7, #12]
 8002a22:	2b00      	cmp	r3, #0
 8002a24:	d001      	beq.n	8002a2a <get_quoted_string+0x26>
 8002a26:	2300      	movs	r3, #0
 8002a28:	e00d      	b.n	8002a46 <get_quoted_string+0x42>
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	681a      	ldr	r2, [r3, #0]
 8002a2e:	697b      	ldr	r3, [r7, #20]
 8002a30:	1ad3      	subs	r3, r2, r3
 8002a32:	3b02      	subs	r3, #2
 8002a34:	613b      	str	r3, [r7, #16]
 8002a36:	697b      	ldr	r3, [r7, #20]
 8002a38:	3301      	adds	r3, #1
 8002a3a:	683a      	ldr	r2, [r7, #0]
 8002a3c:	6939      	ldr	r1, [r7, #16]
 8002a3e:	4618      	mov	r0, r3
 8002a40:	f7ff fef6 	bl	8002830 <process_string>
 8002a44:	4603      	mov	r3, r0
 8002a46:	4618      	mov	r0, r3
 8002a48:	3718      	adds	r7, #24
 8002a4a:	46bd      	mov	sp, r7
 8002a4c:	bd80      	pop	{r7, pc}
	...

08002a50 <parse_value>:
 8002a50:	b580      	push	{r7, lr}
 8002a52:	b082      	sub	sp, #8
 8002a54:	af00      	add	r7, sp, #0
 8002a56:	6078      	str	r0, [r7, #4]
 8002a58:	6039      	str	r1, [r7, #0]
 8002a5a:	683b      	ldr	r3, [r7, #0]
 8002a5c:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8002a60:	d906      	bls.n	8002a70 <parse_value+0x20>
 8002a62:	2300      	movs	r3, #0
 8002a64:	e08d      	b.n	8002b82 <parse_value+0x132>
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	1c5a      	adds	r2, r3, #1
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	601a      	str	r2, [r3, #0]
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	781b      	ldrb	r3, [r3, #0]
 8002a76:	3301      	adds	r3, #1
 8002a78:	4a44      	ldr	r2, [pc, #272]	; (8002b8c <parse_value+0x13c>)
 8002a7a:	4413      	add	r3, r2
 8002a7c:	781b      	ldrb	r3, [r3, #0]
 8002a7e:	f003 0308 	and.w	r3, r3, #8
 8002a82:	2b00      	cmp	r3, #0
 8002a84:	d1ef      	bne.n	8002a66 <parse_value+0x16>
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	781b      	ldrb	r3, [r3, #0]
 8002a8c:	2b7b      	cmp	r3, #123	; 0x7b
 8002a8e:	dc77      	bgt.n	8002b80 <parse_value+0x130>
 8002a90:	2b5b      	cmp	r3, #91	; 0x5b
 8002a92:	da08      	bge.n	8002aa6 <parse_value+0x56>
 8002a94:	2b39      	cmp	r3, #57	; 0x39
 8002a96:	dc73      	bgt.n	8002b80 <parse_value+0x130>
 8002a98:	2b30      	cmp	r3, #48	; 0x30
 8002a9a:	da67      	bge.n	8002b6c <parse_value+0x11c>
 8002a9c:	2b22      	cmp	r3, #34	; 0x22
 8002a9e:	d05b      	beq.n	8002b58 <parse_value+0x108>
 8002aa0:	2b2d      	cmp	r3, #45	; 0x2d
 8002aa2:	d063      	beq.n	8002b6c <parse_value+0x11c>
 8002aa4:	e06c      	b.n	8002b80 <parse_value+0x130>
 8002aa6:	3b5b      	subs	r3, #91	; 0x5b
 8002aa8:	2b20      	cmp	r3, #32
 8002aaa:	d869      	bhi.n	8002b80 <parse_value+0x130>
 8002aac:	a201      	add	r2, pc, #4	; (adr r2, 8002ab4 <parse_value+0x64>)
 8002aae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002ab2:	bf00      	nop
 8002ab4:	08002b49 	.word	0x08002b49
 8002ab8:	08002b81 	.word	0x08002b81
 8002abc:	08002b81 	.word	0x08002b81
 8002ac0:	08002b81 	.word	0x08002b81
 8002ac4:	08002b81 	.word	0x08002b81
 8002ac8:	08002b81 	.word	0x08002b81
 8002acc:	08002b81 	.word	0x08002b81
 8002ad0:	08002b81 	.word	0x08002b81
 8002ad4:	08002b81 	.word	0x08002b81
 8002ad8:	08002b81 	.word	0x08002b81
 8002adc:	08002b81 	.word	0x08002b81
 8002ae0:	08002b63 	.word	0x08002b63
 8002ae4:	08002b81 	.word	0x08002b81
 8002ae8:	08002b81 	.word	0x08002b81
 8002aec:	08002b81 	.word	0x08002b81
 8002af0:	08002b81 	.word	0x08002b81
 8002af4:	08002b81 	.word	0x08002b81
 8002af8:	08002b81 	.word	0x08002b81
 8002afc:	08002b81 	.word	0x08002b81
 8002b00:	08002b77 	.word	0x08002b77
 8002b04:	08002b81 	.word	0x08002b81
 8002b08:	08002b81 	.word	0x08002b81
 8002b0c:	08002b81 	.word	0x08002b81
 8002b10:	08002b81 	.word	0x08002b81
 8002b14:	08002b81 	.word	0x08002b81
 8002b18:	08002b63 	.word	0x08002b63
 8002b1c:	08002b81 	.word	0x08002b81
 8002b20:	08002b81 	.word	0x08002b81
 8002b24:	08002b81 	.word	0x08002b81
 8002b28:	08002b81 	.word	0x08002b81
 8002b2c:	08002b81 	.word	0x08002b81
 8002b30:	08002b81 	.word	0x08002b81
 8002b34:	08002b39 	.word	0x08002b39
 8002b38:	683b      	ldr	r3, [r7, #0]
 8002b3a:	3301      	adds	r3, #1
 8002b3c:	4619      	mov	r1, r3
 8002b3e:	6878      	ldr	r0, [r7, #4]
 8002b40:	f000 f826 	bl	8002b90 <parse_object_value>
 8002b44:	4603      	mov	r3, r0
 8002b46:	e01c      	b.n	8002b82 <parse_value+0x132>
 8002b48:	683b      	ldr	r3, [r7, #0]
 8002b4a:	3301      	adds	r3, #1
 8002b4c:	4619      	mov	r1, r3
 8002b4e:	6878      	ldr	r0, [r7, #4]
 8002b50:	f000 f934 	bl	8002dbc <parse_array_value>
 8002b54:	4603      	mov	r3, r0
 8002b56:	e014      	b.n	8002b82 <parse_value+0x132>
 8002b58:	6878      	ldr	r0, [r7, #4]
 8002b5a:	f000 f9f9 	bl	8002f50 <parse_string_value>
 8002b5e:	4603      	mov	r3, r0
 8002b60:	e00f      	b.n	8002b82 <parse_value+0x132>
 8002b62:	6878      	ldr	r0, [r7, #4]
 8002b64:	f000 fa1e 	bl	8002fa4 <parse_boolean_value>
 8002b68:	4603      	mov	r3, r0
 8002b6a:	e00a      	b.n	8002b82 <parse_value+0x132>
 8002b6c:	6878      	ldr	r0, [r7, #4]
 8002b6e:	f000 fa55 	bl	800301c <parse_number_value>
 8002b72:	4603      	mov	r3, r0
 8002b74:	e005      	b.n	8002b82 <parse_value+0x132>
 8002b76:	6878      	ldr	r0, [r7, #4]
 8002b78:	f000 faae 	bl	80030d8 <parse_null_value>
 8002b7c:	4603      	mov	r3, r0
 8002b7e:	e000      	b.n	8002b82 <parse_value+0x132>
 8002b80:	2300      	movs	r3, #0
 8002b82:	4618      	mov	r0, r3
 8002b84:	3708      	adds	r7, #8
 8002b86:	46bd      	mov	sp, r7
 8002b88:	bd80      	pop	{r7, pc}
 8002b8a:	bf00      	nop
 8002b8c:	0800f664 	.word	0x0800f664

08002b90 <parse_object_value>:
 8002b90:	b580      	push	{r7, lr}
 8002b92:	b088      	sub	sp, #32
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
 8002b98:	6039      	str	r1, [r7, #0]
 8002b9a:	f04f 33ff 	mov.w	r3, #4294967295
 8002b9e:	61fb      	str	r3, [r7, #28]
 8002ba0:	2300      	movs	r3, #0
 8002ba2:	61bb      	str	r3, [r7, #24]
 8002ba4:	2300      	movs	r3, #0
 8002ba6:	617b      	str	r3, [r7, #20]
 8002ba8:	2300      	movs	r3, #0
 8002baa:	613b      	str	r3, [r7, #16]
 8002bac:	2300      	movs	r3, #0
 8002bae:	60fb      	str	r3, [r7, #12]
 8002bb0:	f001 fcf8 	bl	80045a4 <json_value_init_object>
 8002bb4:	61b8      	str	r0, [r7, #24]
 8002bb6:	69bb      	ldr	r3, [r7, #24]
 8002bb8:	2b00      	cmp	r3, #0
 8002bba:	d101      	bne.n	8002bc0 <parse_object_value+0x30>
 8002bbc:	2300      	movs	r3, #0
 8002bbe:	e0f5      	b.n	8002dac <parse_object_value+0x21c>
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	781b      	ldrb	r3, [r3, #0]
 8002bc6:	2b7b      	cmp	r3, #123	; 0x7b
 8002bc8:	d004      	beq.n	8002bd4 <parse_object_value+0x44>
 8002bca:	69b8      	ldr	r0, [r7, #24]
 8002bcc:	f001 fcbc 	bl	8004548 <json_value_free>
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	e0eb      	b.n	8002dac <parse_object_value+0x21c>
 8002bd4:	69b8      	ldr	r0, [r7, #24]
 8002bd6:	f001 fc2d 	bl	8004434 <json_value_get_object>
 8002bda:	6138      	str	r0, [r7, #16]
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	1c5a      	adds	r2, r3, #1
 8002be2:	687b      	ldr	r3, [r7, #4]
 8002be4:	601a      	str	r2, [r3, #0]
 8002be6:	e004      	b.n	8002bf2 <parse_object_value+0x62>
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	681b      	ldr	r3, [r3, #0]
 8002bec:	1c5a      	adds	r2, r3, #1
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	601a      	str	r2, [r3, #0]
 8002bf2:	687b      	ldr	r3, [r7, #4]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	781b      	ldrb	r3, [r3, #0]
 8002bf8:	3301      	adds	r3, #1
 8002bfa:	4a6e      	ldr	r2, [pc, #440]	; (8002db4 <parse_object_value+0x224>)
 8002bfc:	4413      	add	r3, r2
 8002bfe:	781b      	ldrb	r3, [r3, #0]
 8002c00:	f003 0308 	and.w	r3, r3, #8
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d1ef      	bne.n	8002be8 <parse_object_value+0x58>
 8002c08:	687b      	ldr	r3, [r7, #4]
 8002c0a:	681b      	ldr	r3, [r3, #0]
 8002c0c:	781b      	ldrb	r3, [r3, #0]
 8002c0e:	2b7d      	cmp	r3, #125	; 0x7d
 8002c10:	f040 80a1 	bne.w	8002d56 <parse_object_value+0x1c6>
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	681b      	ldr	r3, [r3, #0]
 8002c18:	1c5a      	adds	r2, r3, #1
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	601a      	str	r2, [r3, #0]
 8002c1e:	69bb      	ldr	r3, [r7, #24]
 8002c20:	e0c4      	b.n	8002dac <parse_object_value+0x21c>
 8002c22:	2300      	movs	r3, #0
 8002c24:	60bb      	str	r3, [r7, #8]
 8002c26:	f107 0308 	add.w	r3, r7, #8
 8002c2a:	4619      	mov	r1, r3
 8002c2c:	6878      	ldr	r0, [r7, #4]
 8002c2e:	f7ff fee9 	bl	8002a04 <get_quoted_string>
 8002c32:	60f8      	str	r0, [r7, #12]
 8002c34:	68fb      	ldr	r3, [r7, #12]
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d104      	bne.n	8002c44 <parse_object_value+0xb4>
 8002c3a:	69b8      	ldr	r0, [r7, #24]
 8002c3c:	f001 fc84 	bl	8004548 <json_value_free>
 8002c40:	2300      	movs	r3, #0
 8002c42:	e0b3      	b.n	8002dac <parse_object_value+0x21c>
 8002c44:	68f8      	ldr	r0, [r7, #12]
 8002c46:	f7fd fa9b 	bl	8000180 <strlen>
 8002c4a:	4602      	mov	r2, r0
 8002c4c:	68bb      	ldr	r3, [r7, #8]
 8002c4e:	429a      	cmp	r2, r3
 8002c50:	d00d      	beq.n	8002c6e <parse_object_value+0xde>
 8002c52:	4b59      	ldr	r3, [pc, #356]	; (8002db8 <parse_object_value+0x228>)
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	68f8      	ldr	r0, [r7, #12]
 8002c58:	4798      	blx	r3
 8002c5a:	69b8      	ldr	r0, [r7, #24]
 8002c5c:	f001 fc74 	bl	8004548 <json_value_free>
 8002c60:	2300      	movs	r3, #0
 8002c62:	e0a3      	b.n	8002dac <parse_object_value+0x21c>
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	1c5a      	adds	r2, r3, #1
 8002c6a:	687b      	ldr	r3, [r7, #4]
 8002c6c:	601a      	str	r2, [r3, #0]
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	781b      	ldrb	r3, [r3, #0]
 8002c74:	3301      	adds	r3, #1
 8002c76:	4a4f      	ldr	r2, [pc, #316]	; (8002db4 <parse_object_value+0x224>)
 8002c78:	4413      	add	r3, r2
 8002c7a:	781b      	ldrb	r3, [r3, #0]
 8002c7c:	f003 0308 	and.w	r3, r3, #8
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d1ef      	bne.n	8002c64 <parse_object_value+0xd4>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	781b      	ldrb	r3, [r3, #0]
 8002c8a:	2b3a      	cmp	r3, #58	; 0x3a
 8002c8c:	d008      	beq.n	8002ca0 <parse_object_value+0x110>
 8002c8e:	4b4a      	ldr	r3, [pc, #296]	; (8002db8 <parse_object_value+0x228>)
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	68f8      	ldr	r0, [r7, #12]
 8002c94:	4798      	blx	r3
 8002c96:	69b8      	ldr	r0, [r7, #24]
 8002c98:	f001 fc56 	bl	8004548 <json_value_free>
 8002c9c:	2300      	movs	r3, #0
 8002c9e:	e085      	b.n	8002dac <parse_object_value+0x21c>
 8002ca0:	687b      	ldr	r3, [r7, #4]
 8002ca2:	681b      	ldr	r3, [r3, #0]
 8002ca4:	1c5a      	adds	r2, r3, #1
 8002ca6:	687b      	ldr	r3, [r7, #4]
 8002ca8:	601a      	str	r2, [r3, #0]
 8002caa:	6839      	ldr	r1, [r7, #0]
 8002cac:	6878      	ldr	r0, [r7, #4]
 8002cae:	f7ff fecf 	bl	8002a50 <parse_value>
 8002cb2:	6178      	str	r0, [r7, #20]
 8002cb4:	697b      	ldr	r3, [r7, #20]
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d108      	bne.n	8002ccc <parse_object_value+0x13c>
 8002cba:	4b3f      	ldr	r3, [pc, #252]	; (8002db8 <parse_object_value+0x228>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
 8002cbe:	68f8      	ldr	r0, [r7, #12]
 8002cc0:	4798      	blx	r3
 8002cc2:	69b8      	ldr	r0, [r7, #24]
 8002cc4:	f001 fc40 	bl	8004548 <json_value_free>
 8002cc8:	2300      	movs	r3, #0
 8002cca:	e06f      	b.n	8002dac <parse_object_value+0x21c>
 8002ccc:	697a      	ldr	r2, [r7, #20]
 8002cce:	68f9      	ldr	r1, [r7, #12]
 8002cd0:	6938      	ldr	r0, [r7, #16]
 8002cd2:	f7ff fab8 	bl	8002246 <json_object_add>
 8002cd6:	61f8      	str	r0, [r7, #28]
 8002cd8:	69fb      	ldr	r3, [r7, #28]
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d010      	beq.n	8002d00 <parse_object_value+0x170>
 8002cde:	4b36      	ldr	r3, [pc, #216]	; (8002db8 <parse_object_value+0x228>)
 8002ce0:	681b      	ldr	r3, [r3, #0]
 8002ce2:	68f8      	ldr	r0, [r7, #12]
 8002ce4:	4798      	blx	r3
 8002ce6:	6978      	ldr	r0, [r7, #20]
 8002ce8:	f001 fc2e 	bl	8004548 <json_value_free>
 8002cec:	69b8      	ldr	r0, [r7, #24]
 8002cee:	f001 fc2b 	bl	8004548 <json_value_free>
 8002cf2:	2300      	movs	r3, #0
 8002cf4:	e05a      	b.n	8002dac <parse_object_value+0x21c>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	1c5a      	adds	r2, r3, #1
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	601a      	str	r2, [r3, #0]
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	681b      	ldr	r3, [r3, #0]
 8002d04:	781b      	ldrb	r3, [r3, #0]
 8002d06:	3301      	adds	r3, #1
 8002d08:	4a2a      	ldr	r2, [pc, #168]	; (8002db4 <parse_object_value+0x224>)
 8002d0a:	4413      	add	r3, r2
 8002d0c:	781b      	ldrb	r3, [r3, #0]
 8002d0e:	f003 0308 	and.w	r3, r3, #8
 8002d12:	2b00      	cmp	r3, #0
 8002d14:	d1ef      	bne.n	8002cf6 <parse_object_value+0x166>
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	781b      	ldrb	r3, [r3, #0]
 8002d1c:	2b2c      	cmp	r3, #44	; 0x2c
 8002d1e:	d121      	bne.n	8002d64 <parse_object_value+0x1d4>
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	1c5a      	adds	r2, r3, #1
 8002d26:	687b      	ldr	r3, [r7, #4]
 8002d28:	601a      	str	r2, [r3, #0]
 8002d2a:	e004      	b.n	8002d36 <parse_object_value+0x1a6>
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	1c5a      	adds	r2, r3, #1
 8002d32:	687b      	ldr	r3, [r7, #4]
 8002d34:	601a      	str	r2, [r3, #0]
 8002d36:	687b      	ldr	r3, [r7, #4]
 8002d38:	681b      	ldr	r3, [r3, #0]
 8002d3a:	781b      	ldrb	r3, [r3, #0]
 8002d3c:	3301      	adds	r3, #1
 8002d3e:	4a1d      	ldr	r2, [pc, #116]	; (8002db4 <parse_object_value+0x224>)
 8002d40:	4413      	add	r3, r2
 8002d42:	781b      	ldrb	r3, [r3, #0]
 8002d44:	f003 0308 	and.w	r3, r3, #8
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	d1ef      	bne.n	8002d2c <parse_object_value+0x19c>
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	781b      	ldrb	r3, [r3, #0]
 8002d52:	2b7d      	cmp	r3, #125	; 0x7d
 8002d54:	d008      	beq.n	8002d68 <parse_object_value+0x1d8>
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	781b      	ldrb	r3, [r3, #0]
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	f47f af60 	bne.w	8002c22 <parse_object_value+0x92>
 8002d62:	e008      	b.n	8002d76 <parse_object_value+0x1e6>
 8002d64:	bf00      	nop
 8002d66:	e006      	b.n	8002d76 <parse_object_value+0x1e6>
 8002d68:	bf00      	nop
 8002d6a:	e004      	b.n	8002d76 <parse_object_value+0x1e6>
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	1c5a      	adds	r2, r3, #1
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	601a      	str	r2, [r3, #0]
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	781b      	ldrb	r3, [r3, #0]
 8002d7c:	3301      	adds	r3, #1
 8002d7e:	4a0d      	ldr	r2, [pc, #52]	; (8002db4 <parse_object_value+0x224>)
 8002d80:	4413      	add	r3, r2
 8002d82:	781b      	ldrb	r3, [r3, #0]
 8002d84:	f003 0308 	and.w	r3, r3, #8
 8002d88:	2b00      	cmp	r3, #0
 8002d8a:	d1ef      	bne.n	8002d6c <parse_object_value+0x1dc>
 8002d8c:	687b      	ldr	r3, [r7, #4]
 8002d8e:	681b      	ldr	r3, [r3, #0]
 8002d90:	781b      	ldrb	r3, [r3, #0]
 8002d92:	2b7d      	cmp	r3, #125	; 0x7d
 8002d94:	d004      	beq.n	8002da0 <parse_object_value+0x210>
 8002d96:	69b8      	ldr	r0, [r7, #24]
 8002d98:	f001 fbd6 	bl	8004548 <json_value_free>
 8002d9c:	2300      	movs	r3, #0
 8002d9e:	e005      	b.n	8002dac <parse_object_value+0x21c>
 8002da0:	687b      	ldr	r3, [r7, #4]
 8002da2:	681b      	ldr	r3, [r3, #0]
 8002da4:	1c5a      	adds	r2, r3, #1
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	601a      	str	r2, [r3, #0]
 8002daa:	69bb      	ldr	r3, [r7, #24]
 8002dac:	4618      	mov	r0, r3
 8002dae:	3720      	adds	r7, #32
 8002db0:	46bd      	mov	sp, r7
 8002db2:	bd80      	pop	{r7, pc}
 8002db4:	0800f664 	.word	0x0800f664
 8002db8:	2000000c 	.word	0x2000000c

08002dbc <parse_array_value>:
 8002dbc:	b580      	push	{r7, lr}
 8002dbe:	b086      	sub	sp, #24
 8002dc0:	af00      	add	r7, sp, #0
 8002dc2:	6078      	str	r0, [r7, #4]
 8002dc4:	6039      	str	r1, [r7, #0]
 8002dc6:	2300      	movs	r3, #0
 8002dc8:	617b      	str	r3, [r7, #20]
 8002dca:	2300      	movs	r3, #0
 8002dcc:	613b      	str	r3, [r7, #16]
 8002dce:	2300      	movs	r3, #0
 8002dd0:	60fb      	str	r3, [r7, #12]
 8002dd2:	f001 fc13 	bl	80045fc <json_value_init_array>
 8002dd6:	6178      	str	r0, [r7, #20]
 8002dd8:	697b      	ldr	r3, [r7, #20]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d101      	bne.n	8002de2 <parse_array_value+0x26>
 8002dde:	2300      	movs	r3, #0
 8002de0:	e0b0      	b.n	8002f44 <parse_array_value+0x188>
 8002de2:	687b      	ldr	r3, [r7, #4]
 8002de4:	681b      	ldr	r3, [r3, #0]
 8002de6:	781b      	ldrb	r3, [r3, #0]
 8002de8:	2b5b      	cmp	r3, #91	; 0x5b
 8002dea:	d004      	beq.n	8002df6 <parse_array_value+0x3a>
 8002dec:	6978      	ldr	r0, [r7, #20]
 8002dee:	f001 fbab 	bl	8004548 <json_value_free>
 8002df2:	2300      	movs	r3, #0
 8002df4:	e0a6      	b.n	8002f44 <parse_array_value+0x188>
 8002df6:	6978      	ldr	r0, [r7, #20]
 8002df8:	f001 fb2e 	bl	8004458 <json_value_get_array>
 8002dfc:	60f8      	str	r0, [r7, #12]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	681b      	ldr	r3, [r3, #0]
 8002e02:	1c5a      	adds	r2, r3, #1
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	601a      	str	r2, [r3, #0]
 8002e08:	e004      	b.n	8002e14 <parse_array_value+0x58>
 8002e0a:	687b      	ldr	r3, [r7, #4]
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	1c5a      	adds	r2, r3, #1
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	601a      	str	r2, [r3, #0]
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	781b      	ldrb	r3, [r3, #0]
 8002e1a:	3301      	adds	r3, #1
 8002e1c:	4a4b      	ldr	r2, [pc, #300]	; (8002f4c <parse_array_value+0x190>)
 8002e1e:	4413      	add	r3, r2
 8002e20:	781b      	ldrb	r3, [r3, #0]
 8002e22:	f003 0308 	and.w	r3, r3, #8
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d1ef      	bne.n	8002e0a <parse_array_value+0x4e>
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	781b      	ldrb	r3, [r3, #0]
 8002e30:	2b5d      	cmp	r3, #93	; 0x5d
 8002e32:	d152      	bne.n	8002eda <parse_array_value+0x11e>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	1c5a      	adds	r2, r3, #1
 8002e3a:	687b      	ldr	r3, [r7, #4]
 8002e3c:	601a      	str	r2, [r3, #0]
 8002e3e:	697b      	ldr	r3, [r7, #20]
 8002e40:	e080      	b.n	8002f44 <parse_array_value+0x188>
 8002e42:	6839      	ldr	r1, [r7, #0]
 8002e44:	6878      	ldr	r0, [r7, #4]
 8002e46:	f7ff fe03 	bl	8002a50 <parse_value>
 8002e4a:	6138      	str	r0, [r7, #16]
 8002e4c:	693b      	ldr	r3, [r7, #16]
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d104      	bne.n	8002e5c <parse_array_value+0xa0>
 8002e52:	6978      	ldr	r0, [r7, #20]
 8002e54:	f001 fb78 	bl	8004548 <json_value_free>
 8002e58:	2300      	movs	r3, #0
 8002e5a:	e073      	b.n	8002f44 <parse_array_value+0x188>
 8002e5c:	6939      	ldr	r1, [r7, #16]
 8002e5e:	68f8      	ldr	r0, [r7, #12]
 8002e60:	f7ff faf2 	bl	8002448 <json_array_add>
 8002e64:	4603      	mov	r3, r0
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d00c      	beq.n	8002e84 <parse_array_value+0xc8>
 8002e6a:	6938      	ldr	r0, [r7, #16]
 8002e6c:	f001 fb6c 	bl	8004548 <json_value_free>
 8002e70:	6978      	ldr	r0, [r7, #20]
 8002e72:	f001 fb69 	bl	8004548 <json_value_free>
 8002e76:	2300      	movs	r3, #0
 8002e78:	e064      	b.n	8002f44 <parse_array_value+0x188>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	681b      	ldr	r3, [r3, #0]
 8002e7e:	1c5a      	adds	r2, r3, #1
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	601a      	str	r2, [r3, #0]
 8002e84:	687b      	ldr	r3, [r7, #4]
 8002e86:	681b      	ldr	r3, [r3, #0]
 8002e88:	781b      	ldrb	r3, [r3, #0]
 8002e8a:	3301      	adds	r3, #1
 8002e8c:	4a2f      	ldr	r2, [pc, #188]	; (8002f4c <parse_array_value+0x190>)
 8002e8e:	4413      	add	r3, r2
 8002e90:	781b      	ldrb	r3, [r3, #0]
 8002e92:	f003 0308 	and.w	r3, r3, #8
 8002e96:	2b00      	cmp	r3, #0
 8002e98:	d1ef      	bne.n	8002e7a <parse_array_value+0xbe>
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	781b      	ldrb	r3, [r3, #0]
 8002ea0:	2b2c      	cmp	r3, #44	; 0x2c
 8002ea2:	d120      	bne.n	8002ee6 <parse_array_value+0x12a>
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	1c5a      	adds	r2, r3, #1
 8002eaa:	687b      	ldr	r3, [r7, #4]
 8002eac:	601a      	str	r2, [r3, #0]
 8002eae:	e004      	b.n	8002eba <parse_array_value+0xfe>
 8002eb0:	687b      	ldr	r3, [r7, #4]
 8002eb2:	681b      	ldr	r3, [r3, #0]
 8002eb4:	1c5a      	adds	r2, r3, #1
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	601a      	str	r2, [r3, #0]
 8002eba:	687b      	ldr	r3, [r7, #4]
 8002ebc:	681b      	ldr	r3, [r3, #0]
 8002ebe:	781b      	ldrb	r3, [r3, #0]
 8002ec0:	3301      	adds	r3, #1
 8002ec2:	4a22      	ldr	r2, [pc, #136]	; (8002f4c <parse_array_value+0x190>)
 8002ec4:	4413      	add	r3, r2
 8002ec6:	781b      	ldrb	r3, [r3, #0]
 8002ec8:	f003 0308 	and.w	r3, r3, #8
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d1ef      	bne.n	8002eb0 <parse_array_value+0xf4>
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	681b      	ldr	r3, [r3, #0]
 8002ed4:	781b      	ldrb	r3, [r3, #0]
 8002ed6:	2b5d      	cmp	r3, #93	; 0x5d
 8002ed8:	d007      	beq.n	8002eea <parse_array_value+0x12e>
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	781b      	ldrb	r3, [r3, #0]
 8002ee0:	2b00      	cmp	r3, #0
 8002ee2:	d1ae      	bne.n	8002e42 <parse_array_value+0x86>
 8002ee4:	e008      	b.n	8002ef8 <parse_array_value+0x13c>
 8002ee6:	bf00      	nop
 8002ee8:	e006      	b.n	8002ef8 <parse_array_value+0x13c>
 8002eea:	bf00      	nop
 8002eec:	e004      	b.n	8002ef8 <parse_array_value+0x13c>
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	1c5a      	adds	r2, r3, #1
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	601a      	str	r2, [r3, #0]
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	781b      	ldrb	r3, [r3, #0]
 8002efe:	3301      	adds	r3, #1
 8002f00:	4a12      	ldr	r2, [pc, #72]	; (8002f4c <parse_array_value+0x190>)
 8002f02:	4413      	add	r3, r2
 8002f04:	781b      	ldrb	r3, [r3, #0]
 8002f06:	f003 0308 	and.w	r3, r3, #8
 8002f0a:	2b00      	cmp	r3, #0
 8002f0c:	d1ef      	bne.n	8002eee <parse_array_value+0x132>
 8002f0e:	687b      	ldr	r3, [r7, #4]
 8002f10:	681b      	ldr	r3, [r3, #0]
 8002f12:	781b      	ldrb	r3, [r3, #0]
 8002f14:	2b5d      	cmp	r3, #93	; 0x5d
 8002f16:	d10a      	bne.n	8002f2e <parse_array_value+0x172>
 8002f18:	68f8      	ldr	r0, [r7, #12]
 8002f1a:	f001 fa57 	bl	80043cc <json_array_get_count>
 8002f1e:	4603      	mov	r3, r0
 8002f20:	4619      	mov	r1, r3
 8002f22:	68f8      	ldr	r0, [r7, #12]
 8002f24:	f7ff fac4 	bl	80024b0 <json_array_resize>
 8002f28:	4603      	mov	r3, r0
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d004      	beq.n	8002f38 <parse_array_value+0x17c>
 8002f2e:	6978      	ldr	r0, [r7, #20]
 8002f30:	f001 fb0a 	bl	8004548 <json_value_free>
 8002f34:	2300      	movs	r3, #0
 8002f36:	e005      	b.n	8002f44 <parse_array_value+0x188>
 8002f38:	687b      	ldr	r3, [r7, #4]
 8002f3a:	681b      	ldr	r3, [r3, #0]
 8002f3c:	1c5a      	adds	r2, r3, #1
 8002f3e:	687b      	ldr	r3, [r7, #4]
 8002f40:	601a      	str	r2, [r3, #0]
 8002f42:	697b      	ldr	r3, [r7, #20]
 8002f44:	4618      	mov	r0, r3
 8002f46:	3718      	adds	r7, #24
 8002f48:	46bd      	mov	sp, r7
 8002f4a:	bd80      	pop	{r7, pc}
 8002f4c:	0800f664 	.word	0x0800f664

08002f50 <parse_string_value>:
 8002f50:	b580      	push	{r7, lr}
 8002f52:	b086      	sub	sp, #24
 8002f54:	af00      	add	r7, sp, #0
 8002f56:	6078      	str	r0, [r7, #4]
 8002f58:	2300      	movs	r3, #0
 8002f5a:	617b      	str	r3, [r7, #20]
 8002f5c:	2300      	movs	r3, #0
 8002f5e:	60fb      	str	r3, [r7, #12]
 8002f60:	f107 030c 	add.w	r3, r7, #12
 8002f64:	4619      	mov	r1, r3
 8002f66:	6878      	ldr	r0, [r7, #4]
 8002f68:	f7ff fd4c 	bl	8002a04 <get_quoted_string>
 8002f6c:	6138      	str	r0, [r7, #16]
 8002f6e:	693b      	ldr	r3, [r7, #16]
 8002f70:	2b00      	cmp	r3, #0
 8002f72:	d101      	bne.n	8002f78 <parse_string_value+0x28>
 8002f74:	2300      	movs	r3, #0
 8002f76:	e00f      	b.n	8002f98 <parse_string_value+0x48>
 8002f78:	68fb      	ldr	r3, [r7, #12]
 8002f7a:	4619      	mov	r1, r3
 8002f7c:	6938      	ldr	r0, [r7, #16]
 8002f7e:	f7ff faff 	bl	8002580 <json_value_init_string_no_copy>
 8002f82:	6178      	str	r0, [r7, #20]
 8002f84:	697b      	ldr	r3, [r7, #20]
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d105      	bne.n	8002f96 <parse_string_value+0x46>
 8002f8a:	4b05      	ldr	r3, [pc, #20]	; (8002fa0 <parse_string_value+0x50>)
 8002f8c:	681b      	ldr	r3, [r3, #0]
 8002f8e:	6938      	ldr	r0, [r7, #16]
 8002f90:	4798      	blx	r3
 8002f92:	2300      	movs	r3, #0
 8002f94:	e000      	b.n	8002f98 <parse_string_value+0x48>
 8002f96:	697b      	ldr	r3, [r7, #20]
 8002f98:	4618      	mov	r0, r3
 8002f9a:	3718      	adds	r7, #24
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}
 8002fa0:	2000000c 	.word	0x2000000c

08002fa4 <parse_boolean_value>:
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b084      	sub	sp, #16
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
 8002fac:	2304      	movs	r3, #4
 8002fae:	60fb      	str	r3, [r7, #12]
 8002fb0:	2305      	movs	r3, #5
 8002fb2:	60bb      	str	r3, [r7, #8]
 8002fb4:	687b      	ldr	r3, [r7, #4]
 8002fb6:	681b      	ldr	r3, [r3, #0]
 8002fb8:	68fa      	ldr	r2, [r7, #12]
 8002fba:	4619      	mov	r1, r3
 8002fbc:	4815      	ldr	r0, [pc, #84]	; (8003014 <parse_boolean_value+0x70>)
 8002fbe:	f008 ff89 	bl	800bed4 <strncmp>
 8002fc2:	4603      	mov	r3, r0
 8002fc4:	2b00      	cmp	r3, #0
 8002fc6:	d10a      	bne.n	8002fde <parse_boolean_value+0x3a>
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	681a      	ldr	r2, [r3, #0]
 8002fcc:	68fb      	ldr	r3, [r7, #12]
 8002fce:	441a      	add	r2, r3
 8002fd0:	687b      	ldr	r3, [r7, #4]
 8002fd2:	601a      	str	r2, [r3, #0]
 8002fd4:	2001      	movs	r0, #1
 8002fd6:	f001 fb8f 	bl	80046f8 <json_value_init_boolean>
 8002fda:	4603      	mov	r3, r0
 8002fdc:	e015      	b.n	800300a <parse_boolean_value+0x66>
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	68ba      	ldr	r2, [r7, #8]
 8002fe4:	4619      	mov	r1, r3
 8002fe6:	480c      	ldr	r0, [pc, #48]	; (8003018 <parse_boolean_value+0x74>)
 8002fe8:	f008 ff74 	bl	800bed4 <strncmp>
 8002fec:	4603      	mov	r3, r0
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	d10a      	bne.n	8003008 <parse_boolean_value+0x64>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681a      	ldr	r2, [r3, #0]
 8002ff6:	68bb      	ldr	r3, [r7, #8]
 8002ff8:	441a      	add	r2, r3
 8002ffa:	687b      	ldr	r3, [r7, #4]
 8002ffc:	601a      	str	r2, [r3, #0]
 8002ffe:	2000      	movs	r0, #0
 8003000:	f001 fb7a 	bl	80046f8 <json_value_init_boolean>
 8003004:	4603      	mov	r3, r0
 8003006:	e000      	b.n	800300a <parse_boolean_value+0x66>
 8003008:	2300      	movs	r3, #0
 800300a:	4618      	mov	r0, r3
 800300c:	3710      	adds	r7, #16
 800300e:	46bd      	mov	sp, r7
 8003010:	bd80      	pop	{r7, pc}
 8003012:	bf00      	nop
 8003014:	0800ec9c 	.word	0x0800ec9c
 8003018:	0800eca4 	.word	0x0800eca4

0800301c <parse_number_value>:
 800301c:	b580      	push	{r7, lr}
 800301e:	b086      	sub	sp, #24
 8003020:	af00      	add	r7, sp, #0
 8003022:	6078      	str	r0, [r7, #4]
 8003024:	f04f 0200 	mov.w	r2, #0
 8003028:	f04f 0300 	mov.w	r3, #0
 800302c:	e9c7 2304 	strd	r2, r3, [r7, #16]
 8003030:	f008 fad8 	bl	800b5e4 <__errno>
 8003034:	4603      	mov	r3, r0
 8003036:	2200      	movs	r2, #0
 8003038:	601a      	str	r2, [r3, #0]
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	f107 020c 	add.w	r2, r7, #12
 8003042:	4611      	mov	r1, r2
 8003044:	4618      	mov	r0, r3
 8003046:	f009 fd91 	bl	800cb6c <strtod>
 800304a:	ed87 0b04 	vstr	d0, [r7, #16]
 800304e:	f008 fac9 	bl	800b5e4 <__errno>
 8003052:	4603      	mov	r3, r0
 8003054:	681b      	ldr	r3, [r3, #0]
 8003056:	2b22      	cmp	r3, #34	; 0x22
 8003058:	d116      	bne.n	8003088 <parse_number_value+0x6c>
 800305a:	f04f 32ff 	mov.w	r2, #4294967295
 800305e:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
 8003062:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8003066:	f7fd fd11 	bl	8000a8c <__aeabi_dcmplt>
 800306a:	4603      	mov	r3, r0
 800306c:	2b00      	cmp	r3, #0
 800306e:	d109      	bne.n	8003084 <parse_number_value+0x68>
 8003070:	f04f 32ff 	mov.w	r2, #4294967295
 8003074:	4b17      	ldr	r3, [pc, #92]	; (80030d4 <parse_number_value+0xb8>)
 8003076:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 800307a:	f7fd fd25 	bl	8000ac8 <__aeabi_dcmpgt>
 800307e:	4603      	mov	r3, r0
 8003080:	2b00      	cmp	r3, #0
 8003082:	d001      	beq.n	8003088 <parse_number_value+0x6c>
 8003084:	2300      	movs	r3, #0
 8003086:	e021      	b.n	80030cc <parse_number_value+0xb0>
 8003088:	f008 faac 	bl	800b5e4 <__errno>
 800308c:	4603      	mov	r3, r0
 800308e:	681b      	ldr	r3, [r3, #0]
 8003090:	2b00      	cmp	r3, #0
 8003092:	d005      	beq.n	80030a0 <parse_number_value+0x84>
 8003094:	f008 faa6 	bl	800b5e4 <__errno>
 8003098:	4603      	mov	r3, r0
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	2b22      	cmp	r3, #34	; 0x22
 800309e:	d10b      	bne.n	80030b8 <parse_number_value+0x9c>
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	6818      	ldr	r0, [r3, #0]
 80030a4:	68fa      	ldr	r2, [r7, #12]
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	1ad3      	subs	r3, r2, r3
 80030ac:	4619      	mov	r1, r3
 80030ae:	f7fe fe3f 	bl	8001d30 <is_decimal>
 80030b2:	4603      	mov	r3, r0
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d101      	bne.n	80030bc <parse_number_value+0xa0>
 80030b8:	2300      	movs	r3, #0
 80030ba:	e007      	b.n	80030cc <parse_number_value+0xb0>
 80030bc:	68fa      	ldr	r2, [r7, #12]
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	601a      	str	r2, [r3, #0]
 80030c2:	ed97 0b04 	vldr	d0, [r7, #16]
 80030c6:	f001 fac5 	bl	8004654 <json_value_init_number>
 80030ca:	4603      	mov	r3, r0
 80030cc:	4618      	mov	r0, r3
 80030ce:	3718      	adds	r7, #24
 80030d0:	46bd      	mov	sp, r7
 80030d2:	bd80      	pop	{r7, pc}
 80030d4:	7fefffff 	.word	0x7fefffff

080030d8 <parse_null_value>:
 80030d8:	b580      	push	{r7, lr}
 80030da:	b084      	sub	sp, #16
 80030dc:	af00      	add	r7, sp, #0
 80030de:	6078      	str	r0, [r7, #4]
 80030e0:	2304      	movs	r3, #4
 80030e2:	60fb      	str	r3, [r7, #12]
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	681b      	ldr	r3, [r3, #0]
 80030e8:	68fa      	ldr	r2, [r7, #12]
 80030ea:	4619      	mov	r1, r3
 80030ec:	480a      	ldr	r0, [pc, #40]	; (8003118 <parse_null_value+0x40>)
 80030ee:	f008 fef1 	bl	800bed4 <strncmp>
 80030f2:	4603      	mov	r3, r0
 80030f4:	2b00      	cmp	r3, #0
 80030f6:	d109      	bne.n	800310c <parse_null_value+0x34>
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681a      	ldr	r2, [r3, #0]
 80030fc:	68fb      	ldr	r3, [r7, #12]
 80030fe:	441a      	add	r2, r3
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	601a      	str	r2, [r3, #0]
 8003104:	f001 fb1c 	bl	8004740 <json_value_init_null>
 8003108:	4603      	mov	r3, r0
 800310a:	e000      	b.n	800310e <parse_null_value+0x36>
 800310c:	2300      	movs	r3, #0
 800310e:	4618      	mov	r0, r3
 8003110:	3710      	adds	r7, #16
 8003112:	46bd      	mov	sp, r7
 8003114:	bd80      	pop	{r7, pc}
 8003116:	bf00      	nop
 8003118:	0800ecac 	.word	0x0800ecac

0800311c <json_serialize_to_buffer_r>:
 800311c:	b580      	push	{r7, lr}
 800311e:	b098      	sub	sp, #96	; 0x60
 8003120:	af02      	add	r7, sp, #8
 8003122:	60f8      	str	r0, [r7, #12]
 8003124:	60b9      	str	r1, [r7, #8]
 8003126:	607a      	str	r2, [r7, #4]
 8003128:	603b      	str	r3, [r7, #0]
 800312a:	2300      	movs	r3, #0
 800312c:	63bb      	str	r3, [r7, #56]	; 0x38
 800312e:	2300      	movs	r3, #0
 8003130:	637b      	str	r3, [r7, #52]	; 0x34
 8003132:	2300      	movs	r3, #0
 8003134:	633b      	str	r3, [r7, #48]	; 0x30
 8003136:	2300      	movs	r3, #0
 8003138:	62fb      	str	r3, [r7, #44]	; 0x2c
 800313a:	2300      	movs	r3, #0
 800313c:	62bb      	str	r3, [r7, #40]	; 0x28
 800313e:	2300      	movs	r3, #0
 8003140:	657b      	str	r3, [r7, #84]	; 0x54
 8003142:	2300      	movs	r3, #0
 8003144:	627b      	str	r3, [r7, #36]	; 0x24
 8003146:	f04f 0200 	mov.w	r2, #0
 800314a:	f04f 0300 	mov.w	r3, #0
 800314e:	e9c7 2306 	strd	r2, r3, [r7, #24]
 8003152:	f04f 33ff 	mov.w	r3, #4294967295
 8003156:	653b      	str	r3, [r7, #80]	; 0x50
 8003158:	2300      	movs	r3, #0
 800315a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800315c:	2300      	movs	r3, #0
 800315e:	617b      	str	r3, [r7, #20]
 8003160:	68f8      	ldr	r0, [r7, #12]
 8003162:	f001 f955 	bl	8004410 <json_value_get_type>
 8003166:	4603      	mov	r3, r0
 8003168:	3301      	adds	r3, #1
 800316a:	2b07      	cmp	r3, #7
 800316c:	f200 8355 	bhi.w	800381a <json_serialize_to_buffer_r+0x6fe>
 8003170:	a201      	add	r2, pc, #4	; (adr r2, 8003178 <json_serialize_to_buffer_r+0x5c>)
 8003172:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003176:	bf00      	nop
 8003178:	08003815 	.word	0x08003815
 800317c:	0800381b 	.word	0x0800381b
 8003180:	080037e1 	.word	0x080037e1
 8003184:	080036a7 	.word	0x080036a7
 8003188:	08003767 	.word	0x08003767
 800318c:	080033c5 	.word	0x080033c5
 8003190:	08003199 	.word	0x08003199
 8003194:	080036f5 	.word	0x080036f5
 8003198:	68f8      	ldr	r0, [r7, #12]
 800319a:	f001 f95d 	bl	8004458 <json_value_get_array>
 800319e:	62f8      	str	r0, [r7, #44]	; 0x2c
 80031a0:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 80031a2:	f001 f913 	bl	80043cc <json_array_get_count>
 80031a6:	6278      	str	r0, [r7, #36]	; 0x24
 80031a8:	2301      	movs	r3, #1
 80031aa:	653b      	str	r3, [r7, #80]	; 0x50
 80031ac:	68bb      	ldr	r3, [r7, #8]
 80031ae:	2b00      	cmp	r3, #0
 80031b0:	d00e      	beq.n	80031d0 <json_serialize_to_buffer_r+0xb4>
 80031b2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031b4:	461a      	mov	r2, r3
 80031b6:	497e      	ldr	r1, [pc, #504]	; (80033b0 <json_serialize_to_buffer_r+0x294>)
 80031b8:	68b8      	ldr	r0, [r7, #8]
 80031ba:	f008 fc6d 	bl	800ba98 <memcpy>
 80031be:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031c0:	68ba      	ldr	r2, [r7, #8]
 80031c2:	4413      	add	r3, r2
 80031c4:	2200      	movs	r2, #0
 80031c6:	701a      	strb	r2, [r3, #0]
 80031c8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031ca:	68ba      	ldr	r2, [r7, #8]
 80031cc:	4413      	add	r3, r2
 80031ce:	60bb      	str	r3, [r7, #8]
 80031d0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80031d2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031d4:	4413      	add	r3, r2
 80031d6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80031d8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80031da:	2b00      	cmp	r3, #0
 80031dc:	d01a      	beq.n	8003214 <json_serialize_to_buffer_r+0xf8>
 80031de:	683b      	ldr	r3, [r7, #0]
 80031e0:	2b00      	cmp	r3, #0
 80031e2:	d017      	beq.n	8003214 <json_serialize_to_buffer_r+0xf8>
 80031e4:	2301      	movs	r3, #1
 80031e6:	653b      	str	r3, [r7, #80]	; 0x50
 80031e8:	68bb      	ldr	r3, [r7, #8]
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d00e      	beq.n	800320c <json_serialize_to_buffer_r+0xf0>
 80031ee:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031f0:	461a      	mov	r2, r3
 80031f2:	4970      	ldr	r1, [pc, #448]	; (80033b4 <json_serialize_to_buffer_r+0x298>)
 80031f4:	68b8      	ldr	r0, [r7, #8]
 80031f6:	f008 fc4f 	bl	800ba98 <memcpy>
 80031fa:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80031fc:	68ba      	ldr	r2, [r7, #8]
 80031fe:	4413      	add	r3, r2
 8003200:	2200      	movs	r2, #0
 8003202:	701a      	strb	r2, [r3, #0]
 8003204:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003206:	68ba      	ldr	r2, [r7, #8]
 8003208:	4413      	add	r3, r2
 800320a:	60bb      	str	r3, [r7, #8]
 800320c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800320e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003210:	4413      	add	r3, r2
 8003212:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003214:	2300      	movs	r3, #0
 8003216:	657b      	str	r3, [r7, #84]	; 0x54
 8003218:	e081      	b.n	800331e <json_serialize_to_buffer_r+0x202>
 800321a:	683b      	ldr	r3, [r7, #0]
 800321c:	2b00      	cmp	r3, #0
 800321e:	d023      	beq.n	8003268 <json_serialize_to_buffer_r+0x14c>
 8003220:	2300      	movs	r3, #0
 8003222:	64bb      	str	r3, [r7, #72]	; 0x48
 8003224:	2300      	movs	r3, #0
 8003226:	64bb      	str	r3, [r7, #72]	; 0x48
 8003228:	e01a      	b.n	8003260 <json_serialize_to_buffer_r+0x144>
 800322a:	2304      	movs	r3, #4
 800322c:	653b      	str	r3, [r7, #80]	; 0x50
 800322e:	68bb      	ldr	r3, [r7, #8]
 8003230:	2b00      	cmp	r3, #0
 8003232:	d00e      	beq.n	8003252 <json_serialize_to_buffer_r+0x136>
 8003234:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003236:	461a      	mov	r2, r3
 8003238:	495f      	ldr	r1, [pc, #380]	; (80033b8 <json_serialize_to_buffer_r+0x29c>)
 800323a:	68b8      	ldr	r0, [r7, #8]
 800323c:	f008 fc2c 	bl	800ba98 <memcpy>
 8003240:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003242:	68ba      	ldr	r2, [r7, #8]
 8003244:	4413      	add	r3, r2
 8003246:	2200      	movs	r2, #0
 8003248:	701a      	strb	r2, [r3, #0]
 800324a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800324c:	68ba      	ldr	r2, [r7, #8]
 800324e:	4413      	add	r3, r2
 8003250:	60bb      	str	r3, [r7, #8]
 8003252:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003254:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003256:	4413      	add	r3, r2
 8003258:	64fb      	str	r3, [r7, #76]	; 0x4c
 800325a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800325c:	3301      	adds	r3, #1
 800325e:	64bb      	str	r3, [r7, #72]	; 0x48
 8003260:	687a      	ldr	r2, [r7, #4]
 8003262:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003264:	429a      	cmp	r2, r3
 8003266:	dae0      	bge.n	800322a <json_serialize_to_buffer_r+0x10e>
 8003268:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800326a:	6af8      	ldr	r0, [r7, #44]	; 0x2c
 800326c:	f001 f893 	bl	8004396 <json_array_get_value>
 8003270:	6338      	str	r0, [r7, #48]	; 0x30
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	1c5a      	adds	r2, r3, #1
 8003276:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003278:	9300      	str	r3, [sp, #0]
 800327a:	683b      	ldr	r3, [r7, #0]
 800327c:	68b9      	ldr	r1, [r7, #8]
 800327e:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8003280:	f7ff ff4c 	bl	800311c <json_serialize_to_buffer_r>
 8003284:	6538      	str	r0, [r7, #80]	; 0x50
 8003286:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003288:	2b00      	cmp	r3, #0
 800328a:	da02      	bge.n	8003292 <json_serialize_to_buffer_r+0x176>
 800328c:	f04f 33ff 	mov.w	r3, #4294967295
 8003290:	e2c5      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 8003292:	68bb      	ldr	r3, [r7, #8]
 8003294:	2b00      	cmp	r3, #0
 8003296:	d003      	beq.n	80032a0 <json_serialize_to_buffer_r+0x184>
 8003298:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800329a:	68ba      	ldr	r2, [r7, #8]
 800329c:	4413      	add	r3, r2
 800329e:	60bb      	str	r3, [r7, #8]
 80032a0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80032a2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032a4:	4413      	add	r3, r2
 80032a6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80032a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80032aa:	3b01      	subs	r3, #1
 80032ac:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80032ae:	429a      	cmp	r2, r3
 80032b0:	d217      	bcs.n	80032e2 <json_serialize_to_buffer_r+0x1c6>
 80032b2:	2301      	movs	r3, #1
 80032b4:	653b      	str	r3, [r7, #80]	; 0x50
 80032b6:	68bb      	ldr	r3, [r7, #8]
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d00e      	beq.n	80032da <json_serialize_to_buffer_r+0x1be>
 80032bc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032be:	461a      	mov	r2, r3
 80032c0:	493e      	ldr	r1, [pc, #248]	; (80033bc <json_serialize_to_buffer_r+0x2a0>)
 80032c2:	68b8      	ldr	r0, [r7, #8]
 80032c4:	f008 fbe8 	bl	800ba98 <memcpy>
 80032c8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032ca:	68ba      	ldr	r2, [r7, #8]
 80032cc:	4413      	add	r3, r2
 80032ce:	2200      	movs	r2, #0
 80032d0:	701a      	strb	r2, [r3, #0]
 80032d2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032d4:	68ba      	ldr	r2, [r7, #8]
 80032d6:	4413      	add	r3, r2
 80032d8:	60bb      	str	r3, [r7, #8]
 80032da:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80032dc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032de:	4413      	add	r3, r2
 80032e0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80032e2:	683b      	ldr	r3, [r7, #0]
 80032e4:	2b00      	cmp	r3, #0
 80032e6:	d017      	beq.n	8003318 <json_serialize_to_buffer_r+0x1fc>
 80032e8:	2301      	movs	r3, #1
 80032ea:	653b      	str	r3, [r7, #80]	; 0x50
 80032ec:	68bb      	ldr	r3, [r7, #8]
 80032ee:	2b00      	cmp	r3, #0
 80032f0:	d00e      	beq.n	8003310 <json_serialize_to_buffer_r+0x1f4>
 80032f2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80032f4:	461a      	mov	r2, r3
 80032f6:	492f      	ldr	r1, [pc, #188]	; (80033b4 <json_serialize_to_buffer_r+0x298>)
 80032f8:	68b8      	ldr	r0, [r7, #8]
 80032fa:	f008 fbcd 	bl	800ba98 <memcpy>
 80032fe:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003300:	68ba      	ldr	r2, [r7, #8]
 8003302:	4413      	add	r3, r2
 8003304:	2200      	movs	r2, #0
 8003306:	701a      	strb	r2, [r3, #0]
 8003308:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800330a:	68ba      	ldr	r2, [r7, #8]
 800330c:	4413      	add	r3, r2
 800330e:	60bb      	str	r3, [r7, #8]
 8003310:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003312:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003314:	4413      	add	r3, r2
 8003316:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003318:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800331a:	3301      	adds	r3, #1
 800331c:	657b      	str	r3, [r7, #84]	; 0x54
 800331e:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 8003320:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003322:	429a      	cmp	r2, r3
 8003324:	f4ff af79 	bcc.w	800321a <json_serialize_to_buffer_r+0xfe>
 8003328:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800332a:	2b00      	cmp	r3, #0
 800332c:	d026      	beq.n	800337c <json_serialize_to_buffer_r+0x260>
 800332e:	683b      	ldr	r3, [r7, #0]
 8003330:	2b00      	cmp	r3, #0
 8003332:	d023      	beq.n	800337c <json_serialize_to_buffer_r+0x260>
 8003334:	2300      	movs	r3, #0
 8003336:	647b      	str	r3, [r7, #68]	; 0x44
 8003338:	2300      	movs	r3, #0
 800333a:	647b      	str	r3, [r7, #68]	; 0x44
 800333c:	e01a      	b.n	8003374 <json_serialize_to_buffer_r+0x258>
 800333e:	2304      	movs	r3, #4
 8003340:	653b      	str	r3, [r7, #80]	; 0x50
 8003342:	68bb      	ldr	r3, [r7, #8]
 8003344:	2b00      	cmp	r3, #0
 8003346:	d00e      	beq.n	8003366 <json_serialize_to_buffer_r+0x24a>
 8003348:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800334a:	461a      	mov	r2, r3
 800334c:	491a      	ldr	r1, [pc, #104]	; (80033b8 <json_serialize_to_buffer_r+0x29c>)
 800334e:	68b8      	ldr	r0, [r7, #8]
 8003350:	f008 fba2 	bl	800ba98 <memcpy>
 8003354:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003356:	68ba      	ldr	r2, [r7, #8]
 8003358:	4413      	add	r3, r2
 800335a:	2200      	movs	r2, #0
 800335c:	701a      	strb	r2, [r3, #0]
 800335e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003360:	68ba      	ldr	r2, [r7, #8]
 8003362:	4413      	add	r3, r2
 8003364:	60bb      	str	r3, [r7, #8]
 8003366:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003368:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800336a:	4413      	add	r3, r2
 800336c:	64fb      	str	r3, [r7, #76]	; 0x4c
 800336e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003370:	3301      	adds	r3, #1
 8003372:	647b      	str	r3, [r7, #68]	; 0x44
 8003374:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	429a      	cmp	r2, r3
 800337a:	dbe0      	blt.n	800333e <json_serialize_to_buffer_r+0x222>
 800337c:	2301      	movs	r3, #1
 800337e:	653b      	str	r3, [r7, #80]	; 0x50
 8003380:	68bb      	ldr	r3, [r7, #8]
 8003382:	2b00      	cmp	r3, #0
 8003384:	d00e      	beq.n	80033a4 <json_serialize_to_buffer_r+0x288>
 8003386:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003388:	461a      	mov	r2, r3
 800338a:	490d      	ldr	r1, [pc, #52]	; (80033c0 <json_serialize_to_buffer_r+0x2a4>)
 800338c:	68b8      	ldr	r0, [r7, #8]
 800338e:	f008 fb83 	bl	800ba98 <memcpy>
 8003392:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003394:	68ba      	ldr	r2, [r7, #8]
 8003396:	4413      	add	r3, r2
 8003398:	2200      	movs	r2, #0
 800339a:	701a      	strb	r2, [r3, #0]
 800339c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800339e:	68ba      	ldr	r2, [r7, #8]
 80033a0:	4413      	add	r3, r2
 80033a2:	60bb      	str	r3, [r7, #8]
 80033a4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80033a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80033a8:	4413      	add	r3, r2
 80033aa:	64fb      	str	r3, [r7, #76]	; 0x4c
 80033ac:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80033ae:	e236      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80033b0:	0800ecb4 	.word	0x0800ecb4
 80033b4:	0800ecb8 	.word	0x0800ecb8
 80033b8:	0800ecbc 	.word	0x0800ecbc
 80033bc:	0800ecc4 	.word	0x0800ecc4
 80033c0:	0800ecc8 	.word	0x0800ecc8
 80033c4:	68f8      	ldr	r0, [r7, #12]
 80033c6:	f001 f835 	bl	8004434 <json_value_get_object>
 80033ca:	62b8      	str	r0, [r7, #40]	; 0x28
 80033cc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80033ce:	f000 ff8a 	bl	80042e6 <json_object_get_count>
 80033d2:	6278      	str	r0, [r7, #36]	; 0x24
 80033d4:	2301      	movs	r3, #1
 80033d6:	653b      	str	r3, [r7, #80]	; 0x50
 80033d8:	68bb      	ldr	r3, [r7, #8]
 80033da:	2b00      	cmp	r3, #0
 80033dc:	d00e      	beq.n	80033fc <json_serialize_to_buffer_r+0x2e0>
 80033de:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80033e0:	461a      	mov	r2, r3
 80033e2:	498e      	ldr	r1, [pc, #568]	; (800361c <json_serialize_to_buffer_r+0x500>)
 80033e4:	68b8      	ldr	r0, [r7, #8]
 80033e6:	f008 fb57 	bl	800ba98 <memcpy>
 80033ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80033ec:	68ba      	ldr	r2, [r7, #8]
 80033ee:	4413      	add	r3, r2
 80033f0:	2200      	movs	r2, #0
 80033f2:	701a      	strb	r2, [r3, #0]
 80033f4:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80033f6:	68ba      	ldr	r2, [r7, #8]
 80033f8:	4413      	add	r3, r2
 80033fa:	60bb      	str	r3, [r7, #8]
 80033fc:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80033fe:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003400:	4413      	add	r3, r2
 8003402:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003404:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003406:	2b00      	cmp	r3, #0
 8003408:	d01a      	beq.n	8003440 <json_serialize_to_buffer_r+0x324>
 800340a:	683b      	ldr	r3, [r7, #0]
 800340c:	2b00      	cmp	r3, #0
 800340e:	d017      	beq.n	8003440 <json_serialize_to_buffer_r+0x324>
 8003410:	2301      	movs	r3, #1
 8003412:	653b      	str	r3, [r7, #80]	; 0x50
 8003414:	68bb      	ldr	r3, [r7, #8]
 8003416:	2b00      	cmp	r3, #0
 8003418:	d00e      	beq.n	8003438 <json_serialize_to_buffer_r+0x31c>
 800341a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800341c:	461a      	mov	r2, r3
 800341e:	4980      	ldr	r1, [pc, #512]	; (8003620 <json_serialize_to_buffer_r+0x504>)
 8003420:	68b8      	ldr	r0, [r7, #8]
 8003422:	f008 fb39 	bl	800ba98 <memcpy>
 8003426:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003428:	68ba      	ldr	r2, [r7, #8]
 800342a:	4413      	add	r3, r2
 800342c:	2200      	movs	r2, #0
 800342e:	701a      	strb	r2, [r3, #0]
 8003430:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003432:	68ba      	ldr	r2, [r7, #8]
 8003434:	4413      	add	r3, r2
 8003436:	60bb      	str	r3, [r7, #8]
 8003438:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800343a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800343c:	4413      	add	r3, r2
 800343e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003440:	2300      	movs	r3, #0
 8003442:	657b      	str	r3, [r7, #84]	; 0x54
 8003444:	e0da      	b.n	80035fc <json_serialize_to_buffer_r+0x4e0>
 8003446:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8003448:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800344a:	f000 ff5d 	bl	8004308 <json_object_get_name>
 800344e:	63b8      	str	r0, [r7, #56]	; 0x38
 8003450:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003452:	2b00      	cmp	r3, #0
 8003454:	d102      	bne.n	800345c <json_serialize_to_buffer_r+0x340>
 8003456:	f04f 33ff 	mov.w	r3, #4294967295
 800345a:	e1e0      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 800345c:	683b      	ldr	r3, [r7, #0]
 800345e:	2b00      	cmp	r3, #0
 8003460:	d023      	beq.n	80034aa <json_serialize_to_buffer_r+0x38e>
 8003462:	2300      	movs	r3, #0
 8003464:	643b      	str	r3, [r7, #64]	; 0x40
 8003466:	2300      	movs	r3, #0
 8003468:	643b      	str	r3, [r7, #64]	; 0x40
 800346a:	e01a      	b.n	80034a2 <json_serialize_to_buffer_r+0x386>
 800346c:	2304      	movs	r3, #4
 800346e:	653b      	str	r3, [r7, #80]	; 0x50
 8003470:	68bb      	ldr	r3, [r7, #8]
 8003472:	2b00      	cmp	r3, #0
 8003474:	d00e      	beq.n	8003494 <json_serialize_to_buffer_r+0x378>
 8003476:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003478:	461a      	mov	r2, r3
 800347a:	496a      	ldr	r1, [pc, #424]	; (8003624 <json_serialize_to_buffer_r+0x508>)
 800347c:	68b8      	ldr	r0, [r7, #8]
 800347e:	f008 fb0b 	bl	800ba98 <memcpy>
 8003482:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003484:	68ba      	ldr	r2, [r7, #8]
 8003486:	4413      	add	r3, r2
 8003488:	2200      	movs	r2, #0
 800348a:	701a      	strb	r2, [r3, #0]
 800348c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800348e:	68ba      	ldr	r2, [r7, #8]
 8003490:	4413      	add	r3, r2
 8003492:	60bb      	str	r3, [r7, #8]
 8003494:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003496:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003498:	4413      	add	r3, r2
 800349a:	64fb      	str	r3, [r7, #76]	; 0x4c
 800349c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800349e:	3301      	adds	r3, #1
 80034a0:	643b      	str	r3, [r7, #64]	; 0x40
 80034a2:	687a      	ldr	r2, [r7, #4]
 80034a4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80034a6:	429a      	cmp	r2, r3
 80034a8:	dae0      	bge.n	800346c <json_serialize_to_buffer_r+0x350>
 80034aa:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80034ac:	f7fc fe68 	bl	8000180 <strlen>
 80034b0:	4603      	mov	r3, r0
 80034b2:	68ba      	ldr	r2, [r7, #8]
 80034b4:	4619      	mov	r1, r3
 80034b6:	6bb8      	ldr	r0, [r7, #56]	; 0x38
 80034b8:	f000 f9c6 	bl	8003848 <json_serialize_string>
 80034bc:	6538      	str	r0, [r7, #80]	; 0x50
 80034be:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80034c0:	2b00      	cmp	r3, #0
 80034c2:	da02      	bge.n	80034ca <json_serialize_to_buffer_r+0x3ae>
 80034c4:	f04f 33ff 	mov.w	r3, #4294967295
 80034c8:	e1a9      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80034ca:	68bb      	ldr	r3, [r7, #8]
 80034cc:	2b00      	cmp	r3, #0
 80034ce:	d003      	beq.n	80034d8 <json_serialize_to_buffer_r+0x3bc>
 80034d0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80034d2:	68ba      	ldr	r2, [r7, #8]
 80034d4:	4413      	add	r3, r2
 80034d6:	60bb      	str	r3, [r7, #8]
 80034d8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80034da:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80034dc:	4413      	add	r3, r2
 80034de:	64fb      	str	r3, [r7, #76]	; 0x4c
 80034e0:	2301      	movs	r3, #1
 80034e2:	653b      	str	r3, [r7, #80]	; 0x50
 80034e4:	68bb      	ldr	r3, [r7, #8]
 80034e6:	2b00      	cmp	r3, #0
 80034e8:	d00e      	beq.n	8003508 <json_serialize_to_buffer_r+0x3ec>
 80034ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80034ec:	461a      	mov	r2, r3
 80034ee:	494e      	ldr	r1, [pc, #312]	; (8003628 <json_serialize_to_buffer_r+0x50c>)
 80034f0:	68b8      	ldr	r0, [r7, #8]
 80034f2:	f008 fad1 	bl	800ba98 <memcpy>
 80034f6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80034f8:	68ba      	ldr	r2, [r7, #8]
 80034fa:	4413      	add	r3, r2
 80034fc:	2200      	movs	r2, #0
 80034fe:	701a      	strb	r2, [r3, #0]
 8003500:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003502:	68ba      	ldr	r2, [r7, #8]
 8003504:	4413      	add	r3, r2
 8003506:	60bb      	str	r3, [r7, #8]
 8003508:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800350a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800350c:	4413      	add	r3, r2
 800350e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003510:	683b      	ldr	r3, [r7, #0]
 8003512:	2b00      	cmp	r3, #0
 8003514:	d017      	beq.n	8003546 <json_serialize_to_buffer_r+0x42a>
 8003516:	2301      	movs	r3, #1
 8003518:	653b      	str	r3, [r7, #80]	; 0x50
 800351a:	68bb      	ldr	r3, [r7, #8]
 800351c:	2b00      	cmp	r3, #0
 800351e:	d00e      	beq.n	800353e <json_serialize_to_buffer_r+0x422>
 8003520:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003522:	461a      	mov	r2, r3
 8003524:	4941      	ldr	r1, [pc, #260]	; (800362c <json_serialize_to_buffer_r+0x510>)
 8003526:	68b8      	ldr	r0, [r7, #8]
 8003528:	f008 fab6 	bl	800ba98 <memcpy>
 800352c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800352e:	68ba      	ldr	r2, [r7, #8]
 8003530:	4413      	add	r3, r2
 8003532:	2200      	movs	r2, #0
 8003534:	701a      	strb	r2, [r3, #0]
 8003536:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003538:	68ba      	ldr	r2, [r7, #8]
 800353a:	4413      	add	r3, r2
 800353c:	60bb      	str	r3, [r7, #8]
 800353e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003540:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003542:	4413      	add	r3, r2
 8003544:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003546:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8003548:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800354a:	f000 fef8 	bl	800433e <json_object_get_value_at>
 800354e:	6338      	str	r0, [r7, #48]	; 0x30
 8003550:	687b      	ldr	r3, [r7, #4]
 8003552:	1c5a      	adds	r2, r3, #1
 8003554:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8003556:	9300      	str	r3, [sp, #0]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	68b9      	ldr	r1, [r7, #8]
 800355c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800355e:	f7ff fddd 	bl	800311c <json_serialize_to_buffer_r>
 8003562:	6538      	str	r0, [r7, #80]	; 0x50
 8003564:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003566:	2b00      	cmp	r3, #0
 8003568:	da02      	bge.n	8003570 <json_serialize_to_buffer_r+0x454>
 800356a:	f04f 33ff 	mov.w	r3, #4294967295
 800356e:	e156      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 8003570:	68bb      	ldr	r3, [r7, #8]
 8003572:	2b00      	cmp	r3, #0
 8003574:	d003      	beq.n	800357e <json_serialize_to_buffer_r+0x462>
 8003576:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003578:	68ba      	ldr	r2, [r7, #8]
 800357a:	4413      	add	r3, r2
 800357c:	60bb      	str	r3, [r7, #8]
 800357e:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003580:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003582:	4413      	add	r3, r2
 8003584:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003586:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003588:	3b01      	subs	r3, #1
 800358a:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 800358c:	429a      	cmp	r2, r3
 800358e:	d217      	bcs.n	80035c0 <json_serialize_to_buffer_r+0x4a4>
 8003590:	2301      	movs	r3, #1
 8003592:	653b      	str	r3, [r7, #80]	; 0x50
 8003594:	68bb      	ldr	r3, [r7, #8]
 8003596:	2b00      	cmp	r3, #0
 8003598:	d00e      	beq.n	80035b8 <json_serialize_to_buffer_r+0x49c>
 800359a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800359c:	461a      	mov	r2, r3
 800359e:	4924      	ldr	r1, [pc, #144]	; (8003630 <json_serialize_to_buffer_r+0x514>)
 80035a0:	68b8      	ldr	r0, [r7, #8]
 80035a2:	f008 fa79 	bl	800ba98 <memcpy>
 80035a6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035a8:	68ba      	ldr	r2, [r7, #8]
 80035aa:	4413      	add	r3, r2
 80035ac:	2200      	movs	r2, #0
 80035ae:	701a      	strb	r2, [r3, #0]
 80035b0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035b2:	68ba      	ldr	r2, [r7, #8]
 80035b4:	4413      	add	r3, r2
 80035b6:	60bb      	str	r3, [r7, #8]
 80035b8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80035ba:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035bc:	4413      	add	r3, r2
 80035be:	64fb      	str	r3, [r7, #76]	; 0x4c
 80035c0:	683b      	ldr	r3, [r7, #0]
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d017      	beq.n	80035f6 <json_serialize_to_buffer_r+0x4da>
 80035c6:	2301      	movs	r3, #1
 80035c8:	653b      	str	r3, [r7, #80]	; 0x50
 80035ca:	68bb      	ldr	r3, [r7, #8]
 80035cc:	2b00      	cmp	r3, #0
 80035ce:	d00e      	beq.n	80035ee <json_serialize_to_buffer_r+0x4d2>
 80035d0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035d2:	461a      	mov	r2, r3
 80035d4:	4912      	ldr	r1, [pc, #72]	; (8003620 <json_serialize_to_buffer_r+0x504>)
 80035d6:	68b8      	ldr	r0, [r7, #8]
 80035d8:	f008 fa5e 	bl	800ba98 <memcpy>
 80035dc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035de:	68ba      	ldr	r2, [r7, #8]
 80035e0:	4413      	add	r3, r2
 80035e2:	2200      	movs	r2, #0
 80035e4:	701a      	strb	r2, [r3, #0]
 80035e6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035e8:	68ba      	ldr	r2, [r7, #8]
 80035ea:	4413      	add	r3, r2
 80035ec:	60bb      	str	r3, [r7, #8]
 80035ee:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80035f0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80035f2:	4413      	add	r3, r2
 80035f4:	64fb      	str	r3, [r7, #76]	; 0x4c
 80035f6:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 80035f8:	3301      	adds	r3, #1
 80035fa:	657b      	str	r3, [r7, #84]	; 0x54
 80035fc:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80035fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003600:	429a      	cmp	r2, r3
 8003602:	f4ff af20 	bcc.w	8003446 <json_serialize_to_buffer_r+0x32a>
 8003606:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003608:	2b00      	cmp	r3, #0
 800360a:	d032      	beq.n	8003672 <json_serialize_to_buffer_r+0x556>
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	2b00      	cmp	r3, #0
 8003610:	d02f      	beq.n	8003672 <json_serialize_to_buffer_r+0x556>
 8003612:	2300      	movs	r3, #0
 8003614:	63fb      	str	r3, [r7, #60]	; 0x3c
 8003616:	2300      	movs	r3, #0
 8003618:	63fb      	str	r3, [r7, #60]	; 0x3c
 800361a:	e026      	b.n	800366a <json_serialize_to_buffer_r+0x54e>
 800361c:	0800eccc 	.word	0x0800eccc
 8003620:	0800ecb8 	.word	0x0800ecb8
 8003624:	0800ecbc 	.word	0x0800ecbc
 8003628:	0800ecd0 	.word	0x0800ecd0
 800362c:	0800ecd4 	.word	0x0800ecd4
 8003630:	0800ecc4 	.word	0x0800ecc4
 8003634:	2304      	movs	r3, #4
 8003636:	653b      	str	r3, [r7, #80]	; 0x50
 8003638:	68bb      	ldr	r3, [r7, #8]
 800363a:	2b00      	cmp	r3, #0
 800363c:	d00e      	beq.n	800365c <json_serialize_to_buffer_r+0x540>
 800363e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003640:	461a      	mov	r2, r3
 8003642:	4979      	ldr	r1, [pc, #484]	; (8003828 <json_serialize_to_buffer_r+0x70c>)
 8003644:	68b8      	ldr	r0, [r7, #8]
 8003646:	f008 fa27 	bl	800ba98 <memcpy>
 800364a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800364c:	68ba      	ldr	r2, [r7, #8]
 800364e:	4413      	add	r3, r2
 8003650:	2200      	movs	r2, #0
 8003652:	701a      	strb	r2, [r3, #0]
 8003654:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003656:	68ba      	ldr	r2, [r7, #8]
 8003658:	4413      	add	r3, r2
 800365a:	60bb      	str	r3, [r7, #8]
 800365c:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800365e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003660:	4413      	add	r3, r2
 8003662:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003664:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003666:	3301      	adds	r3, #1
 8003668:	63fb      	str	r3, [r7, #60]	; 0x3c
 800366a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	429a      	cmp	r2, r3
 8003670:	dbe0      	blt.n	8003634 <json_serialize_to_buffer_r+0x518>
 8003672:	2301      	movs	r3, #1
 8003674:	653b      	str	r3, [r7, #80]	; 0x50
 8003676:	68bb      	ldr	r3, [r7, #8]
 8003678:	2b00      	cmp	r3, #0
 800367a:	d00e      	beq.n	800369a <json_serialize_to_buffer_r+0x57e>
 800367c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800367e:	461a      	mov	r2, r3
 8003680:	496a      	ldr	r1, [pc, #424]	; (800382c <json_serialize_to_buffer_r+0x710>)
 8003682:	68b8      	ldr	r0, [r7, #8]
 8003684:	f008 fa08 	bl	800ba98 <memcpy>
 8003688:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800368a:	68ba      	ldr	r2, [r7, #8]
 800368c:	4413      	add	r3, r2
 800368e:	2200      	movs	r2, #0
 8003690:	701a      	strb	r2, [r3, #0]
 8003692:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003694:	68ba      	ldr	r2, [r7, #8]
 8003696:	4413      	add	r3, r2
 8003698:	60bb      	str	r3, [r7, #8]
 800369a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800369c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800369e:	4413      	add	r3, r2
 80036a0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80036a2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80036a4:	e0bb      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80036a6:	68f8      	ldr	r0, [r7, #12]
 80036a8:	f000 fefa 	bl	80044a0 <json_value_get_string>
 80036ac:	6378      	str	r0, [r7, #52]	; 0x34
 80036ae:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80036b0:	2b00      	cmp	r3, #0
 80036b2:	d102      	bne.n	80036ba <json_serialize_to_buffer_r+0x59e>
 80036b4:	f04f 33ff 	mov.w	r3, #4294967295
 80036b8:	e0b1      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80036ba:	68f8      	ldr	r0, [r7, #12]
 80036bc:	f000 ff03 	bl	80044c6 <json_value_get_string_len>
 80036c0:	6178      	str	r0, [r7, #20]
 80036c2:	68ba      	ldr	r2, [r7, #8]
 80036c4:	6979      	ldr	r1, [r7, #20]
 80036c6:	6b78      	ldr	r0, [r7, #52]	; 0x34
 80036c8:	f000 f8be 	bl	8003848 <json_serialize_string>
 80036cc:	6538      	str	r0, [r7, #80]	; 0x50
 80036ce:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80036d0:	2b00      	cmp	r3, #0
 80036d2:	da02      	bge.n	80036da <json_serialize_to_buffer_r+0x5be>
 80036d4:	f04f 33ff 	mov.w	r3, #4294967295
 80036d8:	e0a1      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80036da:	68bb      	ldr	r3, [r7, #8]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d003      	beq.n	80036e8 <json_serialize_to_buffer_r+0x5cc>
 80036e0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80036e2:	68ba      	ldr	r2, [r7, #8]
 80036e4:	4413      	add	r3, r2
 80036e6:	60bb      	str	r3, [r7, #8]
 80036e8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80036ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80036ec:	4413      	add	r3, r2
 80036ee:	64fb      	str	r3, [r7, #76]	; 0x4c
 80036f0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80036f2:	e094      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80036f4:	68f8      	ldr	r0, [r7, #12]
 80036f6:	f000 ff14 	bl	8004522 <json_value_get_boolean>
 80036fa:	4603      	mov	r3, r0
 80036fc:	2b00      	cmp	r3, #0
 80036fe:	d018      	beq.n	8003732 <json_serialize_to_buffer_r+0x616>
 8003700:	2304      	movs	r3, #4
 8003702:	653b      	str	r3, [r7, #80]	; 0x50
 8003704:	68bb      	ldr	r3, [r7, #8]
 8003706:	2b00      	cmp	r3, #0
 8003708:	d00e      	beq.n	8003728 <json_serialize_to_buffer_r+0x60c>
 800370a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800370c:	461a      	mov	r2, r3
 800370e:	4948      	ldr	r1, [pc, #288]	; (8003830 <json_serialize_to_buffer_r+0x714>)
 8003710:	68b8      	ldr	r0, [r7, #8]
 8003712:	f008 f9c1 	bl	800ba98 <memcpy>
 8003716:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003718:	68ba      	ldr	r2, [r7, #8]
 800371a:	4413      	add	r3, r2
 800371c:	2200      	movs	r2, #0
 800371e:	701a      	strb	r2, [r3, #0]
 8003720:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003722:	68ba      	ldr	r2, [r7, #8]
 8003724:	4413      	add	r3, r2
 8003726:	60bb      	str	r3, [r7, #8]
 8003728:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800372a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800372c:	4413      	add	r3, r2
 800372e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003730:	e017      	b.n	8003762 <json_serialize_to_buffer_r+0x646>
 8003732:	2305      	movs	r3, #5
 8003734:	653b      	str	r3, [r7, #80]	; 0x50
 8003736:	68bb      	ldr	r3, [r7, #8]
 8003738:	2b00      	cmp	r3, #0
 800373a:	d00e      	beq.n	800375a <json_serialize_to_buffer_r+0x63e>
 800373c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800373e:	461a      	mov	r2, r3
 8003740:	493c      	ldr	r1, [pc, #240]	; (8003834 <json_serialize_to_buffer_r+0x718>)
 8003742:	68b8      	ldr	r0, [r7, #8]
 8003744:	f008 f9a8 	bl	800ba98 <memcpy>
 8003748:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800374a:	68ba      	ldr	r2, [r7, #8]
 800374c:	4413      	add	r3, r2
 800374e:	2200      	movs	r2, #0
 8003750:	701a      	strb	r2, [r3, #0]
 8003752:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003754:	68ba      	ldr	r2, [r7, #8]
 8003756:	4413      	add	r3, r2
 8003758:	60bb      	str	r3, [r7, #8]
 800375a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800375c:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800375e:	4413      	add	r3, r2
 8003760:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003762:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003764:	e05b      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 8003766:	68f8      	ldr	r0, [r7, #12]
 8003768:	f000 fec0 	bl	80044ec <json_value_get_number>
 800376c:	ed87 0b06 	vstr	d0, [r7, #24]
 8003770:	68bb      	ldr	r3, [r7, #8]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d001      	beq.n	800377a <json_serialize_to_buffer_r+0x65e>
 8003776:	68bb      	ldr	r3, [r7, #8]
 8003778:	663b      	str	r3, [r7, #96]	; 0x60
 800377a:	4b2f      	ldr	r3, [pc, #188]	; (8003838 <json_serialize_to_buffer_r+0x71c>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	2b00      	cmp	r3, #0
 8003780:	d007      	beq.n	8003792 <json_serialize_to_buffer_r+0x676>
 8003782:	4b2d      	ldr	r3, [pc, #180]	; (8003838 <json_serialize_to_buffer_r+0x71c>)
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8003788:	ed97 0b06 	vldr	d0, [r7, #24]
 800378c:	4798      	blx	r3
 800378e:	6538      	str	r0, [r7, #80]	; 0x50
 8003790:	e013      	b.n	80037ba <json_serialize_to_buffer_r+0x69e>
 8003792:	4b2a      	ldr	r3, [pc, #168]	; (800383c <json_serialize_to_buffer_r+0x720>)
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	2b00      	cmp	r3, #0
 8003798:	d008      	beq.n	80037ac <json_serialize_to_buffer_r+0x690>
 800379a:	4b28      	ldr	r3, [pc, #160]	; (800383c <json_serialize_to_buffer_r+0x720>)
 800379c:	6819      	ldr	r1, [r3, #0]
 800379e:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80037a2:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80037a4:	f008 fb26 	bl	800bdf4 <siprintf>
 80037a8:	6538      	str	r0, [r7, #80]	; 0x50
 80037aa:	e006      	b.n	80037ba <json_serialize_to_buffer_r+0x69e>
 80037ac:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80037b0:	4923      	ldr	r1, [pc, #140]	; (8003840 <json_serialize_to_buffer_r+0x724>)
 80037b2:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80037b4:	f008 fb1e 	bl	800bdf4 <siprintf>
 80037b8:	6538      	str	r0, [r7, #80]	; 0x50
 80037ba:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80037bc:	2b00      	cmp	r3, #0
 80037be:	da02      	bge.n	80037c6 <json_serialize_to_buffer_r+0x6aa>
 80037c0:	f04f 33ff 	mov.w	r3, #4294967295
 80037c4:	e02b      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80037c6:	68bb      	ldr	r3, [r7, #8]
 80037c8:	2b00      	cmp	r3, #0
 80037ca:	d003      	beq.n	80037d4 <json_serialize_to_buffer_r+0x6b8>
 80037cc:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80037ce:	68ba      	ldr	r2, [r7, #8]
 80037d0:	4413      	add	r3, r2
 80037d2:	60bb      	str	r3, [r7, #8]
 80037d4:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80037d6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80037d8:	4413      	add	r3, r2
 80037da:	64fb      	str	r3, [r7, #76]	; 0x4c
 80037dc:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80037de:	e01e      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 80037e0:	2304      	movs	r3, #4
 80037e2:	653b      	str	r3, [r7, #80]	; 0x50
 80037e4:	68bb      	ldr	r3, [r7, #8]
 80037e6:	2b00      	cmp	r3, #0
 80037e8:	d00e      	beq.n	8003808 <json_serialize_to_buffer_r+0x6ec>
 80037ea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80037ec:	461a      	mov	r2, r3
 80037ee:	4915      	ldr	r1, [pc, #84]	; (8003844 <json_serialize_to_buffer_r+0x728>)
 80037f0:	68b8      	ldr	r0, [r7, #8]
 80037f2:	f008 f951 	bl	800ba98 <memcpy>
 80037f6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80037f8:	68ba      	ldr	r2, [r7, #8]
 80037fa:	4413      	add	r3, r2
 80037fc:	2200      	movs	r2, #0
 80037fe:	701a      	strb	r2, [r3, #0]
 8003800:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003802:	68ba      	ldr	r2, [r7, #8]
 8003804:	4413      	add	r3, r2
 8003806:	60bb      	str	r3, [r7, #8]
 8003808:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800380a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800380c:	4413      	add	r3, r2
 800380e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003810:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003812:	e004      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 8003814:	f04f 33ff 	mov.w	r3, #4294967295
 8003818:	e001      	b.n	800381e <json_serialize_to_buffer_r+0x702>
 800381a:	f04f 33ff 	mov.w	r3, #4294967295
 800381e:	4618      	mov	r0, r3
 8003820:	3758      	adds	r7, #88	; 0x58
 8003822:	46bd      	mov	sp, r7
 8003824:	bd80      	pop	{r7, pc}
 8003826:	bf00      	nop
 8003828:	0800ecbc 	.word	0x0800ecbc
 800382c:	0800ecd8 	.word	0x0800ecd8
 8003830:	0800ec9c 	.word	0x0800ec9c
 8003834:	0800eca4 	.word	0x0800eca4
 8003838:	20000014 	.word	0x20000014
 800383c:	20000744 	.word	0x20000744
 8003840:	0800ecdc 	.word	0x0800ecdc
 8003844:	0800ecac 	.word	0x0800ecac

08003848 <json_serialize_string>:
 8003848:	b580      	push	{r7, lr}
 800384a:	b088      	sub	sp, #32
 800384c:	af00      	add	r7, sp, #0
 800384e:	60f8      	str	r0, [r7, #12]
 8003850:	60b9      	str	r1, [r7, #8]
 8003852:	607a      	str	r2, [r7, #4]
 8003854:	2300      	movs	r3, #0
 8003856:	61fb      	str	r3, [r7, #28]
 8003858:	2300      	movs	r3, #0
 800385a:	75fb      	strb	r3, [r7, #23]
 800385c:	f04f 33ff 	mov.w	r3, #4294967295
 8003860:	613b      	str	r3, [r7, #16]
 8003862:	2300      	movs	r3, #0
 8003864:	61bb      	str	r3, [r7, #24]
 8003866:	2302      	movs	r3, #2
 8003868:	613b      	str	r3, [r7, #16]
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	2b00      	cmp	r3, #0
 800386e:	d00e      	beq.n	800388e <json_serialize_string+0x46>
 8003870:	693b      	ldr	r3, [r7, #16]
 8003872:	461a      	mov	r2, r3
 8003874:	49b8      	ldr	r1, [pc, #736]	; (8003b58 <json_serialize_string+0x310>)
 8003876:	6878      	ldr	r0, [r7, #4]
 8003878:	f008 f90e 	bl	800ba98 <memcpy>
 800387c:	693b      	ldr	r3, [r7, #16]
 800387e:	687a      	ldr	r2, [r7, #4]
 8003880:	4413      	add	r3, r2
 8003882:	2200      	movs	r2, #0
 8003884:	701a      	strb	r2, [r3, #0]
 8003886:	693b      	ldr	r3, [r7, #16]
 8003888:	687a      	ldr	r2, [r7, #4]
 800388a:	4413      	add	r3, r2
 800388c:	607b      	str	r3, [r7, #4]
 800388e:	69ba      	ldr	r2, [r7, #24]
 8003890:	693b      	ldr	r3, [r7, #16]
 8003892:	4413      	add	r3, r2
 8003894:	61bb      	str	r3, [r7, #24]
 8003896:	2300      	movs	r3, #0
 8003898:	61fb      	str	r3, [r7, #28]
 800389a:	f000 bc9b 	b.w	80041d4 <json_serialize_string+0x98c>
 800389e:	68fa      	ldr	r2, [r7, #12]
 80038a0:	69fb      	ldr	r3, [r7, #28]
 80038a2:	4413      	add	r3, r2
 80038a4:	781b      	ldrb	r3, [r3, #0]
 80038a6:	75fb      	strb	r3, [r7, #23]
 80038a8:	7dfb      	ldrb	r3, [r7, #23]
 80038aa:	2b5c      	cmp	r3, #92	; 0x5c
 80038ac:	f200 8482 	bhi.w	80041b4 <json_serialize_string+0x96c>
 80038b0:	a201      	add	r2, pc, #4	; (adr r2, 80038b8 <json_serialize_string+0x70>)
 80038b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80038b6:	bf00      	nop
 80038b8:	08003ba3 	.word	0x08003ba3
 80038bc:	08003bd5 	.word	0x08003bd5
 80038c0:	08003c07 	.word	0x08003c07
 80038c4:	08003c39 	.word	0x08003c39
 80038c8:	08003c6b 	.word	0x08003c6b
 80038cc:	08003c9d 	.word	0x08003c9d
 80038d0:	08003ccf 	.word	0x08003ccf
 80038d4:	08003d01 	.word	0x08003d01
 80038d8:	08003a91 	.word	0x08003a91
 80038dc:	08003b71 	.word	0x08003b71
 80038e0:	08003af5 	.word	0x08003af5
 80038e4:	08003d33 	.word	0x08003d33
 80038e8:	08003ac3 	.word	0x08003ac3
 80038ec:	08003b27 	.word	0x08003b27
 80038f0:	08003d65 	.word	0x08003d65
 80038f4:	08003d97 	.word	0x08003d97
 80038f8:	08003df9 	.word	0x08003df9
 80038fc:	08003e2b 	.word	0x08003e2b
 8003900:	08003e5d 	.word	0x08003e5d
 8003904:	08003e8f 	.word	0x08003e8f
 8003908:	08003ec1 	.word	0x08003ec1
 800390c:	08003ef3 	.word	0x08003ef3
 8003910:	08003f25 	.word	0x08003f25
 8003914:	08003f57 	.word	0x08003f57
 8003918:	08003f89 	.word	0x08003f89
 800391c:	08003fbb 	.word	0x08003fbb
 8003920:	08003fed 	.word	0x08003fed
 8003924:	0800401f 	.word	0x0800401f
 8003928:	08004081 	.word	0x08004081
 800392c:	080040b3 	.word	0x080040b3
 8003930:	080040e5 	.word	0x080040e5
 8003934:	08004117 	.word	0x08004117
 8003938:	080041b5 	.word	0x080041b5
 800393c:	080041b5 	.word	0x080041b5
 8003940:	08003a2d 	.word	0x08003a2d
 8003944:	080041b5 	.word	0x080041b5
 8003948:	080041b5 	.word	0x080041b5
 800394c:	080041b5 	.word	0x080041b5
 8003950:	080041b5 	.word	0x080041b5
 8003954:	080041b5 	.word	0x080041b5
 8003958:	080041b5 	.word	0x080041b5
 800395c:	080041b5 	.word	0x080041b5
 8003960:	080041b5 	.word	0x080041b5
 8003964:	080041b5 	.word	0x080041b5
 8003968:	080041b5 	.word	0x080041b5
 800396c:	080041b5 	.word	0x080041b5
 8003970:	080041b5 	.word	0x080041b5
 8003974:	08004149 	.word	0x08004149
 8003978:	080041b5 	.word	0x080041b5
 800397c:	080041b5 	.word	0x080041b5
 8003980:	080041b5 	.word	0x080041b5
 8003984:	080041b5 	.word	0x080041b5
 8003988:	080041b5 	.word	0x080041b5
 800398c:	080041b5 	.word	0x080041b5
 8003990:	080041b5 	.word	0x080041b5
 8003994:	080041b5 	.word	0x080041b5
 8003998:	080041b5 	.word	0x080041b5
 800399c:	080041b5 	.word	0x080041b5
 80039a0:	080041b5 	.word	0x080041b5
 80039a4:	080041b5 	.word	0x080041b5
 80039a8:	080041b5 	.word	0x080041b5
 80039ac:	080041b5 	.word	0x080041b5
 80039b0:	080041b5 	.word	0x080041b5
 80039b4:	080041b5 	.word	0x080041b5
 80039b8:	080041b5 	.word	0x080041b5
 80039bc:	080041b5 	.word	0x080041b5
 80039c0:	080041b5 	.word	0x080041b5
 80039c4:	080041b5 	.word	0x080041b5
 80039c8:	080041b5 	.word	0x080041b5
 80039cc:	080041b5 	.word	0x080041b5
 80039d0:	080041b5 	.word	0x080041b5
 80039d4:	080041b5 	.word	0x080041b5
 80039d8:	080041b5 	.word	0x080041b5
 80039dc:	080041b5 	.word	0x080041b5
 80039e0:	080041b5 	.word	0x080041b5
 80039e4:	080041b5 	.word	0x080041b5
 80039e8:	080041b5 	.word	0x080041b5
 80039ec:	080041b5 	.word	0x080041b5
 80039f0:	080041b5 	.word	0x080041b5
 80039f4:	080041b5 	.word	0x080041b5
 80039f8:	080041b5 	.word	0x080041b5
 80039fc:	080041b5 	.word	0x080041b5
 8003a00:	080041b5 	.word	0x080041b5
 8003a04:	080041b5 	.word	0x080041b5
 8003a08:	080041b5 	.word	0x080041b5
 8003a0c:	080041b5 	.word	0x080041b5
 8003a10:	080041b5 	.word	0x080041b5
 8003a14:	080041b5 	.word	0x080041b5
 8003a18:	080041b5 	.word	0x080041b5
 8003a1c:	080041b5 	.word	0x080041b5
 8003a20:	080041b5 	.word	0x080041b5
 8003a24:	080041b5 	.word	0x080041b5
 8003a28:	08003a5f 	.word	0x08003a5f
 8003a2c:	2302      	movs	r3, #2
 8003a2e:	613b      	str	r3, [r7, #16]
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d00e      	beq.n	8003a54 <json_serialize_string+0x20c>
 8003a36:	693b      	ldr	r3, [r7, #16]
 8003a38:	461a      	mov	r2, r3
 8003a3a:	4947      	ldr	r1, [pc, #284]	; (8003b58 <json_serialize_string+0x310>)
 8003a3c:	6878      	ldr	r0, [r7, #4]
 8003a3e:	f008 f82b 	bl	800ba98 <memcpy>
 8003a42:	693b      	ldr	r3, [r7, #16]
 8003a44:	687a      	ldr	r2, [r7, #4]
 8003a46:	4413      	add	r3, r2
 8003a48:	2200      	movs	r2, #0
 8003a4a:	701a      	strb	r2, [r3, #0]
 8003a4c:	693b      	ldr	r3, [r7, #16]
 8003a4e:	687a      	ldr	r2, [r7, #4]
 8003a50:	4413      	add	r3, r2
 8003a52:	607b      	str	r3, [r7, #4]
 8003a54:	69ba      	ldr	r2, [r7, #24]
 8003a56:	693b      	ldr	r3, [r7, #16]
 8003a58:	4413      	add	r3, r2
 8003a5a:	61bb      	str	r3, [r7, #24]
 8003a5c:	e3b7      	b.n	80041ce <json_serialize_string+0x986>
 8003a5e:	2302      	movs	r3, #2
 8003a60:	613b      	str	r3, [r7, #16]
 8003a62:	687b      	ldr	r3, [r7, #4]
 8003a64:	2b00      	cmp	r3, #0
 8003a66:	d00e      	beq.n	8003a86 <json_serialize_string+0x23e>
 8003a68:	693b      	ldr	r3, [r7, #16]
 8003a6a:	461a      	mov	r2, r3
 8003a6c:	493b      	ldr	r1, [pc, #236]	; (8003b5c <json_serialize_string+0x314>)
 8003a6e:	6878      	ldr	r0, [r7, #4]
 8003a70:	f008 f812 	bl	800ba98 <memcpy>
 8003a74:	693b      	ldr	r3, [r7, #16]
 8003a76:	687a      	ldr	r2, [r7, #4]
 8003a78:	4413      	add	r3, r2
 8003a7a:	2200      	movs	r2, #0
 8003a7c:	701a      	strb	r2, [r3, #0]
 8003a7e:	693b      	ldr	r3, [r7, #16]
 8003a80:	687a      	ldr	r2, [r7, #4]
 8003a82:	4413      	add	r3, r2
 8003a84:	607b      	str	r3, [r7, #4]
 8003a86:	69ba      	ldr	r2, [r7, #24]
 8003a88:	693b      	ldr	r3, [r7, #16]
 8003a8a:	4413      	add	r3, r2
 8003a8c:	61bb      	str	r3, [r7, #24]
 8003a8e:	e39e      	b.n	80041ce <json_serialize_string+0x986>
 8003a90:	2302      	movs	r3, #2
 8003a92:	613b      	str	r3, [r7, #16]
 8003a94:	687b      	ldr	r3, [r7, #4]
 8003a96:	2b00      	cmp	r3, #0
 8003a98:	d00e      	beq.n	8003ab8 <json_serialize_string+0x270>
 8003a9a:	693b      	ldr	r3, [r7, #16]
 8003a9c:	461a      	mov	r2, r3
 8003a9e:	4930      	ldr	r1, [pc, #192]	; (8003b60 <json_serialize_string+0x318>)
 8003aa0:	6878      	ldr	r0, [r7, #4]
 8003aa2:	f007 fff9 	bl	800ba98 <memcpy>
 8003aa6:	693b      	ldr	r3, [r7, #16]
 8003aa8:	687a      	ldr	r2, [r7, #4]
 8003aaa:	4413      	add	r3, r2
 8003aac:	2200      	movs	r2, #0
 8003aae:	701a      	strb	r2, [r3, #0]
 8003ab0:	693b      	ldr	r3, [r7, #16]
 8003ab2:	687a      	ldr	r2, [r7, #4]
 8003ab4:	4413      	add	r3, r2
 8003ab6:	607b      	str	r3, [r7, #4]
 8003ab8:	69ba      	ldr	r2, [r7, #24]
 8003aba:	693b      	ldr	r3, [r7, #16]
 8003abc:	4413      	add	r3, r2
 8003abe:	61bb      	str	r3, [r7, #24]
 8003ac0:	e385      	b.n	80041ce <json_serialize_string+0x986>
 8003ac2:	2302      	movs	r3, #2
 8003ac4:	613b      	str	r3, [r7, #16]
 8003ac6:	687b      	ldr	r3, [r7, #4]
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d00e      	beq.n	8003aea <json_serialize_string+0x2a2>
 8003acc:	693b      	ldr	r3, [r7, #16]
 8003ace:	461a      	mov	r2, r3
 8003ad0:	4924      	ldr	r1, [pc, #144]	; (8003b64 <json_serialize_string+0x31c>)
 8003ad2:	6878      	ldr	r0, [r7, #4]
 8003ad4:	f007 ffe0 	bl	800ba98 <memcpy>
 8003ad8:	693b      	ldr	r3, [r7, #16]
 8003ada:	687a      	ldr	r2, [r7, #4]
 8003adc:	4413      	add	r3, r2
 8003ade:	2200      	movs	r2, #0
 8003ae0:	701a      	strb	r2, [r3, #0]
 8003ae2:	693b      	ldr	r3, [r7, #16]
 8003ae4:	687a      	ldr	r2, [r7, #4]
 8003ae6:	4413      	add	r3, r2
 8003ae8:	607b      	str	r3, [r7, #4]
 8003aea:	69ba      	ldr	r2, [r7, #24]
 8003aec:	693b      	ldr	r3, [r7, #16]
 8003aee:	4413      	add	r3, r2
 8003af0:	61bb      	str	r3, [r7, #24]
 8003af2:	e36c      	b.n	80041ce <json_serialize_string+0x986>
 8003af4:	2302      	movs	r3, #2
 8003af6:	613b      	str	r3, [r7, #16]
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	2b00      	cmp	r3, #0
 8003afc:	d00e      	beq.n	8003b1c <json_serialize_string+0x2d4>
 8003afe:	693b      	ldr	r3, [r7, #16]
 8003b00:	461a      	mov	r2, r3
 8003b02:	4919      	ldr	r1, [pc, #100]	; (8003b68 <json_serialize_string+0x320>)
 8003b04:	6878      	ldr	r0, [r7, #4]
 8003b06:	f007 ffc7 	bl	800ba98 <memcpy>
 8003b0a:	693b      	ldr	r3, [r7, #16]
 8003b0c:	687a      	ldr	r2, [r7, #4]
 8003b0e:	4413      	add	r3, r2
 8003b10:	2200      	movs	r2, #0
 8003b12:	701a      	strb	r2, [r3, #0]
 8003b14:	693b      	ldr	r3, [r7, #16]
 8003b16:	687a      	ldr	r2, [r7, #4]
 8003b18:	4413      	add	r3, r2
 8003b1a:	607b      	str	r3, [r7, #4]
 8003b1c:	69ba      	ldr	r2, [r7, #24]
 8003b1e:	693b      	ldr	r3, [r7, #16]
 8003b20:	4413      	add	r3, r2
 8003b22:	61bb      	str	r3, [r7, #24]
 8003b24:	e353      	b.n	80041ce <json_serialize_string+0x986>
 8003b26:	2302      	movs	r3, #2
 8003b28:	613b      	str	r3, [r7, #16]
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d00e      	beq.n	8003b4e <json_serialize_string+0x306>
 8003b30:	693b      	ldr	r3, [r7, #16]
 8003b32:	461a      	mov	r2, r3
 8003b34:	490d      	ldr	r1, [pc, #52]	; (8003b6c <json_serialize_string+0x324>)
 8003b36:	6878      	ldr	r0, [r7, #4]
 8003b38:	f007 ffae 	bl	800ba98 <memcpy>
 8003b3c:	693b      	ldr	r3, [r7, #16]
 8003b3e:	687a      	ldr	r2, [r7, #4]
 8003b40:	4413      	add	r3, r2
 8003b42:	2200      	movs	r2, #0
 8003b44:	701a      	strb	r2, [r3, #0]
 8003b46:	693b      	ldr	r3, [r7, #16]
 8003b48:	687a      	ldr	r2, [r7, #4]
 8003b4a:	4413      	add	r3, r2
 8003b4c:	607b      	str	r3, [r7, #4]
 8003b4e:	69ba      	ldr	r2, [r7, #24]
 8003b50:	693b      	ldr	r3, [r7, #16]
 8003b52:	4413      	add	r3, r2
 8003b54:	61bb      	str	r3, [r7, #24]
 8003b56:	e33a      	b.n	80041ce <json_serialize_string+0x986>
 8003b58:	0800ece4 	.word	0x0800ece4
 8003b5c:	0800ece8 	.word	0x0800ece8
 8003b60:	0800ecec 	.word	0x0800ecec
 8003b64:	0800ecf0 	.word	0x0800ecf0
 8003b68:	0800ecf4 	.word	0x0800ecf4
 8003b6c:	0800ecf8 	.word	0x0800ecf8
 8003b70:	2302      	movs	r3, #2
 8003b72:	613b      	str	r3, [r7, #16]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d00e      	beq.n	8003b98 <json_serialize_string+0x350>
 8003b7a:	693b      	ldr	r3, [r7, #16]
 8003b7c:	461a      	mov	r2, r3
 8003b7e:	4992      	ldr	r1, [pc, #584]	; (8003dc8 <json_serialize_string+0x580>)
 8003b80:	6878      	ldr	r0, [r7, #4]
 8003b82:	f007 ff89 	bl	800ba98 <memcpy>
 8003b86:	693b      	ldr	r3, [r7, #16]
 8003b88:	687a      	ldr	r2, [r7, #4]
 8003b8a:	4413      	add	r3, r2
 8003b8c:	2200      	movs	r2, #0
 8003b8e:	701a      	strb	r2, [r3, #0]
 8003b90:	693b      	ldr	r3, [r7, #16]
 8003b92:	687a      	ldr	r2, [r7, #4]
 8003b94:	4413      	add	r3, r2
 8003b96:	607b      	str	r3, [r7, #4]
 8003b98:	69ba      	ldr	r2, [r7, #24]
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	4413      	add	r3, r2
 8003b9e:	61bb      	str	r3, [r7, #24]
 8003ba0:	e315      	b.n	80041ce <json_serialize_string+0x986>
 8003ba2:	2306      	movs	r3, #6
 8003ba4:	613b      	str	r3, [r7, #16]
 8003ba6:	687b      	ldr	r3, [r7, #4]
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d00e      	beq.n	8003bca <json_serialize_string+0x382>
 8003bac:	693b      	ldr	r3, [r7, #16]
 8003bae:	461a      	mov	r2, r3
 8003bb0:	4986      	ldr	r1, [pc, #536]	; (8003dcc <json_serialize_string+0x584>)
 8003bb2:	6878      	ldr	r0, [r7, #4]
 8003bb4:	f007 ff70 	bl	800ba98 <memcpy>
 8003bb8:	693b      	ldr	r3, [r7, #16]
 8003bba:	687a      	ldr	r2, [r7, #4]
 8003bbc:	4413      	add	r3, r2
 8003bbe:	2200      	movs	r2, #0
 8003bc0:	701a      	strb	r2, [r3, #0]
 8003bc2:	693b      	ldr	r3, [r7, #16]
 8003bc4:	687a      	ldr	r2, [r7, #4]
 8003bc6:	4413      	add	r3, r2
 8003bc8:	607b      	str	r3, [r7, #4]
 8003bca:	69ba      	ldr	r2, [r7, #24]
 8003bcc:	693b      	ldr	r3, [r7, #16]
 8003bce:	4413      	add	r3, r2
 8003bd0:	61bb      	str	r3, [r7, #24]
 8003bd2:	e2fc      	b.n	80041ce <json_serialize_string+0x986>
 8003bd4:	2306      	movs	r3, #6
 8003bd6:	613b      	str	r3, [r7, #16]
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d00e      	beq.n	8003bfc <json_serialize_string+0x3b4>
 8003bde:	693b      	ldr	r3, [r7, #16]
 8003be0:	461a      	mov	r2, r3
 8003be2:	497b      	ldr	r1, [pc, #492]	; (8003dd0 <json_serialize_string+0x588>)
 8003be4:	6878      	ldr	r0, [r7, #4]
 8003be6:	f007 ff57 	bl	800ba98 <memcpy>
 8003bea:	693b      	ldr	r3, [r7, #16]
 8003bec:	687a      	ldr	r2, [r7, #4]
 8003bee:	4413      	add	r3, r2
 8003bf0:	2200      	movs	r2, #0
 8003bf2:	701a      	strb	r2, [r3, #0]
 8003bf4:	693b      	ldr	r3, [r7, #16]
 8003bf6:	687a      	ldr	r2, [r7, #4]
 8003bf8:	4413      	add	r3, r2
 8003bfa:	607b      	str	r3, [r7, #4]
 8003bfc:	69ba      	ldr	r2, [r7, #24]
 8003bfe:	693b      	ldr	r3, [r7, #16]
 8003c00:	4413      	add	r3, r2
 8003c02:	61bb      	str	r3, [r7, #24]
 8003c04:	e2e3      	b.n	80041ce <json_serialize_string+0x986>
 8003c06:	2306      	movs	r3, #6
 8003c08:	613b      	str	r3, [r7, #16]
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d00e      	beq.n	8003c2e <json_serialize_string+0x3e6>
 8003c10:	693b      	ldr	r3, [r7, #16]
 8003c12:	461a      	mov	r2, r3
 8003c14:	496f      	ldr	r1, [pc, #444]	; (8003dd4 <json_serialize_string+0x58c>)
 8003c16:	6878      	ldr	r0, [r7, #4]
 8003c18:	f007 ff3e 	bl	800ba98 <memcpy>
 8003c1c:	693b      	ldr	r3, [r7, #16]
 8003c1e:	687a      	ldr	r2, [r7, #4]
 8003c20:	4413      	add	r3, r2
 8003c22:	2200      	movs	r2, #0
 8003c24:	701a      	strb	r2, [r3, #0]
 8003c26:	693b      	ldr	r3, [r7, #16]
 8003c28:	687a      	ldr	r2, [r7, #4]
 8003c2a:	4413      	add	r3, r2
 8003c2c:	607b      	str	r3, [r7, #4]
 8003c2e:	69ba      	ldr	r2, [r7, #24]
 8003c30:	693b      	ldr	r3, [r7, #16]
 8003c32:	4413      	add	r3, r2
 8003c34:	61bb      	str	r3, [r7, #24]
 8003c36:	e2ca      	b.n	80041ce <json_serialize_string+0x986>
 8003c38:	2306      	movs	r3, #6
 8003c3a:	613b      	str	r3, [r7, #16]
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	2b00      	cmp	r3, #0
 8003c40:	d00e      	beq.n	8003c60 <json_serialize_string+0x418>
 8003c42:	693b      	ldr	r3, [r7, #16]
 8003c44:	461a      	mov	r2, r3
 8003c46:	4964      	ldr	r1, [pc, #400]	; (8003dd8 <json_serialize_string+0x590>)
 8003c48:	6878      	ldr	r0, [r7, #4]
 8003c4a:	f007 ff25 	bl	800ba98 <memcpy>
 8003c4e:	693b      	ldr	r3, [r7, #16]
 8003c50:	687a      	ldr	r2, [r7, #4]
 8003c52:	4413      	add	r3, r2
 8003c54:	2200      	movs	r2, #0
 8003c56:	701a      	strb	r2, [r3, #0]
 8003c58:	693b      	ldr	r3, [r7, #16]
 8003c5a:	687a      	ldr	r2, [r7, #4]
 8003c5c:	4413      	add	r3, r2
 8003c5e:	607b      	str	r3, [r7, #4]
 8003c60:	69ba      	ldr	r2, [r7, #24]
 8003c62:	693b      	ldr	r3, [r7, #16]
 8003c64:	4413      	add	r3, r2
 8003c66:	61bb      	str	r3, [r7, #24]
 8003c68:	e2b1      	b.n	80041ce <json_serialize_string+0x986>
 8003c6a:	2306      	movs	r3, #6
 8003c6c:	613b      	str	r3, [r7, #16]
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	2b00      	cmp	r3, #0
 8003c72:	d00e      	beq.n	8003c92 <json_serialize_string+0x44a>
 8003c74:	693b      	ldr	r3, [r7, #16]
 8003c76:	461a      	mov	r2, r3
 8003c78:	4958      	ldr	r1, [pc, #352]	; (8003ddc <json_serialize_string+0x594>)
 8003c7a:	6878      	ldr	r0, [r7, #4]
 8003c7c:	f007 ff0c 	bl	800ba98 <memcpy>
 8003c80:	693b      	ldr	r3, [r7, #16]
 8003c82:	687a      	ldr	r2, [r7, #4]
 8003c84:	4413      	add	r3, r2
 8003c86:	2200      	movs	r2, #0
 8003c88:	701a      	strb	r2, [r3, #0]
 8003c8a:	693b      	ldr	r3, [r7, #16]
 8003c8c:	687a      	ldr	r2, [r7, #4]
 8003c8e:	4413      	add	r3, r2
 8003c90:	607b      	str	r3, [r7, #4]
 8003c92:	69ba      	ldr	r2, [r7, #24]
 8003c94:	693b      	ldr	r3, [r7, #16]
 8003c96:	4413      	add	r3, r2
 8003c98:	61bb      	str	r3, [r7, #24]
 8003c9a:	e298      	b.n	80041ce <json_serialize_string+0x986>
 8003c9c:	2306      	movs	r3, #6
 8003c9e:	613b      	str	r3, [r7, #16]
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d00e      	beq.n	8003cc4 <json_serialize_string+0x47c>
 8003ca6:	693b      	ldr	r3, [r7, #16]
 8003ca8:	461a      	mov	r2, r3
 8003caa:	494d      	ldr	r1, [pc, #308]	; (8003de0 <json_serialize_string+0x598>)
 8003cac:	6878      	ldr	r0, [r7, #4]
 8003cae:	f007 fef3 	bl	800ba98 <memcpy>
 8003cb2:	693b      	ldr	r3, [r7, #16]
 8003cb4:	687a      	ldr	r2, [r7, #4]
 8003cb6:	4413      	add	r3, r2
 8003cb8:	2200      	movs	r2, #0
 8003cba:	701a      	strb	r2, [r3, #0]
 8003cbc:	693b      	ldr	r3, [r7, #16]
 8003cbe:	687a      	ldr	r2, [r7, #4]
 8003cc0:	4413      	add	r3, r2
 8003cc2:	607b      	str	r3, [r7, #4]
 8003cc4:	69ba      	ldr	r2, [r7, #24]
 8003cc6:	693b      	ldr	r3, [r7, #16]
 8003cc8:	4413      	add	r3, r2
 8003cca:	61bb      	str	r3, [r7, #24]
 8003ccc:	e27f      	b.n	80041ce <json_serialize_string+0x986>
 8003cce:	2306      	movs	r3, #6
 8003cd0:	613b      	str	r3, [r7, #16]
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d00e      	beq.n	8003cf6 <json_serialize_string+0x4ae>
 8003cd8:	693b      	ldr	r3, [r7, #16]
 8003cda:	461a      	mov	r2, r3
 8003cdc:	4941      	ldr	r1, [pc, #260]	; (8003de4 <json_serialize_string+0x59c>)
 8003cde:	6878      	ldr	r0, [r7, #4]
 8003ce0:	f007 feda 	bl	800ba98 <memcpy>
 8003ce4:	693b      	ldr	r3, [r7, #16]
 8003ce6:	687a      	ldr	r2, [r7, #4]
 8003ce8:	4413      	add	r3, r2
 8003cea:	2200      	movs	r2, #0
 8003cec:	701a      	strb	r2, [r3, #0]
 8003cee:	693b      	ldr	r3, [r7, #16]
 8003cf0:	687a      	ldr	r2, [r7, #4]
 8003cf2:	4413      	add	r3, r2
 8003cf4:	607b      	str	r3, [r7, #4]
 8003cf6:	69ba      	ldr	r2, [r7, #24]
 8003cf8:	693b      	ldr	r3, [r7, #16]
 8003cfa:	4413      	add	r3, r2
 8003cfc:	61bb      	str	r3, [r7, #24]
 8003cfe:	e266      	b.n	80041ce <json_serialize_string+0x986>
 8003d00:	2306      	movs	r3, #6
 8003d02:	613b      	str	r3, [r7, #16]
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	2b00      	cmp	r3, #0
 8003d08:	d00e      	beq.n	8003d28 <json_serialize_string+0x4e0>
 8003d0a:	693b      	ldr	r3, [r7, #16]
 8003d0c:	461a      	mov	r2, r3
 8003d0e:	4936      	ldr	r1, [pc, #216]	; (8003de8 <json_serialize_string+0x5a0>)
 8003d10:	6878      	ldr	r0, [r7, #4]
 8003d12:	f007 fec1 	bl	800ba98 <memcpy>
 8003d16:	693b      	ldr	r3, [r7, #16]
 8003d18:	687a      	ldr	r2, [r7, #4]
 8003d1a:	4413      	add	r3, r2
 8003d1c:	2200      	movs	r2, #0
 8003d1e:	701a      	strb	r2, [r3, #0]
 8003d20:	693b      	ldr	r3, [r7, #16]
 8003d22:	687a      	ldr	r2, [r7, #4]
 8003d24:	4413      	add	r3, r2
 8003d26:	607b      	str	r3, [r7, #4]
 8003d28:	69ba      	ldr	r2, [r7, #24]
 8003d2a:	693b      	ldr	r3, [r7, #16]
 8003d2c:	4413      	add	r3, r2
 8003d2e:	61bb      	str	r3, [r7, #24]
 8003d30:	e24d      	b.n	80041ce <json_serialize_string+0x986>
 8003d32:	2306      	movs	r3, #6
 8003d34:	613b      	str	r3, [r7, #16]
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d00e      	beq.n	8003d5a <json_serialize_string+0x512>
 8003d3c:	693b      	ldr	r3, [r7, #16]
 8003d3e:	461a      	mov	r2, r3
 8003d40:	492a      	ldr	r1, [pc, #168]	; (8003dec <json_serialize_string+0x5a4>)
 8003d42:	6878      	ldr	r0, [r7, #4]
 8003d44:	f007 fea8 	bl	800ba98 <memcpy>
 8003d48:	693b      	ldr	r3, [r7, #16]
 8003d4a:	687a      	ldr	r2, [r7, #4]
 8003d4c:	4413      	add	r3, r2
 8003d4e:	2200      	movs	r2, #0
 8003d50:	701a      	strb	r2, [r3, #0]
 8003d52:	693b      	ldr	r3, [r7, #16]
 8003d54:	687a      	ldr	r2, [r7, #4]
 8003d56:	4413      	add	r3, r2
 8003d58:	607b      	str	r3, [r7, #4]
 8003d5a:	69ba      	ldr	r2, [r7, #24]
 8003d5c:	693b      	ldr	r3, [r7, #16]
 8003d5e:	4413      	add	r3, r2
 8003d60:	61bb      	str	r3, [r7, #24]
 8003d62:	e234      	b.n	80041ce <json_serialize_string+0x986>
 8003d64:	2306      	movs	r3, #6
 8003d66:	613b      	str	r3, [r7, #16]
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	2b00      	cmp	r3, #0
 8003d6c:	d00e      	beq.n	8003d8c <json_serialize_string+0x544>
 8003d6e:	693b      	ldr	r3, [r7, #16]
 8003d70:	461a      	mov	r2, r3
 8003d72:	491f      	ldr	r1, [pc, #124]	; (8003df0 <json_serialize_string+0x5a8>)
 8003d74:	6878      	ldr	r0, [r7, #4]
 8003d76:	f007 fe8f 	bl	800ba98 <memcpy>
 8003d7a:	693b      	ldr	r3, [r7, #16]
 8003d7c:	687a      	ldr	r2, [r7, #4]
 8003d7e:	4413      	add	r3, r2
 8003d80:	2200      	movs	r2, #0
 8003d82:	701a      	strb	r2, [r3, #0]
 8003d84:	693b      	ldr	r3, [r7, #16]
 8003d86:	687a      	ldr	r2, [r7, #4]
 8003d88:	4413      	add	r3, r2
 8003d8a:	607b      	str	r3, [r7, #4]
 8003d8c:	69ba      	ldr	r2, [r7, #24]
 8003d8e:	693b      	ldr	r3, [r7, #16]
 8003d90:	4413      	add	r3, r2
 8003d92:	61bb      	str	r3, [r7, #24]
 8003d94:	e21b      	b.n	80041ce <json_serialize_string+0x986>
 8003d96:	2306      	movs	r3, #6
 8003d98:	613b      	str	r3, [r7, #16]
 8003d9a:	687b      	ldr	r3, [r7, #4]
 8003d9c:	2b00      	cmp	r3, #0
 8003d9e:	d00e      	beq.n	8003dbe <json_serialize_string+0x576>
 8003da0:	693b      	ldr	r3, [r7, #16]
 8003da2:	461a      	mov	r2, r3
 8003da4:	4913      	ldr	r1, [pc, #76]	; (8003df4 <json_serialize_string+0x5ac>)
 8003da6:	6878      	ldr	r0, [r7, #4]
 8003da8:	f007 fe76 	bl	800ba98 <memcpy>
 8003dac:	693b      	ldr	r3, [r7, #16]
 8003dae:	687a      	ldr	r2, [r7, #4]
 8003db0:	4413      	add	r3, r2
 8003db2:	2200      	movs	r2, #0
 8003db4:	701a      	strb	r2, [r3, #0]
 8003db6:	693b      	ldr	r3, [r7, #16]
 8003db8:	687a      	ldr	r2, [r7, #4]
 8003dba:	4413      	add	r3, r2
 8003dbc:	607b      	str	r3, [r7, #4]
 8003dbe:	69ba      	ldr	r2, [r7, #24]
 8003dc0:	693b      	ldr	r3, [r7, #16]
 8003dc2:	4413      	add	r3, r2
 8003dc4:	61bb      	str	r3, [r7, #24]
 8003dc6:	e202      	b.n	80041ce <json_serialize_string+0x986>
 8003dc8:	0800ecfc 	.word	0x0800ecfc
 8003dcc:	0800ed00 	.word	0x0800ed00
 8003dd0:	0800ed08 	.word	0x0800ed08
 8003dd4:	0800ed10 	.word	0x0800ed10
 8003dd8:	0800ed18 	.word	0x0800ed18
 8003ddc:	0800ed20 	.word	0x0800ed20
 8003de0:	0800ed28 	.word	0x0800ed28
 8003de4:	0800ed30 	.word	0x0800ed30
 8003de8:	0800ed38 	.word	0x0800ed38
 8003dec:	0800ed40 	.word	0x0800ed40
 8003df0:	0800ed48 	.word	0x0800ed48
 8003df4:	0800ed50 	.word	0x0800ed50
 8003df8:	2306      	movs	r3, #6
 8003dfa:	613b      	str	r3, [r7, #16]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	2b00      	cmp	r3, #0
 8003e00:	d00e      	beq.n	8003e20 <json_serialize_string+0x5d8>
 8003e02:	693b      	ldr	r3, [r7, #16]
 8003e04:	461a      	mov	r2, r3
 8003e06:	4992      	ldr	r1, [pc, #584]	; (8004050 <json_serialize_string+0x808>)
 8003e08:	6878      	ldr	r0, [r7, #4]
 8003e0a:	f007 fe45 	bl	800ba98 <memcpy>
 8003e0e:	693b      	ldr	r3, [r7, #16]
 8003e10:	687a      	ldr	r2, [r7, #4]
 8003e12:	4413      	add	r3, r2
 8003e14:	2200      	movs	r2, #0
 8003e16:	701a      	strb	r2, [r3, #0]
 8003e18:	693b      	ldr	r3, [r7, #16]
 8003e1a:	687a      	ldr	r2, [r7, #4]
 8003e1c:	4413      	add	r3, r2
 8003e1e:	607b      	str	r3, [r7, #4]
 8003e20:	69ba      	ldr	r2, [r7, #24]
 8003e22:	693b      	ldr	r3, [r7, #16]
 8003e24:	4413      	add	r3, r2
 8003e26:	61bb      	str	r3, [r7, #24]
 8003e28:	e1d1      	b.n	80041ce <json_serialize_string+0x986>
 8003e2a:	2306      	movs	r3, #6
 8003e2c:	613b      	str	r3, [r7, #16]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d00e      	beq.n	8003e52 <json_serialize_string+0x60a>
 8003e34:	693b      	ldr	r3, [r7, #16]
 8003e36:	461a      	mov	r2, r3
 8003e38:	4986      	ldr	r1, [pc, #536]	; (8004054 <json_serialize_string+0x80c>)
 8003e3a:	6878      	ldr	r0, [r7, #4]
 8003e3c:	f007 fe2c 	bl	800ba98 <memcpy>
 8003e40:	693b      	ldr	r3, [r7, #16]
 8003e42:	687a      	ldr	r2, [r7, #4]
 8003e44:	4413      	add	r3, r2
 8003e46:	2200      	movs	r2, #0
 8003e48:	701a      	strb	r2, [r3, #0]
 8003e4a:	693b      	ldr	r3, [r7, #16]
 8003e4c:	687a      	ldr	r2, [r7, #4]
 8003e4e:	4413      	add	r3, r2
 8003e50:	607b      	str	r3, [r7, #4]
 8003e52:	69ba      	ldr	r2, [r7, #24]
 8003e54:	693b      	ldr	r3, [r7, #16]
 8003e56:	4413      	add	r3, r2
 8003e58:	61bb      	str	r3, [r7, #24]
 8003e5a:	e1b8      	b.n	80041ce <json_serialize_string+0x986>
 8003e5c:	2306      	movs	r3, #6
 8003e5e:	613b      	str	r3, [r7, #16]
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d00e      	beq.n	8003e84 <json_serialize_string+0x63c>
 8003e66:	693b      	ldr	r3, [r7, #16]
 8003e68:	461a      	mov	r2, r3
 8003e6a:	497b      	ldr	r1, [pc, #492]	; (8004058 <json_serialize_string+0x810>)
 8003e6c:	6878      	ldr	r0, [r7, #4]
 8003e6e:	f007 fe13 	bl	800ba98 <memcpy>
 8003e72:	693b      	ldr	r3, [r7, #16]
 8003e74:	687a      	ldr	r2, [r7, #4]
 8003e76:	4413      	add	r3, r2
 8003e78:	2200      	movs	r2, #0
 8003e7a:	701a      	strb	r2, [r3, #0]
 8003e7c:	693b      	ldr	r3, [r7, #16]
 8003e7e:	687a      	ldr	r2, [r7, #4]
 8003e80:	4413      	add	r3, r2
 8003e82:	607b      	str	r3, [r7, #4]
 8003e84:	69ba      	ldr	r2, [r7, #24]
 8003e86:	693b      	ldr	r3, [r7, #16]
 8003e88:	4413      	add	r3, r2
 8003e8a:	61bb      	str	r3, [r7, #24]
 8003e8c:	e19f      	b.n	80041ce <json_serialize_string+0x986>
 8003e8e:	2306      	movs	r3, #6
 8003e90:	613b      	str	r3, [r7, #16]
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	2b00      	cmp	r3, #0
 8003e96:	d00e      	beq.n	8003eb6 <json_serialize_string+0x66e>
 8003e98:	693b      	ldr	r3, [r7, #16]
 8003e9a:	461a      	mov	r2, r3
 8003e9c:	496f      	ldr	r1, [pc, #444]	; (800405c <json_serialize_string+0x814>)
 8003e9e:	6878      	ldr	r0, [r7, #4]
 8003ea0:	f007 fdfa 	bl	800ba98 <memcpy>
 8003ea4:	693b      	ldr	r3, [r7, #16]
 8003ea6:	687a      	ldr	r2, [r7, #4]
 8003ea8:	4413      	add	r3, r2
 8003eaa:	2200      	movs	r2, #0
 8003eac:	701a      	strb	r2, [r3, #0]
 8003eae:	693b      	ldr	r3, [r7, #16]
 8003eb0:	687a      	ldr	r2, [r7, #4]
 8003eb2:	4413      	add	r3, r2
 8003eb4:	607b      	str	r3, [r7, #4]
 8003eb6:	69ba      	ldr	r2, [r7, #24]
 8003eb8:	693b      	ldr	r3, [r7, #16]
 8003eba:	4413      	add	r3, r2
 8003ebc:	61bb      	str	r3, [r7, #24]
 8003ebe:	e186      	b.n	80041ce <json_serialize_string+0x986>
 8003ec0:	2306      	movs	r3, #6
 8003ec2:	613b      	str	r3, [r7, #16]
 8003ec4:	687b      	ldr	r3, [r7, #4]
 8003ec6:	2b00      	cmp	r3, #0
 8003ec8:	d00e      	beq.n	8003ee8 <json_serialize_string+0x6a0>
 8003eca:	693b      	ldr	r3, [r7, #16]
 8003ecc:	461a      	mov	r2, r3
 8003ece:	4964      	ldr	r1, [pc, #400]	; (8004060 <json_serialize_string+0x818>)
 8003ed0:	6878      	ldr	r0, [r7, #4]
 8003ed2:	f007 fde1 	bl	800ba98 <memcpy>
 8003ed6:	693b      	ldr	r3, [r7, #16]
 8003ed8:	687a      	ldr	r2, [r7, #4]
 8003eda:	4413      	add	r3, r2
 8003edc:	2200      	movs	r2, #0
 8003ede:	701a      	strb	r2, [r3, #0]
 8003ee0:	693b      	ldr	r3, [r7, #16]
 8003ee2:	687a      	ldr	r2, [r7, #4]
 8003ee4:	4413      	add	r3, r2
 8003ee6:	607b      	str	r3, [r7, #4]
 8003ee8:	69ba      	ldr	r2, [r7, #24]
 8003eea:	693b      	ldr	r3, [r7, #16]
 8003eec:	4413      	add	r3, r2
 8003eee:	61bb      	str	r3, [r7, #24]
 8003ef0:	e16d      	b.n	80041ce <json_serialize_string+0x986>
 8003ef2:	2306      	movs	r3, #6
 8003ef4:	613b      	str	r3, [r7, #16]
 8003ef6:	687b      	ldr	r3, [r7, #4]
 8003ef8:	2b00      	cmp	r3, #0
 8003efa:	d00e      	beq.n	8003f1a <json_serialize_string+0x6d2>
 8003efc:	693b      	ldr	r3, [r7, #16]
 8003efe:	461a      	mov	r2, r3
 8003f00:	4958      	ldr	r1, [pc, #352]	; (8004064 <json_serialize_string+0x81c>)
 8003f02:	6878      	ldr	r0, [r7, #4]
 8003f04:	f007 fdc8 	bl	800ba98 <memcpy>
 8003f08:	693b      	ldr	r3, [r7, #16]
 8003f0a:	687a      	ldr	r2, [r7, #4]
 8003f0c:	4413      	add	r3, r2
 8003f0e:	2200      	movs	r2, #0
 8003f10:	701a      	strb	r2, [r3, #0]
 8003f12:	693b      	ldr	r3, [r7, #16]
 8003f14:	687a      	ldr	r2, [r7, #4]
 8003f16:	4413      	add	r3, r2
 8003f18:	607b      	str	r3, [r7, #4]
 8003f1a:	69ba      	ldr	r2, [r7, #24]
 8003f1c:	693b      	ldr	r3, [r7, #16]
 8003f1e:	4413      	add	r3, r2
 8003f20:	61bb      	str	r3, [r7, #24]
 8003f22:	e154      	b.n	80041ce <json_serialize_string+0x986>
 8003f24:	2306      	movs	r3, #6
 8003f26:	613b      	str	r3, [r7, #16]
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	2b00      	cmp	r3, #0
 8003f2c:	d00e      	beq.n	8003f4c <json_serialize_string+0x704>
 8003f2e:	693b      	ldr	r3, [r7, #16]
 8003f30:	461a      	mov	r2, r3
 8003f32:	494d      	ldr	r1, [pc, #308]	; (8004068 <json_serialize_string+0x820>)
 8003f34:	6878      	ldr	r0, [r7, #4]
 8003f36:	f007 fdaf 	bl	800ba98 <memcpy>
 8003f3a:	693b      	ldr	r3, [r7, #16]
 8003f3c:	687a      	ldr	r2, [r7, #4]
 8003f3e:	4413      	add	r3, r2
 8003f40:	2200      	movs	r2, #0
 8003f42:	701a      	strb	r2, [r3, #0]
 8003f44:	693b      	ldr	r3, [r7, #16]
 8003f46:	687a      	ldr	r2, [r7, #4]
 8003f48:	4413      	add	r3, r2
 8003f4a:	607b      	str	r3, [r7, #4]
 8003f4c:	69ba      	ldr	r2, [r7, #24]
 8003f4e:	693b      	ldr	r3, [r7, #16]
 8003f50:	4413      	add	r3, r2
 8003f52:	61bb      	str	r3, [r7, #24]
 8003f54:	e13b      	b.n	80041ce <json_serialize_string+0x986>
 8003f56:	2306      	movs	r3, #6
 8003f58:	613b      	str	r3, [r7, #16]
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	2b00      	cmp	r3, #0
 8003f5e:	d00e      	beq.n	8003f7e <json_serialize_string+0x736>
 8003f60:	693b      	ldr	r3, [r7, #16]
 8003f62:	461a      	mov	r2, r3
 8003f64:	4941      	ldr	r1, [pc, #260]	; (800406c <json_serialize_string+0x824>)
 8003f66:	6878      	ldr	r0, [r7, #4]
 8003f68:	f007 fd96 	bl	800ba98 <memcpy>
 8003f6c:	693b      	ldr	r3, [r7, #16]
 8003f6e:	687a      	ldr	r2, [r7, #4]
 8003f70:	4413      	add	r3, r2
 8003f72:	2200      	movs	r2, #0
 8003f74:	701a      	strb	r2, [r3, #0]
 8003f76:	693b      	ldr	r3, [r7, #16]
 8003f78:	687a      	ldr	r2, [r7, #4]
 8003f7a:	4413      	add	r3, r2
 8003f7c:	607b      	str	r3, [r7, #4]
 8003f7e:	69ba      	ldr	r2, [r7, #24]
 8003f80:	693b      	ldr	r3, [r7, #16]
 8003f82:	4413      	add	r3, r2
 8003f84:	61bb      	str	r3, [r7, #24]
 8003f86:	e122      	b.n	80041ce <json_serialize_string+0x986>
 8003f88:	2306      	movs	r3, #6
 8003f8a:	613b      	str	r3, [r7, #16]
 8003f8c:	687b      	ldr	r3, [r7, #4]
 8003f8e:	2b00      	cmp	r3, #0
 8003f90:	d00e      	beq.n	8003fb0 <json_serialize_string+0x768>
 8003f92:	693b      	ldr	r3, [r7, #16]
 8003f94:	461a      	mov	r2, r3
 8003f96:	4936      	ldr	r1, [pc, #216]	; (8004070 <json_serialize_string+0x828>)
 8003f98:	6878      	ldr	r0, [r7, #4]
 8003f9a:	f007 fd7d 	bl	800ba98 <memcpy>
 8003f9e:	693b      	ldr	r3, [r7, #16]
 8003fa0:	687a      	ldr	r2, [r7, #4]
 8003fa2:	4413      	add	r3, r2
 8003fa4:	2200      	movs	r2, #0
 8003fa6:	701a      	strb	r2, [r3, #0]
 8003fa8:	693b      	ldr	r3, [r7, #16]
 8003faa:	687a      	ldr	r2, [r7, #4]
 8003fac:	4413      	add	r3, r2
 8003fae:	607b      	str	r3, [r7, #4]
 8003fb0:	69ba      	ldr	r2, [r7, #24]
 8003fb2:	693b      	ldr	r3, [r7, #16]
 8003fb4:	4413      	add	r3, r2
 8003fb6:	61bb      	str	r3, [r7, #24]
 8003fb8:	e109      	b.n	80041ce <json_serialize_string+0x986>
 8003fba:	2306      	movs	r3, #6
 8003fbc:	613b      	str	r3, [r7, #16]
 8003fbe:	687b      	ldr	r3, [r7, #4]
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	d00e      	beq.n	8003fe2 <json_serialize_string+0x79a>
 8003fc4:	693b      	ldr	r3, [r7, #16]
 8003fc6:	461a      	mov	r2, r3
 8003fc8:	492a      	ldr	r1, [pc, #168]	; (8004074 <json_serialize_string+0x82c>)
 8003fca:	6878      	ldr	r0, [r7, #4]
 8003fcc:	f007 fd64 	bl	800ba98 <memcpy>
 8003fd0:	693b      	ldr	r3, [r7, #16]
 8003fd2:	687a      	ldr	r2, [r7, #4]
 8003fd4:	4413      	add	r3, r2
 8003fd6:	2200      	movs	r2, #0
 8003fd8:	701a      	strb	r2, [r3, #0]
 8003fda:	693b      	ldr	r3, [r7, #16]
 8003fdc:	687a      	ldr	r2, [r7, #4]
 8003fde:	4413      	add	r3, r2
 8003fe0:	607b      	str	r3, [r7, #4]
 8003fe2:	69ba      	ldr	r2, [r7, #24]
 8003fe4:	693b      	ldr	r3, [r7, #16]
 8003fe6:	4413      	add	r3, r2
 8003fe8:	61bb      	str	r3, [r7, #24]
 8003fea:	e0f0      	b.n	80041ce <json_serialize_string+0x986>
 8003fec:	2306      	movs	r3, #6
 8003fee:	613b      	str	r3, [r7, #16]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d00e      	beq.n	8004014 <json_serialize_string+0x7cc>
 8003ff6:	693b      	ldr	r3, [r7, #16]
 8003ff8:	461a      	mov	r2, r3
 8003ffa:	491f      	ldr	r1, [pc, #124]	; (8004078 <json_serialize_string+0x830>)
 8003ffc:	6878      	ldr	r0, [r7, #4]
 8003ffe:	f007 fd4b 	bl	800ba98 <memcpy>
 8004002:	693b      	ldr	r3, [r7, #16]
 8004004:	687a      	ldr	r2, [r7, #4]
 8004006:	4413      	add	r3, r2
 8004008:	2200      	movs	r2, #0
 800400a:	701a      	strb	r2, [r3, #0]
 800400c:	693b      	ldr	r3, [r7, #16]
 800400e:	687a      	ldr	r2, [r7, #4]
 8004010:	4413      	add	r3, r2
 8004012:	607b      	str	r3, [r7, #4]
 8004014:	69ba      	ldr	r2, [r7, #24]
 8004016:	693b      	ldr	r3, [r7, #16]
 8004018:	4413      	add	r3, r2
 800401a:	61bb      	str	r3, [r7, #24]
 800401c:	e0d7      	b.n	80041ce <json_serialize_string+0x986>
 800401e:	2306      	movs	r3, #6
 8004020:	613b      	str	r3, [r7, #16]
 8004022:	687b      	ldr	r3, [r7, #4]
 8004024:	2b00      	cmp	r3, #0
 8004026:	d00e      	beq.n	8004046 <json_serialize_string+0x7fe>
 8004028:	693b      	ldr	r3, [r7, #16]
 800402a:	461a      	mov	r2, r3
 800402c:	4913      	ldr	r1, [pc, #76]	; (800407c <json_serialize_string+0x834>)
 800402e:	6878      	ldr	r0, [r7, #4]
 8004030:	f007 fd32 	bl	800ba98 <memcpy>
 8004034:	693b      	ldr	r3, [r7, #16]
 8004036:	687a      	ldr	r2, [r7, #4]
 8004038:	4413      	add	r3, r2
 800403a:	2200      	movs	r2, #0
 800403c:	701a      	strb	r2, [r3, #0]
 800403e:	693b      	ldr	r3, [r7, #16]
 8004040:	687a      	ldr	r2, [r7, #4]
 8004042:	4413      	add	r3, r2
 8004044:	607b      	str	r3, [r7, #4]
 8004046:	69ba      	ldr	r2, [r7, #24]
 8004048:	693b      	ldr	r3, [r7, #16]
 800404a:	4413      	add	r3, r2
 800404c:	61bb      	str	r3, [r7, #24]
 800404e:	e0be      	b.n	80041ce <json_serialize_string+0x986>
 8004050:	0800ed58 	.word	0x0800ed58
 8004054:	0800ed60 	.word	0x0800ed60
 8004058:	0800ed68 	.word	0x0800ed68
 800405c:	0800ed70 	.word	0x0800ed70
 8004060:	0800ed78 	.word	0x0800ed78
 8004064:	0800ed80 	.word	0x0800ed80
 8004068:	0800ed88 	.word	0x0800ed88
 800406c:	0800ed90 	.word	0x0800ed90
 8004070:	0800ed98 	.word	0x0800ed98
 8004074:	0800eda0 	.word	0x0800eda0
 8004078:	0800eda8 	.word	0x0800eda8
 800407c:	0800edb0 	.word	0x0800edb0
 8004080:	2306      	movs	r3, #6
 8004082:	613b      	str	r3, [r7, #16]
 8004084:	687b      	ldr	r3, [r7, #4]
 8004086:	2b00      	cmp	r3, #0
 8004088:	d00e      	beq.n	80040a8 <json_serialize_string+0x860>
 800408a:	693b      	ldr	r3, [r7, #16]
 800408c:	461a      	mov	r2, r3
 800408e:	4962      	ldr	r1, [pc, #392]	; (8004218 <json_serialize_string+0x9d0>)
 8004090:	6878      	ldr	r0, [r7, #4]
 8004092:	f007 fd01 	bl	800ba98 <memcpy>
 8004096:	693b      	ldr	r3, [r7, #16]
 8004098:	687a      	ldr	r2, [r7, #4]
 800409a:	4413      	add	r3, r2
 800409c:	2200      	movs	r2, #0
 800409e:	701a      	strb	r2, [r3, #0]
 80040a0:	693b      	ldr	r3, [r7, #16]
 80040a2:	687a      	ldr	r2, [r7, #4]
 80040a4:	4413      	add	r3, r2
 80040a6:	607b      	str	r3, [r7, #4]
 80040a8:	69ba      	ldr	r2, [r7, #24]
 80040aa:	693b      	ldr	r3, [r7, #16]
 80040ac:	4413      	add	r3, r2
 80040ae:	61bb      	str	r3, [r7, #24]
 80040b0:	e08d      	b.n	80041ce <json_serialize_string+0x986>
 80040b2:	2306      	movs	r3, #6
 80040b4:	613b      	str	r3, [r7, #16]
 80040b6:	687b      	ldr	r3, [r7, #4]
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d00e      	beq.n	80040da <json_serialize_string+0x892>
 80040bc:	693b      	ldr	r3, [r7, #16]
 80040be:	461a      	mov	r2, r3
 80040c0:	4956      	ldr	r1, [pc, #344]	; (800421c <json_serialize_string+0x9d4>)
 80040c2:	6878      	ldr	r0, [r7, #4]
 80040c4:	f007 fce8 	bl	800ba98 <memcpy>
 80040c8:	693b      	ldr	r3, [r7, #16]
 80040ca:	687a      	ldr	r2, [r7, #4]
 80040cc:	4413      	add	r3, r2
 80040ce:	2200      	movs	r2, #0
 80040d0:	701a      	strb	r2, [r3, #0]
 80040d2:	693b      	ldr	r3, [r7, #16]
 80040d4:	687a      	ldr	r2, [r7, #4]
 80040d6:	4413      	add	r3, r2
 80040d8:	607b      	str	r3, [r7, #4]
 80040da:	69ba      	ldr	r2, [r7, #24]
 80040dc:	693b      	ldr	r3, [r7, #16]
 80040de:	4413      	add	r3, r2
 80040e0:	61bb      	str	r3, [r7, #24]
 80040e2:	e074      	b.n	80041ce <json_serialize_string+0x986>
 80040e4:	2306      	movs	r3, #6
 80040e6:	613b      	str	r3, [r7, #16]
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d00e      	beq.n	800410c <json_serialize_string+0x8c4>
 80040ee:	693b      	ldr	r3, [r7, #16]
 80040f0:	461a      	mov	r2, r3
 80040f2:	494b      	ldr	r1, [pc, #300]	; (8004220 <json_serialize_string+0x9d8>)
 80040f4:	6878      	ldr	r0, [r7, #4]
 80040f6:	f007 fccf 	bl	800ba98 <memcpy>
 80040fa:	693b      	ldr	r3, [r7, #16]
 80040fc:	687a      	ldr	r2, [r7, #4]
 80040fe:	4413      	add	r3, r2
 8004100:	2200      	movs	r2, #0
 8004102:	701a      	strb	r2, [r3, #0]
 8004104:	693b      	ldr	r3, [r7, #16]
 8004106:	687a      	ldr	r2, [r7, #4]
 8004108:	4413      	add	r3, r2
 800410a:	607b      	str	r3, [r7, #4]
 800410c:	69ba      	ldr	r2, [r7, #24]
 800410e:	693b      	ldr	r3, [r7, #16]
 8004110:	4413      	add	r3, r2
 8004112:	61bb      	str	r3, [r7, #24]
 8004114:	e05b      	b.n	80041ce <json_serialize_string+0x986>
 8004116:	2306      	movs	r3, #6
 8004118:	613b      	str	r3, [r7, #16]
 800411a:	687b      	ldr	r3, [r7, #4]
 800411c:	2b00      	cmp	r3, #0
 800411e:	d00e      	beq.n	800413e <json_serialize_string+0x8f6>
 8004120:	693b      	ldr	r3, [r7, #16]
 8004122:	461a      	mov	r2, r3
 8004124:	493f      	ldr	r1, [pc, #252]	; (8004224 <json_serialize_string+0x9dc>)
 8004126:	6878      	ldr	r0, [r7, #4]
 8004128:	f007 fcb6 	bl	800ba98 <memcpy>
 800412c:	693b      	ldr	r3, [r7, #16]
 800412e:	687a      	ldr	r2, [r7, #4]
 8004130:	4413      	add	r3, r2
 8004132:	2200      	movs	r2, #0
 8004134:	701a      	strb	r2, [r3, #0]
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	687a      	ldr	r2, [r7, #4]
 800413a:	4413      	add	r3, r2
 800413c:	607b      	str	r3, [r7, #4]
 800413e:	69ba      	ldr	r2, [r7, #24]
 8004140:	693b      	ldr	r3, [r7, #16]
 8004142:	4413      	add	r3, r2
 8004144:	61bb      	str	r3, [r7, #24]
 8004146:	e042      	b.n	80041ce <json_serialize_string+0x986>
 8004148:	4b37      	ldr	r3, [pc, #220]	; (8004228 <json_serialize_string+0x9e0>)
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	2b00      	cmp	r3, #0
 800414e:	d018      	beq.n	8004182 <json_serialize_string+0x93a>
 8004150:	2302      	movs	r3, #2
 8004152:	613b      	str	r3, [r7, #16]
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	2b00      	cmp	r3, #0
 8004158:	d00e      	beq.n	8004178 <json_serialize_string+0x930>
 800415a:	693b      	ldr	r3, [r7, #16]
 800415c:	461a      	mov	r2, r3
 800415e:	4933      	ldr	r1, [pc, #204]	; (800422c <json_serialize_string+0x9e4>)
 8004160:	6878      	ldr	r0, [r7, #4]
 8004162:	f007 fc99 	bl	800ba98 <memcpy>
 8004166:	693b      	ldr	r3, [r7, #16]
 8004168:	687a      	ldr	r2, [r7, #4]
 800416a:	4413      	add	r3, r2
 800416c:	2200      	movs	r2, #0
 800416e:	701a      	strb	r2, [r3, #0]
 8004170:	693b      	ldr	r3, [r7, #16]
 8004172:	687a      	ldr	r2, [r7, #4]
 8004174:	4413      	add	r3, r2
 8004176:	607b      	str	r3, [r7, #4]
 8004178:	69ba      	ldr	r2, [r7, #24]
 800417a:	693b      	ldr	r3, [r7, #16]
 800417c:	4413      	add	r3, r2
 800417e:	61bb      	str	r3, [r7, #24]
 8004180:	e025      	b.n	80041ce <json_serialize_string+0x986>
 8004182:	2301      	movs	r3, #1
 8004184:	613b      	str	r3, [r7, #16]
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	2b00      	cmp	r3, #0
 800418a:	d00e      	beq.n	80041aa <json_serialize_string+0x962>
 800418c:	693b      	ldr	r3, [r7, #16]
 800418e:	461a      	mov	r2, r3
 8004190:	4927      	ldr	r1, [pc, #156]	; (8004230 <json_serialize_string+0x9e8>)
 8004192:	6878      	ldr	r0, [r7, #4]
 8004194:	f007 fc80 	bl	800ba98 <memcpy>
 8004198:	693b      	ldr	r3, [r7, #16]
 800419a:	687a      	ldr	r2, [r7, #4]
 800419c:	4413      	add	r3, r2
 800419e:	2200      	movs	r2, #0
 80041a0:	701a      	strb	r2, [r3, #0]
 80041a2:	693b      	ldr	r3, [r7, #16]
 80041a4:	687a      	ldr	r2, [r7, #4]
 80041a6:	4413      	add	r3, r2
 80041a8:	607b      	str	r3, [r7, #4]
 80041aa:	69ba      	ldr	r2, [r7, #24]
 80041ac:	693b      	ldr	r3, [r7, #16]
 80041ae:	4413      	add	r3, r2
 80041b0:	61bb      	str	r3, [r7, #24]
 80041b2:	e00c      	b.n	80041ce <json_serialize_string+0x986>
 80041b4:	687b      	ldr	r3, [r7, #4]
 80041b6:	2b00      	cmp	r3, #0
 80041b8:	d005      	beq.n	80041c6 <json_serialize_string+0x97e>
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	7dfa      	ldrb	r2, [r7, #23]
 80041be:	701a      	strb	r2, [r3, #0]
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	3301      	adds	r3, #1
 80041c4:	607b      	str	r3, [r7, #4]
 80041c6:	69bb      	ldr	r3, [r7, #24]
 80041c8:	3301      	adds	r3, #1
 80041ca:	61bb      	str	r3, [r7, #24]
 80041cc:	bf00      	nop
 80041ce:	69fb      	ldr	r3, [r7, #28]
 80041d0:	3301      	adds	r3, #1
 80041d2:	61fb      	str	r3, [r7, #28]
 80041d4:	69fa      	ldr	r2, [r7, #28]
 80041d6:	68bb      	ldr	r3, [r7, #8]
 80041d8:	429a      	cmp	r2, r3
 80041da:	f4ff ab60 	bcc.w	800389e <json_serialize_string+0x56>
 80041de:	2302      	movs	r3, #2
 80041e0:	613b      	str	r3, [r7, #16]
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	2b00      	cmp	r3, #0
 80041e6:	d00e      	beq.n	8004206 <json_serialize_string+0x9be>
 80041e8:	693b      	ldr	r3, [r7, #16]
 80041ea:	461a      	mov	r2, r3
 80041ec:	4911      	ldr	r1, [pc, #68]	; (8004234 <json_serialize_string+0x9ec>)
 80041ee:	6878      	ldr	r0, [r7, #4]
 80041f0:	f007 fc52 	bl	800ba98 <memcpy>
 80041f4:	693b      	ldr	r3, [r7, #16]
 80041f6:	687a      	ldr	r2, [r7, #4]
 80041f8:	4413      	add	r3, r2
 80041fa:	2200      	movs	r2, #0
 80041fc:	701a      	strb	r2, [r3, #0]
 80041fe:	693b      	ldr	r3, [r7, #16]
 8004200:	687a      	ldr	r2, [r7, #4]
 8004202:	4413      	add	r3, r2
 8004204:	607b      	str	r3, [r7, #4]
 8004206:	69ba      	ldr	r2, [r7, #24]
 8004208:	693b      	ldr	r3, [r7, #16]
 800420a:	4413      	add	r3, r2
 800420c:	61bb      	str	r3, [r7, #24]
 800420e:	69bb      	ldr	r3, [r7, #24]
 8004210:	4618      	mov	r0, r3
 8004212:	3720      	adds	r7, #32
 8004214:	46bd      	mov	sp, r7
 8004216:	bd80      	pop	{r7, pc}
 8004218:	0800edb8 	.word	0x0800edb8
 800421c:	0800edc0 	.word	0x0800edc0
 8004220:	0800edc8 	.word	0x0800edc8
 8004224:	0800edd0 	.word	0x0800edd0
 8004228:	20000010 	.word	0x20000010
 800422c:	0800edd8 	.word	0x0800edd8
 8004230:	0800eddc 	.word	0x0800eddc
 8004234:	0800ece4 	.word	0x0800ece4

08004238 <json_parse_string>:
 8004238:	b580      	push	{r7, lr}
 800423a:	b082      	sub	sp, #8
 800423c:	af00      	add	r7, sp, #0
 800423e:	6078      	str	r0, [r7, #4]
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	2b00      	cmp	r3, #0
 8004244:	d101      	bne.n	800424a <json_parse_string+0x12>
 8004246:	2300      	movs	r3, #0
 8004248:	e016      	b.n	8004278 <json_parse_string+0x40>
 800424a:	687b      	ldr	r3, [r7, #4]
 800424c:	781b      	ldrb	r3, [r3, #0]
 800424e:	2bef      	cmp	r3, #239	; 0xef
 8004250:	d10c      	bne.n	800426c <json_parse_string+0x34>
 8004252:	687b      	ldr	r3, [r7, #4]
 8004254:	3301      	adds	r3, #1
 8004256:	781b      	ldrb	r3, [r3, #0]
 8004258:	2bbb      	cmp	r3, #187	; 0xbb
 800425a:	d107      	bne.n	800426c <json_parse_string+0x34>
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	3302      	adds	r3, #2
 8004260:	781b      	ldrb	r3, [r3, #0]
 8004262:	2bbf      	cmp	r3, #191	; 0xbf
 8004264:	d102      	bne.n	800426c <json_parse_string+0x34>
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	3303      	adds	r3, #3
 800426a:	607b      	str	r3, [r7, #4]
 800426c:	1d3b      	adds	r3, r7, #4
 800426e:	2100      	movs	r1, #0
 8004270:	4618      	mov	r0, r3
 8004272:	f7fe fbed 	bl	8002a50 <parse_value>
 8004276:	4603      	mov	r3, r0
 8004278:	4618      	mov	r0, r3
 800427a:	3708      	adds	r7, #8
 800427c:	46bd      	mov	sp, r7
 800427e:	bd80      	pop	{r7, pc}

08004280 <json_object_get_value>:
 8004280:	b580      	push	{r7, lr}
 8004282:	b082      	sub	sp, #8
 8004284:	af00      	add	r7, sp, #0
 8004286:	6078      	str	r0, [r7, #4]
 8004288:	6039      	str	r1, [r7, #0]
 800428a:	687b      	ldr	r3, [r7, #4]
 800428c:	2b00      	cmp	r3, #0
 800428e:	d002      	beq.n	8004296 <json_object_get_value+0x16>
 8004290:	683b      	ldr	r3, [r7, #0]
 8004292:	2b00      	cmp	r3, #0
 8004294:	d101      	bne.n	800429a <json_object_get_value+0x1a>
 8004296:	2300      	movs	r3, #0
 8004298:	e009      	b.n	80042ae <json_object_get_value+0x2e>
 800429a:	6838      	ldr	r0, [r7, #0]
 800429c:	f7fb ff70 	bl	8000180 <strlen>
 80042a0:	4603      	mov	r3, r0
 80042a2:	461a      	mov	r2, r3
 80042a4:	6839      	ldr	r1, [r7, #0]
 80042a6:	6878      	ldr	r0, [r7, #4]
 80042a8:	f7fe f85b 	bl	8002362 <json_object_getn_value>
 80042ac:	4603      	mov	r3, r0
 80042ae:	4618      	mov	r0, r3
 80042b0:	3708      	adds	r7, #8
 80042b2:	46bd      	mov	sp, r7
 80042b4:	bd80      	pop	{r7, pc}

080042b6 <json_object_get_number>:
 80042b6:	b580      	push	{r7, lr}
 80042b8:	b082      	sub	sp, #8
 80042ba:	af00      	add	r7, sp, #0
 80042bc:	6078      	str	r0, [r7, #4]
 80042be:	6039      	str	r1, [r7, #0]
 80042c0:	6839      	ldr	r1, [r7, #0]
 80042c2:	6878      	ldr	r0, [r7, #4]
 80042c4:	f7ff ffdc 	bl	8004280 <json_object_get_value>
 80042c8:	4603      	mov	r3, r0
 80042ca:	4618      	mov	r0, r3
 80042cc:	f000 f90e 	bl	80044ec <json_value_get_number>
 80042d0:	eeb0 7a40 	vmov.f32	s14, s0
 80042d4:	eef0 7a60 	vmov.f32	s15, s1
 80042d8:	eeb0 0a47 	vmov.f32	s0, s14
 80042dc:	eef0 0a67 	vmov.f32	s1, s15
 80042e0:	3708      	adds	r7, #8
 80042e2:	46bd      	mov	sp, r7
 80042e4:	bd80      	pop	{r7, pc}

080042e6 <json_object_get_count>:
 80042e6:	b480      	push	{r7}
 80042e8:	b083      	sub	sp, #12
 80042ea:	af00      	add	r7, sp, #0
 80042ec:	6078      	str	r0, [r7, #4]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	2b00      	cmp	r3, #0
 80042f2:	d002      	beq.n	80042fa <json_object_get_count+0x14>
 80042f4:	687b      	ldr	r3, [r7, #4]
 80042f6:	699b      	ldr	r3, [r3, #24]
 80042f8:	e000      	b.n	80042fc <json_object_get_count+0x16>
 80042fa:	2300      	movs	r3, #0
 80042fc:	4618      	mov	r0, r3
 80042fe:	370c      	adds	r7, #12
 8004300:	46bd      	mov	sp, r7
 8004302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004306:	4770      	bx	lr

08004308 <json_object_get_name>:
 8004308:	b580      	push	{r7, lr}
 800430a:	b082      	sub	sp, #8
 800430c:	af00      	add	r7, sp, #0
 800430e:	6078      	str	r0, [r7, #4]
 8004310:	6039      	str	r1, [r7, #0]
 8004312:	687b      	ldr	r3, [r7, #4]
 8004314:	2b00      	cmp	r3, #0
 8004316:	d006      	beq.n	8004326 <json_object_get_name+0x1e>
 8004318:	6878      	ldr	r0, [r7, #4]
 800431a:	f7ff ffe4 	bl	80042e6 <json_object_get_count>
 800431e:	4602      	mov	r2, r0
 8004320:	683b      	ldr	r3, [r7, #0]
 8004322:	4293      	cmp	r3, r2
 8004324:	d301      	bcc.n	800432a <json_object_get_name+0x22>
 8004326:	2300      	movs	r3, #0
 8004328:	e005      	b.n	8004336 <json_object_get_name+0x2e>
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	68da      	ldr	r2, [r3, #12]
 800432e:	683b      	ldr	r3, [r7, #0]
 8004330:	009b      	lsls	r3, r3, #2
 8004332:	4413      	add	r3, r2
 8004334:	681b      	ldr	r3, [r3, #0]
 8004336:	4618      	mov	r0, r3
 8004338:	3708      	adds	r7, #8
 800433a:	46bd      	mov	sp, r7
 800433c:	bd80      	pop	{r7, pc}

0800433e <json_object_get_value_at>:
 800433e:	b580      	push	{r7, lr}
 8004340:	b082      	sub	sp, #8
 8004342:	af00      	add	r7, sp, #0
 8004344:	6078      	str	r0, [r7, #4]
 8004346:	6039      	str	r1, [r7, #0]
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	2b00      	cmp	r3, #0
 800434c:	d006      	beq.n	800435c <json_object_get_value_at+0x1e>
 800434e:	6878      	ldr	r0, [r7, #4]
 8004350:	f7ff ffc9 	bl	80042e6 <json_object_get_count>
 8004354:	4602      	mov	r2, r0
 8004356:	683b      	ldr	r3, [r7, #0]
 8004358:	4293      	cmp	r3, r2
 800435a:	d301      	bcc.n	8004360 <json_object_get_value_at+0x22>
 800435c:	2300      	movs	r3, #0
 800435e:	e005      	b.n	800436c <json_object_get_value_at+0x2e>
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	691a      	ldr	r2, [r3, #16]
 8004364:	683b      	ldr	r3, [r7, #0]
 8004366:	009b      	lsls	r3, r3, #2
 8004368:	4413      	add	r3, r2
 800436a:	681b      	ldr	r3, [r3, #0]
 800436c:	4618      	mov	r0, r3
 800436e:	3708      	adds	r7, #8
 8004370:	46bd      	mov	sp, r7
 8004372:	bd80      	pop	{r7, pc}

08004374 <json_object_get_wrapping_value>:
 8004374:	b480      	push	{r7}
 8004376:	b083      	sub	sp, #12
 8004378:	af00      	add	r7, sp, #0
 800437a:	6078      	str	r0, [r7, #4]
 800437c:	687b      	ldr	r3, [r7, #4]
 800437e:	2b00      	cmp	r3, #0
 8004380:	d101      	bne.n	8004386 <json_object_get_wrapping_value+0x12>
 8004382:	2300      	movs	r3, #0
 8004384:	e001      	b.n	800438a <json_object_get_wrapping_value+0x16>
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	4618      	mov	r0, r3
 800438c:	370c      	adds	r7, #12
 800438e:	46bd      	mov	sp, r7
 8004390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004394:	4770      	bx	lr

08004396 <json_array_get_value>:
 8004396:	b580      	push	{r7, lr}
 8004398:	b082      	sub	sp, #8
 800439a:	af00      	add	r7, sp, #0
 800439c:	6078      	str	r0, [r7, #4]
 800439e:	6039      	str	r1, [r7, #0]
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	2b00      	cmp	r3, #0
 80043a4:	d006      	beq.n	80043b4 <json_array_get_value+0x1e>
 80043a6:	6878      	ldr	r0, [r7, #4]
 80043a8:	f000 f810 	bl	80043cc <json_array_get_count>
 80043ac:	4602      	mov	r2, r0
 80043ae:	683b      	ldr	r3, [r7, #0]
 80043b0:	4293      	cmp	r3, r2
 80043b2:	d301      	bcc.n	80043b8 <json_array_get_value+0x22>
 80043b4:	2300      	movs	r3, #0
 80043b6:	e005      	b.n	80043c4 <json_array_get_value+0x2e>
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	685a      	ldr	r2, [r3, #4]
 80043bc:	683b      	ldr	r3, [r7, #0]
 80043be:	009b      	lsls	r3, r3, #2
 80043c0:	4413      	add	r3, r2
 80043c2:	681b      	ldr	r3, [r3, #0]
 80043c4:	4618      	mov	r0, r3
 80043c6:	3708      	adds	r7, #8
 80043c8:	46bd      	mov	sp, r7
 80043ca:	bd80      	pop	{r7, pc}

080043cc <json_array_get_count>:
 80043cc:	b480      	push	{r7}
 80043ce:	b083      	sub	sp, #12
 80043d0:	af00      	add	r7, sp, #0
 80043d2:	6078      	str	r0, [r7, #4]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	2b00      	cmp	r3, #0
 80043d8:	d002      	beq.n	80043e0 <json_array_get_count+0x14>
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	689b      	ldr	r3, [r3, #8]
 80043de:	e000      	b.n	80043e2 <json_array_get_count+0x16>
 80043e0:	2300      	movs	r3, #0
 80043e2:	4618      	mov	r0, r3
 80043e4:	370c      	adds	r7, #12
 80043e6:	46bd      	mov	sp, r7
 80043e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043ec:	4770      	bx	lr

080043ee <json_array_get_wrapping_value>:
 80043ee:	b480      	push	{r7}
 80043f0:	b083      	sub	sp, #12
 80043f2:	af00      	add	r7, sp, #0
 80043f4:	6078      	str	r0, [r7, #4]
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	2b00      	cmp	r3, #0
 80043fa:	d101      	bne.n	8004400 <json_array_get_wrapping_value+0x12>
 80043fc:	2300      	movs	r3, #0
 80043fe:	e001      	b.n	8004404 <json_array_get_wrapping_value+0x16>
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	681b      	ldr	r3, [r3, #0]
 8004404:	4618      	mov	r0, r3
 8004406:	370c      	adds	r7, #12
 8004408:	46bd      	mov	sp, r7
 800440a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800440e:	4770      	bx	lr

08004410 <json_value_get_type>:
 8004410:	b480      	push	{r7}
 8004412:	b083      	sub	sp, #12
 8004414:	af00      	add	r7, sp, #0
 8004416:	6078      	str	r0, [r7, #4]
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	2b00      	cmp	r3, #0
 800441c:	d002      	beq.n	8004424 <json_value_get_type+0x14>
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	685b      	ldr	r3, [r3, #4]
 8004422:	e001      	b.n	8004428 <json_value_get_type+0x18>
 8004424:	f04f 33ff 	mov.w	r3, #4294967295
 8004428:	4618      	mov	r0, r3
 800442a:	370c      	adds	r7, #12
 800442c:	46bd      	mov	sp, r7
 800442e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004432:	4770      	bx	lr

08004434 <json_value_get_object>:
 8004434:	b580      	push	{r7, lr}
 8004436:	b082      	sub	sp, #8
 8004438:	af00      	add	r7, sp, #0
 800443a:	6078      	str	r0, [r7, #4]
 800443c:	6878      	ldr	r0, [r7, #4]
 800443e:	f7ff ffe7 	bl	8004410 <json_value_get_type>
 8004442:	4603      	mov	r3, r0
 8004444:	2b04      	cmp	r3, #4
 8004446:	d102      	bne.n	800444e <json_value_get_object+0x1a>
 8004448:	687b      	ldr	r3, [r7, #4]
 800444a:	689b      	ldr	r3, [r3, #8]
 800444c:	e000      	b.n	8004450 <json_value_get_object+0x1c>
 800444e:	2300      	movs	r3, #0
 8004450:	4618      	mov	r0, r3
 8004452:	3708      	adds	r7, #8
 8004454:	46bd      	mov	sp, r7
 8004456:	bd80      	pop	{r7, pc}

08004458 <json_value_get_array>:
 8004458:	b580      	push	{r7, lr}
 800445a:	b082      	sub	sp, #8
 800445c:	af00      	add	r7, sp, #0
 800445e:	6078      	str	r0, [r7, #4]
 8004460:	6878      	ldr	r0, [r7, #4]
 8004462:	f7ff ffd5 	bl	8004410 <json_value_get_type>
 8004466:	4603      	mov	r3, r0
 8004468:	2b05      	cmp	r3, #5
 800446a:	d102      	bne.n	8004472 <json_value_get_array+0x1a>
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	689b      	ldr	r3, [r3, #8]
 8004470:	e000      	b.n	8004474 <json_value_get_array+0x1c>
 8004472:	2300      	movs	r3, #0
 8004474:	4618      	mov	r0, r3
 8004476:	3708      	adds	r7, #8
 8004478:	46bd      	mov	sp, r7
 800447a:	bd80      	pop	{r7, pc}

0800447c <json_value_get_string_desc>:
 800447c:	b580      	push	{r7, lr}
 800447e:	b082      	sub	sp, #8
 8004480:	af00      	add	r7, sp, #0
 8004482:	6078      	str	r0, [r7, #4]
 8004484:	6878      	ldr	r0, [r7, #4]
 8004486:	f7ff ffc3 	bl	8004410 <json_value_get_type>
 800448a:	4603      	mov	r3, r0
 800448c:	2b02      	cmp	r3, #2
 800448e:	d102      	bne.n	8004496 <json_value_get_string_desc+0x1a>
 8004490:	687b      	ldr	r3, [r7, #4]
 8004492:	3308      	adds	r3, #8
 8004494:	e000      	b.n	8004498 <json_value_get_string_desc+0x1c>
 8004496:	2300      	movs	r3, #0
 8004498:	4618      	mov	r0, r3
 800449a:	3708      	adds	r7, #8
 800449c:	46bd      	mov	sp, r7
 800449e:	bd80      	pop	{r7, pc}

080044a0 <json_value_get_string>:
 80044a0:	b580      	push	{r7, lr}
 80044a2:	b084      	sub	sp, #16
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	6078      	str	r0, [r7, #4]
 80044a8:	6878      	ldr	r0, [r7, #4]
 80044aa:	f7ff ffe7 	bl	800447c <json_value_get_string_desc>
 80044ae:	60f8      	str	r0, [r7, #12]
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	2b00      	cmp	r3, #0
 80044b4:	d002      	beq.n	80044bc <json_value_get_string+0x1c>
 80044b6:	68fb      	ldr	r3, [r7, #12]
 80044b8:	681b      	ldr	r3, [r3, #0]
 80044ba:	e000      	b.n	80044be <json_value_get_string+0x1e>
 80044bc:	2300      	movs	r3, #0
 80044be:	4618      	mov	r0, r3
 80044c0:	3710      	adds	r7, #16
 80044c2:	46bd      	mov	sp, r7
 80044c4:	bd80      	pop	{r7, pc}

080044c6 <json_value_get_string_len>:
 80044c6:	b580      	push	{r7, lr}
 80044c8:	b084      	sub	sp, #16
 80044ca:	af00      	add	r7, sp, #0
 80044cc:	6078      	str	r0, [r7, #4]
 80044ce:	6878      	ldr	r0, [r7, #4]
 80044d0:	f7ff ffd4 	bl	800447c <json_value_get_string_desc>
 80044d4:	60f8      	str	r0, [r7, #12]
 80044d6:	68fb      	ldr	r3, [r7, #12]
 80044d8:	2b00      	cmp	r3, #0
 80044da:	d002      	beq.n	80044e2 <json_value_get_string_len+0x1c>
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	685b      	ldr	r3, [r3, #4]
 80044e0:	e000      	b.n	80044e4 <json_value_get_string_len+0x1e>
 80044e2:	2300      	movs	r3, #0
 80044e4:	4618      	mov	r0, r3
 80044e6:	3710      	adds	r7, #16
 80044e8:	46bd      	mov	sp, r7
 80044ea:	bd80      	pop	{r7, pc}

080044ec <json_value_get_number>:
 80044ec:	b580      	push	{r7, lr}
 80044ee:	b082      	sub	sp, #8
 80044f0:	af00      	add	r7, sp, #0
 80044f2:	6078      	str	r0, [r7, #4]
 80044f4:	6878      	ldr	r0, [r7, #4]
 80044f6:	f7ff ff8b 	bl	8004410 <json_value_get_type>
 80044fa:	4603      	mov	r3, r0
 80044fc:	2b03      	cmp	r3, #3
 80044fe:	d103      	bne.n	8004508 <json_value_get_number+0x1c>
 8004500:	687b      	ldr	r3, [r7, #4]
 8004502:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8004506:	e003      	b.n	8004510 <json_value_get_number+0x24>
 8004508:	f04f 0200 	mov.w	r2, #0
 800450c:	f04f 0300 	mov.w	r3, #0
 8004510:	ec43 2b17 	vmov	d7, r2, r3
 8004514:	eeb0 0a47 	vmov.f32	s0, s14
 8004518:	eef0 0a67 	vmov.f32	s1, s15
 800451c:	3708      	adds	r7, #8
 800451e:	46bd      	mov	sp, r7
 8004520:	bd80      	pop	{r7, pc}

08004522 <json_value_get_boolean>:
 8004522:	b580      	push	{r7, lr}
 8004524:	b082      	sub	sp, #8
 8004526:	af00      	add	r7, sp, #0
 8004528:	6078      	str	r0, [r7, #4]
 800452a:	6878      	ldr	r0, [r7, #4]
 800452c:	f7ff ff70 	bl	8004410 <json_value_get_type>
 8004530:	4603      	mov	r3, r0
 8004532:	2b06      	cmp	r3, #6
 8004534:	d102      	bne.n	800453c <json_value_get_boolean+0x1a>
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	689b      	ldr	r3, [r3, #8]
 800453a:	e001      	b.n	8004540 <json_value_get_boolean+0x1e>
 800453c:	f04f 33ff 	mov.w	r3, #4294967295
 8004540:	4618      	mov	r0, r3
 8004542:	3708      	adds	r7, #8
 8004544:	46bd      	mov	sp, r7
 8004546:	bd80      	pop	{r7, pc}

08004548 <json_value_free>:
 8004548:	b580      	push	{r7, lr}
 800454a:	b082      	sub	sp, #8
 800454c:	af00      	add	r7, sp, #0
 800454e:	6078      	str	r0, [r7, #4]
 8004550:	6878      	ldr	r0, [r7, #4]
 8004552:	f7ff ff5d 	bl	8004410 <json_value_get_type>
 8004556:	4603      	mov	r3, r0
 8004558:	2b05      	cmp	r3, #5
 800455a:	d012      	beq.n	8004582 <json_value_free+0x3a>
 800455c:	2b05      	cmp	r3, #5
 800455e:	dc16      	bgt.n	800458e <json_value_free+0x46>
 8004560:	2b02      	cmp	r3, #2
 8004562:	d007      	beq.n	8004574 <json_value_free+0x2c>
 8004564:	2b04      	cmp	r3, #4
 8004566:	d112      	bne.n	800458e <json_value_free+0x46>
 8004568:	687b      	ldr	r3, [r7, #4]
 800456a:	689b      	ldr	r3, [r3, #8]
 800456c:	4618      	mov	r0, r3
 800456e:	f7fd ff35 	bl	80023dc <json_object_free>
 8004572:	e00d      	b.n	8004590 <json_value_free+0x48>
 8004574:	4b0a      	ldr	r3, [pc, #40]	; (80045a0 <json_value_free+0x58>)
 8004576:	681b      	ldr	r3, [r3, #0]
 8004578:	687a      	ldr	r2, [r7, #4]
 800457a:	6892      	ldr	r2, [r2, #8]
 800457c:	4610      	mov	r0, r2
 800457e:	4798      	blx	r3
 8004580:	e006      	b.n	8004590 <json_value_free+0x48>
 8004582:	687b      	ldr	r3, [r7, #4]
 8004584:	689b      	ldr	r3, [r3, #8]
 8004586:	4618      	mov	r0, r3
 8004588:	f7fd ffd2 	bl	8002530 <json_array_free>
 800458c:	e000      	b.n	8004590 <json_value_free+0x48>
 800458e:	bf00      	nop
 8004590:	4b03      	ldr	r3, [pc, #12]	; (80045a0 <json_value_free+0x58>)
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	6878      	ldr	r0, [r7, #4]
 8004596:	4798      	blx	r3
 8004598:	bf00      	nop
 800459a:	3708      	adds	r7, #8
 800459c:	46bd      	mov	sp, r7
 800459e:	bd80      	pop	{r7, pc}
 80045a0:	2000000c 	.word	0x2000000c

080045a4 <json_value_init_object>:
 80045a4:	b580      	push	{r7, lr}
 80045a6:	b082      	sub	sp, #8
 80045a8:	af00      	add	r7, sp, #0
 80045aa:	4b12      	ldr	r3, [pc, #72]	; (80045f4 <json_value_init_object+0x50>)
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	2010      	movs	r0, #16
 80045b0:	4798      	blx	r3
 80045b2:	6078      	str	r0, [r7, #4]
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	2b00      	cmp	r3, #0
 80045b8:	d101      	bne.n	80045be <json_value_init_object+0x1a>
 80045ba:	2300      	movs	r3, #0
 80045bc:	e016      	b.n	80045ec <json_value_init_object+0x48>
 80045be:	687b      	ldr	r3, [r7, #4]
 80045c0:	2200      	movs	r2, #0
 80045c2:	601a      	str	r2, [r3, #0]
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	2204      	movs	r2, #4
 80045c8:	605a      	str	r2, [r3, #4]
 80045ca:	6878      	ldr	r0, [r7, #4]
 80045cc:	f7fd fc1c 	bl	8001e08 <json_object_make>
 80045d0:	4602      	mov	r2, r0
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	609a      	str	r2, [r3, #8]
 80045d6:	687b      	ldr	r3, [r7, #4]
 80045d8:	689b      	ldr	r3, [r3, #8]
 80045da:	2b00      	cmp	r3, #0
 80045dc:	d105      	bne.n	80045ea <json_value_init_object+0x46>
 80045de:	4b06      	ldr	r3, [pc, #24]	; (80045f8 <json_value_init_object+0x54>)
 80045e0:	681b      	ldr	r3, [r3, #0]
 80045e2:	6878      	ldr	r0, [r7, #4]
 80045e4:	4798      	blx	r3
 80045e6:	2300      	movs	r3, #0
 80045e8:	e000      	b.n	80045ec <json_value_init_object+0x48>
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	4618      	mov	r0, r3
 80045ee:	3708      	adds	r7, #8
 80045f0:	46bd      	mov	sp, r7
 80045f2:	bd80      	pop	{r7, pc}
 80045f4:	20000008 	.word	0x20000008
 80045f8:	2000000c 	.word	0x2000000c

080045fc <json_value_init_array>:
 80045fc:	b580      	push	{r7, lr}
 80045fe:	b082      	sub	sp, #8
 8004600:	af00      	add	r7, sp, #0
 8004602:	4b12      	ldr	r3, [pc, #72]	; (800464c <json_value_init_array+0x50>)
 8004604:	681b      	ldr	r3, [r3, #0]
 8004606:	2010      	movs	r0, #16
 8004608:	4798      	blx	r3
 800460a:	6078      	str	r0, [r7, #4]
 800460c:	687b      	ldr	r3, [r7, #4]
 800460e:	2b00      	cmp	r3, #0
 8004610:	d101      	bne.n	8004616 <json_value_init_array+0x1a>
 8004612:	2300      	movs	r3, #0
 8004614:	e016      	b.n	8004644 <json_value_init_array+0x48>
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	2200      	movs	r2, #0
 800461a:	601a      	str	r2, [r3, #0]
 800461c:	687b      	ldr	r3, [r7, #4]
 800461e:	2205      	movs	r2, #5
 8004620:	605a      	str	r2, [r3, #4]
 8004622:	6878      	ldr	r0, [r7, #4]
 8004624:	f7fd feee 	bl	8002404 <json_array_make>
 8004628:	4602      	mov	r2, r0
 800462a:	687b      	ldr	r3, [r7, #4]
 800462c:	609a      	str	r2, [r3, #8]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	689b      	ldr	r3, [r3, #8]
 8004632:	2b00      	cmp	r3, #0
 8004634:	d105      	bne.n	8004642 <json_value_init_array+0x46>
 8004636:	4b06      	ldr	r3, [pc, #24]	; (8004650 <json_value_init_array+0x54>)
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	6878      	ldr	r0, [r7, #4]
 800463c:	4798      	blx	r3
 800463e:	2300      	movs	r3, #0
 8004640:	e000      	b.n	8004644 <json_value_init_array+0x48>
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	4618      	mov	r0, r3
 8004646:	3708      	adds	r7, #8
 8004648:	46bd      	mov	sp, r7
 800464a:	bd80      	pop	{r7, pc}
 800464c:	20000008 	.word	0x20000008
 8004650:	2000000c 	.word	0x2000000c

08004654 <json_value_init_number>:
 8004654:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004656:	b085      	sub	sp, #20
 8004658:	af00      	add	r7, sp, #0
 800465a:	ed87 0b00 	vstr	d0, [r7]
 800465e:	2300      	movs	r3, #0
 8004660:	60fb      	str	r3, [r7, #12]
 8004662:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004666:	e9d7 0100 	ldrd	r0, r1, [r7]
 800466a:	f7fc fa37 	bl	8000adc <__aeabi_dcmpun>
 800466e:	4603      	mov	r3, r0
 8004670:	2b00      	cmp	r3, #0
 8004672:	d121      	bne.n	80046b8 <json_value_init_number+0x64>
 8004674:	683c      	ldr	r4, [r7, #0]
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 800467c:	2301      	movs	r3, #1
 800467e:	461e      	mov	r6, r3
 8004680:	f04f 32ff 	mov.w	r2, #4294967295
 8004684:	4b1a      	ldr	r3, [pc, #104]	; (80046f0 <json_value_init_number+0x9c>)
 8004686:	4620      	mov	r0, r4
 8004688:	4629      	mov	r1, r5
 800468a:	f7fc fa27 	bl	8000adc <__aeabi_dcmpun>
 800468e:	4603      	mov	r3, r0
 8004690:	2b00      	cmp	r3, #0
 8004692:	d10b      	bne.n	80046ac <json_value_init_number+0x58>
 8004694:	f04f 32ff 	mov.w	r2, #4294967295
 8004698:	4b15      	ldr	r3, [pc, #84]	; (80046f0 <json_value_init_number+0x9c>)
 800469a:	4620      	mov	r0, r4
 800469c:	4629      	mov	r1, r5
 800469e:	f7fc f9ff 	bl	8000aa0 <__aeabi_dcmple>
 80046a2:	4603      	mov	r3, r0
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	d101      	bne.n	80046ac <json_value_init_number+0x58>
 80046a8:	2300      	movs	r3, #0
 80046aa:	461e      	mov	r6, r3
 80046ac:	b2f3      	uxtb	r3, r6
 80046ae:	f083 0301 	eor.w	r3, r3, #1
 80046b2:	b2db      	uxtb	r3, r3
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d001      	beq.n	80046bc <json_value_init_number+0x68>
 80046b8:	2300      	movs	r3, #0
 80046ba:	e015      	b.n	80046e8 <json_value_init_number+0x94>
 80046bc:	4b0d      	ldr	r3, [pc, #52]	; (80046f4 <json_value_init_number+0xa0>)
 80046be:	681b      	ldr	r3, [r3, #0]
 80046c0:	2010      	movs	r0, #16
 80046c2:	4798      	blx	r3
 80046c4:	60f8      	str	r0, [r7, #12]
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	2b00      	cmp	r3, #0
 80046ca:	d101      	bne.n	80046d0 <json_value_init_number+0x7c>
 80046cc:	2300      	movs	r3, #0
 80046ce:	e00b      	b.n	80046e8 <json_value_init_number+0x94>
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	2200      	movs	r2, #0
 80046d4:	601a      	str	r2, [r3, #0]
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	2203      	movs	r2, #3
 80046da:	605a      	str	r2, [r3, #4]
 80046dc:	68f9      	ldr	r1, [r7, #12]
 80046de:	e9d7 2300 	ldrd	r2, r3, [r7]
 80046e2:	e9c1 2302 	strd	r2, r3, [r1, #8]
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	4618      	mov	r0, r3
 80046ea:	3714      	adds	r7, #20
 80046ec:	46bd      	mov	sp, r7
 80046ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80046f0:	7fefffff 	.word	0x7fefffff
 80046f4:	20000008 	.word	0x20000008

080046f8 <json_value_init_boolean>:
 80046f8:	b580      	push	{r7, lr}
 80046fa:	b084      	sub	sp, #16
 80046fc:	af00      	add	r7, sp, #0
 80046fe:	6078      	str	r0, [r7, #4]
 8004700:	4b0e      	ldr	r3, [pc, #56]	; (800473c <json_value_init_boolean+0x44>)
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	2010      	movs	r0, #16
 8004706:	4798      	blx	r3
 8004708:	60f8      	str	r0, [r7, #12]
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	2b00      	cmp	r3, #0
 800470e:	d101      	bne.n	8004714 <json_value_init_boolean+0x1c>
 8004710:	2300      	movs	r3, #0
 8004712:	e00f      	b.n	8004734 <json_value_init_boolean+0x3c>
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	2200      	movs	r2, #0
 8004718:	601a      	str	r2, [r3, #0]
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	2206      	movs	r2, #6
 800471e:	605a      	str	r2, [r3, #4]
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	2b00      	cmp	r3, #0
 8004724:	bf14      	ite	ne
 8004726:	2301      	movne	r3, #1
 8004728:	2300      	moveq	r3, #0
 800472a:	b2db      	uxtb	r3, r3
 800472c:	461a      	mov	r2, r3
 800472e:	68fb      	ldr	r3, [r7, #12]
 8004730:	609a      	str	r2, [r3, #8]
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	4618      	mov	r0, r3
 8004736:	3710      	adds	r7, #16
 8004738:	46bd      	mov	sp, r7
 800473a:	bd80      	pop	{r7, pc}
 800473c:	20000008 	.word	0x20000008

08004740 <json_value_init_null>:
 8004740:	b580      	push	{r7, lr}
 8004742:	b082      	sub	sp, #8
 8004744:	af00      	add	r7, sp, #0
 8004746:	4b0a      	ldr	r3, [pc, #40]	; (8004770 <json_value_init_null+0x30>)
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	2010      	movs	r0, #16
 800474c:	4798      	blx	r3
 800474e:	6078      	str	r0, [r7, #4]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	2b00      	cmp	r3, #0
 8004754:	d101      	bne.n	800475a <json_value_init_null+0x1a>
 8004756:	2300      	movs	r3, #0
 8004758:	e006      	b.n	8004768 <json_value_init_null+0x28>
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	2200      	movs	r2, #0
 800475e:	601a      	str	r2, [r3, #0]
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	2201      	movs	r2, #1
 8004764:	605a      	str	r2, [r3, #4]
 8004766:	687b      	ldr	r3, [r7, #4]
 8004768:	4618      	mov	r0, r3
 800476a:	3708      	adds	r7, #8
 800476c:	46bd      	mov	sp, r7
 800476e:	bd80      	pop	{r7, pc}
 8004770:	20000008 	.word	0x20000008

08004774 <json_serialization_size>:
 8004774:	b580      	push	{r7, lr}
 8004776:	b096      	sub	sp, #88	; 0x58
 8004778:	af02      	add	r7, sp, #8
 800477a:	6078      	str	r0, [r7, #4]
 800477c:	f107 030c 	add.w	r3, r7, #12
 8004780:	9300      	str	r3, [sp, #0]
 8004782:	2300      	movs	r3, #0
 8004784:	2200      	movs	r2, #0
 8004786:	2100      	movs	r1, #0
 8004788:	6878      	ldr	r0, [r7, #4]
 800478a:	f7fe fcc7 	bl	800311c <json_serialize_to_buffer_r>
 800478e:	64f8      	str	r0, [r7, #76]	; 0x4c
 8004790:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004792:	2b00      	cmp	r3, #0
 8004794:	db02      	blt.n	800479c <json_serialization_size+0x28>
 8004796:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004798:	3301      	adds	r3, #1
 800479a:	e000      	b.n	800479e <json_serialization_size+0x2a>
 800479c:	2300      	movs	r3, #0
 800479e:	4618      	mov	r0, r3
 80047a0:	3750      	adds	r7, #80	; 0x50
 80047a2:	46bd      	mov	sp, r7
 80047a4:	bd80      	pop	{r7, pc}

080047a6 <json_serialize_to_buffer>:
 80047a6:	b580      	push	{r7, lr}
 80047a8:	b088      	sub	sp, #32
 80047aa:	af02      	add	r7, sp, #8
 80047ac:	60f8      	str	r0, [r7, #12]
 80047ae:	60b9      	str	r1, [r7, #8]
 80047b0:	607a      	str	r2, [r7, #4]
 80047b2:	f04f 33ff 	mov.w	r3, #4294967295
 80047b6:	617b      	str	r3, [r7, #20]
 80047b8:	68f8      	ldr	r0, [r7, #12]
 80047ba:	f7ff ffdb 	bl	8004774 <json_serialization_size>
 80047be:	6138      	str	r0, [r7, #16]
 80047c0:	693b      	ldr	r3, [r7, #16]
 80047c2:	2b00      	cmp	r3, #0
 80047c4:	d003      	beq.n	80047ce <json_serialize_to_buffer+0x28>
 80047c6:	687a      	ldr	r2, [r7, #4]
 80047c8:	693b      	ldr	r3, [r7, #16]
 80047ca:	429a      	cmp	r2, r3
 80047cc:	d202      	bcs.n	80047d4 <json_serialize_to_buffer+0x2e>
 80047ce:	f04f 33ff 	mov.w	r3, #4294967295
 80047d2:	e00f      	b.n	80047f4 <json_serialize_to_buffer+0x4e>
 80047d4:	2300      	movs	r3, #0
 80047d6:	9300      	str	r3, [sp, #0]
 80047d8:	2300      	movs	r3, #0
 80047da:	2200      	movs	r2, #0
 80047dc:	68b9      	ldr	r1, [r7, #8]
 80047de:	68f8      	ldr	r0, [r7, #12]
 80047e0:	f7fe fc9c 	bl	800311c <json_serialize_to_buffer_r>
 80047e4:	6178      	str	r0, [r7, #20]
 80047e6:	697b      	ldr	r3, [r7, #20]
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	da02      	bge.n	80047f2 <json_serialize_to_buffer+0x4c>
 80047ec:	f04f 33ff 	mov.w	r3, #4294967295
 80047f0:	e000      	b.n	80047f4 <json_serialize_to_buffer+0x4e>
 80047f2:	2300      	movs	r3, #0
 80047f4:	4618      	mov	r0, r3
 80047f6:	3718      	adds	r7, #24
 80047f8:	46bd      	mov	sp, r7
 80047fa:	bd80      	pop	{r7, pc}

080047fc <json_serialize_to_string>:
 80047fc:	b580      	push	{r7, lr}
 80047fe:	b086      	sub	sp, #24
 8004800:	af00      	add	r7, sp, #0
 8004802:	6078      	str	r0, [r7, #4]
 8004804:	f04f 33ff 	mov.w	r3, #4294967295
 8004808:	617b      	str	r3, [r7, #20]
 800480a:	6878      	ldr	r0, [r7, #4]
 800480c:	f7ff ffb2 	bl	8004774 <json_serialization_size>
 8004810:	6138      	str	r0, [r7, #16]
 8004812:	2300      	movs	r3, #0
 8004814:	60fb      	str	r3, [r7, #12]
 8004816:	693b      	ldr	r3, [r7, #16]
 8004818:	2b00      	cmp	r3, #0
 800481a:	d101      	bne.n	8004820 <json_serialize_to_string+0x24>
 800481c:	2300      	movs	r3, #0
 800481e:	e018      	b.n	8004852 <json_serialize_to_string+0x56>
 8004820:	4b0e      	ldr	r3, [pc, #56]	; (800485c <json_serialize_to_string+0x60>)
 8004822:	681b      	ldr	r3, [r3, #0]
 8004824:	6938      	ldr	r0, [r7, #16]
 8004826:	4798      	blx	r3
 8004828:	60f8      	str	r0, [r7, #12]
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	2b00      	cmp	r3, #0
 800482e:	d101      	bne.n	8004834 <json_serialize_to_string+0x38>
 8004830:	2300      	movs	r3, #0
 8004832:	e00e      	b.n	8004852 <json_serialize_to_string+0x56>
 8004834:	693a      	ldr	r2, [r7, #16]
 8004836:	68f9      	ldr	r1, [r7, #12]
 8004838:	6878      	ldr	r0, [r7, #4]
 800483a:	f7ff ffb4 	bl	80047a6 <json_serialize_to_buffer>
 800483e:	6178      	str	r0, [r7, #20]
 8004840:	697b      	ldr	r3, [r7, #20]
 8004842:	2b00      	cmp	r3, #0
 8004844:	d004      	beq.n	8004850 <json_serialize_to_string+0x54>
 8004846:	68f8      	ldr	r0, [r7, #12]
 8004848:	f000 f80a 	bl	8004860 <json_free_serialized_string>
 800484c:	2300      	movs	r3, #0
 800484e:	e000      	b.n	8004852 <json_serialize_to_string+0x56>
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	4618      	mov	r0, r3
 8004854:	3718      	adds	r7, #24
 8004856:	46bd      	mov	sp, r7
 8004858:	bd80      	pop	{r7, pc}
 800485a:	bf00      	nop
 800485c:	20000008 	.word	0x20000008

08004860 <json_free_serialized_string>:
 8004860:	b580      	push	{r7, lr}
 8004862:	b082      	sub	sp, #8
 8004864:	af00      	add	r7, sp, #0
 8004866:	6078      	str	r0, [r7, #4]
 8004868:	4b03      	ldr	r3, [pc, #12]	; (8004878 <json_free_serialized_string+0x18>)
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	6878      	ldr	r0, [r7, #4]
 800486e:	4798      	blx	r3
 8004870:	bf00      	nop
 8004872:	3708      	adds	r7, #8
 8004874:	46bd      	mov	sp, r7
 8004876:	bd80      	pop	{r7, pc}
 8004878:	2000000c 	.word	0x2000000c

0800487c <json_object_set_value>:
 800487c:	b580      	push	{r7, lr}
 800487e:	b08e      	sub	sp, #56	; 0x38
 8004880:	af02      	add	r7, sp, #8
 8004882:	60f8      	str	r0, [r7, #12]
 8004884:	60b9      	str	r1, [r7, #8]
 8004886:	607a      	str	r2, [r7, #4]
 8004888:	2300      	movs	r3, #0
 800488a:	62bb      	str	r3, [r7, #40]	; 0x28
 800488c:	2300      	movs	r3, #0
 800488e:	617b      	str	r3, [r7, #20]
 8004890:	2300      	movs	r3, #0
 8004892:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004894:	2300      	movs	r3, #0
 8004896:	627b      	str	r3, [r7, #36]	; 0x24
 8004898:	2300      	movs	r3, #0
 800489a:	623b      	str	r3, [r7, #32]
 800489c:	2300      	movs	r3, #0
 800489e:	61fb      	str	r3, [r7, #28]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d009      	beq.n	80048ba <json_object_set_value+0x3e>
 80048a6:	68bb      	ldr	r3, [r7, #8]
 80048a8:	2b00      	cmp	r3, #0
 80048aa:	d006      	beq.n	80048ba <json_object_set_value+0x3e>
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d003      	beq.n	80048ba <json_object_set_value+0x3e>
 80048b2:	687b      	ldr	r3, [r7, #4]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d002      	beq.n	80048c0 <json_object_set_value+0x44>
 80048ba:	f04f 33ff 	mov.w	r3, #4294967295
 80048be:	e095      	b.n	80049ec <json_object_set_value+0x170>
 80048c0:	68b8      	ldr	r0, [r7, #8]
 80048c2:	f7fb fc5d 	bl	8000180 <strlen>
 80048c6:	4603      	mov	r3, r0
 80048c8:	4619      	mov	r1, r3
 80048ca:	68b8      	ldr	r0, [r7, #8]
 80048cc:	f7fd fa70 	bl	8001db0 <hash_string>
 80048d0:	62b8      	str	r0, [r7, #40]	; 0x28
 80048d2:	2300      	movs	r3, #0
 80048d4:	617b      	str	r3, [r7, #20]
 80048d6:	68b8      	ldr	r0, [r7, #8]
 80048d8:	f7fb fc52 	bl	8000180 <strlen>
 80048dc:	4602      	mov	r2, r0
 80048de:	f107 0314 	add.w	r3, r7, #20
 80048e2:	9300      	str	r3, [sp, #0]
 80048e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048e6:	68b9      	ldr	r1, [r7, #8]
 80048e8:	68f8      	ldr	r0, [r7, #12]
 80048ea:	f7fd fc42 	bl	8002172 <json_object_get_cell_ix>
 80048ee:	62f8      	str	r0, [r7, #44]	; 0x2c
 80048f0:	697b      	ldr	r3, [r7, #20]
 80048f2:	2b00      	cmp	r3, #0
 80048f4:	d01f      	beq.n	8004936 <json_object_set_value+0xba>
 80048f6:	68fb      	ldr	r3, [r7, #12]
 80048f8:	685a      	ldr	r2, [r3, #4]
 80048fa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80048fc:	009b      	lsls	r3, r3, #2
 80048fe:	4413      	add	r3, r2
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	627b      	str	r3, [r7, #36]	; 0x24
 8004904:	68fb      	ldr	r3, [r7, #12]
 8004906:	691a      	ldr	r2, [r3, #16]
 8004908:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800490a:	009b      	lsls	r3, r3, #2
 800490c:	4413      	add	r3, r2
 800490e:	681b      	ldr	r3, [r3, #0]
 8004910:	623b      	str	r3, [r7, #32]
 8004912:	6a38      	ldr	r0, [r7, #32]
 8004914:	f7ff fe18 	bl	8004548 <json_value_free>
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	691a      	ldr	r2, [r3, #16]
 800491c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800491e:	009b      	lsls	r3, r3, #2
 8004920:	4413      	add	r3, r2
 8004922:	687a      	ldr	r2, [r7, #4]
 8004924:	601a      	str	r2, [r3, #0]
 8004926:	68f8      	ldr	r0, [r7, #12]
 8004928:	f7ff fd24 	bl	8004374 <json_object_get_wrapping_value>
 800492c:	4602      	mov	r2, r0
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	601a      	str	r2, [r3, #0]
 8004932:	2300      	movs	r3, #0
 8004934:	e05a      	b.n	80049ec <json_object_set_value+0x170>
 8004936:	68fb      	ldr	r3, [r7, #12]
 8004938:	699a      	ldr	r2, [r3, #24]
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	69db      	ldr	r3, [r3, #28]
 800493e:	429a      	cmp	r2, r3
 8004940:	d316      	bcc.n	8004970 <json_object_set_value+0xf4>
 8004942:	68f8      	ldr	r0, [r7, #12]
 8004944:	f7fd fbaa 	bl	800209c <json_object_grow_and_rehash>
 8004948:	61b8      	str	r0, [r7, #24]
 800494a:	69bb      	ldr	r3, [r7, #24]
 800494c:	2b00      	cmp	r3, #0
 800494e:	d002      	beq.n	8004956 <json_object_set_value+0xda>
 8004950:	f04f 33ff 	mov.w	r3, #4294967295
 8004954:	e04a      	b.n	80049ec <json_object_set_value+0x170>
 8004956:	68b8      	ldr	r0, [r7, #8]
 8004958:	f7fb fc12 	bl	8000180 <strlen>
 800495c:	4602      	mov	r2, r0
 800495e:	f107 0314 	add.w	r3, r7, #20
 8004962:	9300      	str	r3, [sp, #0]
 8004964:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004966:	68b9      	ldr	r1, [r7, #8]
 8004968:	68f8      	ldr	r0, [r7, #12]
 800496a:	f7fd fc02 	bl	8002172 <json_object_get_cell_ix>
 800496e:	62f8      	str	r0, [r7, #44]	; 0x2c
 8004970:	68b8      	ldr	r0, [r7, #8]
 8004972:	f7fd f949 	bl	8001c08 <parson_strdup>
 8004976:	61f8      	str	r0, [r7, #28]
 8004978:	69fb      	ldr	r3, [r7, #28]
 800497a:	2b00      	cmp	r3, #0
 800497c:	d102      	bne.n	8004984 <json_object_set_value+0x108>
 800497e:	f04f 33ff 	mov.w	r3, #4294967295
 8004982:	e033      	b.n	80049ec <json_object_set_value+0x170>
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	68da      	ldr	r2, [r3, #12]
 8004988:	68fb      	ldr	r3, [r7, #12]
 800498a:	699b      	ldr	r3, [r3, #24]
 800498c:	009b      	lsls	r3, r3, #2
 800498e:	4413      	add	r3, r2
 8004990:	69fa      	ldr	r2, [r7, #28]
 8004992:	601a      	str	r2, [r3, #0]
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	685a      	ldr	r2, [r3, #4]
 8004998:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800499a:	009b      	lsls	r3, r3, #2
 800499c:	4413      	add	r3, r2
 800499e:	68fa      	ldr	r2, [r7, #12]
 80049a0:	6992      	ldr	r2, [r2, #24]
 80049a2:	601a      	str	r2, [r3, #0]
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	691a      	ldr	r2, [r3, #16]
 80049a8:	68fb      	ldr	r3, [r7, #12]
 80049aa:	699b      	ldr	r3, [r3, #24]
 80049ac:	009b      	lsls	r3, r3, #2
 80049ae:	4413      	add	r3, r2
 80049b0:	687a      	ldr	r2, [r7, #4]
 80049b2:	601a      	str	r2, [r3, #0]
 80049b4:	68fb      	ldr	r3, [r7, #12]
 80049b6:	695a      	ldr	r2, [r3, #20]
 80049b8:	68fb      	ldr	r3, [r7, #12]
 80049ba:	699b      	ldr	r3, [r3, #24]
 80049bc:	009b      	lsls	r3, r3, #2
 80049be:	4413      	add	r3, r2
 80049c0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80049c2:	601a      	str	r2, [r3, #0]
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	689a      	ldr	r2, [r3, #8]
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	699b      	ldr	r3, [r3, #24]
 80049cc:	009b      	lsls	r3, r3, #2
 80049ce:	4413      	add	r3, r2
 80049d0:	6aba      	ldr	r2, [r7, #40]	; 0x28
 80049d2:	601a      	str	r2, [r3, #0]
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	699b      	ldr	r3, [r3, #24]
 80049d8:	1c5a      	adds	r2, r3, #1
 80049da:	68fb      	ldr	r3, [r7, #12]
 80049dc:	619a      	str	r2, [r3, #24]
 80049de:	68f8      	ldr	r0, [r7, #12]
 80049e0:	f7ff fcc8 	bl	8004374 <json_object_get_wrapping_value>
 80049e4:	4602      	mov	r2, r0
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	601a      	str	r2, [r3, #0]
 80049ea:	2300      	movs	r3, #0
 80049ec:	4618      	mov	r0, r3
 80049ee:	3730      	adds	r7, #48	; 0x30
 80049f0:	46bd      	mov	sp, r7
 80049f2:	bd80      	pop	{r7, pc}

080049f4 <json_object_set_number>:
 80049f4:	b580      	push	{r7, lr}
 80049f6:	b086      	sub	sp, #24
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	60f8      	str	r0, [r7, #12]
 80049fc:	60b9      	str	r1, [r7, #8]
 80049fe:	ed87 0b00 	vstr	d0, [r7]
 8004a02:	ed97 0b00 	vldr	d0, [r7]
 8004a06:	f7ff fe25 	bl	8004654 <json_value_init_number>
 8004a0a:	6178      	str	r0, [r7, #20]
 8004a0c:	697a      	ldr	r2, [r7, #20]
 8004a0e:	68b9      	ldr	r1, [r7, #8]
 8004a10:	68f8      	ldr	r0, [r7, #12]
 8004a12:	f7ff ff33 	bl	800487c <json_object_set_value>
 8004a16:	6138      	str	r0, [r7, #16]
 8004a18:	693b      	ldr	r3, [r7, #16]
 8004a1a:	2b00      	cmp	r3, #0
 8004a1c:	d002      	beq.n	8004a24 <json_object_set_number+0x30>
 8004a1e:	6978      	ldr	r0, [r7, #20]
 8004a20:	f7ff fd92 	bl	8004548 <json_value_free>
 8004a24:	693b      	ldr	r3, [r7, #16]
 8004a26:	4618      	mov	r0, r3
 8004a28:	3718      	adds	r7, #24
 8004a2a:	46bd      	mov	sp, r7
 8004a2c:	bd80      	pop	{r7, pc}

08004a2e <LL_AHB2_GRP1_EnableClock>:
 8004a2e:	b480      	push	{r7}
 8004a30:	b085      	sub	sp, #20
 8004a32:	af00      	add	r7, sp, #0
 8004a34:	6078      	str	r0, [r7, #4]
 8004a36:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a3a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004a3c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	4313      	orrs	r3, r2
 8004a44:	64cb      	str	r3, [r1, #76]	; 0x4c
 8004a46:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a4a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004a4c:	687b      	ldr	r3, [r7, #4]
 8004a4e:	4013      	ands	r3, r2
 8004a50:	60fb      	str	r3, [r7, #12]
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	bf00      	nop
 8004a56:	3714      	adds	r7, #20
 8004a58:	46bd      	mov	sp, r7
 8004a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5e:	4770      	bx	lr

08004a60 <LL_APB1_GRP1_EnableClock>:
 8004a60:	b480      	push	{r7}
 8004a62:	b085      	sub	sp, #20
 8004a64:	af00      	add	r7, sp, #0
 8004a66:	6078      	str	r0, [r7, #4]
 8004a68:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a6c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8004a6e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	4313      	orrs	r3, r2
 8004a76:	658b      	str	r3, [r1, #88]	; 0x58
 8004a78:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a7c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	4013      	ands	r3, r2
 8004a82:	60fb      	str	r3, [r7, #12]
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	bf00      	nop
 8004a88:	3714      	adds	r7, #20
 8004a8a:	46bd      	mov	sp, r7
 8004a8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a90:	4770      	bx	lr

08004a92 <LL_APB1_GRP2_EnableClock>:
 8004a92:	b480      	push	{r7}
 8004a94:	b085      	sub	sp, #20
 8004a96:	af00      	add	r7, sp, #0
 8004a98:	6078      	str	r0, [r7, #4]
 8004a9a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004a9e:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004aa0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	4313      	orrs	r3, r2
 8004aa8:	65cb      	str	r3, [r1, #92]	; 0x5c
 8004aaa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004aae:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 8004ab0:	687b      	ldr	r3, [r7, #4]
 8004ab2:	4013      	ands	r3, r2
 8004ab4:	60fb      	str	r3, [r7, #12]
 8004ab6:	68fb      	ldr	r3, [r7, #12]
 8004ab8:	bf00      	nop
 8004aba:	3714      	adds	r7, #20
 8004abc:	46bd      	mov	sp, r7
 8004abe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ac2:	4770      	bx	lr

08004ac4 <LL_APB2_GRP1_EnableClock>:
 8004ac4:	b480      	push	{r7}
 8004ac6:	b085      	sub	sp, #20
 8004ac8:	af00      	add	r7, sp, #0
 8004aca:	6078      	str	r0, [r7, #4]
 8004acc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ad0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004ad2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	4313      	orrs	r3, r2
 8004ada:	660b      	str	r3, [r1, #96]	; 0x60
 8004adc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ae0:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	4013      	ands	r3, r2
 8004ae6:	60fb      	str	r3, [r7, #12]
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	bf00      	nop
 8004aec:	3714      	adds	r7, #20
 8004aee:	46bd      	mov	sp, r7
 8004af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004af4:	4770      	bx	lr

08004af6 <HAL_MspInit>:
 8004af6:	b480      	push	{r7}
 8004af8:	af00      	add	r7, sp, #0
 8004afa:	bf00      	nop
 8004afc:	46bd      	mov	sp, r7
 8004afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b02:	4770      	bx	lr

08004b04 <HAL_ADC_MspInit>:
 8004b04:	b580      	push	{r7, lr}
 8004b06:	b082      	sub	sp, #8
 8004b08:	af00      	add	r7, sp, #0
 8004b0a:	6078      	str	r0, [r7, #4]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	4a05      	ldr	r2, [pc, #20]	; (8004b28 <HAL_ADC_MspInit+0x24>)
 8004b12:	4293      	cmp	r3, r2
 8004b14:	d103      	bne.n	8004b1e <HAL_ADC_MspInit+0x1a>
 8004b16:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8004b1a:	f7ff ff88 	bl	8004a2e <LL_AHB2_GRP1_EnableClock>
 8004b1e:	bf00      	nop
 8004b20:	3708      	adds	r7, #8
 8004b22:	46bd      	mov	sp, r7
 8004b24:	bd80      	pop	{r7, pc}
 8004b26:	bf00      	nop
 8004b28:	50040000 	.word	0x50040000

08004b2c <HAL_UART_MspInit>:
 8004b2c:	b580      	push	{r7, lr}
 8004b2e:	b09c      	sub	sp, #112	; 0x70
 8004b30:	af00      	add	r7, sp, #0
 8004b32:	6078      	str	r0, [r7, #4]
 8004b34:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8004b38:	2200      	movs	r2, #0
 8004b3a:	601a      	str	r2, [r3, #0]
 8004b3c:	605a      	str	r2, [r3, #4]
 8004b3e:	609a      	str	r2, [r3, #8]
 8004b40:	60da      	str	r2, [r3, #12]
 8004b42:	611a      	str	r2, [r3, #16]
 8004b44:	f107 030c 	add.w	r3, r7, #12
 8004b48:	2250      	movs	r2, #80	; 0x50
 8004b4a:	2100      	movs	r1, #0
 8004b4c:	4618      	mov	r0, r3
 8004b4e:	f006 ffcb 	bl	800bae8 <memset>
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	4a44      	ldr	r2, [pc, #272]	; (8004c68 <HAL_UART_MspInit+0x13c>)
 8004b58:	4293      	cmp	r3, r2
 8004b5a:	d156      	bne.n	8004c0a <HAL_UART_MspInit+0xde>
 8004b5c:	2302      	movs	r3, #2
 8004b5e:	60fb      	str	r3, [r7, #12]
 8004b60:	2300      	movs	r3, #0
 8004b62:	62bb      	str	r3, [r7, #40]	; 0x28
 8004b64:	f107 030c 	add.w	r3, r7, #12
 8004b68:	4618      	mov	r0, r3
 8004b6a:	f003 ff81 	bl	8008a70 <HAL_RCCEx_PeriphCLKConfig>
 8004b6e:	4603      	mov	r3, r0
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d001      	beq.n	8004b78 <HAL_UART_MspInit+0x4c>
 8004b74:	f7fd f802 	bl	8001b7c <Error_Handler>
 8004b78:	2001      	movs	r0, #1
 8004b7a:	f7ff ff8a 	bl	8004a92 <LL_APB1_GRP2_EnableClock>
 8004b7e:	2004      	movs	r0, #4
 8004b80:	f7ff ff55 	bl	8004a2e <LL_AHB2_GRP1_EnableClock>
 8004b84:	2303      	movs	r3, #3
 8004b86:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004b88:	2302      	movs	r3, #2
 8004b8a:	663b      	str	r3, [r7, #96]	; 0x60
 8004b8c:	2300      	movs	r3, #0
 8004b8e:	667b      	str	r3, [r7, #100]	; 0x64
 8004b90:	2300      	movs	r3, #0
 8004b92:	66bb      	str	r3, [r7, #104]	; 0x68
 8004b94:	2308      	movs	r3, #8
 8004b96:	66fb      	str	r3, [r7, #108]	; 0x6c
 8004b98:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8004b9c:	4619      	mov	r1, r3
 8004b9e:	4833      	ldr	r0, [pc, #204]	; (8004c6c <HAL_UART_MspInit+0x140>)
 8004ba0:	f002 f93c 	bl	8006e1c <HAL_GPIO_Init>
 8004ba4:	4b32      	ldr	r3, [pc, #200]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004ba6:	4a33      	ldr	r2, [pc, #204]	; (8004c74 <HAL_UART_MspInit+0x148>)
 8004ba8:	601a      	str	r2, [r3, #0]
 8004baa:	4b31      	ldr	r3, [pc, #196]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bac:	2210      	movs	r2, #16
 8004bae:	605a      	str	r2, [r3, #4]
 8004bb0:	4b2f      	ldr	r3, [pc, #188]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bb2:	2200      	movs	r2, #0
 8004bb4:	609a      	str	r2, [r3, #8]
 8004bb6:	4b2e      	ldr	r3, [pc, #184]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bb8:	2200      	movs	r2, #0
 8004bba:	60da      	str	r2, [r3, #12]
 8004bbc:	4b2c      	ldr	r3, [pc, #176]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bbe:	2280      	movs	r2, #128	; 0x80
 8004bc0:	611a      	str	r2, [r3, #16]
 8004bc2:	4b2b      	ldr	r3, [pc, #172]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bc4:	2200      	movs	r2, #0
 8004bc6:	615a      	str	r2, [r3, #20]
 8004bc8:	4b29      	ldr	r3, [pc, #164]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bca:	2200      	movs	r2, #0
 8004bcc:	619a      	str	r2, [r3, #24]
 8004bce:	4b28      	ldr	r3, [pc, #160]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bd0:	2200      	movs	r2, #0
 8004bd2:	61da      	str	r2, [r3, #28]
 8004bd4:	4b26      	ldr	r3, [pc, #152]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bd6:	2200      	movs	r2, #0
 8004bd8:	621a      	str	r2, [r3, #32]
 8004bda:	4825      	ldr	r0, [pc, #148]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bdc:	f001 fdec 	bl	80067b8 <HAL_DMA_Init>
 8004be0:	4603      	mov	r3, r0
 8004be2:	2b00      	cmp	r3, #0
 8004be4:	d001      	beq.n	8004bea <HAL_UART_MspInit+0xbe>
 8004be6:	f7fc ffc9 	bl	8001b7c <Error_Handler>
 8004bea:	687b      	ldr	r3, [r7, #4]
 8004bec:	4a20      	ldr	r2, [pc, #128]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bee:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8004bf2:	4a1f      	ldr	r2, [pc, #124]	; (8004c70 <HAL_UART_MspInit+0x144>)
 8004bf4:	687b      	ldr	r3, [r7, #4]
 8004bf6:	6293      	str	r3, [r2, #40]	; 0x28
 8004bf8:	2200      	movs	r2, #0
 8004bfa:	2100      	movs	r1, #0
 8004bfc:	2025      	movs	r0, #37	; 0x25
 8004bfe:	f001 fda6 	bl	800674e <HAL_NVIC_SetPriority>
 8004c02:	2025      	movs	r0, #37	; 0x25
 8004c04:	f001 fdbd 	bl	8006782 <HAL_NVIC_EnableIRQ>
 8004c08:	e029      	b.n	8004c5e <HAL_UART_MspInit+0x132>
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	4a1a      	ldr	r2, [pc, #104]	; (8004c78 <HAL_UART_MspInit+0x14c>)
 8004c10:	4293      	cmp	r3, r2
 8004c12:	d124      	bne.n	8004c5e <HAL_UART_MspInit+0x132>
 8004c14:	2301      	movs	r3, #1
 8004c16:	60fb      	str	r3, [r7, #12]
 8004c18:	2300      	movs	r3, #0
 8004c1a:	627b      	str	r3, [r7, #36]	; 0x24
 8004c1c:	f107 030c 	add.w	r3, r7, #12
 8004c20:	4618      	mov	r0, r3
 8004c22:	f003 ff25 	bl	8008a70 <HAL_RCCEx_PeriphCLKConfig>
 8004c26:	4603      	mov	r3, r0
 8004c28:	2b00      	cmp	r3, #0
 8004c2a:	d001      	beq.n	8004c30 <HAL_UART_MspInit+0x104>
 8004c2c:	f7fc ffa6 	bl	8001b7c <Error_Handler>
 8004c30:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8004c34:	f7ff ff46 	bl	8004ac4 <LL_APB2_GRP1_EnableClock>
 8004c38:	2002      	movs	r0, #2
 8004c3a:	f7ff fef8 	bl	8004a2e <LL_AHB2_GRP1_EnableClock>
 8004c3e:	23c0      	movs	r3, #192	; 0xc0
 8004c40:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004c42:	2302      	movs	r3, #2
 8004c44:	663b      	str	r3, [r7, #96]	; 0x60
 8004c46:	2301      	movs	r3, #1
 8004c48:	667b      	str	r3, [r7, #100]	; 0x64
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	66bb      	str	r3, [r7, #104]	; 0x68
 8004c4e:	2307      	movs	r3, #7
 8004c50:	66fb      	str	r3, [r7, #108]	; 0x6c
 8004c52:	f107 035c 	add.w	r3, r7, #92	; 0x5c
 8004c56:	4619      	mov	r1, r3
 8004c58:	4808      	ldr	r0, [pc, #32]	; (8004c7c <HAL_UART_MspInit+0x150>)
 8004c5a:	f002 f8df 	bl	8006e1c <HAL_GPIO_Init>
 8004c5e:	bf00      	nop
 8004c60:	3770      	adds	r7, #112	; 0x70
 8004c62:	46bd      	mov	sp, r7
 8004c64:	bd80      	pop	{r7, pc}
 8004c66:	bf00      	nop
 8004c68:	40008000 	.word	0x40008000
 8004c6c:	48000800 	.word	0x48000800
 8004c70:	200003a0 	.word	0x200003a0
 8004c74:	40020008 	.word	0x40020008
 8004c78:	40013800 	.word	0x40013800
 8004c7c:	48000400 	.word	0x48000400

08004c80 <HAL_TIM_Base_MspInit>:
 8004c80:	b580      	push	{r7, lr}
 8004c82:	b082      	sub	sp, #8
 8004c84:	af00      	add	r7, sp, #0
 8004c86:	6078      	str	r0, [r7, #4]
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	4a05      	ldr	r2, [pc, #20]	; (8004ca4 <HAL_TIM_Base_MspInit+0x24>)
 8004c8e:	4293      	cmp	r3, r2
 8004c90:	d103      	bne.n	8004c9a <HAL_TIM_Base_MspInit+0x1a>
 8004c92:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8004c96:	f7ff ff15 	bl	8004ac4 <LL_APB2_GRP1_EnableClock>
 8004c9a:	bf00      	nop
 8004c9c:	3708      	adds	r7, #8
 8004c9e:	46bd      	mov	sp, r7
 8004ca0:	bd80      	pop	{r7, pc}
 8004ca2:	bf00      	nop
 8004ca4:	40014800 	.word	0x40014800

08004ca8 <HAL_PCD_MspInit>:
 8004ca8:	b580      	push	{r7, lr}
 8004caa:	b088      	sub	sp, #32
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	6078      	str	r0, [r7, #4]
 8004cb0:	f107 030c 	add.w	r3, r7, #12
 8004cb4:	2200      	movs	r2, #0
 8004cb6:	601a      	str	r2, [r3, #0]
 8004cb8:	605a      	str	r2, [r3, #4]
 8004cba:	609a      	str	r2, [r3, #8]
 8004cbc:	60da      	str	r2, [r3, #12]
 8004cbe:	611a      	str	r2, [r3, #16]
 8004cc0:	687b      	ldr	r3, [r7, #4]
 8004cc2:	681b      	ldr	r3, [r3, #0]
 8004cc4:	4a0f      	ldr	r2, [pc, #60]	; (8004d04 <HAL_PCD_MspInit+0x5c>)
 8004cc6:	4293      	cmp	r3, r2
 8004cc8:	d118      	bne.n	8004cfc <HAL_PCD_MspInit+0x54>
 8004cca:	2001      	movs	r0, #1
 8004ccc:	f7ff feaf 	bl	8004a2e <LL_AHB2_GRP1_EnableClock>
 8004cd0:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 8004cd4:	60fb      	str	r3, [r7, #12]
 8004cd6:	2302      	movs	r3, #2
 8004cd8:	613b      	str	r3, [r7, #16]
 8004cda:	2300      	movs	r3, #0
 8004cdc:	617b      	str	r3, [r7, #20]
 8004cde:	2300      	movs	r3, #0
 8004ce0:	61bb      	str	r3, [r7, #24]
 8004ce2:	230a      	movs	r3, #10
 8004ce4:	61fb      	str	r3, [r7, #28]
 8004ce6:	f107 030c 	add.w	r3, r7, #12
 8004cea:	4619      	mov	r1, r3
 8004cec:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8004cf0:	f002 f894 	bl	8006e1c <HAL_GPIO_Init>
 8004cf4:	f04f 6080 	mov.w	r0, #67108864	; 0x4000000
 8004cf8:	f7ff feb2 	bl	8004a60 <LL_APB1_GRP1_EnableClock>
 8004cfc:	bf00      	nop
 8004cfe:	3720      	adds	r7, #32
 8004d00:	46bd      	mov	sp, r7
 8004d02:	bd80      	pop	{r7, pc}
 8004d04:	40006800 	.word	0x40006800

08004d08 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004d08:	b480      	push	{r7}
 8004d0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004d0c:	e7fe      	b.n	8004d0c <NMI_Handler+0x4>

08004d0e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004d0e:	b480      	push	{r7}
 8004d10:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004d12:	e7fe      	b.n	8004d12 <HardFault_Handler+0x4>

08004d14 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004d14:	b480      	push	{r7}
 8004d16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004d18:	e7fe      	b.n	8004d18 <MemManage_Handler+0x4>

08004d1a <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004d1a:	b480      	push	{r7}
 8004d1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004d1e:	e7fe      	b.n	8004d1e <BusFault_Handler+0x4>

08004d20 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004d20:	b480      	push	{r7}
 8004d22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004d24:	e7fe      	b.n	8004d24 <UsageFault_Handler+0x4>

08004d26 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004d26:	b480      	push	{r7}
 8004d28:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8004d2a:	bf00      	nop
 8004d2c:	46bd      	mov	sp, r7
 8004d2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d32:	4770      	bx	lr

08004d34 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004d34:	b480      	push	{r7}
 8004d36:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004d38:	bf00      	nop
 8004d3a:	46bd      	mov	sp, r7
 8004d3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d40:	4770      	bx	lr

08004d42 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004d42:	b480      	push	{r7}
 8004d44:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004d46:	bf00      	nop
 8004d48:	46bd      	mov	sp, r7
 8004d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d4e:	4770      	bx	lr

08004d50 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004d50:	b580      	push	{r7, lr}
 8004d52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004d54:	f000 fa04 	bl	8005160 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004d58:	bf00      	nop
 8004d5a:	bd80      	pop	{r7, pc}

08004d5c <EXTI0_IRQHandler>:

/**
  * @brief This function handles EXTI line0 interrupt.
  */
void EXTI0_IRQHandler(void)
{
 8004d5c:	b580      	push	{r7, lr}
 8004d5e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI0_IRQn 0 */

  /* USER CODE END EXTI0_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B2_Pin);
 8004d60:	2001      	movs	r0, #1
 8004d62:	f002 fa15 	bl	8007190 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI0_IRQn 1 */

  /* USER CODE END EXTI0_IRQn 1 */
}
 8004d66:	bf00      	nop
 8004d68:	bd80      	pop	{r7, pc}

08004d6a <EXTI4_IRQHandler>:

/**
  * @brief This function handles EXTI line4 interrupt.
  */
void EXTI4_IRQHandler(void)
{
 8004d6a:	b580      	push	{r7, lr}
 8004d6c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_IRQn 0 */

  /* USER CODE END EXTI4_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(B1_Pin);
 8004d6e:	2010      	movs	r0, #16
 8004d70:	f002 fa0e 	bl	8007190 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_IRQn 1 */

  /* USER CODE END EXTI4_IRQn 1 */
}
 8004d74:	bf00      	nop
 8004d76:	bd80      	pop	{r7, pc}

08004d78 <DMA1_Channel1_IRQHandler>:

/**
  * @brief This function handles DMA1 channel1 global interrupt.
  */
void DMA1_Channel1_IRQHandler(void)
{
 8004d78:	b580      	push	{r7, lr}
 8004d7a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
  /* USER CODE END DMA1_Channel1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_lpuart1_rx);
 8004d7c:	4802      	ldr	r0, [pc, #8]	; (8004d88 <DMA1_Channel1_IRQHandler+0x10>)
 8004d7e:	f001 fefc 	bl	8006b7a <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */

  /* USER CODE END DMA1_Channel1_IRQn 1 */
}
 8004d82:	bf00      	nop
 8004d84:	bd80      	pop	{r7, pc}
 8004d86:	bf00      	nop
 8004d88:	200003a0 	.word	0x200003a0

08004d8c <LPUART1_IRQHandler>:

/**
  * @brief This function handles LPUART1 global interrupt.
  */
void LPUART1_IRQHandler(void)
{
 8004d8c:	b580      	push	{r7, lr}
 8004d8e:	b082      	sub	sp, #8
 8004d90:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LPUART1_IRQn 0 */
	uint32_t tmp_flag = 0;
 8004d92:	2300      	movs	r3, #0
 8004d94:	607b      	str	r3, [r7, #4]
	uint32_t temp;
	tmp_flag = __HAL_UART_GET_FLAG(&hlpuart1, UART_FLAG_IDLE);
 8004d96:	4b27      	ldr	r3, [pc, #156]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	69db      	ldr	r3, [r3, #28]
 8004d9c:	f003 0310 	and.w	r3, r3, #16
 8004da0:	2b10      	cmp	r3, #16
 8004da2:	bf0c      	ite	eq
 8004da4:	2301      	moveq	r3, #1
 8004da6:	2300      	movne	r3, #0
 8004da8:	b2db      	uxtb	r3, r3
 8004daa:	607b      	str	r3, [r7, #4]
	if ((tmp_flag != RESET)) {
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d039      	beq.n	8004e26 <LPUART1_IRQHandler+0x9a>
		__HAL_UART_CLEAR_IDLEFLAG(&hlpuart1);
 8004db2:	4b20      	ldr	r3, [pc, #128]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	2210      	movs	r2, #16
 8004db8:	621a      	str	r2, [r3, #32]
		temp = hlpuart1.Instance->ISR;
 8004dba:	4b1e      	ldr	r3, [pc, #120]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004dbc:	681b      	ldr	r3, [r3, #0]
 8004dbe:	69db      	ldr	r3, [r3, #28]
 8004dc0:	603b      	str	r3, [r7, #0]
		temp = hlpuart1.Instance->RDR;
 8004dc2:	4b1c      	ldr	r3, [pc, #112]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004dc4:	681b      	ldr	r3, [r3, #0]
 8004dc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004dc8:	603b      	str	r3, [r7, #0]
		//HAL_UART_DMAStop(&hlpuart1);
		temp = hlpuart1.hdmarx->Instance->CNDTR;
 8004dca:	4b1a      	ldr	r3, [pc, #104]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004dcc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004dd0:	681b      	ldr	r3, [r3, #0]
 8004dd2:	685b      	ldr	r3, [r3, #4]
 8004dd4:	603b      	str	r3, [r7, #0]
		// reset index dma buffer to 1024 (countdown)
		__HAL_DMA_DISABLE(hlpuart1.hdmarx);
 8004dd6:	4b17      	ldr	r3, [pc, #92]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004dd8:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	681a      	ldr	r2, [r3, #0]
 8004de0:	4b14      	ldr	r3, [pc, #80]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004de2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	f022 0201 	bic.w	r2, r2, #1
 8004dec:	601a      	str	r2, [r3, #0]
		hlpuart1.hdmarx->Instance->CNDTR = UART_ESP32_MAX_RECVLEN;
 8004dee:	4b11      	ldr	r3, [pc, #68]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004df0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004df4:	681b      	ldr	r3, [r3, #0]
 8004df6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8004dfa:	605a      	str	r2, [r3, #4]
		__HAL_DMA_ENABLE(hlpuart1.hdmarx);
 8004dfc:	4b0d      	ldr	r3, [pc, #52]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004dfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	681a      	ldr	r2, [r3, #0]
 8004e06:	4b0b      	ldr	r3, [pc, #44]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004e08:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004e0c:	681b      	ldr	r3, [r3, #0]
 8004e0e:	f042 0201 	orr.w	r2, r2, #1
 8004e12:	601a      	str	r2, [r3, #0]
		UART_ESP32_RxLen = UART_ESP32_MAX_RECVLEN - temp;
 8004e14:	683b      	ldr	r3, [r7, #0]
 8004e16:	b2db      	uxtb	r3, r3
 8004e18:	425b      	negs	r3, r3
 8004e1a:	b2da      	uxtb	r2, r3
 8004e1c:	4b06      	ldr	r3, [pc, #24]	; (8004e38 <LPUART1_IRQHandler+0xac>)
 8004e1e:	701a      	strb	r2, [r3, #0]
		UART_ESP32_RecvEndFlag = 1;
 8004e20:	4b06      	ldr	r3, [pc, #24]	; (8004e3c <LPUART1_IRQHandler+0xb0>)
 8004e22:	2201      	movs	r2, #1
 8004e24:	701a      	strb	r2, [r3, #0]
	}
  /* USER CODE END LPUART1_IRQn 0 */
  HAL_UART_IRQHandler(&hlpuart1);
 8004e26:	4803      	ldr	r0, [pc, #12]	; (8004e34 <LPUART1_IRQHandler+0xa8>)
 8004e28:	f004 fab4 	bl	8009394 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN LPUART1_IRQn 1 */

  /* USER CODE END LPUART1_IRQn 1 */
}
 8004e2c:	bf00      	nop
 8004e2e:	3708      	adds	r7, #8
 8004e30:	46bd      	mov	sp, r7
 8004e32:	bd80      	pop	{r7, pc}
 8004e34:	20000278 	.word	0x20000278
 8004e38:	20001754 	.word	0x20001754
 8004e3c:	20001755 	.word	0x20001755

08004e40 <_getpid>:
 8004e40:	b480      	push	{r7}
 8004e42:	af00      	add	r7, sp, #0
 8004e44:	2301      	movs	r3, #1
 8004e46:	4618      	mov	r0, r3
 8004e48:	46bd      	mov	sp, r7
 8004e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e4e:	4770      	bx	lr

08004e50 <_kill>:
 8004e50:	b580      	push	{r7, lr}
 8004e52:	b082      	sub	sp, #8
 8004e54:	af00      	add	r7, sp, #0
 8004e56:	6078      	str	r0, [r7, #4]
 8004e58:	6039      	str	r1, [r7, #0]
 8004e5a:	f006 fbc3 	bl	800b5e4 <__errno>
 8004e5e:	4603      	mov	r3, r0
 8004e60:	2216      	movs	r2, #22
 8004e62:	601a      	str	r2, [r3, #0]
 8004e64:	f04f 33ff 	mov.w	r3, #4294967295
 8004e68:	4618      	mov	r0, r3
 8004e6a:	3708      	adds	r7, #8
 8004e6c:	46bd      	mov	sp, r7
 8004e6e:	bd80      	pop	{r7, pc}

08004e70 <_exit>:
 8004e70:	b580      	push	{r7, lr}
 8004e72:	b082      	sub	sp, #8
 8004e74:	af00      	add	r7, sp, #0
 8004e76:	6078      	str	r0, [r7, #4]
 8004e78:	f04f 31ff 	mov.w	r1, #4294967295
 8004e7c:	6878      	ldr	r0, [r7, #4]
 8004e7e:	f7ff ffe7 	bl	8004e50 <_kill>
 8004e82:	e7fe      	b.n	8004e82 <_exit+0x12>

08004e84 <_read>:
 8004e84:	b580      	push	{r7, lr}
 8004e86:	b086      	sub	sp, #24
 8004e88:	af00      	add	r7, sp, #0
 8004e8a:	60f8      	str	r0, [r7, #12]
 8004e8c:	60b9      	str	r1, [r7, #8]
 8004e8e:	607a      	str	r2, [r7, #4]
 8004e90:	2300      	movs	r3, #0
 8004e92:	617b      	str	r3, [r7, #20]
 8004e94:	e00a      	b.n	8004eac <_read+0x28>
 8004e96:	f3af 8000 	nop.w
 8004e9a:	4601      	mov	r1, r0
 8004e9c:	68bb      	ldr	r3, [r7, #8]
 8004e9e:	1c5a      	adds	r2, r3, #1
 8004ea0:	60ba      	str	r2, [r7, #8]
 8004ea2:	b2ca      	uxtb	r2, r1
 8004ea4:	701a      	strb	r2, [r3, #0]
 8004ea6:	697b      	ldr	r3, [r7, #20]
 8004ea8:	3301      	adds	r3, #1
 8004eaa:	617b      	str	r3, [r7, #20]
 8004eac:	697a      	ldr	r2, [r7, #20]
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	429a      	cmp	r2, r3
 8004eb2:	dbf0      	blt.n	8004e96 <_read+0x12>
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	4618      	mov	r0, r3
 8004eb8:	3718      	adds	r7, #24
 8004eba:	46bd      	mov	sp, r7
 8004ebc:	bd80      	pop	{r7, pc}

08004ebe <_close>:
 8004ebe:	b480      	push	{r7}
 8004ec0:	b083      	sub	sp, #12
 8004ec2:	af00      	add	r7, sp, #0
 8004ec4:	6078      	str	r0, [r7, #4]
 8004ec6:	f04f 33ff 	mov.w	r3, #4294967295
 8004eca:	4618      	mov	r0, r3
 8004ecc:	370c      	adds	r7, #12
 8004ece:	46bd      	mov	sp, r7
 8004ed0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ed4:	4770      	bx	lr

08004ed6 <_fstat>:
 8004ed6:	b480      	push	{r7}
 8004ed8:	b083      	sub	sp, #12
 8004eda:	af00      	add	r7, sp, #0
 8004edc:	6078      	str	r0, [r7, #4]
 8004ede:	6039      	str	r1, [r7, #0]
 8004ee0:	683b      	ldr	r3, [r7, #0]
 8004ee2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004ee6:	605a      	str	r2, [r3, #4]
 8004ee8:	2300      	movs	r3, #0
 8004eea:	4618      	mov	r0, r3
 8004eec:	370c      	adds	r7, #12
 8004eee:	46bd      	mov	sp, r7
 8004ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ef4:	4770      	bx	lr

08004ef6 <_isatty>:
 8004ef6:	b480      	push	{r7}
 8004ef8:	b083      	sub	sp, #12
 8004efa:	af00      	add	r7, sp, #0
 8004efc:	6078      	str	r0, [r7, #4]
 8004efe:	2301      	movs	r3, #1
 8004f00:	4618      	mov	r0, r3
 8004f02:	370c      	adds	r7, #12
 8004f04:	46bd      	mov	sp, r7
 8004f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f0a:	4770      	bx	lr

08004f0c <_lseek>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	b085      	sub	sp, #20
 8004f10:	af00      	add	r7, sp, #0
 8004f12:	60f8      	str	r0, [r7, #12]
 8004f14:	60b9      	str	r1, [r7, #8]
 8004f16:	607a      	str	r2, [r7, #4]
 8004f18:	2300      	movs	r3, #0
 8004f1a:	4618      	mov	r0, r3
 8004f1c:	3714      	adds	r7, #20
 8004f1e:	46bd      	mov	sp, r7
 8004f20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f24:	4770      	bx	lr
	...

08004f28 <_sbrk>:
 8004f28:	b580      	push	{r7, lr}
 8004f2a:	b086      	sub	sp, #24
 8004f2c:	af00      	add	r7, sp, #0
 8004f2e:	6078      	str	r0, [r7, #4]
 8004f30:	4a14      	ldr	r2, [pc, #80]	; (8004f84 <_sbrk+0x5c>)
 8004f32:	4b15      	ldr	r3, [pc, #84]	; (8004f88 <_sbrk+0x60>)
 8004f34:	1ad3      	subs	r3, r2, r3
 8004f36:	617b      	str	r3, [r7, #20]
 8004f38:	697b      	ldr	r3, [r7, #20]
 8004f3a:	613b      	str	r3, [r7, #16]
 8004f3c:	4b13      	ldr	r3, [pc, #76]	; (8004f8c <_sbrk+0x64>)
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	2b00      	cmp	r3, #0
 8004f42:	d102      	bne.n	8004f4a <_sbrk+0x22>
 8004f44:	4b11      	ldr	r3, [pc, #68]	; (8004f8c <_sbrk+0x64>)
 8004f46:	4a12      	ldr	r2, [pc, #72]	; (8004f90 <_sbrk+0x68>)
 8004f48:	601a      	str	r2, [r3, #0]
 8004f4a:	4b10      	ldr	r3, [pc, #64]	; (8004f8c <_sbrk+0x64>)
 8004f4c:	681a      	ldr	r2, [r3, #0]
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	4413      	add	r3, r2
 8004f52:	693a      	ldr	r2, [r7, #16]
 8004f54:	429a      	cmp	r2, r3
 8004f56:	d207      	bcs.n	8004f68 <_sbrk+0x40>
 8004f58:	f006 fb44 	bl	800b5e4 <__errno>
 8004f5c:	4603      	mov	r3, r0
 8004f5e:	220c      	movs	r2, #12
 8004f60:	601a      	str	r2, [r3, #0]
 8004f62:	f04f 33ff 	mov.w	r3, #4294967295
 8004f66:	e009      	b.n	8004f7c <_sbrk+0x54>
 8004f68:	4b08      	ldr	r3, [pc, #32]	; (8004f8c <_sbrk+0x64>)
 8004f6a:	681b      	ldr	r3, [r3, #0]
 8004f6c:	60fb      	str	r3, [r7, #12]
 8004f6e:	4b07      	ldr	r3, [pc, #28]	; (8004f8c <_sbrk+0x64>)
 8004f70:	681a      	ldr	r2, [r3, #0]
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	4413      	add	r3, r2
 8004f76:	4a05      	ldr	r2, [pc, #20]	; (8004f8c <_sbrk+0x64>)
 8004f78:	6013      	str	r3, [r2, #0]
 8004f7a:	68fb      	ldr	r3, [r7, #12]
 8004f7c:	4618      	mov	r0, r3
 8004f7e:	3718      	adds	r7, #24
 8004f80:	46bd      	mov	sp, r7
 8004f82:	bd80      	pop	{r7, pc}
 8004f84:	20030000 	.word	0x20030000
 8004f88:	00000400 	.word	0x00000400
 8004f8c:	20000748 	.word	0x20000748
 8004f90:	20001768 	.word	0x20001768

08004f94 <SystemInit>:
 8004f94:	b480      	push	{r7}
 8004f96:	af00      	add	r7, sp, #0
 8004f98:	4b24      	ldr	r3, [pc, #144]	; (800502c <SystemInit+0x98>)
 8004f9a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004f9e:	4a23      	ldr	r2, [pc, #140]	; (800502c <SystemInit+0x98>)
 8004fa0:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004fa4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004fa8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8004fb2:	f043 0301 	orr.w	r3, r3, #1
 8004fb6:	6013      	str	r3, [r2, #0]
 8004fb8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fbc:	f44f 22e0 	mov.w	r2, #458752	; 0x70000
 8004fc0:	609a      	str	r2, [r3, #8]
 8004fc2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fc6:	681a      	ldr	r2, [r3, #0]
 8004fc8:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8004fcc:	4b18      	ldr	r3, [pc, #96]	; (8005030 <SystemInit+0x9c>)
 8004fce:	4013      	ands	r3, r2
 8004fd0:	600b      	str	r3, [r1, #0]
 8004fd2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fd6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004fda:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8004fde:	f023 0305 	bic.w	r3, r3, #5
 8004fe2:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8004fe6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004fea:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8004fee:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8004ff2:	f023 0301 	bic.w	r3, r3, #1
 8004ff6:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 8004ffa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8004ffe:	4a0d      	ldr	r2, [pc, #52]	; (8005034 <SystemInit+0xa0>)
 8005000:	60da      	str	r2, [r3, #12]
 8005002:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8005006:	4a0b      	ldr	r2, [pc, #44]	; (8005034 <SystemInit+0xa0>)
 8005008:	611a      	str	r2, [r3, #16]
 800500a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8005014:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005018:	6013      	str	r3, [r2, #0]
 800501a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800501e:	2200      	movs	r2, #0
 8005020:	619a      	str	r2, [r3, #24]
 8005022:	bf00      	nop
 8005024:	46bd      	mov	sp, r7
 8005026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800502a:	4770      	bx	lr
 800502c:	e000ed00 	.word	0xe000ed00
 8005030:	faf6fefb 	.word	0xfaf6fefb
 8005034:	22041000 	.word	0x22041000

08005038 <CopyDataInit>:
 8005038:	58d4      	ldr	r4, [r2, r3]
 800503a:	50c4      	str	r4, [r0, r3]
 800503c:	3304      	adds	r3, #4

0800503e <LoopCopyDataInit>:
 800503e:	18c4      	adds	r4, r0, r3
 8005040:	428c      	cmp	r4, r1
 8005042:	d3f9      	bcc.n	8005038 <CopyDataInit>
 8005044:	4770      	bx	lr

08005046 <FillZerobss>:
 8005046:	6003      	str	r3, [r0, #0]
 8005048:	3004      	adds	r0, #4

0800504a <LoopFillZerobss>:
 800504a:	4288      	cmp	r0, r1
 800504c:	d3fb      	bcc.n	8005046 <FillZerobss>
 800504e:	4770      	bx	lr

08005050 <Reset_Handler>:
 8005050:	480c      	ldr	r0, [pc, #48]	; (8005084 <LoopForever+0x2>)
 8005052:	4685      	mov	sp, r0
 8005054:	f7ff ff9e 	bl	8004f94 <SystemInit>
 8005058:	480b      	ldr	r0, [pc, #44]	; (8005088 <LoopForever+0x6>)
 800505a:	490c      	ldr	r1, [pc, #48]	; (800508c <LoopForever+0xa>)
 800505c:	4a0c      	ldr	r2, [pc, #48]	; (8005090 <LoopForever+0xe>)
 800505e:	2300      	movs	r3, #0
 8005060:	f7ff ffed 	bl	800503e <LoopCopyDataInit>
 8005064:	480b      	ldr	r0, [pc, #44]	; (8005094 <LoopForever+0x12>)
 8005066:	490c      	ldr	r1, [pc, #48]	; (8005098 <LoopForever+0x16>)
 8005068:	4a0c      	ldr	r2, [pc, #48]	; (800509c <LoopForever+0x1a>)
 800506a:	2300      	movs	r3, #0
 800506c:	f7ff ffe7 	bl	800503e <LoopCopyDataInit>
 8005070:	480b      	ldr	r0, [pc, #44]	; (80050a0 <LoopForever+0x1e>)
 8005072:	490c      	ldr	r1, [pc, #48]	; (80050a4 <LoopForever+0x22>)
 8005074:	2300      	movs	r3, #0
 8005076:	f7ff ffe8 	bl	800504a <LoopFillZerobss>
 800507a:	f006 fc71 	bl	800b960 <__libc_init_array>
 800507e:	f7fc f9e3 	bl	8001448 <main>

08005082 <LoopForever>:
 8005082:	e7fe      	b.n	8005082 <LoopForever>
 8005084:	20030000 	.word	0x20030000
 8005088:	20000008 	.word	0x20000008
 800508c:	200001f8 	.word	0x200001f8
 8005090:	0800faa4 	.word	0x0800faa4
 8005094:	20030000 	.word	0x20030000
 8005098:	20030000 	.word	0x20030000
 800509c:	0800fc94 	.word	0x0800fc94
 80050a0:	200001f8 	.word	0x200001f8
 80050a4:	20001768 	.word	0x20001768

080050a8 <ADC1_IRQHandler>:
 80050a8:	e7fe      	b.n	80050a8 <ADC1_IRQHandler>
	...

080050ac <HAL_Init>:
 80050ac:	b580      	push	{r7, lr}
 80050ae:	b082      	sub	sp, #8
 80050b0:	af00      	add	r7, sp, #0
 80050b2:	2300      	movs	r3, #0
 80050b4:	71fb      	strb	r3, [r7, #7]
 80050b6:	4b0c      	ldr	r3, [pc, #48]	; (80050e8 <HAL_Init+0x3c>)
 80050b8:	681b      	ldr	r3, [r3, #0]
 80050ba:	4a0b      	ldr	r2, [pc, #44]	; (80050e8 <HAL_Init+0x3c>)
 80050bc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80050c0:	6013      	str	r3, [r2, #0]
 80050c2:	2003      	movs	r0, #3
 80050c4:	f001 fb38 	bl	8006738 <HAL_NVIC_SetPriorityGrouping>
 80050c8:	2000      	movs	r0, #0
 80050ca:	f000 f80f 	bl	80050ec <HAL_InitTick>
 80050ce:	4603      	mov	r3, r0
 80050d0:	2b00      	cmp	r3, #0
 80050d2:	d002      	beq.n	80050da <HAL_Init+0x2e>
 80050d4:	2301      	movs	r3, #1
 80050d6:	71fb      	strb	r3, [r7, #7]
 80050d8:	e001      	b.n	80050de <HAL_Init+0x32>
 80050da:	f7ff fd0c 	bl	8004af6 <HAL_MspInit>
 80050de:	79fb      	ldrb	r3, [r7, #7]
 80050e0:	4618      	mov	r0, r3
 80050e2:	3708      	adds	r7, #8
 80050e4:	46bd      	mov	sp, r7
 80050e6:	bd80      	pop	{r7, pc}
 80050e8:	58004000 	.word	0x58004000

080050ec <HAL_InitTick>:
 80050ec:	b580      	push	{r7, lr}
 80050ee:	b084      	sub	sp, #16
 80050f0:	af00      	add	r7, sp, #0
 80050f2:	6078      	str	r0, [r7, #4]
 80050f4:	2300      	movs	r3, #0
 80050f6:	73fb      	strb	r3, [r7, #15]
 80050f8:	4b17      	ldr	r3, [pc, #92]	; (8005158 <HAL_InitTick+0x6c>)
 80050fa:	781b      	ldrb	r3, [r3, #0]
 80050fc:	2b00      	cmp	r3, #0
 80050fe:	d024      	beq.n	800514a <HAL_InitTick+0x5e>
 8005100:	f003 fa16 	bl	8008530 <HAL_RCC_GetHCLKFreq>
 8005104:	4602      	mov	r2, r0
 8005106:	4b14      	ldr	r3, [pc, #80]	; (8005158 <HAL_InitTick+0x6c>)
 8005108:	781b      	ldrb	r3, [r3, #0]
 800510a:	4619      	mov	r1, r3
 800510c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005110:	fbb3 f3f1 	udiv	r3, r3, r1
 8005114:	fbb2 f3f3 	udiv	r3, r2, r3
 8005118:	4618      	mov	r0, r3
 800511a:	f001 fb40 	bl	800679e <HAL_SYSTICK_Config>
 800511e:	4603      	mov	r3, r0
 8005120:	2b00      	cmp	r3, #0
 8005122:	d10f      	bne.n	8005144 <HAL_InitTick+0x58>
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	2b0f      	cmp	r3, #15
 8005128:	d809      	bhi.n	800513e <HAL_InitTick+0x52>
 800512a:	2200      	movs	r2, #0
 800512c:	6879      	ldr	r1, [r7, #4]
 800512e:	f04f 30ff 	mov.w	r0, #4294967295
 8005132:	f001 fb0c 	bl	800674e <HAL_NVIC_SetPriority>
 8005136:	4a09      	ldr	r2, [pc, #36]	; (800515c <HAL_InitTick+0x70>)
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	6013      	str	r3, [r2, #0]
 800513c:	e007      	b.n	800514e <HAL_InitTick+0x62>
 800513e:	2301      	movs	r3, #1
 8005140:	73fb      	strb	r3, [r7, #15]
 8005142:	e004      	b.n	800514e <HAL_InitTick+0x62>
 8005144:	2301      	movs	r3, #1
 8005146:	73fb      	strb	r3, [r7, #15]
 8005148:	e001      	b.n	800514e <HAL_InitTick+0x62>
 800514a:	2301      	movs	r3, #1
 800514c:	73fb      	strb	r3, [r7, #15]
 800514e:	7bfb      	ldrb	r3, [r7, #15]
 8005150:	4618      	mov	r0, r3
 8005152:	3710      	adds	r7, #16
 8005154:	46bd      	mov	sp, r7
 8005156:	bd80      	pop	{r7, pc}
 8005158:	20000020 	.word	0x20000020
 800515c:	2000001c 	.word	0x2000001c

08005160 <HAL_IncTick>:
 8005160:	b480      	push	{r7}
 8005162:	af00      	add	r7, sp, #0
 8005164:	4b06      	ldr	r3, [pc, #24]	; (8005180 <HAL_IncTick+0x20>)
 8005166:	781b      	ldrb	r3, [r3, #0]
 8005168:	461a      	mov	r2, r3
 800516a:	4b06      	ldr	r3, [pc, #24]	; (8005184 <HAL_IncTick+0x24>)
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	4413      	add	r3, r2
 8005170:	4a04      	ldr	r2, [pc, #16]	; (8005184 <HAL_IncTick+0x24>)
 8005172:	6013      	str	r3, [r2, #0]
 8005174:	bf00      	nop
 8005176:	46bd      	mov	sp, r7
 8005178:	f85d 7b04 	ldr.w	r7, [sp], #4
 800517c:	4770      	bx	lr
 800517e:	bf00      	nop
 8005180:	20000020 	.word	0x20000020
 8005184:	2000074c 	.word	0x2000074c

08005188 <HAL_GetTick>:
 8005188:	b480      	push	{r7}
 800518a:	af00      	add	r7, sp, #0
 800518c:	4b03      	ldr	r3, [pc, #12]	; (800519c <HAL_GetTick+0x14>)
 800518e:	681b      	ldr	r3, [r3, #0]
 8005190:	4618      	mov	r0, r3
 8005192:	46bd      	mov	sp, r7
 8005194:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005198:	4770      	bx	lr
 800519a:	bf00      	nop
 800519c:	2000074c 	.word	0x2000074c

080051a0 <HAL_GetTickPrio>:
 80051a0:	b480      	push	{r7}
 80051a2:	af00      	add	r7, sp, #0
 80051a4:	4b03      	ldr	r3, [pc, #12]	; (80051b4 <HAL_GetTickPrio+0x14>)
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	4618      	mov	r0, r3
 80051aa:	46bd      	mov	sp, r7
 80051ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051b0:	4770      	bx	lr
 80051b2:	bf00      	nop
 80051b4:	2000001c 	.word	0x2000001c

080051b8 <HAL_Delay>:
 80051b8:	b580      	push	{r7, lr}
 80051ba:	b084      	sub	sp, #16
 80051bc:	af00      	add	r7, sp, #0
 80051be:	6078      	str	r0, [r7, #4]
 80051c0:	f7ff ffe2 	bl	8005188 <HAL_GetTick>
 80051c4:	60b8      	str	r0, [r7, #8]
 80051c6:	687b      	ldr	r3, [r7, #4]
 80051c8:	60fb      	str	r3, [r7, #12]
 80051ca:	68fb      	ldr	r3, [r7, #12]
 80051cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051d0:	d005      	beq.n	80051de <HAL_Delay+0x26>
 80051d2:	4b0a      	ldr	r3, [pc, #40]	; (80051fc <HAL_Delay+0x44>)
 80051d4:	781b      	ldrb	r3, [r3, #0]
 80051d6:	461a      	mov	r2, r3
 80051d8:	68fb      	ldr	r3, [r7, #12]
 80051da:	4413      	add	r3, r2
 80051dc:	60fb      	str	r3, [r7, #12]
 80051de:	bf00      	nop
 80051e0:	f7ff ffd2 	bl	8005188 <HAL_GetTick>
 80051e4:	4602      	mov	r2, r0
 80051e6:	68bb      	ldr	r3, [r7, #8]
 80051e8:	1ad3      	subs	r3, r2, r3
 80051ea:	68fa      	ldr	r2, [r7, #12]
 80051ec:	429a      	cmp	r2, r3
 80051ee:	d8f7      	bhi.n	80051e0 <HAL_Delay+0x28>
 80051f0:	bf00      	nop
 80051f2:	bf00      	nop
 80051f4:	3710      	adds	r7, #16
 80051f6:	46bd      	mov	sp, r7
 80051f8:	bd80      	pop	{r7, pc}
 80051fa:	bf00      	nop
 80051fc:	20000020 	.word	0x20000020

08005200 <LL_ADC_SetCommonClock>:
 8005200:	b480      	push	{r7}
 8005202:	b083      	sub	sp, #12
 8005204:	af00      	add	r7, sp, #0
 8005206:	6078      	str	r0, [r7, #4]
 8005208:	6039      	str	r1, [r7, #0]
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	689b      	ldr	r3, [r3, #8]
 800520e:	f423 127c 	bic.w	r2, r3, #4128768	; 0x3f0000
 8005212:	683b      	ldr	r3, [r7, #0]
 8005214:	431a      	orrs	r2, r3
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	609a      	str	r2, [r3, #8]
 800521a:	bf00      	nop
 800521c:	370c      	adds	r7, #12
 800521e:	46bd      	mov	sp, r7
 8005220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005224:	4770      	bx	lr

08005226 <LL_ADC_SetCommonPathInternalCh>:
 8005226:	b480      	push	{r7}
 8005228:	b083      	sub	sp, #12
 800522a:	af00      	add	r7, sp, #0
 800522c:	6078      	str	r0, [r7, #4]
 800522e:	6039      	str	r1, [r7, #0]
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	689b      	ldr	r3, [r3, #8]
 8005234:	f023 72e0 	bic.w	r2, r3, #29360128	; 0x1c00000
 8005238:	683b      	ldr	r3, [r7, #0]
 800523a:	431a      	orrs	r2, r3
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	609a      	str	r2, [r3, #8]
 8005240:	bf00      	nop
 8005242:	370c      	adds	r7, #12
 8005244:	46bd      	mov	sp, r7
 8005246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800524a:	4770      	bx	lr

0800524c <LL_ADC_GetCommonPathInternalCh>:
 800524c:	b480      	push	{r7}
 800524e:	b083      	sub	sp, #12
 8005250:	af00      	add	r7, sp, #0
 8005252:	6078      	str	r0, [r7, #4]
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	689b      	ldr	r3, [r3, #8]
 8005258:	f003 73e0 	and.w	r3, r3, #29360128	; 0x1c00000
 800525c:	4618      	mov	r0, r3
 800525e:	370c      	adds	r7, #12
 8005260:	46bd      	mov	sp, r7
 8005262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005266:	4770      	bx	lr

08005268 <LL_ADC_SetOffset>:
 8005268:	b480      	push	{r7}
 800526a:	b087      	sub	sp, #28
 800526c:	af00      	add	r7, sp, #0
 800526e:	60f8      	str	r0, [r7, #12]
 8005270:	60b9      	str	r1, [r7, #8]
 8005272:	607a      	str	r2, [r7, #4]
 8005274:	603b      	str	r3, [r7, #0]
 8005276:	68fb      	ldr	r3, [r7, #12]
 8005278:	3360      	adds	r3, #96	; 0x60
 800527a:	461a      	mov	r2, r3
 800527c:	68bb      	ldr	r3, [r7, #8]
 800527e:	009b      	lsls	r3, r3, #2
 8005280:	4413      	add	r3, r2
 8005282:	617b      	str	r3, [r7, #20]
 8005284:	697b      	ldr	r3, [r7, #20]
 8005286:	681a      	ldr	r2, [r3, #0]
 8005288:	4b08      	ldr	r3, [pc, #32]	; (80052ac <LL_ADC_SetOffset+0x44>)
 800528a:	4013      	ands	r3, r2
 800528c:	687a      	ldr	r2, [r7, #4]
 800528e:	f002 41f8 	and.w	r1, r2, #2080374784	; 0x7c000000
 8005292:	683a      	ldr	r2, [r7, #0]
 8005294:	430a      	orrs	r2, r1
 8005296:	4313      	orrs	r3, r2
 8005298:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 800529c:	697b      	ldr	r3, [r7, #20]
 800529e:	601a      	str	r2, [r3, #0]
 80052a0:	bf00      	nop
 80052a2:	371c      	adds	r7, #28
 80052a4:	46bd      	mov	sp, r7
 80052a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052aa:	4770      	bx	lr
 80052ac:	03fff000 	.word	0x03fff000

080052b0 <LL_ADC_GetOffsetChannel>:
 80052b0:	b480      	push	{r7}
 80052b2:	b085      	sub	sp, #20
 80052b4:	af00      	add	r7, sp, #0
 80052b6:	6078      	str	r0, [r7, #4]
 80052b8:	6039      	str	r1, [r7, #0]
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	3360      	adds	r3, #96	; 0x60
 80052be:	461a      	mov	r2, r3
 80052c0:	683b      	ldr	r3, [r7, #0]
 80052c2:	009b      	lsls	r3, r3, #2
 80052c4:	4413      	add	r3, r2
 80052c6:	60fb      	str	r3, [r7, #12]
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	f003 43f8 	and.w	r3, r3, #2080374784	; 0x7c000000
 80052d0:	4618      	mov	r0, r3
 80052d2:	3714      	adds	r7, #20
 80052d4:	46bd      	mov	sp, r7
 80052d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052da:	4770      	bx	lr

080052dc <LL_ADC_SetOffsetState>:
 80052dc:	b480      	push	{r7}
 80052de:	b087      	sub	sp, #28
 80052e0:	af00      	add	r7, sp, #0
 80052e2:	60f8      	str	r0, [r7, #12]
 80052e4:	60b9      	str	r1, [r7, #8]
 80052e6:	607a      	str	r2, [r7, #4]
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	3360      	adds	r3, #96	; 0x60
 80052ec:	461a      	mov	r2, r3
 80052ee:	68bb      	ldr	r3, [r7, #8]
 80052f0:	009b      	lsls	r3, r3, #2
 80052f2:	4413      	add	r3, r2
 80052f4:	617b      	str	r3, [r7, #20]
 80052f6:	697b      	ldr	r3, [r7, #20]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	431a      	orrs	r2, r3
 8005302:	697b      	ldr	r3, [r7, #20]
 8005304:	601a      	str	r2, [r3, #0]
 8005306:	bf00      	nop
 8005308:	371c      	adds	r7, #28
 800530a:	46bd      	mov	sp, r7
 800530c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005310:	4770      	bx	lr

08005312 <LL_ADC_REG_SetSequencerRanks>:
 8005312:	b480      	push	{r7}
 8005314:	b087      	sub	sp, #28
 8005316:	af00      	add	r7, sp, #0
 8005318:	60f8      	str	r0, [r7, #12]
 800531a:	60b9      	str	r1, [r7, #8]
 800531c:	607a      	str	r2, [r7, #4]
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	3330      	adds	r3, #48	; 0x30
 8005322:	461a      	mov	r2, r3
 8005324:	68bb      	ldr	r3, [r7, #8]
 8005326:	0a1b      	lsrs	r3, r3, #8
 8005328:	009b      	lsls	r3, r3, #2
 800532a:	f003 030c 	and.w	r3, r3, #12
 800532e:	4413      	add	r3, r2
 8005330:	617b      	str	r3, [r7, #20]
 8005332:	697b      	ldr	r3, [r7, #20]
 8005334:	681a      	ldr	r2, [r3, #0]
 8005336:	68bb      	ldr	r3, [r7, #8]
 8005338:	f003 031f 	and.w	r3, r3, #31
 800533c:	211f      	movs	r1, #31
 800533e:	fa01 f303 	lsl.w	r3, r1, r3
 8005342:	43db      	mvns	r3, r3
 8005344:	401a      	ands	r2, r3
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	0e9b      	lsrs	r3, r3, #26
 800534a:	f003 011f 	and.w	r1, r3, #31
 800534e:	68bb      	ldr	r3, [r7, #8]
 8005350:	f003 031f 	and.w	r3, r3, #31
 8005354:	fa01 f303 	lsl.w	r3, r1, r3
 8005358:	431a      	orrs	r2, r3
 800535a:	697b      	ldr	r3, [r7, #20]
 800535c:	601a      	str	r2, [r3, #0]
 800535e:	bf00      	nop
 8005360:	371c      	adds	r7, #28
 8005362:	46bd      	mov	sp, r7
 8005364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005368:	4770      	bx	lr

0800536a <LL_ADC_SetChannelSamplingTime>:
 800536a:	b480      	push	{r7}
 800536c:	b087      	sub	sp, #28
 800536e:	af00      	add	r7, sp, #0
 8005370:	60f8      	str	r0, [r7, #12]
 8005372:	60b9      	str	r1, [r7, #8]
 8005374:	607a      	str	r2, [r7, #4]
 8005376:	68fb      	ldr	r3, [r7, #12]
 8005378:	3314      	adds	r3, #20
 800537a:	461a      	mov	r2, r3
 800537c:	68bb      	ldr	r3, [r7, #8]
 800537e:	0e5b      	lsrs	r3, r3, #25
 8005380:	009b      	lsls	r3, r3, #2
 8005382:	f003 0304 	and.w	r3, r3, #4
 8005386:	4413      	add	r3, r2
 8005388:	617b      	str	r3, [r7, #20]
 800538a:	697b      	ldr	r3, [r7, #20]
 800538c:	681a      	ldr	r2, [r3, #0]
 800538e:	68bb      	ldr	r3, [r7, #8]
 8005390:	0d1b      	lsrs	r3, r3, #20
 8005392:	f003 031f 	and.w	r3, r3, #31
 8005396:	2107      	movs	r1, #7
 8005398:	fa01 f303 	lsl.w	r3, r1, r3
 800539c:	43db      	mvns	r3, r3
 800539e:	401a      	ands	r2, r3
 80053a0:	68bb      	ldr	r3, [r7, #8]
 80053a2:	0d1b      	lsrs	r3, r3, #20
 80053a4:	f003 031f 	and.w	r3, r3, #31
 80053a8:	6879      	ldr	r1, [r7, #4]
 80053aa:	fa01 f303 	lsl.w	r3, r1, r3
 80053ae:	431a      	orrs	r2, r3
 80053b0:	697b      	ldr	r3, [r7, #20]
 80053b2:	601a      	str	r2, [r3, #0]
 80053b4:	bf00      	nop
 80053b6:	371c      	adds	r7, #28
 80053b8:	46bd      	mov	sp, r7
 80053ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053be:	4770      	bx	lr

080053c0 <LL_ADC_SetChannelSingleDiff>:
 80053c0:	b480      	push	{r7}
 80053c2:	b085      	sub	sp, #20
 80053c4:	af00      	add	r7, sp, #0
 80053c6:	60f8      	str	r0, [r7, #12]
 80053c8:	60b9      	str	r1, [r7, #8]
 80053ca:	607a      	str	r2, [r7, #4]
 80053cc:	68fb      	ldr	r3, [r7, #12]
 80053ce:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
 80053d2:	68bb      	ldr	r3, [r7, #8]
 80053d4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80053d8:	43db      	mvns	r3, r3
 80053da:	401a      	ands	r2, r3
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	f003 0318 	and.w	r3, r3, #24
 80053e2:	4908      	ldr	r1, [pc, #32]	; (8005404 <LL_ADC_SetChannelSingleDiff+0x44>)
 80053e4:	40d9      	lsrs	r1, r3
 80053e6:	68bb      	ldr	r3, [r7, #8]
 80053e8:	400b      	ands	r3, r1
 80053ea:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80053ee:	431a      	orrs	r2, r3
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
 80053f6:	bf00      	nop
 80053f8:	3714      	adds	r7, #20
 80053fa:	46bd      	mov	sp, r7
 80053fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005400:	4770      	bx	lr
 8005402:	bf00      	nop
 8005404:	0007ffff 	.word	0x0007ffff

08005408 <LL_ADC_DisableDeepPowerDown>:
 8005408:	b480      	push	{r7}
 800540a:	b083      	sub	sp, #12
 800540c:	af00      	add	r7, sp, #0
 800540e:	6078      	str	r0, [r7, #4]
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	689b      	ldr	r3, [r3, #8]
 8005414:	f023 4320 	bic.w	r3, r3, #2684354560	; 0xa0000000
 8005418:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800541c:	687a      	ldr	r2, [r7, #4]
 800541e:	6093      	str	r3, [r2, #8]
 8005420:	bf00      	nop
 8005422:	370c      	adds	r7, #12
 8005424:	46bd      	mov	sp, r7
 8005426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800542a:	4770      	bx	lr

0800542c <LL_ADC_IsDeepPowerDownEnabled>:
 800542c:	b480      	push	{r7}
 800542e:	b083      	sub	sp, #12
 8005430:	af00      	add	r7, sp, #0
 8005432:	6078      	str	r0, [r7, #4]
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	689b      	ldr	r3, [r3, #8]
 8005438:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800543c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8005440:	d101      	bne.n	8005446 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 8005442:	2301      	movs	r3, #1
 8005444:	e000      	b.n	8005448 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8005446:	2300      	movs	r3, #0
 8005448:	4618      	mov	r0, r3
 800544a:	370c      	adds	r7, #12
 800544c:	46bd      	mov	sp, r7
 800544e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005452:	4770      	bx	lr

08005454 <LL_ADC_EnableInternalRegulator>:
 8005454:	b480      	push	{r7}
 8005456:	b083      	sub	sp, #12
 8005458:	af00      	add	r7, sp, #0
 800545a:	6078      	str	r0, [r7, #4]
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	689b      	ldr	r3, [r3, #8]
 8005460:	f023 4310 	bic.w	r3, r3, #2415919104	; 0x90000000
 8005464:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005468:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	609a      	str	r2, [r3, #8]
 8005470:	bf00      	nop
 8005472:	370c      	adds	r7, #12
 8005474:	46bd      	mov	sp, r7
 8005476:	f85d 7b04 	ldr.w	r7, [sp], #4
 800547a:	4770      	bx	lr

0800547c <LL_ADC_IsInternalRegulatorEnabled>:
 800547c:	b480      	push	{r7}
 800547e:	b083      	sub	sp, #12
 8005480:	af00      	add	r7, sp, #0
 8005482:	6078      	str	r0, [r7, #4]
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	689b      	ldr	r3, [r3, #8]
 8005488:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800548c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8005490:	d101      	bne.n	8005496 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 8005492:	2301      	movs	r3, #1
 8005494:	e000      	b.n	8005498 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 8005496:	2300      	movs	r3, #0
 8005498:	4618      	mov	r0, r3
 800549a:	370c      	adds	r7, #12
 800549c:	46bd      	mov	sp, r7
 800549e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054a2:	4770      	bx	lr

080054a4 <LL_ADC_Enable>:
 80054a4:	b480      	push	{r7}
 80054a6:	b083      	sub	sp, #12
 80054a8:	af00      	add	r7, sp, #0
 80054aa:	6078      	str	r0, [r7, #4]
 80054ac:	687b      	ldr	r3, [r7, #4]
 80054ae:	689b      	ldr	r3, [r3, #8]
 80054b0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80054b4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80054b8:	f043 0201 	orr.w	r2, r3, #1
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	609a      	str	r2, [r3, #8]
 80054c0:	bf00      	nop
 80054c2:	370c      	adds	r7, #12
 80054c4:	46bd      	mov	sp, r7
 80054c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ca:	4770      	bx	lr

080054cc <LL_ADC_Disable>:
 80054cc:	b480      	push	{r7}
 80054ce:	b083      	sub	sp, #12
 80054d0:	af00      	add	r7, sp, #0
 80054d2:	6078      	str	r0, [r7, #4]
 80054d4:	687b      	ldr	r3, [r7, #4]
 80054d6:	689b      	ldr	r3, [r3, #8]
 80054d8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80054dc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80054e0:	f043 0202 	orr.w	r2, r3, #2
 80054e4:	687b      	ldr	r3, [r7, #4]
 80054e6:	609a      	str	r2, [r3, #8]
 80054e8:	bf00      	nop
 80054ea:	370c      	adds	r7, #12
 80054ec:	46bd      	mov	sp, r7
 80054ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f2:	4770      	bx	lr

080054f4 <LL_ADC_IsEnabled>:
 80054f4:	b480      	push	{r7}
 80054f6:	b083      	sub	sp, #12
 80054f8:	af00      	add	r7, sp, #0
 80054fa:	6078      	str	r0, [r7, #4]
 80054fc:	687b      	ldr	r3, [r7, #4]
 80054fe:	689b      	ldr	r3, [r3, #8]
 8005500:	f003 0301 	and.w	r3, r3, #1
 8005504:	2b01      	cmp	r3, #1
 8005506:	d101      	bne.n	800550c <LL_ADC_IsEnabled+0x18>
 8005508:	2301      	movs	r3, #1
 800550a:	e000      	b.n	800550e <LL_ADC_IsEnabled+0x1a>
 800550c:	2300      	movs	r3, #0
 800550e:	4618      	mov	r0, r3
 8005510:	370c      	adds	r7, #12
 8005512:	46bd      	mov	sp, r7
 8005514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005518:	4770      	bx	lr

0800551a <LL_ADC_IsDisableOngoing>:
 800551a:	b480      	push	{r7}
 800551c:	b083      	sub	sp, #12
 800551e:	af00      	add	r7, sp, #0
 8005520:	6078      	str	r0, [r7, #4]
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	689b      	ldr	r3, [r3, #8]
 8005526:	f003 0302 	and.w	r3, r3, #2
 800552a:	2b02      	cmp	r3, #2
 800552c:	d101      	bne.n	8005532 <LL_ADC_IsDisableOngoing+0x18>
 800552e:	2301      	movs	r3, #1
 8005530:	e000      	b.n	8005534 <LL_ADC_IsDisableOngoing+0x1a>
 8005532:	2300      	movs	r3, #0
 8005534:	4618      	mov	r0, r3
 8005536:	370c      	adds	r7, #12
 8005538:	46bd      	mov	sp, r7
 800553a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800553e:	4770      	bx	lr

08005540 <LL_ADC_REG_StartConversion>:
 8005540:	b480      	push	{r7}
 8005542:	b083      	sub	sp, #12
 8005544:	af00      	add	r7, sp, #0
 8005546:	6078      	str	r0, [r7, #4]
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	689b      	ldr	r3, [r3, #8]
 800554c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005550:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8005554:	f043 0204 	orr.w	r2, r3, #4
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	609a      	str	r2, [r3, #8]
 800555c:	bf00      	nop
 800555e:	370c      	adds	r7, #12
 8005560:	46bd      	mov	sp, r7
 8005562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005566:	4770      	bx	lr

08005568 <LL_ADC_REG_StopConversion>:
 8005568:	b480      	push	{r7}
 800556a:	b083      	sub	sp, #12
 800556c:	af00      	add	r7, sp, #0
 800556e:	6078      	str	r0, [r7, #4]
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	689b      	ldr	r3, [r3, #8]
 8005574:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8005578:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800557c:	f043 0210 	orr.w	r2, r3, #16
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	609a      	str	r2, [r3, #8]
 8005584:	bf00      	nop
 8005586:	370c      	adds	r7, #12
 8005588:	46bd      	mov	sp, r7
 800558a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800558e:	4770      	bx	lr

08005590 <LL_ADC_REG_IsConversionOngoing>:
 8005590:	b480      	push	{r7}
 8005592:	b083      	sub	sp, #12
 8005594:	af00      	add	r7, sp, #0
 8005596:	6078      	str	r0, [r7, #4]
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	689b      	ldr	r3, [r3, #8]
 800559c:	f003 0304 	and.w	r3, r3, #4
 80055a0:	2b04      	cmp	r3, #4
 80055a2:	d101      	bne.n	80055a8 <LL_ADC_REG_IsConversionOngoing+0x18>
 80055a4:	2301      	movs	r3, #1
 80055a6:	e000      	b.n	80055aa <LL_ADC_REG_IsConversionOngoing+0x1a>
 80055a8:	2300      	movs	r3, #0
 80055aa:	4618      	mov	r0, r3
 80055ac:	370c      	adds	r7, #12
 80055ae:	46bd      	mov	sp, r7
 80055b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055b4:	4770      	bx	lr

080055b6 <LL_ADC_INJ_StopConversion>:
 80055b6:	b480      	push	{r7}
 80055b8:	b083      	sub	sp, #12
 80055ba:	af00      	add	r7, sp, #0
 80055bc:	6078      	str	r0, [r7, #4]
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	689b      	ldr	r3, [r3, #8]
 80055c2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80055c6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80055ca:	f043 0220 	orr.w	r2, r3, #32
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	609a      	str	r2, [r3, #8]
 80055d2:	bf00      	nop
 80055d4:	370c      	adds	r7, #12
 80055d6:	46bd      	mov	sp, r7
 80055d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055dc:	4770      	bx	lr

080055de <LL_ADC_INJ_IsConversionOngoing>:
 80055de:	b480      	push	{r7}
 80055e0:	b083      	sub	sp, #12
 80055e2:	af00      	add	r7, sp, #0
 80055e4:	6078      	str	r0, [r7, #4]
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	689b      	ldr	r3, [r3, #8]
 80055ea:	f003 0308 	and.w	r3, r3, #8
 80055ee:	2b08      	cmp	r3, #8
 80055f0:	d101      	bne.n	80055f6 <LL_ADC_INJ_IsConversionOngoing+0x18>
 80055f2:	2301      	movs	r3, #1
 80055f4:	e000      	b.n	80055f8 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 80055f6:	2300      	movs	r3, #0
 80055f8:	4618      	mov	r0, r3
 80055fa:	370c      	adds	r7, #12
 80055fc:	46bd      	mov	sp, r7
 80055fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005602:	4770      	bx	lr

08005604 <HAL_ADC_Init>:
 8005604:	b580      	push	{r7, lr}
 8005606:	b088      	sub	sp, #32
 8005608:	af00      	add	r7, sp, #0
 800560a:	6078      	str	r0, [r7, #4]
 800560c:	2300      	movs	r3, #0
 800560e:	77fb      	strb	r3, [r7, #31]
 8005610:	2300      	movs	r3, #0
 8005612:	61bb      	str	r3, [r7, #24]
 8005614:	2300      	movs	r3, #0
 8005616:	60bb      	str	r3, [r7, #8]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2b00      	cmp	r3, #0
 800561c:	d101      	bne.n	8005622 <HAL_ADC_Init+0x1e>
 800561e:	2301      	movs	r3, #1
 8005620:	e12e      	b.n	8005880 <HAL_ADC_Init+0x27c>
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	691b      	ldr	r3, [r3, #16]
 8005626:	2b00      	cmp	r3, #0
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800562c:	2b00      	cmp	r3, #0
 800562e:	d109      	bne.n	8005644 <HAL_ADC_Init+0x40>
 8005630:	6878      	ldr	r0, [r7, #4]
 8005632:	f7ff fa67 	bl	8004b04 <HAL_ADC_MspInit>
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	2200      	movs	r2, #0
 800563a:	659a      	str	r2, [r3, #88]	; 0x58
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	2200      	movs	r2, #0
 8005640:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005644:	687b      	ldr	r3, [r7, #4]
 8005646:	681b      	ldr	r3, [r3, #0]
 8005648:	4618      	mov	r0, r3
 800564a:	f7ff feef 	bl	800542c <LL_ADC_IsDeepPowerDownEnabled>
 800564e:	4603      	mov	r3, r0
 8005650:	2b00      	cmp	r3, #0
 8005652:	d004      	beq.n	800565e <HAL_ADC_Init+0x5a>
 8005654:	687b      	ldr	r3, [r7, #4]
 8005656:	681b      	ldr	r3, [r3, #0]
 8005658:	4618      	mov	r0, r3
 800565a:	f7ff fed5 	bl	8005408 <LL_ADC_DisableDeepPowerDown>
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	681b      	ldr	r3, [r3, #0]
 8005662:	4618      	mov	r0, r3
 8005664:	f7ff ff0a 	bl	800547c <LL_ADC_IsInternalRegulatorEnabled>
 8005668:	4603      	mov	r3, r0
 800566a:	2b00      	cmp	r3, #0
 800566c:	d115      	bne.n	800569a <HAL_ADC_Init+0x96>
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	681b      	ldr	r3, [r3, #0]
 8005672:	4618      	mov	r0, r3
 8005674:	f7ff feee 	bl	8005454 <LL_ADC_EnableInternalRegulator>
 8005678:	4b83      	ldr	r3, [pc, #524]	; (8005888 <HAL_ADC_Init+0x284>)
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	099b      	lsrs	r3, r3, #6
 800567e:	4a83      	ldr	r2, [pc, #524]	; (800588c <HAL_ADC_Init+0x288>)
 8005680:	fba2 2303 	umull	r2, r3, r2, r3
 8005684:	099b      	lsrs	r3, r3, #6
 8005686:	3301      	adds	r3, #1
 8005688:	005b      	lsls	r3, r3, #1
 800568a:	60bb      	str	r3, [r7, #8]
 800568c:	e002      	b.n	8005694 <HAL_ADC_Init+0x90>
 800568e:	68bb      	ldr	r3, [r7, #8]
 8005690:	3b01      	subs	r3, #1
 8005692:	60bb      	str	r3, [r7, #8]
 8005694:	68bb      	ldr	r3, [r7, #8]
 8005696:	2b00      	cmp	r3, #0
 8005698:	d1f9      	bne.n	800568e <HAL_ADC_Init+0x8a>
 800569a:	687b      	ldr	r3, [r7, #4]
 800569c:	681b      	ldr	r3, [r3, #0]
 800569e:	4618      	mov	r0, r3
 80056a0:	f7ff feec 	bl	800547c <LL_ADC_IsInternalRegulatorEnabled>
 80056a4:	4603      	mov	r3, r0
 80056a6:	2b00      	cmp	r3, #0
 80056a8:	d10d      	bne.n	80056c6 <HAL_ADC_Init+0xc2>
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80056ae:	f043 0210 	orr.w	r2, r3, #16
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	655a      	str	r2, [r3, #84]	; 0x54
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80056ba:	f043 0201 	orr.w	r2, r3, #1
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	659a      	str	r2, [r3, #88]	; 0x58
 80056c2:	2301      	movs	r3, #1
 80056c4:	77fb      	strb	r3, [r7, #31]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	4618      	mov	r0, r3
 80056cc:	f7ff ff60 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 80056d0:	6178      	str	r0, [r7, #20]
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80056d6:	f003 0310 	and.w	r3, r3, #16
 80056da:	2b00      	cmp	r3, #0
 80056dc:	f040 80c7 	bne.w	800586e <HAL_ADC_Init+0x26a>
 80056e0:	697b      	ldr	r3, [r7, #20]
 80056e2:	2b00      	cmp	r3, #0
 80056e4:	f040 80c3 	bne.w	800586e <HAL_ADC_Init+0x26a>
 80056e8:	687b      	ldr	r3, [r7, #4]
 80056ea:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80056ec:	f423 7381 	bic.w	r3, r3, #258	; 0x102
 80056f0:	f043 0202 	orr.w	r2, r3, #2
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	655a      	str	r2, [r3, #84]	; 0x54
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	4618      	mov	r0, r3
 80056fe:	f7ff fef9 	bl	80054f4 <LL_ADC_IsEnabled>
 8005702:	4603      	mov	r3, r0
 8005704:	2b00      	cmp	r3, #0
 8005706:	d10b      	bne.n	8005720 <HAL_ADC_Init+0x11c>
 8005708:	4861      	ldr	r0, [pc, #388]	; (8005890 <HAL_ADC_Init+0x28c>)
 800570a:	f7ff fef3 	bl	80054f4 <LL_ADC_IsEnabled>
 800570e:	4603      	mov	r3, r0
 8005710:	2b00      	cmp	r3, #0
 8005712:	d105      	bne.n	8005720 <HAL_ADC_Init+0x11c>
 8005714:	687b      	ldr	r3, [r7, #4]
 8005716:	685b      	ldr	r3, [r3, #4]
 8005718:	4619      	mov	r1, r3
 800571a:	485e      	ldr	r0, [pc, #376]	; (8005894 <HAL_ADC_Init+0x290>)
 800571c:	f7ff fd70 	bl	8005200 <LL_ADC_SetCommonClock>
 8005720:	687b      	ldr	r3, [r7, #4]
 8005722:	7e5b      	ldrb	r3, [r3, #25]
 8005724:	035a      	lsls	r2, r3, #13
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800572a:	431a      	orrs	r2, r3
 800572c:	687b      	ldr	r3, [r7, #4]
 800572e:	68db      	ldr	r3, [r3, #12]
 8005730:	431a      	orrs	r2, r3
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	689b      	ldr	r3, [r3, #8]
 8005736:	431a      	orrs	r2, r3
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800573e:	041b      	lsls	r3, r3, #16
 8005740:	4313      	orrs	r3, r2
 8005742:	69ba      	ldr	r2, [r7, #24]
 8005744:	4313      	orrs	r3, r2
 8005746:	61bb      	str	r3, [r7, #24]
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800574e:	2b01      	cmp	r3, #1
 8005750:	d106      	bne.n	8005760 <HAL_ADC_Init+0x15c>
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005756:	3b01      	subs	r3, #1
 8005758:	045b      	lsls	r3, r3, #17
 800575a:	69ba      	ldr	r2, [r7, #24]
 800575c:	4313      	orrs	r3, r2
 800575e:	61bb      	str	r3, [r7, #24]
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005764:	2b00      	cmp	r3, #0
 8005766:	d009      	beq.n	800577c <HAL_ADC_Init+0x178>
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800576c:	f403 7270 	and.w	r2, r3, #960	; 0x3c0
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005774:	4313      	orrs	r3, r2
 8005776:	69ba      	ldr	r2, [r7, #24]
 8005778:	4313      	orrs	r3, r2
 800577a:	61bb      	str	r3, [r7, #24]
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	68da      	ldr	r2, [r3, #12]
 8005782:	4b45      	ldr	r3, [pc, #276]	; (8005898 <HAL_ADC_Init+0x294>)
 8005784:	4013      	ands	r3, r2
 8005786:	687a      	ldr	r2, [r7, #4]
 8005788:	6812      	ldr	r2, [r2, #0]
 800578a:	69b9      	ldr	r1, [r7, #24]
 800578c:	430b      	orrs	r3, r1
 800578e:	60d3      	str	r3, [r2, #12]
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	4618      	mov	r0, r3
 8005796:	f7ff fefb 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 800579a:	6138      	str	r0, [r7, #16]
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	681b      	ldr	r3, [r3, #0]
 80057a0:	4618      	mov	r0, r3
 80057a2:	f7ff ff1c 	bl	80055de <LL_ADC_INJ_IsConversionOngoing>
 80057a6:	60f8      	str	r0, [r7, #12]
 80057a8:	693b      	ldr	r3, [r7, #16]
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	d13d      	bne.n	800582a <HAL_ADC_Init+0x226>
 80057ae:	68fb      	ldr	r3, [r7, #12]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d13a      	bne.n	800582a <HAL_ADC_Init+0x226>
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	7e1b      	ldrb	r3, [r3, #24]
 80057b8:	039a      	lsls	r2, r3, #14
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80057c0:	005b      	lsls	r3, r3, #1
 80057c2:	4313      	orrs	r3, r2
 80057c4:	61bb      	str	r3, [r7, #24]
 80057c6:	687b      	ldr	r3, [r7, #4]
 80057c8:	681b      	ldr	r3, [r3, #0]
 80057ca:	68db      	ldr	r3, [r3, #12]
 80057cc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80057d0:	f023 0302 	bic.w	r3, r3, #2
 80057d4:	687a      	ldr	r2, [r7, #4]
 80057d6:	6812      	ldr	r2, [r2, #0]
 80057d8:	69b9      	ldr	r1, [r7, #24]
 80057da:	430b      	orrs	r3, r1
 80057dc:	60d3      	str	r3, [r2, #12]
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80057e4:	2b01      	cmp	r3, #1
 80057e6:	d118      	bne.n	800581a <HAL_ADC_Init+0x216>
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	691b      	ldr	r3, [r3, #16]
 80057ee:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80057f2:	f023 0304 	bic.w	r3, r3, #4
 80057f6:	687a      	ldr	r2, [r7, #4]
 80057f8:	6bd1      	ldr	r1, [r2, #60]	; 0x3c
 80057fa:	687a      	ldr	r2, [r7, #4]
 80057fc:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80057fe:	4311      	orrs	r1, r2
 8005800:	687a      	ldr	r2, [r7, #4]
 8005802:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8005804:	4311      	orrs	r1, r2
 8005806:	687a      	ldr	r2, [r7, #4]
 8005808:	6c92      	ldr	r2, [r2, #72]	; 0x48
 800580a:	430a      	orrs	r2, r1
 800580c:	431a      	orrs	r2, r3
 800580e:	687b      	ldr	r3, [r7, #4]
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	f042 0201 	orr.w	r2, r2, #1
 8005816:	611a      	str	r2, [r3, #16]
 8005818:	e007      	b.n	800582a <HAL_ADC_Init+0x226>
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	691a      	ldr	r2, [r3, #16]
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	681b      	ldr	r3, [r3, #0]
 8005824:	f022 0201 	bic.w	r2, r2, #1
 8005828:	611a      	str	r2, [r3, #16]
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	691b      	ldr	r3, [r3, #16]
 800582e:	2b01      	cmp	r3, #1
 8005830:	d10c      	bne.n	800584c <HAL_ADC_Init+0x248>
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005838:	f023 010f 	bic.w	r1, r3, #15
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	69db      	ldr	r3, [r3, #28]
 8005840:	1e5a      	subs	r2, r3, #1
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	430a      	orrs	r2, r1
 8005848:	631a      	str	r2, [r3, #48]	; 0x30
 800584a:	e007      	b.n	800585c <HAL_ADC_Init+0x258>
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	f022 020f 	bic.w	r2, r2, #15
 800585a:	631a      	str	r2, [r3, #48]	; 0x30
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005860:	f023 0303 	bic.w	r3, r3, #3
 8005864:	f043 0201 	orr.w	r2, r3, #1
 8005868:	687b      	ldr	r3, [r7, #4]
 800586a:	655a      	str	r2, [r3, #84]	; 0x54
 800586c:	e007      	b.n	800587e <HAL_ADC_Init+0x27a>
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005872:	f043 0210 	orr.w	r2, r3, #16
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	655a      	str	r2, [r3, #84]	; 0x54
 800587a:	2301      	movs	r3, #1
 800587c:	77fb      	strb	r3, [r7, #31]
 800587e:	7ffb      	ldrb	r3, [r7, #31]
 8005880:	4618      	mov	r0, r3
 8005882:	3720      	adds	r7, #32
 8005884:	46bd      	mov	sp, r7
 8005886:	bd80      	pop	{r7, pc}
 8005888:	20000018 	.word	0x20000018
 800588c:	053e2d63 	.word	0x053e2d63
 8005890:	50040000 	.word	0x50040000
 8005894:	50040300 	.word	0x50040300
 8005898:	fff0c007 	.word	0xfff0c007

0800589c <HAL_ADC_Start>:
 800589c:	b580      	push	{r7, lr}
 800589e:	b084      	sub	sp, #16
 80058a0:	af00      	add	r7, sp, #0
 80058a2:	6078      	str	r0, [r7, #4]
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	681b      	ldr	r3, [r3, #0]
 80058a8:	4618      	mov	r0, r3
 80058aa:	f7ff fe71 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 80058ae:	4603      	mov	r3, r0
 80058b0:	2b00      	cmp	r3, #0
 80058b2:	d140      	bne.n	8005936 <HAL_ADC_Start+0x9a>
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80058ba:	2b01      	cmp	r3, #1
 80058bc:	d101      	bne.n	80058c2 <HAL_ADC_Start+0x26>
 80058be:	2302      	movs	r3, #2
 80058c0:	e03c      	b.n	800593c <HAL_ADC_Start+0xa0>
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	2201      	movs	r2, #1
 80058c6:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80058ca:	6878      	ldr	r0, [r7, #4]
 80058cc:	f000 fcfc 	bl	80062c8 <ADC_Enable>
 80058d0:	4603      	mov	r3, r0
 80058d2:	73fb      	strb	r3, [r7, #15]
 80058d4:	7bfb      	ldrb	r3, [r7, #15]
 80058d6:	2b00      	cmp	r3, #0
 80058d8:	d128      	bne.n	800592c <HAL_ADC_Start+0x90>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80058de:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80058e2:	f023 0301 	bic.w	r3, r3, #1
 80058e6:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80058ea:	687b      	ldr	r3, [r7, #4]
 80058ec:	655a      	str	r2, [r3, #84]	; 0x54
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80058f2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80058f6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80058fa:	d106      	bne.n	800590a <HAL_ADC_Start+0x6e>
 80058fc:	687b      	ldr	r3, [r7, #4]
 80058fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005900:	f023 0206 	bic.w	r2, r3, #6
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	659a      	str	r2, [r3, #88]	; 0x58
 8005908:	e002      	b.n	8005910 <HAL_ADC_Start+0x74>
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	2200      	movs	r2, #0
 800590e:	659a      	str	r2, [r3, #88]	; 0x58
 8005910:	687b      	ldr	r3, [r7, #4]
 8005912:	681b      	ldr	r3, [r3, #0]
 8005914:	221c      	movs	r2, #28
 8005916:	601a      	str	r2, [r3, #0]
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	2200      	movs	r2, #0
 800591c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	4618      	mov	r0, r3
 8005926:	f7ff fe0b 	bl	8005540 <LL_ADC_REG_StartConversion>
 800592a:	e006      	b.n	800593a <HAL_ADC_Start+0x9e>
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	2200      	movs	r2, #0
 8005930:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005934:	e001      	b.n	800593a <HAL_ADC_Start+0x9e>
 8005936:	2302      	movs	r3, #2
 8005938:	73fb      	strb	r3, [r7, #15]
 800593a:	7bfb      	ldrb	r3, [r7, #15]
 800593c:	4618      	mov	r0, r3
 800593e:	3710      	adds	r7, #16
 8005940:	46bd      	mov	sp, r7
 8005942:	bd80      	pop	{r7, pc}

08005944 <HAL_ADC_Stop>:
 8005944:	b580      	push	{r7, lr}
 8005946:	b084      	sub	sp, #16
 8005948:	af00      	add	r7, sp, #0
 800594a:	6078      	str	r0, [r7, #4]
 800594c:	687b      	ldr	r3, [r7, #4]
 800594e:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005952:	2b01      	cmp	r3, #1
 8005954:	d101      	bne.n	800595a <HAL_ADC_Stop+0x16>
 8005956:	2302      	movs	r3, #2
 8005958:	e023      	b.n	80059a2 <HAL_ADC_Stop+0x5e>
 800595a:	687b      	ldr	r3, [r7, #4]
 800595c:	2201      	movs	r2, #1
 800595e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005962:	2103      	movs	r1, #3
 8005964:	6878      	ldr	r0, [r7, #4]
 8005966:	f000 fbf3 	bl	8006150 <ADC_ConversionStop>
 800596a:	4603      	mov	r3, r0
 800596c:	73fb      	strb	r3, [r7, #15]
 800596e:	7bfb      	ldrb	r3, [r7, #15]
 8005970:	2b00      	cmp	r3, #0
 8005972:	d111      	bne.n	8005998 <HAL_ADC_Stop+0x54>
 8005974:	6878      	ldr	r0, [r7, #4]
 8005976:	f000 fd21 	bl	80063bc <ADC_Disable>
 800597a:	4603      	mov	r3, r0
 800597c:	73fb      	strb	r3, [r7, #15]
 800597e:	7bfb      	ldrb	r3, [r7, #15]
 8005980:	2b00      	cmp	r3, #0
 8005982:	d109      	bne.n	8005998 <HAL_ADC_Stop+0x54>
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005988:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 800598c:	f023 0301 	bic.w	r3, r3, #1
 8005990:	f043 0201 	orr.w	r2, r3, #1
 8005994:	687b      	ldr	r3, [r7, #4]
 8005996:	655a      	str	r2, [r3, #84]	; 0x54
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	2200      	movs	r2, #0
 800599c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80059a0:	7bfb      	ldrb	r3, [r7, #15]
 80059a2:	4618      	mov	r0, r3
 80059a4:	3710      	adds	r7, #16
 80059a6:	46bd      	mov	sp, r7
 80059a8:	bd80      	pop	{r7, pc}

080059aa <HAL_ADC_GetValue>:
 80059aa:	b480      	push	{r7}
 80059ac:	b083      	sub	sp, #12
 80059ae:	af00      	add	r7, sp, #0
 80059b0:	6078      	str	r0, [r7, #4]
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059b8:	4618      	mov	r0, r3
 80059ba:	370c      	adds	r7, #12
 80059bc:	46bd      	mov	sp, r7
 80059be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059c2:	4770      	bx	lr

080059c4 <HAL_ADC_ConfigChannel>:
 80059c4:	b580      	push	{r7, lr}
 80059c6:	b0b6      	sub	sp, #216	; 0xd8
 80059c8:	af00      	add	r7, sp, #0
 80059ca:	6078      	str	r0, [r7, #4]
 80059cc:	6039      	str	r1, [r7, #0]
 80059ce:	2300      	movs	r3, #0
 80059d0:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 80059d4:	2300      	movs	r3, #0
 80059d6:	60fb      	str	r3, [r7, #12]
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80059de:	2b01      	cmp	r3, #1
 80059e0:	d101      	bne.n	80059e6 <HAL_ADC_ConfigChannel+0x22>
 80059e2:	2302      	movs	r3, #2
 80059e4:	e39f      	b.n	8006126 <HAL_ADC_ConfigChannel+0x762>
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	2201      	movs	r2, #1
 80059ea:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	681b      	ldr	r3, [r3, #0]
 80059f2:	4618      	mov	r0, r3
 80059f4:	f7ff fdcc 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 80059f8:	4603      	mov	r3, r0
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	f040 8384 	bne.w	8006108 <HAL_ADC_ConfigChannel+0x744>
 8005a00:	687b      	ldr	r3, [r7, #4]
 8005a02:	6818      	ldr	r0, [r3, #0]
 8005a04:	683b      	ldr	r3, [r7, #0]
 8005a06:	6859      	ldr	r1, [r3, #4]
 8005a08:	683b      	ldr	r3, [r7, #0]
 8005a0a:	681b      	ldr	r3, [r3, #0]
 8005a0c:	461a      	mov	r2, r3
 8005a0e:	f7ff fc80 	bl	8005312 <LL_ADC_REG_SetSequencerRanks>
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	4618      	mov	r0, r3
 8005a18:	f7ff fdba 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 8005a1c:	f8c7 00d0 	str.w	r0, [r7, #208]	; 0xd0
 8005a20:	687b      	ldr	r3, [r7, #4]
 8005a22:	681b      	ldr	r3, [r3, #0]
 8005a24:	4618      	mov	r0, r3
 8005a26:	f7ff fdda 	bl	80055de <LL_ADC_INJ_IsConversionOngoing>
 8005a2a:	f8c7 00cc 	str.w	r0, [r7, #204]	; 0xcc
 8005a2e:	f8d7 30d0 	ldr.w	r3, [r7, #208]	; 0xd0
 8005a32:	2b00      	cmp	r3, #0
 8005a34:	f040 81a6 	bne.w	8005d84 <HAL_ADC_ConfigChannel+0x3c0>
 8005a38:	f8d7 30cc 	ldr.w	r3, [r7, #204]	; 0xcc
 8005a3c:	2b00      	cmp	r3, #0
 8005a3e:	f040 81a1 	bne.w	8005d84 <HAL_ADC_ConfigChannel+0x3c0>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	6818      	ldr	r0, [r3, #0]
 8005a46:	683b      	ldr	r3, [r7, #0]
 8005a48:	6819      	ldr	r1, [r3, #0]
 8005a4a:	683b      	ldr	r3, [r7, #0]
 8005a4c:	689b      	ldr	r3, [r3, #8]
 8005a4e:	461a      	mov	r2, r3
 8005a50:	f7ff fc8b 	bl	800536a <LL_ADC_SetChannelSamplingTime>
 8005a54:	683b      	ldr	r3, [r7, #0]
 8005a56:	695a      	ldr	r2, [r3, #20]
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	68db      	ldr	r3, [r3, #12]
 8005a5e:	08db      	lsrs	r3, r3, #3
 8005a60:	f003 0303 	and.w	r3, r3, #3
 8005a64:	005b      	lsls	r3, r3, #1
 8005a66:	fa02 f303 	lsl.w	r3, r2, r3
 8005a6a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8005a6e:	683b      	ldr	r3, [r7, #0]
 8005a70:	691b      	ldr	r3, [r3, #16]
 8005a72:	2b04      	cmp	r3, #4
 8005a74:	d00a      	beq.n	8005a8c <HAL_ADC_ConfigChannel+0xc8>
 8005a76:	687b      	ldr	r3, [r7, #4]
 8005a78:	6818      	ldr	r0, [r3, #0]
 8005a7a:	683b      	ldr	r3, [r7, #0]
 8005a7c:	6919      	ldr	r1, [r3, #16]
 8005a7e:	683b      	ldr	r3, [r7, #0]
 8005a80:	681a      	ldr	r2, [r3, #0]
 8005a82:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 8005a86:	f7ff fbef 	bl	8005268 <LL_ADC_SetOffset>
 8005a8a:	e17b      	b.n	8005d84 <HAL_ADC_ConfigChannel+0x3c0>
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	2100      	movs	r1, #0
 8005a92:	4618      	mov	r0, r3
 8005a94:	f7ff fc0c 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005a98:	4603      	mov	r3, r0
 8005a9a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d10a      	bne.n	8005ab8 <HAL_ADC_ConfigChannel+0xf4>
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	2100      	movs	r1, #0
 8005aa8:	4618      	mov	r0, r3
 8005aaa:	f7ff fc01 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005aae:	4603      	mov	r3, r0
 8005ab0:	0e9b      	lsrs	r3, r3, #26
 8005ab2:	f003 021f 	and.w	r2, r3, #31
 8005ab6:	e01e      	b.n	8005af6 <HAL_ADC_ConfigChannel+0x132>
 8005ab8:	687b      	ldr	r3, [r7, #4]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	2100      	movs	r1, #0
 8005abe:	4618      	mov	r0, r3
 8005ac0:	f7ff fbf6 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005ac4:	4603      	mov	r3, r0
 8005ac6:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8005aca:	f8d7 30bc 	ldr.w	r3, [r7, #188]	; 0xbc
 8005ace:	fa93 f3a3 	rbit	r3, r3
 8005ad2:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8005ad6:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8005ada:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8005ade:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8005ae2:	2b00      	cmp	r3, #0
 8005ae4:	d101      	bne.n	8005aea <HAL_ADC_ConfigChannel+0x126>
 8005ae6:	2320      	movs	r3, #32
 8005ae8:	e004      	b.n	8005af4 <HAL_ADC_ConfigChannel+0x130>
 8005aea:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 8005aee:	fab3 f383 	clz	r3, r3
 8005af2:	b2db      	uxtb	r3, r3
 8005af4:	461a      	mov	r2, r3
 8005af6:	683b      	ldr	r3, [r7, #0]
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005afe:	2b00      	cmp	r3, #0
 8005b00:	d105      	bne.n	8005b0e <HAL_ADC_ConfigChannel+0x14a>
 8005b02:	683b      	ldr	r3, [r7, #0]
 8005b04:	681b      	ldr	r3, [r3, #0]
 8005b06:	0e9b      	lsrs	r3, r3, #26
 8005b08:	f003 031f 	and.w	r3, r3, #31
 8005b0c:	e018      	b.n	8005b40 <HAL_ADC_ConfigChannel+0x17c>
 8005b0e:	683b      	ldr	r3, [r7, #0]
 8005b10:	681b      	ldr	r3, [r3, #0]
 8005b12:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8005b16:	f8d7 30b0 	ldr.w	r3, [r7, #176]	; 0xb0
 8005b1a:	fa93 f3a3 	rbit	r3, r3
 8005b1e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8005b22:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 8005b26:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8005b2a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8005b2e:	2b00      	cmp	r3, #0
 8005b30:	d101      	bne.n	8005b36 <HAL_ADC_ConfigChannel+0x172>
 8005b32:	2320      	movs	r3, #32
 8005b34:	e004      	b.n	8005b40 <HAL_ADC_ConfigChannel+0x17c>
 8005b36:	f8d7 30b4 	ldr.w	r3, [r7, #180]	; 0xb4
 8005b3a:	fab3 f383 	clz	r3, r3
 8005b3e:	b2db      	uxtb	r3, r3
 8005b40:	429a      	cmp	r2, r3
 8005b42:	d106      	bne.n	8005b52 <HAL_ADC_ConfigChannel+0x18e>
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	2200      	movs	r2, #0
 8005b4a:	2100      	movs	r1, #0
 8005b4c:	4618      	mov	r0, r3
 8005b4e:	f7ff fbc5 	bl	80052dc <LL_ADC_SetOffsetState>
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	2101      	movs	r1, #1
 8005b58:	4618      	mov	r0, r3
 8005b5a:	f7ff fba9 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005b5e:	4603      	mov	r3, r0
 8005b60:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	d10a      	bne.n	8005b7e <HAL_ADC_ConfigChannel+0x1ba>
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	681b      	ldr	r3, [r3, #0]
 8005b6c:	2101      	movs	r1, #1
 8005b6e:	4618      	mov	r0, r3
 8005b70:	f7ff fb9e 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005b74:	4603      	mov	r3, r0
 8005b76:	0e9b      	lsrs	r3, r3, #26
 8005b78:	f003 021f 	and.w	r2, r3, #31
 8005b7c:	e01e      	b.n	8005bbc <HAL_ADC_ConfigChannel+0x1f8>
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	2101      	movs	r1, #1
 8005b84:	4618      	mov	r0, r3
 8005b86:	f7ff fb93 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005b8a:	4603      	mov	r3, r0
 8005b8c:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8005b90:	f8d7 30a4 	ldr.w	r3, [r7, #164]	; 0xa4
 8005b94:	fa93 f3a3 	rbit	r3, r3
 8005b98:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8005b9c:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8005ba0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8005ba4:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8005ba8:	2b00      	cmp	r3, #0
 8005baa:	d101      	bne.n	8005bb0 <HAL_ADC_ConfigChannel+0x1ec>
 8005bac:	2320      	movs	r3, #32
 8005bae:	e004      	b.n	8005bba <HAL_ADC_ConfigChannel+0x1f6>
 8005bb0:	f8d7 30a8 	ldr.w	r3, [r7, #168]	; 0xa8
 8005bb4:	fab3 f383 	clz	r3, r3
 8005bb8:	b2db      	uxtb	r3, r3
 8005bba:	461a      	mov	r2, r3
 8005bbc:	683b      	ldr	r3, [r7, #0]
 8005bbe:	681b      	ldr	r3, [r3, #0]
 8005bc0:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005bc4:	2b00      	cmp	r3, #0
 8005bc6:	d105      	bne.n	8005bd4 <HAL_ADC_ConfigChannel+0x210>
 8005bc8:	683b      	ldr	r3, [r7, #0]
 8005bca:	681b      	ldr	r3, [r3, #0]
 8005bcc:	0e9b      	lsrs	r3, r3, #26
 8005bce:	f003 031f 	and.w	r3, r3, #31
 8005bd2:	e018      	b.n	8005c06 <HAL_ADC_ConfigChannel+0x242>
 8005bd4:	683b      	ldr	r3, [r7, #0]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8005bdc:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8005be0:	fa93 f3a3 	rbit	r3, r3
 8005be4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 8005be8:	f8d7 3094 	ldr.w	r3, [r7, #148]	; 0x94
 8005bec:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8005bf0:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	d101      	bne.n	8005bfc <HAL_ADC_ConfigChannel+0x238>
 8005bf8:	2320      	movs	r3, #32
 8005bfa:	e004      	b.n	8005c06 <HAL_ADC_ConfigChannel+0x242>
 8005bfc:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8005c00:	fab3 f383 	clz	r3, r3
 8005c04:	b2db      	uxtb	r3, r3
 8005c06:	429a      	cmp	r2, r3
 8005c08:	d106      	bne.n	8005c18 <HAL_ADC_ConfigChannel+0x254>
 8005c0a:	687b      	ldr	r3, [r7, #4]
 8005c0c:	681b      	ldr	r3, [r3, #0]
 8005c0e:	2200      	movs	r2, #0
 8005c10:	2101      	movs	r1, #1
 8005c12:	4618      	mov	r0, r3
 8005c14:	f7ff fb62 	bl	80052dc <LL_ADC_SetOffsetState>
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	2102      	movs	r1, #2
 8005c1e:	4618      	mov	r0, r3
 8005c20:	f7ff fb46 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005c24:	4603      	mov	r3, r0
 8005c26:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005c2a:	2b00      	cmp	r3, #0
 8005c2c:	d10a      	bne.n	8005c44 <HAL_ADC_ConfigChannel+0x280>
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	2102      	movs	r1, #2
 8005c34:	4618      	mov	r0, r3
 8005c36:	f7ff fb3b 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005c3a:	4603      	mov	r3, r0
 8005c3c:	0e9b      	lsrs	r3, r3, #26
 8005c3e:	f003 021f 	and.w	r2, r3, #31
 8005c42:	e01e      	b.n	8005c82 <HAL_ADC_ConfigChannel+0x2be>
 8005c44:	687b      	ldr	r3, [r7, #4]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	2102      	movs	r1, #2
 8005c4a:	4618      	mov	r0, r3
 8005c4c:	f7ff fb30 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005c50:	4603      	mov	r3, r0
 8005c52:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8005c56:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8005c5a:	fa93 f3a3 	rbit	r3, r3
 8005c5e:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8005c62:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8005c66:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8005c6a:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d101      	bne.n	8005c76 <HAL_ADC_ConfigChannel+0x2b2>
 8005c72:	2320      	movs	r3, #32
 8005c74:	e004      	b.n	8005c80 <HAL_ADC_ConfigChannel+0x2bc>
 8005c76:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
 8005c7a:	fab3 f383 	clz	r3, r3
 8005c7e:	b2db      	uxtb	r3, r3
 8005c80:	461a      	mov	r2, r3
 8005c82:	683b      	ldr	r3, [r7, #0]
 8005c84:	681b      	ldr	r3, [r3, #0]
 8005c86:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d105      	bne.n	8005c9a <HAL_ADC_ConfigChannel+0x2d6>
 8005c8e:	683b      	ldr	r3, [r7, #0]
 8005c90:	681b      	ldr	r3, [r3, #0]
 8005c92:	0e9b      	lsrs	r3, r3, #26
 8005c94:	f003 031f 	and.w	r3, r3, #31
 8005c98:	e016      	b.n	8005cc8 <HAL_ADC_ConfigChannel+0x304>
 8005c9a:	683b      	ldr	r3, [r7, #0]
 8005c9c:	681b      	ldr	r3, [r3, #0]
 8005c9e:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8005ca2:	f8d7 3080 	ldr.w	r3, [r7, #128]	; 0x80
 8005ca6:	fa93 f3a3 	rbit	r3, r3
 8005caa:	67fb      	str	r3, [r7, #124]	; 0x7c
 8005cac:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
 8005cae:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005cb2:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8005cb6:	2b00      	cmp	r3, #0
 8005cb8:	d101      	bne.n	8005cbe <HAL_ADC_ConfigChannel+0x2fa>
 8005cba:	2320      	movs	r3, #32
 8005cbc:	e004      	b.n	8005cc8 <HAL_ADC_ConfigChannel+0x304>
 8005cbe:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8005cc2:	fab3 f383 	clz	r3, r3
 8005cc6:	b2db      	uxtb	r3, r3
 8005cc8:	429a      	cmp	r2, r3
 8005cca:	d106      	bne.n	8005cda <HAL_ADC_ConfigChannel+0x316>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	681b      	ldr	r3, [r3, #0]
 8005cd0:	2200      	movs	r2, #0
 8005cd2:	2102      	movs	r1, #2
 8005cd4:	4618      	mov	r0, r3
 8005cd6:	f7ff fb01 	bl	80052dc <LL_ADC_SetOffsetState>
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	681b      	ldr	r3, [r3, #0]
 8005cde:	2103      	movs	r1, #3
 8005ce0:	4618      	mov	r0, r3
 8005ce2:	f7ff fae5 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005ce6:	4603      	mov	r3, r0
 8005ce8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005cec:	2b00      	cmp	r3, #0
 8005cee:	d10a      	bne.n	8005d06 <HAL_ADC_ConfigChannel+0x342>
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	2103      	movs	r1, #3
 8005cf6:	4618      	mov	r0, r3
 8005cf8:	f7ff fada 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005cfc:	4603      	mov	r3, r0
 8005cfe:	0e9b      	lsrs	r3, r3, #26
 8005d00:	f003 021f 	and.w	r2, r3, #31
 8005d04:	e017      	b.n	8005d36 <HAL_ADC_ConfigChannel+0x372>
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	2103      	movs	r1, #3
 8005d0c:	4618      	mov	r0, r3
 8005d0e:	f7ff facf 	bl	80052b0 <LL_ADC_GetOffsetChannel>
 8005d12:	4603      	mov	r3, r0
 8005d14:	677b      	str	r3, [r7, #116]	; 0x74
 8005d16:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8005d18:	fa93 f3a3 	rbit	r3, r3
 8005d1c:	673b      	str	r3, [r7, #112]	; 0x70
 8005d1e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8005d20:	67bb      	str	r3, [r7, #120]	; 0x78
 8005d22:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d101      	bne.n	8005d2c <HAL_ADC_ConfigChannel+0x368>
 8005d28:	2320      	movs	r3, #32
 8005d2a:	e003      	b.n	8005d34 <HAL_ADC_ConfigChannel+0x370>
 8005d2c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 8005d2e:	fab3 f383 	clz	r3, r3
 8005d32:	b2db      	uxtb	r3, r3
 8005d34:	461a      	mov	r2, r3
 8005d36:	683b      	ldr	r3, [r7, #0]
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005d3e:	2b00      	cmp	r3, #0
 8005d40:	d105      	bne.n	8005d4e <HAL_ADC_ConfigChannel+0x38a>
 8005d42:	683b      	ldr	r3, [r7, #0]
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	0e9b      	lsrs	r3, r3, #26
 8005d48:	f003 031f 	and.w	r3, r3, #31
 8005d4c:	e011      	b.n	8005d72 <HAL_ADC_ConfigChannel+0x3ae>
 8005d4e:	683b      	ldr	r3, [r7, #0]
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	66bb      	str	r3, [r7, #104]	; 0x68
 8005d54:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 8005d56:	fa93 f3a3 	rbit	r3, r3
 8005d5a:	667b      	str	r3, [r7, #100]	; 0x64
 8005d5c:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005d5e:	66fb      	str	r3, [r7, #108]	; 0x6c
 8005d60:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8005d62:	2b00      	cmp	r3, #0
 8005d64:	d101      	bne.n	8005d6a <HAL_ADC_ConfigChannel+0x3a6>
 8005d66:	2320      	movs	r3, #32
 8005d68:	e003      	b.n	8005d72 <HAL_ADC_ConfigChannel+0x3ae>
 8005d6a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8005d6c:	fab3 f383 	clz	r3, r3
 8005d70:	b2db      	uxtb	r3, r3
 8005d72:	429a      	cmp	r2, r3
 8005d74:	d106      	bne.n	8005d84 <HAL_ADC_ConfigChannel+0x3c0>
 8005d76:	687b      	ldr	r3, [r7, #4]
 8005d78:	681b      	ldr	r3, [r3, #0]
 8005d7a:	2200      	movs	r2, #0
 8005d7c:	2103      	movs	r1, #3
 8005d7e:	4618      	mov	r0, r3
 8005d80:	f7ff faac 	bl	80052dc <LL_ADC_SetOffsetState>
 8005d84:	687b      	ldr	r3, [r7, #4]
 8005d86:	681b      	ldr	r3, [r3, #0]
 8005d88:	4618      	mov	r0, r3
 8005d8a:	f7ff fbb3 	bl	80054f4 <LL_ADC_IsEnabled>
 8005d8e:	4603      	mov	r3, r0
 8005d90:	2b00      	cmp	r3, #0
 8005d92:	f040 81c2 	bne.w	800611a <HAL_ADC_ConfigChannel+0x756>
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	6818      	ldr	r0, [r3, #0]
 8005d9a:	683b      	ldr	r3, [r7, #0]
 8005d9c:	6819      	ldr	r1, [r3, #0]
 8005d9e:	683b      	ldr	r3, [r7, #0]
 8005da0:	68db      	ldr	r3, [r3, #12]
 8005da2:	461a      	mov	r2, r3
 8005da4:	f7ff fb0c 	bl	80053c0 <LL_ADC_SetChannelSingleDiff>
 8005da8:	683b      	ldr	r3, [r7, #0]
 8005daa:	68db      	ldr	r3, [r3, #12]
 8005dac:	4a8e      	ldr	r2, [pc, #568]	; (8005fe8 <HAL_ADC_ConfigChannel+0x624>)
 8005dae:	4293      	cmp	r3, r2
 8005db0:	f040 8130 	bne.w	8006014 <HAL_ADC_ConfigChannel+0x650>
 8005db4:	687b      	ldr	r3, [r7, #4]
 8005db6:	6818      	ldr	r0, [r3, #0]
 8005db8:	683b      	ldr	r3, [r7, #0]
 8005dba:	681b      	ldr	r3, [r3, #0]
 8005dbc:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005dc0:	2b00      	cmp	r3, #0
 8005dc2:	d10b      	bne.n	8005ddc <HAL_ADC_ConfigChannel+0x418>
 8005dc4:	683b      	ldr	r3, [r7, #0]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	0e9b      	lsrs	r3, r3, #26
 8005dca:	3301      	adds	r3, #1
 8005dcc:	f003 031f 	and.w	r3, r3, #31
 8005dd0:	2b09      	cmp	r3, #9
 8005dd2:	bf94      	ite	ls
 8005dd4:	2301      	movls	r3, #1
 8005dd6:	2300      	movhi	r3, #0
 8005dd8:	b2db      	uxtb	r3, r3
 8005dda:	e019      	b.n	8005e10 <HAL_ADC_ConfigChannel+0x44c>
 8005ddc:	683b      	ldr	r3, [r7, #0]
 8005dde:	681b      	ldr	r3, [r3, #0]
 8005de0:	65fb      	str	r3, [r7, #92]	; 0x5c
 8005de2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8005de4:	fa93 f3a3 	rbit	r3, r3
 8005de8:	65bb      	str	r3, [r7, #88]	; 0x58
 8005dea:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005dec:	663b      	str	r3, [r7, #96]	; 0x60
 8005dee:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005df0:	2b00      	cmp	r3, #0
 8005df2:	d101      	bne.n	8005df8 <HAL_ADC_ConfigChannel+0x434>
 8005df4:	2320      	movs	r3, #32
 8005df6:	e003      	b.n	8005e00 <HAL_ADC_ConfigChannel+0x43c>
 8005df8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8005dfa:	fab3 f383 	clz	r3, r3
 8005dfe:	b2db      	uxtb	r3, r3
 8005e00:	3301      	adds	r3, #1
 8005e02:	f003 031f 	and.w	r3, r3, #31
 8005e06:	2b09      	cmp	r3, #9
 8005e08:	bf94      	ite	ls
 8005e0a:	2301      	movls	r3, #1
 8005e0c:	2300      	movhi	r3, #0
 8005e0e:	b2db      	uxtb	r3, r3
 8005e10:	2b00      	cmp	r3, #0
 8005e12:	d079      	beq.n	8005f08 <HAL_ADC_ConfigChannel+0x544>
 8005e14:	683b      	ldr	r3, [r7, #0]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005e1c:	2b00      	cmp	r3, #0
 8005e1e:	d107      	bne.n	8005e30 <HAL_ADC_ConfigChannel+0x46c>
 8005e20:	683b      	ldr	r3, [r7, #0]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	0e9b      	lsrs	r3, r3, #26
 8005e26:	3301      	adds	r3, #1
 8005e28:	069b      	lsls	r3, r3, #26
 8005e2a:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8005e2e:	e015      	b.n	8005e5c <HAL_ADC_ConfigChannel+0x498>
 8005e30:	683b      	ldr	r3, [r7, #0]
 8005e32:	681b      	ldr	r3, [r3, #0]
 8005e34:	653b      	str	r3, [r7, #80]	; 0x50
 8005e36:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8005e38:	fa93 f3a3 	rbit	r3, r3
 8005e3c:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005e3e:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005e40:	657b      	str	r3, [r7, #84]	; 0x54
 8005e42:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8005e44:	2b00      	cmp	r3, #0
 8005e46:	d101      	bne.n	8005e4c <HAL_ADC_ConfigChannel+0x488>
 8005e48:	2320      	movs	r3, #32
 8005e4a:	e003      	b.n	8005e54 <HAL_ADC_ConfigChannel+0x490>
 8005e4c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8005e4e:	fab3 f383 	clz	r3, r3
 8005e52:	b2db      	uxtb	r3, r3
 8005e54:	3301      	adds	r3, #1
 8005e56:	069b      	lsls	r3, r3, #26
 8005e58:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8005e5c:	683b      	ldr	r3, [r7, #0]
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005e64:	2b00      	cmp	r3, #0
 8005e66:	d109      	bne.n	8005e7c <HAL_ADC_ConfigChannel+0x4b8>
 8005e68:	683b      	ldr	r3, [r7, #0]
 8005e6a:	681b      	ldr	r3, [r3, #0]
 8005e6c:	0e9b      	lsrs	r3, r3, #26
 8005e6e:	3301      	adds	r3, #1
 8005e70:	f003 031f 	and.w	r3, r3, #31
 8005e74:	2101      	movs	r1, #1
 8005e76:	fa01 f303 	lsl.w	r3, r1, r3
 8005e7a:	e017      	b.n	8005eac <HAL_ADC_ConfigChannel+0x4e8>
 8005e7c:	683b      	ldr	r3, [r7, #0]
 8005e7e:	681b      	ldr	r3, [r3, #0]
 8005e80:	647b      	str	r3, [r7, #68]	; 0x44
 8005e82:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005e84:	fa93 f3a3 	rbit	r3, r3
 8005e88:	643b      	str	r3, [r7, #64]	; 0x40
 8005e8a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005e8c:	64bb      	str	r3, [r7, #72]	; 0x48
 8005e8e:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005e90:	2b00      	cmp	r3, #0
 8005e92:	d101      	bne.n	8005e98 <HAL_ADC_ConfigChannel+0x4d4>
 8005e94:	2320      	movs	r3, #32
 8005e96:	e003      	b.n	8005ea0 <HAL_ADC_ConfigChannel+0x4dc>
 8005e98:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005e9a:	fab3 f383 	clz	r3, r3
 8005e9e:	b2db      	uxtb	r3, r3
 8005ea0:	3301      	adds	r3, #1
 8005ea2:	f003 031f 	and.w	r3, r3, #31
 8005ea6:	2101      	movs	r1, #1
 8005ea8:	fa01 f303 	lsl.w	r3, r1, r3
 8005eac:	ea42 0103 	orr.w	r1, r2, r3
 8005eb0:	683b      	ldr	r3, [r7, #0]
 8005eb2:	681b      	ldr	r3, [r3, #0]
 8005eb4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005eb8:	2b00      	cmp	r3, #0
 8005eba:	d10a      	bne.n	8005ed2 <HAL_ADC_ConfigChannel+0x50e>
 8005ebc:	683b      	ldr	r3, [r7, #0]
 8005ebe:	681b      	ldr	r3, [r3, #0]
 8005ec0:	0e9b      	lsrs	r3, r3, #26
 8005ec2:	3301      	adds	r3, #1
 8005ec4:	f003 021f 	and.w	r2, r3, #31
 8005ec8:	4613      	mov	r3, r2
 8005eca:	005b      	lsls	r3, r3, #1
 8005ecc:	4413      	add	r3, r2
 8005ece:	051b      	lsls	r3, r3, #20
 8005ed0:	e018      	b.n	8005f04 <HAL_ADC_ConfigChannel+0x540>
 8005ed2:	683b      	ldr	r3, [r7, #0]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	63bb      	str	r3, [r7, #56]	; 0x38
 8005ed8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005eda:	fa93 f3a3 	rbit	r3, r3
 8005ede:	637b      	str	r3, [r7, #52]	; 0x34
 8005ee0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005ee2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8005ee4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d101      	bne.n	8005eee <HAL_ADC_ConfigChannel+0x52a>
 8005eea:	2320      	movs	r3, #32
 8005eec:	e003      	b.n	8005ef6 <HAL_ADC_ConfigChannel+0x532>
 8005eee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005ef0:	fab3 f383 	clz	r3, r3
 8005ef4:	b2db      	uxtb	r3, r3
 8005ef6:	3301      	adds	r3, #1
 8005ef8:	f003 021f 	and.w	r2, r3, #31
 8005efc:	4613      	mov	r3, r2
 8005efe:	005b      	lsls	r3, r3, #1
 8005f00:	4413      	add	r3, r2
 8005f02:	051b      	lsls	r3, r3, #20
 8005f04:	430b      	orrs	r3, r1
 8005f06:	e080      	b.n	800600a <HAL_ADC_ConfigChannel+0x646>
 8005f08:	683b      	ldr	r3, [r7, #0]
 8005f0a:	681b      	ldr	r3, [r3, #0]
 8005f0c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	d107      	bne.n	8005f24 <HAL_ADC_ConfigChannel+0x560>
 8005f14:	683b      	ldr	r3, [r7, #0]
 8005f16:	681b      	ldr	r3, [r3, #0]
 8005f18:	0e9b      	lsrs	r3, r3, #26
 8005f1a:	3301      	adds	r3, #1
 8005f1c:	069b      	lsls	r3, r3, #26
 8005f1e:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8005f22:	e015      	b.n	8005f50 <HAL_ADC_ConfigChannel+0x58c>
 8005f24:	683b      	ldr	r3, [r7, #0]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005f2a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005f2c:	fa93 f3a3 	rbit	r3, r3
 8005f30:	62bb      	str	r3, [r7, #40]	; 0x28
 8005f32:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8005f34:	633b      	str	r3, [r7, #48]	; 0x30
 8005f36:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d101      	bne.n	8005f40 <HAL_ADC_ConfigChannel+0x57c>
 8005f3c:	2320      	movs	r3, #32
 8005f3e:	e003      	b.n	8005f48 <HAL_ADC_ConfigChannel+0x584>
 8005f40:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005f42:	fab3 f383 	clz	r3, r3
 8005f46:	b2db      	uxtb	r3, r3
 8005f48:	3301      	adds	r3, #1
 8005f4a:	069b      	lsls	r3, r3, #26
 8005f4c:	f003 42f8 	and.w	r2, r3, #2080374784	; 0x7c000000
 8005f50:	683b      	ldr	r3, [r7, #0]
 8005f52:	681b      	ldr	r3, [r3, #0]
 8005f54:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d109      	bne.n	8005f70 <HAL_ADC_ConfigChannel+0x5ac>
 8005f5c:	683b      	ldr	r3, [r7, #0]
 8005f5e:	681b      	ldr	r3, [r3, #0]
 8005f60:	0e9b      	lsrs	r3, r3, #26
 8005f62:	3301      	adds	r3, #1
 8005f64:	f003 031f 	and.w	r3, r3, #31
 8005f68:	2101      	movs	r1, #1
 8005f6a:	fa01 f303 	lsl.w	r3, r1, r3
 8005f6e:	e017      	b.n	8005fa0 <HAL_ADC_ConfigChannel+0x5dc>
 8005f70:	683b      	ldr	r3, [r7, #0]
 8005f72:	681b      	ldr	r3, [r3, #0]
 8005f74:	623b      	str	r3, [r7, #32]
 8005f76:	6a3b      	ldr	r3, [r7, #32]
 8005f78:	fa93 f3a3 	rbit	r3, r3
 8005f7c:	61fb      	str	r3, [r7, #28]
 8005f7e:	69fb      	ldr	r3, [r7, #28]
 8005f80:	627b      	str	r3, [r7, #36]	; 0x24
 8005f82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	d101      	bne.n	8005f8c <HAL_ADC_ConfigChannel+0x5c8>
 8005f88:	2320      	movs	r3, #32
 8005f8a:	e003      	b.n	8005f94 <HAL_ADC_ConfigChannel+0x5d0>
 8005f8c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005f8e:	fab3 f383 	clz	r3, r3
 8005f92:	b2db      	uxtb	r3, r3
 8005f94:	3301      	adds	r3, #1
 8005f96:	f003 031f 	and.w	r3, r3, #31
 8005f9a:	2101      	movs	r1, #1
 8005f9c:	fa01 f303 	lsl.w	r3, r1, r3
 8005fa0:	ea42 0103 	orr.w	r1, r2, r3
 8005fa4:	683b      	ldr	r3, [r7, #0]
 8005fa6:	681b      	ldr	r3, [r3, #0]
 8005fa8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8005fac:	2b00      	cmp	r3, #0
 8005fae:	d10d      	bne.n	8005fcc <HAL_ADC_ConfigChannel+0x608>
 8005fb0:	683b      	ldr	r3, [r7, #0]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	0e9b      	lsrs	r3, r3, #26
 8005fb6:	3301      	adds	r3, #1
 8005fb8:	f003 021f 	and.w	r2, r3, #31
 8005fbc:	4613      	mov	r3, r2
 8005fbe:	005b      	lsls	r3, r3, #1
 8005fc0:	4413      	add	r3, r2
 8005fc2:	3b1e      	subs	r3, #30
 8005fc4:	051b      	lsls	r3, r3, #20
 8005fc6:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8005fca:	e01d      	b.n	8006008 <HAL_ADC_ConfigChannel+0x644>
 8005fcc:	683b      	ldr	r3, [r7, #0]
 8005fce:	681b      	ldr	r3, [r3, #0]
 8005fd0:	617b      	str	r3, [r7, #20]
 8005fd2:	697b      	ldr	r3, [r7, #20]
 8005fd4:	fa93 f3a3 	rbit	r3, r3
 8005fd8:	613b      	str	r3, [r7, #16]
 8005fda:	693b      	ldr	r3, [r7, #16]
 8005fdc:	61bb      	str	r3, [r7, #24]
 8005fde:	69bb      	ldr	r3, [r7, #24]
 8005fe0:	2b00      	cmp	r3, #0
 8005fe2:	d103      	bne.n	8005fec <HAL_ADC_ConfigChannel+0x628>
 8005fe4:	2320      	movs	r3, #32
 8005fe6:	e005      	b.n	8005ff4 <HAL_ADC_ConfigChannel+0x630>
 8005fe8:	407f0000 	.word	0x407f0000
 8005fec:	69bb      	ldr	r3, [r7, #24]
 8005fee:	fab3 f383 	clz	r3, r3
 8005ff2:	b2db      	uxtb	r3, r3
 8005ff4:	3301      	adds	r3, #1
 8005ff6:	f003 021f 	and.w	r2, r3, #31
 8005ffa:	4613      	mov	r3, r2
 8005ffc:	005b      	lsls	r3, r3, #1
 8005ffe:	4413      	add	r3, r2
 8006000:	3b1e      	subs	r3, #30
 8006002:	051b      	lsls	r3, r3, #20
 8006004:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8006008:	430b      	orrs	r3, r1
 800600a:	683a      	ldr	r2, [r7, #0]
 800600c:	6892      	ldr	r2, [r2, #8]
 800600e:	4619      	mov	r1, r3
 8006010:	f7ff f9ab 	bl	800536a <LL_ADC_SetChannelSamplingTime>
 8006014:	683b      	ldr	r3, [r7, #0]
 8006016:	681a      	ldr	r2, [r3, #0]
 8006018:	4b45      	ldr	r3, [pc, #276]	; (8006130 <HAL_ADC_ConfigChannel+0x76c>)
 800601a:	4013      	ands	r3, r2
 800601c:	2b00      	cmp	r3, #0
 800601e:	d07c      	beq.n	800611a <HAL_ADC_ConfigChannel+0x756>
 8006020:	4844      	ldr	r0, [pc, #272]	; (8006134 <HAL_ADC_ConfigChannel+0x770>)
 8006022:	f7ff f913 	bl	800524c <LL_ADC_GetCommonPathInternalCh>
 8006026:	f8c7 00c4 	str.w	r0, [r7, #196]	; 0xc4
 800602a:	4843      	ldr	r0, [pc, #268]	; (8006138 <HAL_ADC_ConfigChannel+0x774>)
 800602c:	f7ff fa62 	bl	80054f4 <LL_ADC_IsEnabled>
 8006030:	4603      	mov	r3, r0
 8006032:	2b00      	cmp	r3, #0
 8006034:	d15e      	bne.n	80060f4 <HAL_ADC_ConfigChannel+0x730>
 8006036:	683b      	ldr	r3, [r7, #0]
 8006038:	681b      	ldr	r3, [r3, #0]
 800603a:	4a40      	ldr	r2, [pc, #256]	; (800613c <HAL_ADC_ConfigChannel+0x778>)
 800603c:	4293      	cmp	r3, r2
 800603e:	d127      	bne.n	8006090 <HAL_ADC_ConfigChannel+0x6cc>
 8006040:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 8006044:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006048:	2b00      	cmp	r3, #0
 800604a:	d121      	bne.n	8006090 <HAL_ADC_ConfigChannel+0x6cc>
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	4a39      	ldr	r2, [pc, #228]	; (8006138 <HAL_ADC_ConfigChannel+0x774>)
 8006052:	4293      	cmp	r3, r2
 8006054:	d161      	bne.n	800611a <HAL_ADC_ConfigChannel+0x756>
 8006056:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800605a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800605e:	4619      	mov	r1, r3
 8006060:	4834      	ldr	r0, [pc, #208]	; (8006134 <HAL_ADC_ConfigChannel+0x770>)
 8006062:	f7ff f8e0 	bl	8005226 <LL_ADC_SetCommonPathInternalCh>
 8006066:	4b36      	ldr	r3, [pc, #216]	; (8006140 <HAL_ADC_ConfigChannel+0x77c>)
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	099b      	lsrs	r3, r3, #6
 800606c:	4a35      	ldr	r2, [pc, #212]	; (8006144 <HAL_ADC_ConfigChannel+0x780>)
 800606e:	fba2 2303 	umull	r2, r3, r2, r3
 8006072:	099b      	lsrs	r3, r3, #6
 8006074:	1c5a      	adds	r2, r3, #1
 8006076:	4613      	mov	r3, r2
 8006078:	005b      	lsls	r3, r3, #1
 800607a:	4413      	add	r3, r2
 800607c:	009b      	lsls	r3, r3, #2
 800607e:	60fb      	str	r3, [r7, #12]
 8006080:	e002      	b.n	8006088 <HAL_ADC_ConfigChannel+0x6c4>
 8006082:	68fb      	ldr	r3, [r7, #12]
 8006084:	3b01      	subs	r3, #1
 8006086:	60fb      	str	r3, [r7, #12]
 8006088:	68fb      	ldr	r3, [r7, #12]
 800608a:	2b00      	cmp	r3, #0
 800608c:	d1f9      	bne.n	8006082 <HAL_ADC_ConfigChannel+0x6be>
 800608e:	e044      	b.n	800611a <HAL_ADC_ConfigChannel+0x756>
 8006090:	683b      	ldr	r3, [r7, #0]
 8006092:	681b      	ldr	r3, [r3, #0]
 8006094:	4a2c      	ldr	r2, [pc, #176]	; (8006148 <HAL_ADC_ConfigChannel+0x784>)
 8006096:	4293      	cmp	r3, r2
 8006098:	d113      	bne.n	80060c2 <HAL_ADC_ConfigChannel+0x6fe>
 800609a:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 800609e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80060a2:	2b00      	cmp	r3, #0
 80060a4:	d10d      	bne.n	80060c2 <HAL_ADC_ConfigChannel+0x6fe>
 80060a6:	687b      	ldr	r3, [r7, #4]
 80060a8:	681b      	ldr	r3, [r3, #0]
 80060aa:	4a23      	ldr	r2, [pc, #140]	; (8006138 <HAL_ADC_ConfigChannel+0x774>)
 80060ac:	4293      	cmp	r3, r2
 80060ae:	d134      	bne.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060b0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 80060b4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80060b8:	4619      	mov	r1, r3
 80060ba:	481e      	ldr	r0, [pc, #120]	; (8006134 <HAL_ADC_ConfigChannel+0x770>)
 80060bc:	f7ff f8b3 	bl	8005226 <LL_ADC_SetCommonPathInternalCh>
 80060c0:	e02b      	b.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060c2:	683b      	ldr	r3, [r7, #0]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	4a21      	ldr	r2, [pc, #132]	; (800614c <HAL_ADC_ConfigChannel+0x788>)
 80060c8:	4293      	cmp	r3, r2
 80060ca:	d126      	bne.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060cc:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 80060d0:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80060d4:	2b00      	cmp	r3, #0
 80060d6:	d120      	bne.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060d8:	687b      	ldr	r3, [r7, #4]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	4a16      	ldr	r2, [pc, #88]	; (8006138 <HAL_ADC_ConfigChannel+0x774>)
 80060de:	4293      	cmp	r3, r2
 80060e0:	d11b      	bne.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060e2:	f8d7 30c4 	ldr.w	r3, [r7, #196]	; 0xc4
 80060e6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80060ea:	4619      	mov	r1, r3
 80060ec:	4811      	ldr	r0, [pc, #68]	; (8006134 <HAL_ADC_ConfigChannel+0x770>)
 80060ee:	f7ff f89a 	bl	8005226 <LL_ADC_SetCommonPathInternalCh>
 80060f2:	e012      	b.n	800611a <HAL_ADC_ConfigChannel+0x756>
 80060f4:	687b      	ldr	r3, [r7, #4]
 80060f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80060f8:	f043 0220 	orr.w	r2, r3, #32
 80060fc:	687b      	ldr	r3, [r7, #4]
 80060fe:	655a      	str	r2, [r3, #84]	; 0x54
 8006100:	2301      	movs	r3, #1
 8006102:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 8006106:	e008      	b.n	800611a <HAL_ADC_ConfigChannel+0x756>
 8006108:	687b      	ldr	r3, [r7, #4]
 800610a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800610c:	f043 0220 	orr.w	r2, r3, #32
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	655a      	str	r2, [r3, #84]	; 0x54
 8006114:	2301      	movs	r3, #1
 8006116:	f887 30d7 	strb.w	r3, [r7, #215]	; 0xd7
 800611a:	687b      	ldr	r3, [r7, #4]
 800611c:	2200      	movs	r2, #0
 800611e:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006122:	f897 30d7 	ldrb.w	r3, [r7, #215]	; 0xd7
 8006126:	4618      	mov	r0, r3
 8006128:	37d8      	adds	r7, #216	; 0xd8
 800612a:	46bd      	mov	sp, r7
 800612c:	bd80      	pop	{r7, pc}
 800612e:	bf00      	nop
 8006130:	80080000 	.word	0x80080000
 8006134:	50040300 	.word	0x50040300
 8006138:	50040000 	.word	0x50040000
 800613c:	c7520000 	.word	0xc7520000
 8006140:	20000018 	.word	0x20000018
 8006144:	053e2d63 	.word	0x053e2d63
 8006148:	cb840000 	.word	0xcb840000
 800614c:	80000001 	.word	0x80000001

08006150 <ADC_ConversionStop>:
 8006150:	b580      	push	{r7, lr}
 8006152:	b088      	sub	sp, #32
 8006154:	af00      	add	r7, sp, #0
 8006156:	6078      	str	r0, [r7, #4]
 8006158:	6039      	str	r1, [r7, #0]
 800615a:	2300      	movs	r3, #0
 800615c:	61fb      	str	r3, [r7, #28]
 800615e:	683b      	ldr	r3, [r7, #0]
 8006160:	61bb      	str	r3, [r7, #24]
 8006162:	687b      	ldr	r3, [r7, #4]
 8006164:	681b      	ldr	r3, [r3, #0]
 8006166:	4618      	mov	r0, r3
 8006168:	f7ff fa12 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 800616c:	6138      	str	r0, [r7, #16]
 800616e:	687b      	ldr	r3, [r7, #4]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	4618      	mov	r0, r3
 8006174:	f7ff fa33 	bl	80055de <LL_ADC_INJ_IsConversionOngoing>
 8006178:	60f8      	str	r0, [r7, #12]
 800617a:	693b      	ldr	r3, [r7, #16]
 800617c:	2b00      	cmp	r3, #0
 800617e:	d103      	bne.n	8006188 <ADC_ConversionStop+0x38>
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	2b00      	cmp	r3, #0
 8006184:	f000 8098 	beq.w	80062b8 <ADC_ConversionStop+0x168>
 8006188:	687b      	ldr	r3, [r7, #4]
 800618a:	681b      	ldr	r3, [r3, #0]
 800618c:	68db      	ldr	r3, [r3, #12]
 800618e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006192:	2b00      	cmp	r3, #0
 8006194:	d02a      	beq.n	80061ec <ADC_ConversionStop+0x9c>
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	7e5b      	ldrb	r3, [r3, #25]
 800619a:	2b01      	cmp	r3, #1
 800619c:	d126      	bne.n	80061ec <ADC_ConversionStop+0x9c>
 800619e:	687b      	ldr	r3, [r7, #4]
 80061a0:	7e1b      	ldrb	r3, [r3, #24]
 80061a2:	2b01      	cmp	r3, #1
 80061a4:	d122      	bne.n	80061ec <ADC_ConversionStop+0x9c>
 80061a6:	2301      	movs	r3, #1
 80061a8:	61bb      	str	r3, [r7, #24]
 80061aa:	e014      	b.n	80061d6 <ADC_ConversionStop+0x86>
 80061ac:	69fb      	ldr	r3, [r7, #28]
 80061ae:	4a45      	ldr	r2, [pc, #276]	; (80062c4 <ADC_ConversionStop+0x174>)
 80061b0:	4293      	cmp	r3, r2
 80061b2:	d90d      	bls.n	80061d0 <ADC_ConversionStop+0x80>
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80061b8:	f043 0210 	orr.w	r2, r3, #16
 80061bc:	687b      	ldr	r3, [r7, #4]
 80061be:	655a      	str	r2, [r3, #84]	; 0x54
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80061c4:	f043 0201 	orr.w	r2, r3, #1
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	659a      	str	r2, [r3, #88]	; 0x58
 80061cc:	2301      	movs	r3, #1
 80061ce:	e074      	b.n	80062ba <ADC_ConversionStop+0x16a>
 80061d0:	69fb      	ldr	r3, [r7, #28]
 80061d2:	3301      	adds	r3, #1
 80061d4:	61fb      	str	r3, [r7, #28]
 80061d6:	687b      	ldr	r3, [r7, #4]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	681b      	ldr	r3, [r3, #0]
 80061dc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80061e0:	2b40      	cmp	r3, #64	; 0x40
 80061e2:	d1e3      	bne.n	80061ac <ADC_ConversionStop+0x5c>
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	2240      	movs	r2, #64	; 0x40
 80061ea:	601a      	str	r2, [r3, #0]
 80061ec:	69bb      	ldr	r3, [r7, #24]
 80061ee:	2b02      	cmp	r3, #2
 80061f0:	d014      	beq.n	800621c <ADC_ConversionStop+0xcc>
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	4618      	mov	r0, r3
 80061f8:	f7ff f9ca 	bl	8005590 <LL_ADC_REG_IsConversionOngoing>
 80061fc:	4603      	mov	r3, r0
 80061fe:	2b00      	cmp	r3, #0
 8006200:	d00c      	beq.n	800621c <ADC_ConversionStop+0xcc>
 8006202:	687b      	ldr	r3, [r7, #4]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	4618      	mov	r0, r3
 8006208:	f7ff f987 	bl	800551a <LL_ADC_IsDisableOngoing>
 800620c:	4603      	mov	r3, r0
 800620e:	2b00      	cmp	r3, #0
 8006210:	d104      	bne.n	800621c <ADC_ConversionStop+0xcc>
 8006212:	687b      	ldr	r3, [r7, #4]
 8006214:	681b      	ldr	r3, [r3, #0]
 8006216:	4618      	mov	r0, r3
 8006218:	f7ff f9a6 	bl	8005568 <LL_ADC_REG_StopConversion>
 800621c:	69bb      	ldr	r3, [r7, #24]
 800621e:	2b01      	cmp	r3, #1
 8006220:	d014      	beq.n	800624c <ADC_ConversionStop+0xfc>
 8006222:	687b      	ldr	r3, [r7, #4]
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	4618      	mov	r0, r3
 8006228:	f7ff f9d9 	bl	80055de <LL_ADC_INJ_IsConversionOngoing>
 800622c:	4603      	mov	r3, r0
 800622e:	2b00      	cmp	r3, #0
 8006230:	d00c      	beq.n	800624c <ADC_ConversionStop+0xfc>
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	681b      	ldr	r3, [r3, #0]
 8006236:	4618      	mov	r0, r3
 8006238:	f7ff f96f 	bl	800551a <LL_ADC_IsDisableOngoing>
 800623c:	4603      	mov	r3, r0
 800623e:	2b00      	cmp	r3, #0
 8006240:	d104      	bne.n	800624c <ADC_ConversionStop+0xfc>
 8006242:	687b      	ldr	r3, [r7, #4]
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	4618      	mov	r0, r3
 8006248:	f7ff f9b5 	bl	80055b6 <LL_ADC_INJ_StopConversion>
 800624c:	69bb      	ldr	r3, [r7, #24]
 800624e:	2b02      	cmp	r3, #2
 8006250:	d005      	beq.n	800625e <ADC_ConversionStop+0x10e>
 8006252:	69bb      	ldr	r3, [r7, #24]
 8006254:	2b03      	cmp	r3, #3
 8006256:	d105      	bne.n	8006264 <ADC_ConversionStop+0x114>
 8006258:	230c      	movs	r3, #12
 800625a:	617b      	str	r3, [r7, #20]
 800625c:	e005      	b.n	800626a <ADC_ConversionStop+0x11a>
 800625e:	2308      	movs	r3, #8
 8006260:	617b      	str	r3, [r7, #20]
 8006262:	e002      	b.n	800626a <ADC_ConversionStop+0x11a>
 8006264:	2304      	movs	r3, #4
 8006266:	617b      	str	r3, [r7, #20]
 8006268:	bf00      	nop
 800626a:	f7fe ff8d 	bl	8005188 <HAL_GetTick>
 800626e:	60b8      	str	r0, [r7, #8]
 8006270:	e01b      	b.n	80062aa <ADC_ConversionStop+0x15a>
 8006272:	f7fe ff89 	bl	8005188 <HAL_GetTick>
 8006276:	4602      	mov	r2, r0
 8006278:	68bb      	ldr	r3, [r7, #8]
 800627a:	1ad3      	subs	r3, r2, r3
 800627c:	2b05      	cmp	r3, #5
 800627e:	d914      	bls.n	80062aa <ADC_ConversionStop+0x15a>
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	689a      	ldr	r2, [r3, #8]
 8006286:	697b      	ldr	r3, [r7, #20]
 8006288:	4013      	ands	r3, r2
 800628a:	2b00      	cmp	r3, #0
 800628c:	d00d      	beq.n	80062aa <ADC_ConversionStop+0x15a>
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006292:	f043 0210 	orr.w	r2, r3, #16
 8006296:	687b      	ldr	r3, [r7, #4]
 8006298:	655a      	str	r2, [r3, #84]	; 0x54
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800629e:	f043 0201 	orr.w	r2, r3, #1
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	659a      	str	r2, [r3, #88]	; 0x58
 80062a6:	2301      	movs	r3, #1
 80062a8:	e007      	b.n	80062ba <ADC_ConversionStop+0x16a>
 80062aa:	687b      	ldr	r3, [r7, #4]
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	689a      	ldr	r2, [r3, #8]
 80062b0:	697b      	ldr	r3, [r7, #20]
 80062b2:	4013      	ands	r3, r2
 80062b4:	2b00      	cmp	r3, #0
 80062b6:	d1dc      	bne.n	8006272 <ADC_ConversionStop+0x122>
 80062b8:	2300      	movs	r3, #0
 80062ba:	4618      	mov	r0, r3
 80062bc:	3720      	adds	r7, #32
 80062be:	46bd      	mov	sp, r7
 80062c0:	bd80      	pop	{r7, pc}
 80062c2:	bf00      	nop
 80062c4:	a33fffff 	.word	0xa33fffff

080062c8 <ADC_Enable>:
 80062c8:	b580      	push	{r7, lr}
 80062ca:	b084      	sub	sp, #16
 80062cc:	af00      	add	r7, sp, #0
 80062ce:	6078      	str	r0, [r7, #4]
 80062d0:	2300      	movs	r3, #0
 80062d2:	60bb      	str	r3, [r7, #8]
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	681b      	ldr	r3, [r3, #0]
 80062d8:	4618      	mov	r0, r3
 80062da:	f7ff f90b 	bl	80054f4 <LL_ADC_IsEnabled>
 80062de:	4603      	mov	r3, r0
 80062e0:	2b00      	cmp	r3, #0
 80062e2:	d15e      	bne.n	80063a2 <ADC_Enable+0xda>
 80062e4:	687b      	ldr	r3, [r7, #4]
 80062e6:	681b      	ldr	r3, [r3, #0]
 80062e8:	689a      	ldr	r2, [r3, #8]
 80062ea:	4b30      	ldr	r3, [pc, #192]	; (80063ac <ADC_Enable+0xe4>)
 80062ec:	4013      	ands	r3, r2
 80062ee:	2b00      	cmp	r3, #0
 80062f0:	d00d      	beq.n	800630e <ADC_Enable+0x46>
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80062f6:	f043 0210 	orr.w	r2, r3, #16
 80062fa:	687b      	ldr	r3, [r7, #4]
 80062fc:	655a      	str	r2, [r3, #84]	; 0x54
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006302:	f043 0201 	orr.w	r2, r3, #1
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	659a      	str	r2, [r3, #88]	; 0x58
 800630a:	2301      	movs	r3, #1
 800630c:	e04a      	b.n	80063a4 <ADC_Enable+0xdc>
 800630e:	687b      	ldr	r3, [r7, #4]
 8006310:	681b      	ldr	r3, [r3, #0]
 8006312:	4618      	mov	r0, r3
 8006314:	f7ff f8c6 	bl	80054a4 <LL_ADC_Enable>
 8006318:	4825      	ldr	r0, [pc, #148]	; (80063b0 <ADC_Enable+0xe8>)
 800631a:	f7fe ff97 	bl	800524c <LL_ADC_GetCommonPathInternalCh>
 800631e:	4603      	mov	r3, r0
 8006320:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8006324:	2b00      	cmp	r3, #0
 8006326:	d00f      	beq.n	8006348 <ADC_Enable+0x80>
 8006328:	4b22      	ldr	r3, [pc, #136]	; (80063b4 <ADC_Enable+0xec>)
 800632a:	681b      	ldr	r3, [r3, #0]
 800632c:	099b      	lsrs	r3, r3, #6
 800632e:	4a22      	ldr	r2, [pc, #136]	; (80063b8 <ADC_Enable+0xf0>)
 8006330:	fba2 2303 	umull	r2, r3, r2, r3
 8006334:	099b      	lsrs	r3, r3, #6
 8006336:	3301      	adds	r3, #1
 8006338:	60bb      	str	r3, [r7, #8]
 800633a:	e002      	b.n	8006342 <ADC_Enable+0x7a>
 800633c:	68bb      	ldr	r3, [r7, #8]
 800633e:	3b01      	subs	r3, #1
 8006340:	60bb      	str	r3, [r7, #8]
 8006342:	68bb      	ldr	r3, [r7, #8]
 8006344:	2b00      	cmp	r3, #0
 8006346:	d1f9      	bne.n	800633c <ADC_Enable+0x74>
 8006348:	f7fe ff1e 	bl	8005188 <HAL_GetTick>
 800634c:	60f8      	str	r0, [r7, #12]
 800634e:	e021      	b.n	8006394 <ADC_Enable+0xcc>
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	4618      	mov	r0, r3
 8006356:	f7ff f8cd 	bl	80054f4 <LL_ADC_IsEnabled>
 800635a:	4603      	mov	r3, r0
 800635c:	2b00      	cmp	r3, #0
 800635e:	d104      	bne.n	800636a <ADC_Enable+0xa2>
 8006360:	687b      	ldr	r3, [r7, #4]
 8006362:	681b      	ldr	r3, [r3, #0]
 8006364:	4618      	mov	r0, r3
 8006366:	f7ff f89d 	bl	80054a4 <LL_ADC_Enable>
 800636a:	f7fe ff0d 	bl	8005188 <HAL_GetTick>
 800636e:	4602      	mov	r2, r0
 8006370:	68fb      	ldr	r3, [r7, #12]
 8006372:	1ad3      	subs	r3, r2, r3
 8006374:	2b02      	cmp	r3, #2
 8006376:	d90d      	bls.n	8006394 <ADC_Enable+0xcc>
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800637c:	f043 0210 	orr.w	r2, r3, #16
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	655a      	str	r2, [r3, #84]	; 0x54
 8006384:	687b      	ldr	r3, [r7, #4]
 8006386:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006388:	f043 0201 	orr.w	r2, r3, #1
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	659a      	str	r2, [r3, #88]	; 0x58
 8006390:	2301      	movs	r3, #1
 8006392:	e007      	b.n	80063a4 <ADC_Enable+0xdc>
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	681b      	ldr	r3, [r3, #0]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	f003 0301 	and.w	r3, r3, #1
 800639e:	2b01      	cmp	r3, #1
 80063a0:	d1d6      	bne.n	8006350 <ADC_Enable+0x88>
 80063a2:	2300      	movs	r3, #0
 80063a4:	4618      	mov	r0, r3
 80063a6:	3710      	adds	r7, #16
 80063a8:	46bd      	mov	sp, r7
 80063aa:	bd80      	pop	{r7, pc}
 80063ac:	8000003f 	.word	0x8000003f
 80063b0:	50040300 	.word	0x50040300
 80063b4:	20000018 	.word	0x20000018
 80063b8:	053e2d63 	.word	0x053e2d63

080063bc <ADC_Disable>:
 80063bc:	b580      	push	{r7, lr}
 80063be:	b084      	sub	sp, #16
 80063c0:	af00      	add	r7, sp, #0
 80063c2:	6078      	str	r0, [r7, #4]
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	4618      	mov	r0, r3
 80063ca:	f7ff f8a6 	bl	800551a <LL_ADC_IsDisableOngoing>
 80063ce:	60f8      	str	r0, [r7, #12]
 80063d0:	687b      	ldr	r3, [r7, #4]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	4618      	mov	r0, r3
 80063d6:	f7ff f88d 	bl	80054f4 <LL_ADC_IsEnabled>
 80063da:	4603      	mov	r3, r0
 80063dc:	2b00      	cmp	r3, #0
 80063de:	d047      	beq.n	8006470 <ADC_Disable+0xb4>
 80063e0:	68fb      	ldr	r3, [r7, #12]
 80063e2:	2b00      	cmp	r3, #0
 80063e4:	d144      	bne.n	8006470 <ADC_Disable+0xb4>
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	689b      	ldr	r3, [r3, #8]
 80063ec:	f003 030d 	and.w	r3, r3, #13
 80063f0:	2b01      	cmp	r3, #1
 80063f2:	d10c      	bne.n	800640e <ADC_Disable+0x52>
 80063f4:	687b      	ldr	r3, [r7, #4]
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	4618      	mov	r0, r3
 80063fa:	f7ff f867 	bl	80054cc <LL_ADC_Disable>
 80063fe:	687b      	ldr	r3, [r7, #4]
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	2203      	movs	r2, #3
 8006404:	601a      	str	r2, [r3, #0]
 8006406:	f7fe febf 	bl	8005188 <HAL_GetTick>
 800640a:	60b8      	str	r0, [r7, #8]
 800640c:	e029      	b.n	8006462 <ADC_Disable+0xa6>
 800640e:	687b      	ldr	r3, [r7, #4]
 8006410:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006412:	f043 0210 	orr.w	r2, r3, #16
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	655a      	str	r2, [r3, #84]	; 0x54
 800641a:	687b      	ldr	r3, [r7, #4]
 800641c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800641e:	f043 0201 	orr.w	r2, r3, #1
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	659a      	str	r2, [r3, #88]	; 0x58
 8006426:	2301      	movs	r3, #1
 8006428:	e023      	b.n	8006472 <ADC_Disable+0xb6>
 800642a:	f7fe fead 	bl	8005188 <HAL_GetTick>
 800642e:	4602      	mov	r2, r0
 8006430:	68bb      	ldr	r3, [r7, #8]
 8006432:	1ad3      	subs	r3, r2, r3
 8006434:	2b02      	cmp	r3, #2
 8006436:	d914      	bls.n	8006462 <ADC_Disable+0xa6>
 8006438:	687b      	ldr	r3, [r7, #4]
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	689b      	ldr	r3, [r3, #8]
 800643e:	f003 0301 	and.w	r3, r3, #1
 8006442:	2b00      	cmp	r3, #0
 8006444:	d00d      	beq.n	8006462 <ADC_Disable+0xa6>
 8006446:	687b      	ldr	r3, [r7, #4]
 8006448:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800644a:	f043 0210 	orr.w	r2, r3, #16
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	655a      	str	r2, [r3, #84]	; 0x54
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006456:	f043 0201 	orr.w	r2, r3, #1
 800645a:	687b      	ldr	r3, [r7, #4]
 800645c:	659a      	str	r2, [r3, #88]	; 0x58
 800645e:	2301      	movs	r3, #1
 8006460:	e007      	b.n	8006472 <ADC_Disable+0xb6>
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	681b      	ldr	r3, [r3, #0]
 8006466:	689b      	ldr	r3, [r3, #8]
 8006468:	f003 0301 	and.w	r3, r3, #1
 800646c:	2b00      	cmp	r3, #0
 800646e:	d1dc      	bne.n	800642a <ADC_Disable+0x6e>
 8006470:	2300      	movs	r3, #0
 8006472:	4618      	mov	r0, r3
 8006474:	3710      	adds	r7, #16
 8006476:	46bd      	mov	sp, r7
 8006478:	bd80      	pop	{r7, pc}

0800647a <LL_ADC_StartCalibration>:
 800647a:	b480      	push	{r7}
 800647c:	b083      	sub	sp, #12
 800647e:	af00      	add	r7, sp, #0
 8006480:	6078      	str	r0, [r7, #4]
 8006482:	6039      	str	r1, [r7, #0]
 8006484:	687b      	ldr	r3, [r7, #4]
 8006486:	689b      	ldr	r3, [r3, #8]
 8006488:	f023 4340 	bic.w	r3, r3, #3221225472	; 0xc0000000
 800648c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006490:	683a      	ldr	r2, [r7, #0]
 8006492:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 8006496:	4313      	orrs	r3, r2
 8006498:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	609a      	str	r2, [r3, #8]
 80064a0:	bf00      	nop
 80064a2:	370c      	adds	r7, #12
 80064a4:	46bd      	mov	sp, r7
 80064a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064aa:	4770      	bx	lr

080064ac <LL_ADC_IsCalibrationOnGoing>:
 80064ac:	b480      	push	{r7}
 80064ae:	b083      	sub	sp, #12
 80064b0:	af00      	add	r7, sp, #0
 80064b2:	6078      	str	r0, [r7, #4]
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	689b      	ldr	r3, [r3, #8]
 80064b8:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80064bc:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80064c0:	d101      	bne.n	80064c6 <LL_ADC_IsCalibrationOnGoing+0x1a>
 80064c2:	2301      	movs	r3, #1
 80064c4:	e000      	b.n	80064c8 <LL_ADC_IsCalibrationOnGoing+0x1c>
 80064c6:	2300      	movs	r3, #0
 80064c8:	4618      	mov	r0, r3
 80064ca:	370c      	adds	r7, #12
 80064cc:	46bd      	mov	sp, r7
 80064ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064d2:	4770      	bx	lr

080064d4 <HAL_ADCEx_Calibration_Start>:
 80064d4:	b580      	push	{r7, lr}
 80064d6:	b084      	sub	sp, #16
 80064d8:	af00      	add	r7, sp, #0
 80064da:	6078      	str	r0, [r7, #4]
 80064dc:	6039      	str	r1, [r7, #0]
 80064de:	2300      	movs	r3, #0
 80064e0:	60bb      	str	r3, [r7, #8]
 80064e2:	687b      	ldr	r3, [r7, #4]
 80064e4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80064e8:	2b01      	cmp	r3, #1
 80064ea:	d101      	bne.n	80064f0 <HAL_ADCEx_Calibration_Start+0x1c>
 80064ec:	2302      	movs	r3, #2
 80064ee:	e04d      	b.n	800658c <HAL_ADCEx_Calibration_Start+0xb8>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	2201      	movs	r2, #1
 80064f4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 80064f8:	6878      	ldr	r0, [r7, #4]
 80064fa:	f7ff ff5f 	bl	80063bc <ADC_Disable>
 80064fe:	4603      	mov	r3, r0
 8006500:	73fb      	strb	r3, [r7, #15]
 8006502:	7bfb      	ldrb	r3, [r7, #15]
 8006504:	2b00      	cmp	r3, #0
 8006506:	d136      	bne.n	8006576 <HAL_ADCEx_Calibration_Start+0xa2>
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800650c:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8006510:	f023 0302 	bic.w	r3, r3, #2
 8006514:	f043 0202 	orr.w	r2, r3, #2
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	655a      	str	r2, [r3, #84]	; 0x54
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	681b      	ldr	r3, [r3, #0]
 8006520:	6839      	ldr	r1, [r7, #0]
 8006522:	4618      	mov	r0, r3
 8006524:	f7ff ffa9 	bl	800647a <LL_ADC_StartCalibration>
 8006528:	e014      	b.n	8006554 <HAL_ADCEx_Calibration_Start+0x80>
 800652a:	68bb      	ldr	r3, [r7, #8]
 800652c:	3301      	adds	r3, #1
 800652e:	60bb      	str	r3, [r7, #8]
 8006530:	68bb      	ldr	r3, [r7, #8]
 8006532:	4a18      	ldr	r2, [pc, #96]	; (8006594 <HAL_ADCEx_Calibration_Start+0xc0>)
 8006534:	4293      	cmp	r3, r2
 8006536:	d90d      	bls.n	8006554 <HAL_ADCEx_Calibration_Start+0x80>
 8006538:	687b      	ldr	r3, [r7, #4]
 800653a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800653c:	f023 0312 	bic.w	r3, r3, #18
 8006540:	f043 0210 	orr.w	r2, r3, #16
 8006544:	687b      	ldr	r3, [r7, #4]
 8006546:	655a      	str	r2, [r3, #84]	; 0x54
 8006548:	687b      	ldr	r3, [r7, #4]
 800654a:	2200      	movs	r2, #0
 800654c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006550:	2301      	movs	r3, #1
 8006552:	e01b      	b.n	800658c <HAL_ADCEx_Calibration_Start+0xb8>
 8006554:	687b      	ldr	r3, [r7, #4]
 8006556:	681b      	ldr	r3, [r3, #0]
 8006558:	4618      	mov	r0, r3
 800655a:	f7ff ffa7 	bl	80064ac <LL_ADC_IsCalibrationOnGoing>
 800655e:	4603      	mov	r3, r0
 8006560:	2b00      	cmp	r3, #0
 8006562:	d1e2      	bne.n	800652a <HAL_ADCEx_Calibration_Start+0x56>
 8006564:	687b      	ldr	r3, [r7, #4]
 8006566:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006568:	f023 0303 	bic.w	r3, r3, #3
 800656c:	f043 0201 	orr.w	r2, r3, #1
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	655a      	str	r2, [r3, #84]	; 0x54
 8006574:	e005      	b.n	8006582 <HAL_ADCEx_Calibration_Start+0xae>
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800657a:	f043 0210 	orr.w	r2, r3, #16
 800657e:	687b      	ldr	r3, [r7, #4]
 8006580:	655a      	str	r2, [r3, #84]	; 0x54
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	2200      	movs	r2, #0
 8006586:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800658a:	7bfb      	ldrb	r3, [r7, #15]
 800658c:	4618      	mov	r0, r3
 800658e:	3710      	adds	r7, #16
 8006590:	46bd      	mov	sp, r7
 8006592:	bd80      	pop	{r7, pc}
 8006594:	00026aaa 	.word	0x00026aaa

08006598 <__NVIC_SetPriorityGrouping>:
 8006598:	b480      	push	{r7}
 800659a:	b085      	sub	sp, #20
 800659c:	af00      	add	r7, sp, #0
 800659e:	6078      	str	r0, [r7, #4]
 80065a0:	687b      	ldr	r3, [r7, #4]
 80065a2:	f003 0307 	and.w	r3, r3, #7
 80065a6:	60fb      	str	r3, [r7, #12]
 80065a8:	4b0c      	ldr	r3, [pc, #48]	; (80065dc <__NVIC_SetPriorityGrouping+0x44>)
 80065aa:	68db      	ldr	r3, [r3, #12]
 80065ac:	60bb      	str	r3, [r7, #8]
 80065ae:	68ba      	ldr	r2, [r7, #8]
 80065b0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80065b4:	4013      	ands	r3, r2
 80065b6:	60bb      	str	r3, [r7, #8]
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	021a      	lsls	r2, r3, #8
 80065bc:	68bb      	ldr	r3, [r7, #8]
 80065be:	4313      	orrs	r3, r2
 80065c0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80065c4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80065c8:	60bb      	str	r3, [r7, #8]
 80065ca:	4a04      	ldr	r2, [pc, #16]	; (80065dc <__NVIC_SetPriorityGrouping+0x44>)
 80065cc:	68bb      	ldr	r3, [r7, #8]
 80065ce:	60d3      	str	r3, [r2, #12]
 80065d0:	bf00      	nop
 80065d2:	3714      	adds	r7, #20
 80065d4:	46bd      	mov	sp, r7
 80065d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065da:	4770      	bx	lr
 80065dc:	e000ed00 	.word	0xe000ed00

080065e0 <__NVIC_GetPriorityGrouping>:
 80065e0:	b480      	push	{r7}
 80065e2:	af00      	add	r7, sp, #0
 80065e4:	4b04      	ldr	r3, [pc, #16]	; (80065f8 <__NVIC_GetPriorityGrouping+0x18>)
 80065e6:	68db      	ldr	r3, [r3, #12]
 80065e8:	0a1b      	lsrs	r3, r3, #8
 80065ea:	f003 0307 	and.w	r3, r3, #7
 80065ee:	4618      	mov	r0, r3
 80065f0:	46bd      	mov	sp, r7
 80065f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065f6:	4770      	bx	lr
 80065f8:	e000ed00 	.word	0xe000ed00

080065fc <__NVIC_EnableIRQ>:
 80065fc:	b480      	push	{r7}
 80065fe:	b083      	sub	sp, #12
 8006600:	af00      	add	r7, sp, #0
 8006602:	4603      	mov	r3, r0
 8006604:	71fb      	strb	r3, [r7, #7]
 8006606:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800660a:	2b00      	cmp	r3, #0
 800660c:	db0b      	blt.n	8006626 <__NVIC_EnableIRQ+0x2a>
 800660e:	79fb      	ldrb	r3, [r7, #7]
 8006610:	f003 021f 	and.w	r2, r3, #31
 8006614:	4907      	ldr	r1, [pc, #28]	; (8006634 <__NVIC_EnableIRQ+0x38>)
 8006616:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800661a:	095b      	lsrs	r3, r3, #5
 800661c:	2001      	movs	r0, #1
 800661e:	fa00 f202 	lsl.w	r2, r0, r2
 8006622:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8006626:	bf00      	nop
 8006628:	370c      	adds	r7, #12
 800662a:	46bd      	mov	sp, r7
 800662c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006630:	4770      	bx	lr
 8006632:	bf00      	nop
 8006634:	e000e100 	.word	0xe000e100

08006638 <__NVIC_SetPriority>:
 8006638:	b480      	push	{r7}
 800663a:	b083      	sub	sp, #12
 800663c:	af00      	add	r7, sp, #0
 800663e:	4603      	mov	r3, r0
 8006640:	6039      	str	r1, [r7, #0]
 8006642:	71fb      	strb	r3, [r7, #7]
 8006644:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006648:	2b00      	cmp	r3, #0
 800664a:	db0a      	blt.n	8006662 <__NVIC_SetPriority+0x2a>
 800664c:	683b      	ldr	r3, [r7, #0]
 800664e:	b2da      	uxtb	r2, r3
 8006650:	490c      	ldr	r1, [pc, #48]	; (8006684 <__NVIC_SetPriority+0x4c>)
 8006652:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006656:	0112      	lsls	r2, r2, #4
 8006658:	b2d2      	uxtb	r2, r2
 800665a:	440b      	add	r3, r1
 800665c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8006660:	e00a      	b.n	8006678 <__NVIC_SetPriority+0x40>
 8006662:	683b      	ldr	r3, [r7, #0]
 8006664:	b2da      	uxtb	r2, r3
 8006666:	4908      	ldr	r1, [pc, #32]	; (8006688 <__NVIC_SetPriority+0x50>)
 8006668:	79fb      	ldrb	r3, [r7, #7]
 800666a:	f003 030f 	and.w	r3, r3, #15
 800666e:	3b04      	subs	r3, #4
 8006670:	0112      	lsls	r2, r2, #4
 8006672:	b2d2      	uxtb	r2, r2
 8006674:	440b      	add	r3, r1
 8006676:	761a      	strb	r2, [r3, #24]
 8006678:	bf00      	nop
 800667a:	370c      	adds	r7, #12
 800667c:	46bd      	mov	sp, r7
 800667e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006682:	4770      	bx	lr
 8006684:	e000e100 	.word	0xe000e100
 8006688:	e000ed00 	.word	0xe000ed00

0800668c <NVIC_EncodePriority>:
 800668c:	b480      	push	{r7}
 800668e:	b089      	sub	sp, #36	; 0x24
 8006690:	af00      	add	r7, sp, #0
 8006692:	60f8      	str	r0, [r7, #12]
 8006694:	60b9      	str	r1, [r7, #8]
 8006696:	607a      	str	r2, [r7, #4]
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	f003 0307 	and.w	r3, r3, #7
 800669e:	61fb      	str	r3, [r7, #28]
 80066a0:	69fb      	ldr	r3, [r7, #28]
 80066a2:	f1c3 0307 	rsb	r3, r3, #7
 80066a6:	2b04      	cmp	r3, #4
 80066a8:	bf28      	it	cs
 80066aa:	2304      	movcs	r3, #4
 80066ac:	61bb      	str	r3, [r7, #24]
 80066ae:	69fb      	ldr	r3, [r7, #28]
 80066b0:	3304      	adds	r3, #4
 80066b2:	2b06      	cmp	r3, #6
 80066b4:	d902      	bls.n	80066bc <NVIC_EncodePriority+0x30>
 80066b6:	69fb      	ldr	r3, [r7, #28]
 80066b8:	3b03      	subs	r3, #3
 80066ba:	e000      	b.n	80066be <NVIC_EncodePriority+0x32>
 80066bc:	2300      	movs	r3, #0
 80066be:	617b      	str	r3, [r7, #20]
 80066c0:	f04f 32ff 	mov.w	r2, #4294967295
 80066c4:	69bb      	ldr	r3, [r7, #24]
 80066c6:	fa02 f303 	lsl.w	r3, r2, r3
 80066ca:	43da      	mvns	r2, r3
 80066cc:	68bb      	ldr	r3, [r7, #8]
 80066ce:	401a      	ands	r2, r3
 80066d0:	697b      	ldr	r3, [r7, #20]
 80066d2:	409a      	lsls	r2, r3
 80066d4:	f04f 31ff 	mov.w	r1, #4294967295
 80066d8:	697b      	ldr	r3, [r7, #20]
 80066da:	fa01 f303 	lsl.w	r3, r1, r3
 80066de:	43d9      	mvns	r1, r3
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	400b      	ands	r3, r1
 80066e4:	4313      	orrs	r3, r2
 80066e6:	4618      	mov	r0, r3
 80066e8:	3724      	adds	r7, #36	; 0x24
 80066ea:	46bd      	mov	sp, r7
 80066ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066f0:	4770      	bx	lr
	...

080066f4 <SysTick_Config>:
 80066f4:	b580      	push	{r7, lr}
 80066f6:	b082      	sub	sp, #8
 80066f8:	af00      	add	r7, sp, #0
 80066fa:	6078      	str	r0, [r7, #4]
 80066fc:	687b      	ldr	r3, [r7, #4]
 80066fe:	3b01      	subs	r3, #1
 8006700:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8006704:	d301      	bcc.n	800670a <SysTick_Config+0x16>
 8006706:	2301      	movs	r3, #1
 8006708:	e00f      	b.n	800672a <SysTick_Config+0x36>
 800670a:	4a0a      	ldr	r2, [pc, #40]	; (8006734 <SysTick_Config+0x40>)
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	3b01      	subs	r3, #1
 8006710:	6053      	str	r3, [r2, #4]
 8006712:	210f      	movs	r1, #15
 8006714:	f04f 30ff 	mov.w	r0, #4294967295
 8006718:	f7ff ff8e 	bl	8006638 <__NVIC_SetPriority>
 800671c:	4b05      	ldr	r3, [pc, #20]	; (8006734 <SysTick_Config+0x40>)
 800671e:	2200      	movs	r2, #0
 8006720:	609a      	str	r2, [r3, #8]
 8006722:	4b04      	ldr	r3, [pc, #16]	; (8006734 <SysTick_Config+0x40>)
 8006724:	2207      	movs	r2, #7
 8006726:	601a      	str	r2, [r3, #0]
 8006728:	2300      	movs	r3, #0
 800672a:	4618      	mov	r0, r3
 800672c:	3708      	adds	r7, #8
 800672e:	46bd      	mov	sp, r7
 8006730:	bd80      	pop	{r7, pc}
 8006732:	bf00      	nop
 8006734:	e000e010 	.word	0xe000e010

08006738 <HAL_NVIC_SetPriorityGrouping>:
 8006738:	b580      	push	{r7, lr}
 800673a:	b082      	sub	sp, #8
 800673c:	af00      	add	r7, sp, #0
 800673e:	6078      	str	r0, [r7, #4]
 8006740:	6878      	ldr	r0, [r7, #4]
 8006742:	f7ff ff29 	bl	8006598 <__NVIC_SetPriorityGrouping>
 8006746:	bf00      	nop
 8006748:	3708      	adds	r7, #8
 800674a:	46bd      	mov	sp, r7
 800674c:	bd80      	pop	{r7, pc}

0800674e <HAL_NVIC_SetPriority>:
 800674e:	b580      	push	{r7, lr}
 8006750:	b086      	sub	sp, #24
 8006752:	af00      	add	r7, sp, #0
 8006754:	4603      	mov	r3, r0
 8006756:	60b9      	str	r1, [r7, #8]
 8006758:	607a      	str	r2, [r7, #4]
 800675a:	73fb      	strb	r3, [r7, #15]
 800675c:	f7ff ff40 	bl	80065e0 <__NVIC_GetPriorityGrouping>
 8006760:	6178      	str	r0, [r7, #20]
 8006762:	687a      	ldr	r2, [r7, #4]
 8006764:	68b9      	ldr	r1, [r7, #8]
 8006766:	6978      	ldr	r0, [r7, #20]
 8006768:	f7ff ff90 	bl	800668c <NVIC_EncodePriority>
 800676c:	4602      	mov	r2, r0
 800676e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8006772:	4611      	mov	r1, r2
 8006774:	4618      	mov	r0, r3
 8006776:	f7ff ff5f 	bl	8006638 <__NVIC_SetPriority>
 800677a:	bf00      	nop
 800677c:	3718      	adds	r7, #24
 800677e:	46bd      	mov	sp, r7
 8006780:	bd80      	pop	{r7, pc}

08006782 <HAL_NVIC_EnableIRQ>:
 8006782:	b580      	push	{r7, lr}
 8006784:	b082      	sub	sp, #8
 8006786:	af00      	add	r7, sp, #0
 8006788:	4603      	mov	r3, r0
 800678a:	71fb      	strb	r3, [r7, #7]
 800678c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8006790:	4618      	mov	r0, r3
 8006792:	f7ff ff33 	bl	80065fc <__NVIC_EnableIRQ>
 8006796:	bf00      	nop
 8006798:	3708      	adds	r7, #8
 800679a:	46bd      	mov	sp, r7
 800679c:	bd80      	pop	{r7, pc}

0800679e <HAL_SYSTICK_Config>:
 800679e:	b580      	push	{r7, lr}
 80067a0:	b082      	sub	sp, #8
 80067a2:	af00      	add	r7, sp, #0
 80067a4:	6078      	str	r0, [r7, #4]
 80067a6:	6878      	ldr	r0, [r7, #4]
 80067a8:	f7ff ffa4 	bl	80066f4 <SysTick_Config>
 80067ac:	4603      	mov	r3, r0
 80067ae:	4618      	mov	r0, r3
 80067b0:	3708      	adds	r7, #8
 80067b2:	46bd      	mov	sp, r7
 80067b4:	bd80      	pop	{r7, pc}
	...

080067b8 <HAL_DMA_Init>:
 80067b8:	b580      	push	{r7, lr}
 80067ba:	b084      	sub	sp, #16
 80067bc:	af00      	add	r7, sp, #0
 80067be:	6078      	str	r0, [r7, #4]
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d101      	bne.n	80067ca <HAL_DMA_Init+0x12>
 80067c6:	2301      	movs	r3, #1
 80067c8:	e08e      	b.n	80068e8 <HAL_DMA_Init+0x130>
 80067ca:	687b      	ldr	r3, [r7, #4]
 80067cc:	681b      	ldr	r3, [r3, #0]
 80067ce:	461a      	mov	r2, r3
 80067d0:	4b47      	ldr	r3, [pc, #284]	; (80068f0 <HAL_DMA_Init+0x138>)
 80067d2:	429a      	cmp	r2, r3
 80067d4:	d80f      	bhi.n	80067f6 <HAL_DMA_Init+0x3e>
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	461a      	mov	r2, r3
 80067dc:	4b45      	ldr	r3, [pc, #276]	; (80068f4 <HAL_DMA_Init+0x13c>)
 80067de:	4413      	add	r3, r2
 80067e0:	4a45      	ldr	r2, [pc, #276]	; (80068f8 <HAL_DMA_Init+0x140>)
 80067e2:	fba2 2303 	umull	r2, r3, r2, r3
 80067e6:	091b      	lsrs	r3, r3, #4
 80067e8:	009a      	lsls	r2, r3, #2
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	645a      	str	r2, [r3, #68]	; 0x44
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	4a42      	ldr	r2, [pc, #264]	; (80068fc <HAL_DMA_Init+0x144>)
 80067f2:	641a      	str	r2, [r3, #64]	; 0x40
 80067f4:	e00e      	b.n	8006814 <HAL_DMA_Init+0x5c>
 80067f6:	687b      	ldr	r3, [r7, #4]
 80067f8:	681b      	ldr	r3, [r3, #0]
 80067fa:	461a      	mov	r2, r3
 80067fc:	4b40      	ldr	r3, [pc, #256]	; (8006900 <HAL_DMA_Init+0x148>)
 80067fe:	4413      	add	r3, r2
 8006800:	4a3d      	ldr	r2, [pc, #244]	; (80068f8 <HAL_DMA_Init+0x140>)
 8006802:	fba2 2303 	umull	r2, r3, r2, r3
 8006806:	091b      	lsrs	r3, r3, #4
 8006808:	009a      	lsls	r2, r3, #2
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	645a      	str	r2, [r3, #68]	; 0x44
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	4a3c      	ldr	r2, [pc, #240]	; (8006904 <HAL_DMA_Init+0x14c>)
 8006812:	641a      	str	r2, [r3, #64]	; 0x40
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	2202      	movs	r2, #2
 8006818:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	681b      	ldr	r3, [r3, #0]
 8006822:	60fb      	str	r3, [r7, #12]
 8006824:	68fb      	ldr	r3, [r7, #12]
 8006826:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 800682a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800682e:	60fb      	str	r3, [r7, #12]
 8006830:	687b      	ldr	r3, [r7, #4]
 8006832:	689a      	ldr	r2, [r3, #8]
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	68db      	ldr	r3, [r3, #12]
 8006838:	431a      	orrs	r2, r3
 800683a:	687b      	ldr	r3, [r7, #4]
 800683c:	691b      	ldr	r3, [r3, #16]
 800683e:	431a      	orrs	r2, r3
 8006840:	687b      	ldr	r3, [r7, #4]
 8006842:	695b      	ldr	r3, [r3, #20]
 8006844:	431a      	orrs	r2, r3
 8006846:	687b      	ldr	r3, [r7, #4]
 8006848:	699b      	ldr	r3, [r3, #24]
 800684a:	431a      	orrs	r2, r3
 800684c:	687b      	ldr	r3, [r7, #4]
 800684e:	69db      	ldr	r3, [r3, #28]
 8006850:	431a      	orrs	r2, r3
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	6a1b      	ldr	r3, [r3, #32]
 8006856:	4313      	orrs	r3, r2
 8006858:	68fa      	ldr	r2, [r7, #12]
 800685a:	4313      	orrs	r3, r2
 800685c:	60fb      	str	r3, [r7, #12]
 800685e:	687b      	ldr	r3, [r7, #4]
 8006860:	681b      	ldr	r3, [r3, #0]
 8006862:	68fa      	ldr	r2, [r7, #12]
 8006864:	601a      	str	r2, [r3, #0]
 8006866:	6878      	ldr	r0, [r7, #4]
 8006868:	f000 fa74 	bl	8006d54 <DMA_CalcDMAMUXChannelBaseAndMask>
 800686c:	687b      	ldr	r3, [r7, #4]
 800686e:	689b      	ldr	r3, [r3, #8]
 8006870:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006874:	d102      	bne.n	800687c <HAL_DMA_Init+0xc4>
 8006876:	687b      	ldr	r3, [r7, #4]
 8006878:	2200      	movs	r2, #0
 800687a:	605a      	str	r2, [r3, #4]
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	685a      	ldr	r2, [r3, #4]
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006884:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8006888:	601a      	str	r2, [r3, #0]
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800688e:	687a      	ldr	r2, [r7, #4]
 8006890:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8006892:	605a      	str	r2, [r3, #4]
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	685b      	ldr	r3, [r3, #4]
 8006898:	2b00      	cmp	r3, #0
 800689a:	d010      	beq.n	80068be <HAL_DMA_Init+0x106>
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	685b      	ldr	r3, [r3, #4]
 80068a0:	2b04      	cmp	r3, #4
 80068a2:	d80c      	bhi.n	80068be <HAL_DMA_Init+0x106>
 80068a4:	6878      	ldr	r0, [r7, #4]
 80068a6:	f000 fa93 	bl	8006dd0 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80068ae:	2200      	movs	r2, #0
 80068b0:	601a      	str	r2, [r3, #0]
 80068b2:	687b      	ldr	r3, [r7, #4]
 80068b4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80068b6:	687a      	ldr	r2, [r7, #4]
 80068b8:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 80068ba:	605a      	str	r2, [r3, #4]
 80068bc:	e008      	b.n	80068d0 <HAL_DMA_Init+0x118>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	2200      	movs	r2, #0
 80068c2:	655a      	str	r2, [r3, #84]	; 0x54
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	2200      	movs	r2, #0
 80068c8:	659a      	str	r2, [r3, #88]	; 0x58
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	2200      	movs	r2, #0
 80068ce:	65da      	str	r2, [r3, #92]	; 0x5c
 80068d0:	687b      	ldr	r3, [r7, #4]
 80068d2:	2200      	movs	r2, #0
 80068d4:	63da      	str	r2, [r3, #60]	; 0x3c
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	2201      	movs	r2, #1
 80068da:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	2200      	movs	r2, #0
 80068e2:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80068e6:	2300      	movs	r3, #0
 80068e8:	4618      	mov	r0, r3
 80068ea:	3710      	adds	r7, #16
 80068ec:	46bd      	mov	sp, r7
 80068ee:	bd80      	pop	{r7, pc}
 80068f0:	40020407 	.word	0x40020407
 80068f4:	bffdfff8 	.word	0xbffdfff8
 80068f8:	cccccccd 	.word	0xcccccccd
 80068fc:	40020000 	.word	0x40020000
 8006900:	bffdfbf8 	.word	0xbffdfbf8
 8006904:	40020400 	.word	0x40020400

08006908 <HAL_DMA_Start_IT>:
 8006908:	b580      	push	{r7, lr}
 800690a:	b086      	sub	sp, #24
 800690c:	af00      	add	r7, sp, #0
 800690e:	60f8      	str	r0, [r7, #12]
 8006910:	60b9      	str	r1, [r7, #8]
 8006912:	607a      	str	r2, [r7, #4]
 8006914:	603b      	str	r3, [r7, #0]
 8006916:	2300      	movs	r3, #0
 8006918:	75fb      	strb	r3, [r7, #23]
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 8006920:	2b01      	cmp	r3, #1
 8006922:	d101      	bne.n	8006928 <HAL_DMA_Start_IT+0x20>
 8006924:	2302      	movs	r3, #2
 8006926:	e066      	b.n	80069f6 <HAL_DMA_Start_IT+0xee>
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	2201      	movs	r2, #1
 800692c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006930:	68fb      	ldr	r3, [r7, #12]
 8006932:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8006936:	b2db      	uxtb	r3, r3
 8006938:	2b01      	cmp	r3, #1
 800693a:	d155      	bne.n	80069e8 <HAL_DMA_Start_IT+0xe0>
 800693c:	68fb      	ldr	r3, [r7, #12]
 800693e:	2202      	movs	r2, #2
 8006940:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	2200      	movs	r2, #0
 8006948:	63da      	str	r2, [r3, #60]	; 0x3c
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	681a      	ldr	r2, [r3, #0]
 8006950:	68fb      	ldr	r3, [r7, #12]
 8006952:	681b      	ldr	r3, [r3, #0]
 8006954:	f022 0201 	bic.w	r2, r2, #1
 8006958:	601a      	str	r2, [r3, #0]
 800695a:	683b      	ldr	r3, [r7, #0]
 800695c:	687a      	ldr	r2, [r7, #4]
 800695e:	68b9      	ldr	r1, [r7, #8]
 8006960:	68f8      	ldr	r0, [r7, #12]
 8006962:	f000 f9b9 	bl	8006cd8 <DMA_SetConfig>
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800696a:	2b00      	cmp	r3, #0
 800696c:	d008      	beq.n	8006980 <HAL_DMA_Start_IT+0x78>
 800696e:	68fb      	ldr	r3, [r7, #12]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	681a      	ldr	r2, [r3, #0]
 8006974:	68fb      	ldr	r3, [r7, #12]
 8006976:	681b      	ldr	r3, [r3, #0]
 8006978:	f042 020e 	orr.w	r2, r2, #14
 800697c:	601a      	str	r2, [r3, #0]
 800697e:	e00f      	b.n	80069a0 <HAL_DMA_Start_IT+0x98>
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	681b      	ldr	r3, [r3, #0]
 8006984:	681a      	ldr	r2, [r3, #0]
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	681b      	ldr	r3, [r3, #0]
 800698a:	f022 0204 	bic.w	r2, r2, #4
 800698e:	601a      	str	r2, [r3, #0]
 8006990:	68fb      	ldr	r3, [r7, #12]
 8006992:	681b      	ldr	r3, [r3, #0]
 8006994:	681a      	ldr	r2, [r3, #0]
 8006996:	68fb      	ldr	r3, [r7, #12]
 8006998:	681b      	ldr	r3, [r3, #0]
 800699a:	f042 020a 	orr.w	r2, r2, #10
 800699e:	601a      	str	r2, [r3, #0]
 80069a0:	68fb      	ldr	r3, [r7, #12]
 80069a2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80069aa:	2b00      	cmp	r3, #0
 80069ac:	d007      	beq.n	80069be <HAL_DMA_Start_IT+0xb6>
 80069ae:	68fb      	ldr	r3, [r7, #12]
 80069b0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069b2:	681a      	ldr	r2, [r3, #0]
 80069b4:	68fb      	ldr	r3, [r7, #12]
 80069b6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80069b8:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80069bc:	601a      	str	r2, [r3, #0]
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d007      	beq.n	80069d6 <HAL_DMA_Start_IT+0xce>
 80069c6:	68fb      	ldr	r3, [r7, #12]
 80069c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80069ca:	681a      	ldr	r2, [r3, #0]
 80069cc:	68fb      	ldr	r3, [r7, #12]
 80069ce:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80069d0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80069d4:	601a      	str	r2, [r3, #0]
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	681a      	ldr	r2, [r3, #0]
 80069dc:	68fb      	ldr	r3, [r7, #12]
 80069de:	681b      	ldr	r3, [r3, #0]
 80069e0:	f042 0201 	orr.w	r2, r2, #1
 80069e4:	601a      	str	r2, [r3, #0]
 80069e6:	e005      	b.n	80069f4 <HAL_DMA_Start_IT+0xec>
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	2200      	movs	r2, #0
 80069ec:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80069f0:	2302      	movs	r3, #2
 80069f2:	75fb      	strb	r3, [r7, #23]
 80069f4:	7dfb      	ldrb	r3, [r7, #23]
 80069f6:	4618      	mov	r0, r3
 80069f8:	3718      	adds	r7, #24
 80069fa:	46bd      	mov	sp, r7
 80069fc:	bd80      	pop	{r7, pc}

080069fe <HAL_DMA_Abort>:
 80069fe:	b480      	push	{r7}
 8006a00:	b083      	sub	sp, #12
 8006a02:	af00      	add	r7, sp, #0
 8006a04:	6078      	str	r0, [r7, #4]
 8006a06:	687b      	ldr	r3, [r7, #4]
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d101      	bne.n	8006a10 <HAL_DMA_Abort+0x12>
 8006a0c:	2301      	movs	r3, #1
 8006a0e:	e04f      	b.n	8006ab0 <HAL_DMA_Abort+0xb2>
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8006a16:	b2db      	uxtb	r3, r3
 8006a18:	2b02      	cmp	r3, #2
 8006a1a:	d008      	beq.n	8006a2e <HAL_DMA_Abort+0x30>
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	2204      	movs	r2, #4
 8006a20:	63da      	str	r2, [r3, #60]	; 0x3c
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	2200      	movs	r2, #0
 8006a26:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006a2a:	2301      	movs	r3, #1
 8006a2c:	e040      	b.n	8006ab0 <HAL_DMA_Abort+0xb2>
 8006a2e:	687b      	ldr	r3, [r7, #4]
 8006a30:	681b      	ldr	r3, [r3, #0]
 8006a32:	681a      	ldr	r2, [r3, #0]
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	681b      	ldr	r3, [r3, #0]
 8006a38:	f022 020e 	bic.w	r2, r2, #14
 8006a3c:	601a      	str	r2, [r3, #0]
 8006a3e:	687b      	ldr	r3, [r7, #4]
 8006a40:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006a42:	681a      	ldr	r2, [r3, #0]
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006a48:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006a4c:	601a      	str	r2, [r3, #0]
 8006a4e:	687b      	ldr	r3, [r7, #4]
 8006a50:	681b      	ldr	r3, [r3, #0]
 8006a52:	681a      	ldr	r2, [r3, #0]
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	681b      	ldr	r3, [r3, #0]
 8006a58:	f022 0201 	bic.w	r2, r2, #1
 8006a5c:	601a      	str	r2, [r3, #0]
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006a62:	f003 021c 	and.w	r2, r3, #28
 8006a66:	687b      	ldr	r3, [r7, #4]
 8006a68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a6a:	2101      	movs	r1, #1
 8006a6c:	fa01 f202 	lsl.w	r2, r1, r2
 8006a70:	605a      	str	r2, [r3, #4]
 8006a72:	687b      	ldr	r3, [r7, #4]
 8006a74:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a76:	687a      	ldr	r2, [r7, #4]
 8006a78:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8006a7a:	605a      	str	r2, [r3, #4]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d00c      	beq.n	8006a9e <HAL_DMA_Abort+0xa0>
 8006a84:	687b      	ldr	r3, [r7, #4]
 8006a86:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a88:	681a      	ldr	r2, [r3, #0]
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a8e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006a92:	601a      	str	r2, [r3, #0]
 8006a94:	687b      	ldr	r3, [r7, #4]
 8006a96:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006a98:	687a      	ldr	r2, [r7, #4]
 8006a9a:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8006a9c:	605a      	str	r2, [r3, #4]
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	2201      	movs	r2, #1
 8006aa2:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	2200      	movs	r2, #0
 8006aaa:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006aae:	2300      	movs	r3, #0
 8006ab0:	4618      	mov	r0, r3
 8006ab2:	370c      	adds	r7, #12
 8006ab4:	46bd      	mov	sp, r7
 8006ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006aba:	4770      	bx	lr

08006abc <HAL_DMA_Abort_IT>:
 8006abc:	b580      	push	{r7, lr}
 8006abe:	b084      	sub	sp, #16
 8006ac0:	af00      	add	r7, sp, #0
 8006ac2:	6078      	str	r0, [r7, #4]
 8006ac4:	2300      	movs	r3, #0
 8006ac6:	73fb      	strb	r3, [r7, #15]
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8006ace:	b2db      	uxtb	r3, r3
 8006ad0:	2b02      	cmp	r3, #2
 8006ad2:	d005      	beq.n	8006ae0 <HAL_DMA_Abort_IT+0x24>
 8006ad4:	687b      	ldr	r3, [r7, #4]
 8006ad6:	2204      	movs	r2, #4
 8006ad8:	63da      	str	r2, [r3, #60]	; 0x3c
 8006ada:	2301      	movs	r3, #1
 8006adc:	73fb      	strb	r3, [r7, #15]
 8006ade:	e047      	b.n	8006b70 <HAL_DMA_Abort_IT+0xb4>
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	681a      	ldr	r2, [r3, #0]
 8006ae6:	687b      	ldr	r3, [r7, #4]
 8006ae8:	681b      	ldr	r3, [r3, #0]
 8006aea:	f022 020e 	bic.w	r2, r2, #14
 8006aee:	601a      	str	r2, [r3, #0]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	681a      	ldr	r2, [r3, #0]
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	f022 0201 	bic.w	r2, r2, #1
 8006afe:	601a      	str	r2, [r3, #0]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006b04:	681a      	ldr	r2, [r3, #0]
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006b0a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006b0e:	601a      	str	r2, [r3, #0]
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b14:	f003 021c 	and.w	r2, r3, #28
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b1c:	2101      	movs	r1, #1
 8006b1e:	fa01 f202 	lsl.w	r2, r1, r2
 8006b22:	605a      	str	r2, [r3, #4]
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006b28:	687a      	ldr	r2, [r7, #4]
 8006b2a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8006b2c:	605a      	str	r2, [r3, #4]
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b32:	2b00      	cmp	r3, #0
 8006b34:	d00c      	beq.n	8006b50 <HAL_DMA_Abort_IT+0x94>
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b3a:	681a      	ldr	r2, [r3, #0]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006b40:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006b44:	601a      	str	r2, [r3, #0]
 8006b46:	687b      	ldr	r3, [r7, #4]
 8006b48:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006b4a:	687a      	ldr	r2, [r7, #4]
 8006b4c:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8006b4e:	605a      	str	r2, [r3, #4]
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	2201      	movs	r2, #1
 8006b54:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8006b58:	687b      	ldr	r3, [r7, #4]
 8006b5a:	2200      	movs	r2, #0
 8006b5c:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006b60:	687b      	ldr	r3, [r7, #4]
 8006b62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b64:	2b00      	cmp	r3, #0
 8006b66:	d003      	beq.n	8006b70 <HAL_DMA_Abort_IT+0xb4>
 8006b68:	687b      	ldr	r3, [r7, #4]
 8006b6a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8006b6c:	6878      	ldr	r0, [r7, #4]
 8006b6e:	4798      	blx	r3
 8006b70:	7bfb      	ldrb	r3, [r7, #15]
 8006b72:	4618      	mov	r0, r3
 8006b74:	3710      	adds	r7, #16
 8006b76:	46bd      	mov	sp, r7
 8006b78:	bd80      	pop	{r7, pc}

08006b7a <HAL_DMA_IRQHandler>:
 8006b7a:	b580      	push	{r7, lr}
 8006b7c:	b084      	sub	sp, #16
 8006b7e:	af00      	add	r7, sp, #0
 8006b80:	6078      	str	r0, [r7, #4]
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	60fb      	str	r3, [r7, #12]
 8006b8a:	687b      	ldr	r3, [r7, #4]
 8006b8c:	681b      	ldr	r3, [r3, #0]
 8006b8e:	681b      	ldr	r3, [r3, #0]
 8006b90:	60bb      	str	r3, [r7, #8]
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b96:	f003 031c 	and.w	r3, r3, #28
 8006b9a:	2204      	movs	r2, #4
 8006b9c:	409a      	lsls	r2, r3
 8006b9e:	68fb      	ldr	r3, [r7, #12]
 8006ba0:	4013      	ands	r3, r2
 8006ba2:	2b00      	cmp	r3, #0
 8006ba4:	d026      	beq.n	8006bf4 <HAL_DMA_IRQHandler+0x7a>
 8006ba6:	68bb      	ldr	r3, [r7, #8]
 8006ba8:	f003 0304 	and.w	r3, r3, #4
 8006bac:	2b00      	cmp	r3, #0
 8006bae:	d021      	beq.n	8006bf4 <HAL_DMA_IRQHandler+0x7a>
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	f003 0320 	and.w	r3, r3, #32
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d107      	bne.n	8006bce <HAL_DMA_IRQHandler+0x54>
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	681b      	ldr	r3, [r3, #0]
 8006bc2:	681a      	ldr	r2, [r3, #0]
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	681b      	ldr	r3, [r3, #0]
 8006bc8:	f022 0204 	bic.w	r2, r2, #4
 8006bcc:	601a      	str	r2, [r3, #0]
 8006bce:	687b      	ldr	r3, [r7, #4]
 8006bd0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006bd2:	f003 021c 	and.w	r2, r3, #28
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006bda:	2104      	movs	r1, #4
 8006bdc:	fa01 f202 	lsl.w	r2, r1, r2
 8006be0:	605a      	str	r2, [r3, #4]
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006be6:	2b00      	cmp	r3, #0
 8006be8:	d071      	beq.n	8006cce <HAL_DMA_IRQHandler+0x154>
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bee:	6878      	ldr	r0, [r7, #4]
 8006bf0:	4798      	blx	r3
 8006bf2:	e06c      	b.n	8006cce <HAL_DMA_IRQHandler+0x154>
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006bf8:	f003 031c 	and.w	r3, r3, #28
 8006bfc:	2202      	movs	r2, #2
 8006bfe:	409a      	lsls	r2, r3
 8006c00:	68fb      	ldr	r3, [r7, #12]
 8006c02:	4013      	ands	r3, r2
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d02e      	beq.n	8006c66 <HAL_DMA_IRQHandler+0xec>
 8006c08:	68bb      	ldr	r3, [r7, #8]
 8006c0a:	f003 0302 	and.w	r3, r3, #2
 8006c0e:	2b00      	cmp	r3, #0
 8006c10:	d029      	beq.n	8006c66 <HAL_DMA_IRQHandler+0xec>
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	681b      	ldr	r3, [r3, #0]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	f003 0320 	and.w	r3, r3, #32
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d10b      	bne.n	8006c38 <HAL_DMA_IRQHandler+0xbe>
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	681b      	ldr	r3, [r3, #0]
 8006c24:	681a      	ldr	r2, [r3, #0]
 8006c26:	687b      	ldr	r3, [r7, #4]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	f022 020a 	bic.w	r2, r2, #10
 8006c2e:	601a      	str	r2, [r3, #0]
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	2201      	movs	r2, #1
 8006c34:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8006c38:	687b      	ldr	r3, [r7, #4]
 8006c3a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c3c:	f003 021c 	and.w	r2, r3, #28
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c44:	2102      	movs	r1, #2
 8006c46:	fa01 f202 	lsl.w	r2, r1, r2
 8006c4a:	605a      	str	r2, [r3, #4]
 8006c4c:	687b      	ldr	r3, [r7, #4]
 8006c4e:	2200      	movs	r2, #0
 8006c50:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006c54:	687b      	ldr	r3, [r7, #4]
 8006c56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c58:	2b00      	cmp	r3, #0
 8006c5a:	d038      	beq.n	8006cce <HAL_DMA_IRQHandler+0x154>
 8006c5c:	687b      	ldr	r3, [r7, #4]
 8006c5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8006c60:	6878      	ldr	r0, [r7, #4]
 8006c62:	4798      	blx	r3
 8006c64:	e033      	b.n	8006cce <HAL_DMA_IRQHandler+0x154>
 8006c66:	687b      	ldr	r3, [r7, #4]
 8006c68:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c6a:	f003 031c 	and.w	r3, r3, #28
 8006c6e:	2208      	movs	r2, #8
 8006c70:	409a      	lsls	r2, r3
 8006c72:	68fb      	ldr	r3, [r7, #12]
 8006c74:	4013      	ands	r3, r2
 8006c76:	2b00      	cmp	r3, #0
 8006c78:	d02a      	beq.n	8006cd0 <HAL_DMA_IRQHandler+0x156>
 8006c7a:	68bb      	ldr	r3, [r7, #8]
 8006c7c:	f003 0308 	and.w	r3, r3, #8
 8006c80:	2b00      	cmp	r3, #0
 8006c82:	d025      	beq.n	8006cd0 <HAL_DMA_IRQHandler+0x156>
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	681b      	ldr	r3, [r3, #0]
 8006c88:	681a      	ldr	r2, [r3, #0]
 8006c8a:	687b      	ldr	r3, [r7, #4]
 8006c8c:	681b      	ldr	r3, [r3, #0]
 8006c8e:	f022 020e 	bic.w	r2, r2, #14
 8006c92:	601a      	str	r2, [r3, #0]
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c98:	f003 021c 	and.w	r2, r3, #28
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ca0:	2101      	movs	r1, #1
 8006ca2:	fa01 f202 	lsl.w	r2, r1, r2
 8006ca6:	605a      	str	r2, [r3, #4]
 8006ca8:	687b      	ldr	r3, [r7, #4]
 8006caa:	2201      	movs	r2, #1
 8006cac:	63da      	str	r2, [r3, #60]	; 0x3c
 8006cae:	687b      	ldr	r3, [r7, #4]
 8006cb0:	2201      	movs	r2, #1
 8006cb2:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
 8006cb6:	687b      	ldr	r3, [r7, #4]
 8006cb8:	2200      	movs	r2, #0
 8006cba:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8006cbe:	687b      	ldr	r3, [r7, #4]
 8006cc0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006cc2:	2b00      	cmp	r3, #0
 8006cc4:	d004      	beq.n	8006cd0 <HAL_DMA_IRQHandler+0x156>
 8006cc6:	687b      	ldr	r3, [r7, #4]
 8006cc8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8006cca:	6878      	ldr	r0, [r7, #4]
 8006ccc:	4798      	blx	r3
 8006cce:	bf00      	nop
 8006cd0:	bf00      	nop
 8006cd2:	3710      	adds	r7, #16
 8006cd4:	46bd      	mov	sp, r7
 8006cd6:	bd80      	pop	{r7, pc}

08006cd8 <DMA_SetConfig>:
 8006cd8:	b480      	push	{r7}
 8006cda:	b085      	sub	sp, #20
 8006cdc:	af00      	add	r7, sp, #0
 8006cde:	60f8      	str	r0, [r7, #12]
 8006ce0:	60b9      	str	r1, [r7, #8]
 8006ce2:	607a      	str	r2, [r7, #4]
 8006ce4:	603b      	str	r3, [r7, #0]
 8006ce6:	68fb      	ldr	r3, [r7, #12]
 8006ce8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006cea:	68fa      	ldr	r2, [r7, #12]
 8006cec:	6d12      	ldr	r2, [r2, #80]	; 0x50
 8006cee:	605a      	str	r2, [r3, #4]
 8006cf0:	68fb      	ldr	r3, [r7, #12]
 8006cf2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006cf4:	2b00      	cmp	r3, #0
 8006cf6:	d004      	beq.n	8006d02 <DMA_SetConfig+0x2a>
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006cfc:	68fa      	ldr	r2, [r7, #12]
 8006cfe:	6dd2      	ldr	r2, [r2, #92]	; 0x5c
 8006d00:	605a      	str	r2, [r3, #4]
 8006d02:	68fb      	ldr	r3, [r7, #12]
 8006d04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d06:	f003 021c 	and.w	r2, r3, #28
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d0e:	2101      	movs	r1, #1
 8006d10:	fa01 f202 	lsl.w	r2, r1, r2
 8006d14:	605a      	str	r2, [r3, #4]
 8006d16:	68fb      	ldr	r3, [r7, #12]
 8006d18:	681b      	ldr	r3, [r3, #0]
 8006d1a:	683a      	ldr	r2, [r7, #0]
 8006d1c:	605a      	str	r2, [r3, #4]
 8006d1e:	68fb      	ldr	r3, [r7, #12]
 8006d20:	689b      	ldr	r3, [r3, #8]
 8006d22:	2b10      	cmp	r3, #16
 8006d24:	d108      	bne.n	8006d38 <DMA_SetConfig+0x60>
 8006d26:	68fb      	ldr	r3, [r7, #12]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	687a      	ldr	r2, [r7, #4]
 8006d2c:	609a      	str	r2, [r3, #8]
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	681b      	ldr	r3, [r3, #0]
 8006d32:	68ba      	ldr	r2, [r7, #8]
 8006d34:	60da      	str	r2, [r3, #12]
 8006d36:	e007      	b.n	8006d48 <DMA_SetConfig+0x70>
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	681b      	ldr	r3, [r3, #0]
 8006d3c:	68ba      	ldr	r2, [r7, #8]
 8006d3e:	609a      	str	r2, [r3, #8]
 8006d40:	68fb      	ldr	r3, [r7, #12]
 8006d42:	681b      	ldr	r3, [r3, #0]
 8006d44:	687a      	ldr	r2, [r7, #4]
 8006d46:	60da      	str	r2, [r3, #12]
 8006d48:	bf00      	nop
 8006d4a:	3714      	adds	r7, #20
 8006d4c:	46bd      	mov	sp, r7
 8006d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d52:	4770      	bx	lr

08006d54 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8006d54:	b480      	push	{r7}
 8006d56:	b085      	sub	sp, #20
 8006d58:	af00      	add	r7, sp, #0
 8006d5a:	6078      	str	r0, [r7, #4]
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	681b      	ldr	r3, [r3, #0]
 8006d60:	461a      	mov	r2, r3
 8006d62:	4b17      	ldr	r3, [pc, #92]	; (8006dc0 <DMA_CalcDMAMUXChannelBaseAndMask+0x6c>)
 8006d64:	429a      	cmp	r2, r3
 8006d66:	d80a      	bhi.n	8006d7e <DMA_CalcDMAMUXChannelBaseAndMask+0x2a>
 8006d68:	687b      	ldr	r3, [r7, #4]
 8006d6a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d6c:	089b      	lsrs	r3, r3, #2
 8006d6e:	009b      	lsls	r3, r3, #2
 8006d70:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8006d74:	f503 3302 	add.w	r3, r3, #133120	; 0x20800
 8006d78:	687a      	ldr	r2, [r7, #4]
 8006d7a:	6493      	str	r3, [r2, #72]	; 0x48
 8006d7c:	e007      	b.n	8006d8e <DMA_CalcDMAMUXChannelBaseAndMask+0x3a>
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006d82:	089b      	lsrs	r3, r3, #2
 8006d84:	009a      	lsls	r2, r3, #2
 8006d86:	4b0f      	ldr	r3, [pc, #60]	; (8006dc4 <DMA_CalcDMAMUXChannelBaseAndMask+0x70>)
 8006d88:	4413      	add	r3, r2
 8006d8a:	687a      	ldr	r2, [r7, #4]
 8006d8c:	6493      	str	r3, [r2, #72]	; 0x48
 8006d8e:	687b      	ldr	r3, [r7, #4]
 8006d90:	681b      	ldr	r3, [r3, #0]
 8006d92:	b2db      	uxtb	r3, r3
 8006d94:	3b08      	subs	r3, #8
 8006d96:	4a0c      	ldr	r2, [pc, #48]	; (8006dc8 <DMA_CalcDMAMUXChannelBaseAndMask+0x74>)
 8006d98:	fba2 2303 	umull	r2, r3, r2, r3
 8006d9c:	091b      	lsrs	r3, r3, #4
 8006d9e:	60fb      	str	r3, [r7, #12]
 8006da0:	687b      	ldr	r3, [r7, #4]
 8006da2:	4a0a      	ldr	r2, [pc, #40]	; (8006dcc <DMA_CalcDMAMUXChannelBaseAndMask+0x78>)
 8006da4:	64da      	str	r2, [r3, #76]	; 0x4c
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	f003 031f 	and.w	r3, r3, #31
 8006dac:	2201      	movs	r2, #1
 8006dae:	409a      	lsls	r2, r3
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	651a      	str	r2, [r3, #80]	; 0x50
 8006db4:	bf00      	nop
 8006db6:	3714      	adds	r7, #20
 8006db8:	46bd      	mov	sp, r7
 8006dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dbe:	4770      	bx	lr
 8006dc0:	40020407 	.word	0x40020407
 8006dc4:	4002081c 	.word	0x4002081c
 8006dc8:	cccccccd 	.word	0xcccccccd
 8006dcc:	40020880 	.word	0x40020880

08006dd0 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8006dd0:	b480      	push	{r7}
 8006dd2:	b085      	sub	sp, #20
 8006dd4:	af00      	add	r7, sp, #0
 8006dd6:	6078      	str	r0, [r7, #4]
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	685b      	ldr	r3, [r3, #4]
 8006ddc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8006de0:	60fb      	str	r3, [r7, #12]
 8006de2:	68fa      	ldr	r2, [r7, #12]
 8006de4:	4b0b      	ldr	r3, [pc, #44]	; (8006e14 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>)
 8006de6:	4413      	add	r3, r2
 8006de8:	009b      	lsls	r3, r3, #2
 8006dea:	461a      	mov	r2, r3
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	655a      	str	r2, [r3, #84]	; 0x54
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	4a09      	ldr	r2, [pc, #36]	; (8006e18 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x48>)
 8006df4:	659a      	str	r2, [r3, #88]	; 0x58
 8006df6:	68fb      	ldr	r3, [r7, #12]
 8006df8:	3b01      	subs	r3, #1
 8006dfa:	f003 0303 	and.w	r3, r3, #3
 8006dfe:	2201      	movs	r2, #1
 8006e00:	409a      	lsls	r2, r3
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	65da      	str	r2, [r3, #92]	; 0x5c
 8006e06:	bf00      	nop
 8006e08:	3714      	adds	r7, #20
 8006e0a:	46bd      	mov	sp, r7
 8006e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e10:	4770      	bx	lr
 8006e12:	bf00      	nop
 8006e14:	1000823f 	.word	0x1000823f
 8006e18:	40020940 	.word	0x40020940

08006e1c <HAL_GPIO_Init>:
 8006e1c:	b480      	push	{r7}
 8006e1e:	b087      	sub	sp, #28
 8006e20:	af00      	add	r7, sp, #0
 8006e22:	6078      	str	r0, [r7, #4]
 8006e24:	6039      	str	r1, [r7, #0]
 8006e26:	2300      	movs	r3, #0
 8006e28:	617b      	str	r3, [r7, #20]
 8006e2a:	e14c      	b.n	80070c6 <HAL_GPIO_Init+0x2aa>
 8006e2c:	683b      	ldr	r3, [r7, #0]
 8006e2e:	681a      	ldr	r2, [r3, #0]
 8006e30:	2101      	movs	r1, #1
 8006e32:	697b      	ldr	r3, [r7, #20]
 8006e34:	fa01 f303 	lsl.w	r3, r1, r3
 8006e38:	4013      	ands	r3, r2
 8006e3a:	60fb      	str	r3, [r7, #12]
 8006e3c:	68fb      	ldr	r3, [r7, #12]
 8006e3e:	2b00      	cmp	r3, #0
 8006e40:	f000 813e 	beq.w	80070c0 <HAL_GPIO_Init+0x2a4>
 8006e44:	683b      	ldr	r3, [r7, #0]
 8006e46:	685b      	ldr	r3, [r3, #4]
 8006e48:	f003 0303 	and.w	r3, r3, #3
 8006e4c:	2b01      	cmp	r3, #1
 8006e4e:	d005      	beq.n	8006e5c <HAL_GPIO_Init+0x40>
 8006e50:	683b      	ldr	r3, [r7, #0]
 8006e52:	685b      	ldr	r3, [r3, #4]
 8006e54:	f003 0303 	and.w	r3, r3, #3
 8006e58:	2b02      	cmp	r3, #2
 8006e5a:	d130      	bne.n	8006ebe <HAL_GPIO_Init+0xa2>
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	689b      	ldr	r3, [r3, #8]
 8006e60:	613b      	str	r3, [r7, #16]
 8006e62:	697b      	ldr	r3, [r7, #20]
 8006e64:	005b      	lsls	r3, r3, #1
 8006e66:	2203      	movs	r2, #3
 8006e68:	fa02 f303 	lsl.w	r3, r2, r3
 8006e6c:	43db      	mvns	r3, r3
 8006e6e:	693a      	ldr	r2, [r7, #16]
 8006e70:	4013      	ands	r3, r2
 8006e72:	613b      	str	r3, [r7, #16]
 8006e74:	683b      	ldr	r3, [r7, #0]
 8006e76:	68da      	ldr	r2, [r3, #12]
 8006e78:	697b      	ldr	r3, [r7, #20]
 8006e7a:	005b      	lsls	r3, r3, #1
 8006e7c:	fa02 f303 	lsl.w	r3, r2, r3
 8006e80:	693a      	ldr	r2, [r7, #16]
 8006e82:	4313      	orrs	r3, r2
 8006e84:	613b      	str	r3, [r7, #16]
 8006e86:	687b      	ldr	r3, [r7, #4]
 8006e88:	693a      	ldr	r2, [r7, #16]
 8006e8a:	609a      	str	r2, [r3, #8]
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	685b      	ldr	r3, [r3, #4]
 8006e90:	613b      	str	r3, [r7, #16]
 8006e92:	2201      	movs	r2, #1
 8006e94:	697b      	ldr	r3, [r7, #20]
 8006e96:	fa02 f303 	lsl.w	r3, r2, r3
 8006e9a:	43db      	mvns	r3, r3
 8006e9c:	693a      	ldr	r2, [r7, #16]
 8006e9e:	4013      	ands	r3, r2
 8006ea0:	613b      	str	r3, [r7, #16]
 8006ea2:	683b      	ldr	r3, [r7, #0]
 8006ea4:	685b      	ldr	r3, [r3, #4]
 8006ea6:	091b      	lsrs	r3, r3, #4
 8006ea8:	f003 0201 	and.w	r2, r3, #1
 8006eac:	697b      	ldr	r3, [r7, #20]
 8006eae:	fa02 f303 	lsl.w	r3, r2, r3
 8006eb2:	693a      	ldr	r2, [r7, #16]
 8006eb4:	4313      	orrs	r3, r2
 8006eb6:	613b      	str	r3, [r7, #16]
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	693a      	ldr	r2, [r7, #16]
 8006ebc:	605a      	str	r2, [r3, #4]
 8006ebe:	683b      	ldr	r3, [r7, #0]
 8006ec0:	685b      	ldr	r3, [r3, #4]
 8006ec2:	f003 0303 	and.w	r3, r3, #3
 8006ec6:	2b03      	cmp	r3, #3
 8006ec8:	d017      	beq.n	8006efa <HAL_GPIO_Init+0xde>
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	68db      	ldr	r3, [r3, #12]
 8006ece:	613b      	str	r3, [r7, #16]
 8006ed0:	697b      	ldr	r3, [r7, #20]
 8006ed2:	005b      	lsls	r3, r3, #1
 8006ed4:	2203      	movs	r2, #3
 8006ed6:	fa02 f303 	lsl.w	r3, r2, r3
 8006eda:	43db      	mvns	r3, r3
 8006edc:	693a      	ldr	r2, [r7, #16]
 8006ede:	4013      	ands	r3, r2
 8006ee0:	613b      	str	r3, [r7, #16]
 8006ee2:	683b      	ldr	r3, [r7, #0]
 8006ee4:	689a      	ldr	r2, [r3, #8]
 8006ee6:	697b      	ldr	r3, [r7, #20]
 8006ee8:	005b      	lsls	r3, r3, #1
 8006eea:	fa02 f303 	lsl.w	r3, r2, r3
 8006eee:	693a      	ldr	r2, [r7, #16]
 8006ef0:	4313      	orrs	r3, r2
 8006ef2:	613b      	str	r3, [r7, #16]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	693a      	ldr	r2, [r7, #16]
 8006ef8:	60da      	str	r2, [r3, #12]
 8006efa:	683b      	ldr	r3, [r7, #0]
 8006efc:	685b      	ldr	r3, [r3, #4]
 8006efe:	f003 0303 	and.w	r3, r3, #3
 8006f02:	2b02      	cmp	r3, #2
 8006f04:	d123      	bne.n	8006f4e <HAL_GPIO_Init+0x132>
 8006f06:	697b      	ldr	r3, [r7, #20]
 8006f08:	08da      	lsrs	r2, r3, #3
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	3208      	adds	r2, #8
 8006f0e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8006f12:	613b      	str	r3, [r7, #16]
 8006f14:	697b      	ldr	r3, [r7, #20]
 8006f16:	f003 0307 	and.w	r3, r3, #7
 8006f1a:	009b      	lsls	r3, r3, #2
 8006f1c:	220f      	movs	r2, #15
 8006f1e:	fa02 f303 	lsl.w	r3, r2, r3
 8006f22:	43db      	mvns	r3, r3
 8006f24:	693a      	ldr	r2, [r7, #16]
 8006f26:	4013      	ands	r3, r2
 8006f28:	613b      	str	r3, [r7, #16]
 8006f2a:	683b      	ldr	r3, [r7, #0]
 8006f2c:	691a      	ldr	r2, [r3, #16]
 8006f2e:	697b      	ldr	r3, [r7, #20]
 8006f30:	f003 0307 	and.w	r3, r3, #7
 8006f34:	009b      	lsls	r3, r3, #2
 8006f36:	fa02 f303 	lsl.w	r3, r2, r3
 8006f3a:	693a      	ldr	r2, [r7, #16]
 8006f3c:	4313      	orrs	r3, r2
 8006f3e:	613b      	str	r3, [r7, #16]
 8006f40:	697b      	ldr	r3, [r7, #20]
 8006f42:	08da      	lsrs	r2, r3, #3
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	3208      	adds	r2, #8
 8006f48:	6939      	ldr	r1, [r7, #16]
 8006f4a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	613b      	str	r3, [r7, #16]
 8006f54:	697b      	ldr	r3, [r7, #20]
 8006f56:	005b      	lsls	r3, r3, #1
 8006f58:	2203      	movs	r2, #3
 8006f5a:	fa02 f303 	lsl.w	r3, r2, r3
 8006f5e:	43db      	mvns	r3, r3
 8006f60:	693a      	ldr	r2, [r7, #16]
 8006f62:	4013      	ands	r3, r2
 8006f64:	613b      	str	r3, [r7, #16]
 8006f66:	683b      	ldr	r3, [r7, #0]
 8006f68:	685b      	ldr	r3, [r3, #4]
 8006f6a:	f003 0203 	and.w	r2, r3, #3
 8006f6e:	697b      	ldr	r3, [r7, #20]
 8006f70:	005b      	lsls	r3, r3, #1
 8006f72:	fa02 f303 	lsl.w	r3, r2, r3
 8006f76:	693a      	ldr	r2, [r7, #16]
 8006f78:	4313      	orrs	r3, r2
 8006f7a:	613b      	str	r3, [r7, #16]
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	693a      	ldr	r2, [r7, #16]
 8006f80:	601a      	str	r2, [r3, #0]
 8006f82:	683b      	ldr	r3, [r7, #0]
 8006f84:	685b      	ldr	r3, [r3, #4]
 8006f86:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	f000 8098 	beq.w	80070c0 <HAL_GPIO_Init+0x2a4>
 8006f90:	4a54      	ldr	r2, [pc, #336]	; (80070e4 <HAL_GPIO_Init+0x2c8>)
 8006f92:	697b      	ldr	r3, [r7, #20]
 8006f94:	089b      	lsrs	r3, r3, #2
 8006f96:	3302      	adds	r3, #2
 8006f98:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8006f9c:	613b      	str	r3, [r7, #16]
 8006f9e:	697b      	ldr	r3, [r7, #20]
 8006fa0:	f003 0303 	and.w	r3, r3, #3
 8006fa4:	009b      	lsls	r3, r3, #2
 8006fa6:	220f      	movs	r2, #15
 8006fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8006fac:	43db      	mvns	r3, r3
 8006fae:	693a      	ldr	r2, [r7, #16]
 8006fb0:	4013      	ands	r3, r2
 8006fb2:	613b      	str	r3, [r7, #16]
 8006fb4:	687b      	ldr	r3, [r7, #4]
 8006fb6:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 8006fba:	d019      	beq.n	8006ff0 <HAL_GPIO_Init+0x1d4>
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	4a4a      	ldr	r2, [pc, #296]	; (80070e8 <HAL_GPIO_Init+0x2cc>)
 8006fc0:	4293      	cmp	r3, r2
 8006fc2:	d013      	beq.n	8006fec <HAL_GPIO_Init+0x1d0>
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	4a49      	ldr	r2, [pc, #292]	; (80070ec <HAL_GPIO_Init+0x2d0>)
 8006fc8:	4293      	cmp	r3, r2
 8006fca:	d00d      	beq.n	8006fe8 <HAL_GPIO_Init+0x1cc>
 8006fcc:	687b      	ldr	r3, [r7, #4]
 8006fce:	4a48      	ldr	r2, [pc, #288]	; (80070f0 <HAL_GPIO_Init+0x2d4>)
 8006fd0:	4293      	cmp	r3, r2
 8006fd2:	d007      	beq.n	8006fe4 <HAL_GPIO_Init+0x1c8>
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	4a47      	ldr	r2, [pc, #284]	; (80070f4 <HAL_GPIO_Init+0x2d8>)
 8006fd8:	4293      	cmp	r3, r2
 8006fda:	d101      	bne.n	8006fe0 <HAL_GPIO_Init+0x1c4>
 8006fdc:	2304      	movs	r3, #4
 8006fde:	e008      	b.n	8006ff2 <HAL_GPIO_Init+0x1d6>
 8006fe0:	2307      	movs	r3, #7
 8006fe2:	e006      	b.n	8006ff2 <HAL_GPIO_Init+0x1d6>
 8006fe4:	2303      	movs	r3, #3
 8006fe6:	e004      	b.n	8006ff2 <HAL_GPIO_Init+0x1d6>
 8006fe8:	2302      	movs	r3, #2
 8006fea:	e002      	b.n	8006ff2 <HAL_GPIO_Init+0x1d6>
 8006fec:	2301      	movs	r3, #1
 8006fee:	e000      	b.n	8006ff2 <HAL_GPIO_Init+0x1d6>
 8006ff0:	2300      	movs	r3, #0
 8006ff2:	697a      	ldr	r2, [r7, #20]
 8006ff4:	f002 0203 	and.w	r2, r2, #3
 8006ff8:	0092      	lsls	r2, r2, #2
 8006ffa:	4093      	lsls	r3, r2
 8006ffc:	693a      	ldr	r2, [r7, #16]
 8006ffe:	4313      	orrs	r3, r2
 8007000:	613b      	str	r3, [r7, #16]
 8007002:	4938      	ldr	r1, [pc, #224]	; (80070e4 <HAL_GPIO_Init+0x2c8>)
 8007004:	697b      	ldr	r3, [r7, #20]
 8007006:	089b      	lsrs	r3, r3, #2
 8007008:	3302      	adds	r3, #2
 800700a:	693a      	ldr	r2, [r7, #16]
 800700c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007010:	4b39      	ldr	r3, [pc, #228]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 8007012:	681b      	ldr	r3, [r3, #0]
 8007014:	613b      	str	r3, [r7, #16]
 8007016:	68fb      	ldr	r3, [r7, #12]
 8007018:	43db      	mvns	r3, r3
 800701a:	693a      	ldr	r2, [r7, #16]
 800701c:	4013      	ands	r3, r2
 800701e:	613b      	str	r3, [r7, #16]
 8007020:	683b      	ldr	r3, [r7, #0]
 8007022:	685b      	ldr	r3, [r3, #4]
 8007024:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007028:	2b00      	cmp	r3, #0
 800702a:	d003      	beq.n	8007034 <HAL_GPIO_Init+0x218>
 800702c:	693a      	ldr	r2, [r7, #16]
 800702e:	68fb      	ldr	r3, [r7, #12]
 8007030:	4313      	orrs	r3, r2
 8007032:	613b      	str	r3, [r7, #16]
 8007034:	4a30      	ldr	r2, [pc, #192]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 8007036:	693b      	ldr	r3, [r7, #16]
 8007038:	6013      	str	r3, [r2, #0]
 800703a:	4b2f      	ldr	r3, [pc, #188]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 800703c:	685b      	ldr	r3, [r3, #4]
 800703e:	613b      	str	r3, [r7, #16]
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	43db      	mvns	r3, r3
 8007044:	693a      	ldr	r2, [r7, #16]
 8007046:	4013      	ands	r3, r2
 8007048:	613b      	str	r3, [r7, #16]
 800704a:	683b      	ldr	r3, [r7, #0]
 800704c:	685b      	ldr	r3, [r3, #4]
 800704e:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007052:	2b00      	cmp	r3, #0
 8007054:	d003      	beq.n	800705e <HAL_GPIO_Init+0x242>
 8007056:	693a      	ldr	r2, [r7, #16]
 8007058:	68fb      	ldr	r3, [r7, #12]
 800705a:	4313      	orrs	r3, r2
 800705c:	613b      	str	r3, [r7, #16]
 800705e:	4a26      	ldr	r2, [pc, #152]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 8007060:	693b      	ldr	r3, [r7, #16]
 8007062:	6053      	str	r3, [r2, #4]
 8007064:	4b24      	ldr	r3, [pc, #144]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 8007066:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800706a:	613b      	str	r3, [r7, #16]
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	43db      	mvns	r3, r3
 8007070:	693a      	ldr	r2, [r7, #16]
 8007072:	4013      	ands	r3, r2
 8007074:	613b      	str	r3, [r7, #16]
 8007076:	683b      	ldr	r3, [r7, #0]
 8007078:	685b      	ldr	r3, [r3, #4]
 800707a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800707e:	2b00      	cmp	r3, #0
 8007080:	d003      	beq.n	800708a <HAL_GPIO_Init+0x26e>
 8007082:	693a      	ldr	r2, [r7, #16]
 8007084:	68fb      	ldr	r3, [r7, #12]
 8007086:	4313      	orrs	r3, r2
 8007088:	613b      	str	r3, [r7, #16]
 800708a:	4a1b      	ldr	r2, [pc, #108]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 800708c:	693b      	ldr	r3, [r7, #16]
 800708e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8007092:	4b19      	ldr	r3, [pc, #100]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 8007094:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8007098:	613b      	str	r3, [r7, #16]
 800709a:	68fb      	ldr	r3, [r7, #12]
 800709c:	43db      	mvns	r3, r3
 800709e:	693a      	ldr	r2, [r7, #16]
 80070a0:	4013      	ands	r3, r2
 80070a2:	613b      	str	r3, [r7, #16]
 80070a4:	683b      	ldr	r3, [r7, #0]
 80070a6:	685b      	ldr	r3, [r3, #4]
 80070a8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80070ac:	2b00      	cmp	r3, #0
 80070ae:	d003      	beq.n	80070b8 <HAL_GPIO_Init+0x29c>
 80070b0:	693a      	ldr	r2, [r7, #16]
 80070b2:	68fb      	ldr	r3, [r7, #12]
 80070b4:	4313      	orrs	r3, r2
 80070b6:	613b      	str	r3, [r7, #16]
 80070b8:	4a0f      	ldr	r2, [pc, #60]	; (80070f8 <HAL_GPIO_Init+0x2dc>)
 80070ba:	693b      	ldr	r3, [r7, #16]
 80070bc:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 80070c0:	697b      	ldr	r3, [r7, #20]
 80070c2:	3301      	adds	r3, #1
 80070c4:	617b      	str	r3, [r7, #20]
 80070c6:	683b      	ldr	r3, [r7, #0]
 80070c8:	681a      	ldr	r2, [r3, #0]
 80070ca:	697b      	ldr	r3, [r7, #20]
 80070cc:	fa22 f303 	lsr.w	r3, r2, r3
 80070d0:	2b00      	cmp	r3, #0
 80070d2:	f47f aeab 	bne.w	8006e2c <HAL_GPIO_Init+0x10>
 80070d6:	bf00      	nop
 80070d8:	bf00      	nop
 80070da:	371c      	adds	r7, #28
 80070dc:	46bd      	mov	sp, r7
 80070de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070e2:	4770      	bx	lr
 80070e4:	40010000 	.word	0x40010000
 80070e8:	48000400 	.word	0x48000400
 80070ec:	48000800 	.word	0x48000800
 80070f0:	48000c00 	.word	0x48000c00
 80070f4:	48001000 	.word	0x48001000
 80070f8:	58000800 	.word	0x58000800

080070fc <HAL_GPIO_ReadPin>:
 80070fc:	b480      	push	{r7}
 80070fe:	b085      	sub	sp, #20
 8007100:	af00      	add	r7, sp, #0
 8007102:	6078      	str	r0, [r7, #4]
 8007104:	460b      	mov	r3, r1
 8007106:	807b      	strh	r3, [r7, #2]
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	691a      	ldr	r2, [r3, #16]
 800710c:	887b      	ldrh	r3, [r7, #2]
 800710e:	4013      	ands	r3, r2
 8007110:	2b00      	cmp	r3, #0
 8007112:	d002      	beq.n	800711a <HAL_GPIO_ReadPin+0x1e>
 8007114:	2301      	movs	r3, #1
 8007116:	73fb      	strb	r3, [r7, #15]
 8007118:	e001      	b.n	800711e <HAL_GPIO_ReadPin+0x22>
 800711a:	2300      	movs	r3, #0
 800711c:	73fb      	strb	r3, [r7, #15]
 800711e:	7bfb      	ldrb	r3, [r7, #15]
 8007120:	4618      	mov	r0, r3
 8007122:	3714      	adds	r7, #20
 8007124:	46bd      	mov	sp, r7
 8007126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712a:	4770      	bx	lr

0800712c <HAL_GPIO_WritePin>:
 800712c:	b480      	push	{r7}
 800712e:	b083      	sub	sp, #12
 8007130:	af00      	add	r7, sp, #0
 8007132:	6078      	str	r0, [r7, #4]
 8007134:	460b      	mov	r3, r1
 8007136:	807b      	strh	r3, [r7, #2]
 8007138:	4613      	mov	r3, r2
 800713a:	707b      	strb	r3, [r7, #1]
 800713c:	787b      	ldrb	r3, [r7, #1]
 800713e:	2b00      	cmp	r3, #0
 8007140:	d003      	beq.n	800714a <HAL_GPIO_WritePin+0x1e>
 8007142:	887a      	ldrh	r2, [r7, #2]
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	619a      	str	r2, [r3, #24]
 8007148:	e002      	b.n	8007150 <HAL_GPIO_WritePin+0x24>
 800714a:	887a      	ldrh	r2, [r7, #2]
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	629a      	str	r2, [r3, #40]	; 0x28
 8007150:	bf00      	nop
 8007152:	370c      	adds	r7, #12
 8007154:	46bd      	mov	sp, r7
 8007156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800715a:	4770      	bx	lr

0800715c <HAL_GPIO_TogglePin>:
 800715c:	b480      	push	{r7}
 800715e:	b085      	sub	sp, #20
 8007160:	af00      	add	r7, sp, #0
 8007162:	6078      	str	r0, [r7, #4]
 8007164:	460b      	mov	r3, r1
 8007166:	807b      	strh	r3, [r7, #2]
 8007168:	687b      	ldr	r3, [r7, #4]
 800716a:	695b      	ldr	r3, [r3, #20]
 800716c:	60fb      	str	r3, [r7, #12]
 800716e:	887a      	ldrh	r2, [r7, #2]
 8007170:	68fb      	ldr	r3, [r7, #12]
 8007172:	4013      	ands	r3, r2
 8007174:	041a      	lsls	r2, r3, #16
 8007176:	68fb      	ldr	r3, [r7, #12]
 8007178:	43d9      	mvns	r1, r3
 800717a:	887b      	ldrh	r3, [r7, #2]
 800717c:	400b      	ands	r3, r1
 800717e:	431a      	orrs	r2, r3
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	619a      	str	r2, [r3, #24]
 8007184:	bf00      	nop
 8007186:	3714      	adds	r7, #20
 8007188:	46bd      	mov	sp, r7
 800718a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800718e:	4770      	bx	lr

08007190 <HAL_GPIO_EXTI_IRQHandler>:
 8007190:	b580      	push	{r7, lr}
 8007192:	b082      	sub	sp, #8
 8007194:	af00      	add	r7, sp, #0
 8007196:	4603      	mov	r3, r0
 8007198:	80fb      	strh	r3, [r7, #6]
 800719a:	4b08      	ldr	r3, [pc, #32]	; (80071bc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800719c:	68da      	ldr	r2, [r3, #12]
 800719e:	88fb      	ldrh	r3, [r7, #6]
 80071a0:	4013      	ands	r3, r2
 80071a2:	2b00      	cmp	r3, #0
 80071a4:	d006      	beq.n	80071b4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80071a6:	4a05      	ldr	r2, [pc, #20]	; (80071bc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80071a8:	88fb      	ldrh	r3, [r7, #6]
 80071aa:	60d3      	str	r3, [r2, #12]
 80071ac:	88fb      	ldrh	r3, [r7, #6]
 80071ae:	4618      	mov	r0, r3
 80071b0:	f7fa fcca 	bl	8001b48 <HAL_GPIO_EXTI_Callback>
 80071b4:	bf00      	nop
 80071b6:	3708      	adds	r7, #8
 80071b8:	46bd      	mov	sp, r7
 80071ba:	bd80      	pop	{r7, pc}
 80071bc:	58000800 	.word	0x58000800

080071c0 <HAL_PCD_Init>:
 80071c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80071c2:	b08b      	sub	sp, #44	; 0x2c
 80071c4:	af06      	add	r7, sp, #24
 80071c6:	6078      	str	r0, [r7, #4]
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d101      	bne.n	80071d2 <HAL_PCD_Init+0x12>
 80071ce:	2301      	movs	r3, #1
 80071d0:	e0cb      	b.n	800736a <HAL_PCD_Init+0x1aa>
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	f893 32a9 	ldrb.w	r3, [r3, #681]	; 0x2a9
 80071d8:	b2db      	uxtb	r3, r3
 80071da:	2b00      	cmp	r3, #0
 80071dc:	d106      	bne.n	80071ec <HAL_PCD_Init+0x2c>
 80071de:	687b      	ldr	r3, [r7, #4]
 80071e0:	2200      	movs	r2, #0
 80071e2:	f883 22a8 	strb.w	r2, [r3, #680]	; 0x2a8
 80071e6:	6878      	ldr	r0, [r7, #4]
 80071e8:	f7fd fd5e 	bl	8004ca8 <HAL_PCD_MspInit>
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	2203      	movs	r2, #3
 80071f0:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	4618      	mov	r0, r3
 80071fa:	f003 fb99 	bl	800a930 <USB_DisableGlobalInt>
 80071fe:	2300      	movs	r3, #0
 8007200:	73fb      	strb	r3, [r7, #15]
 8007202:	e040      	b.n	8007286 <HAL_PCD_Init+0xc6>
 8007204:	7bfb      	ldrb	r3, [r7, #15]
 8007206:	6879      	ldr	r1, [r7, #4]
 8007208:	1c5a      	adds	r2, r3, #1
 800720a:	4613      	mov	r3, r2
 800720c:	009b      	lsls	r3, r3, #2
 800720e:	4413      	add	r3, r2
 8007210:	00db      	lsls	r3, r3, #3
 8007212:	440b      	add	r3, r1
 8007214:	3301      	adds	r3, #1
 8007216:	2201      	movs	r2, #1
 8007218:	701a      	strb	r2, [r3, #0]
 800721a:	7bfb      	ldrb	r3, [r7, #15]
 800721c:	6879      	ldr	r1, [r7, #4]
 800721e:	1c5a      	adds	r2, r3, #1
 8007220:	4613      	mov	r3, r2
 8007222:	009b      	lsls	r3, r3, #2
 8007224:	4413      	add	r3, r2
 8007226:	00db      	lsls	r3, r3, #3
 8007228:	440b      	add	r3, r1
 800722a:	7bfa      	ldrb	r2, [r7, #15]
 800722c:	701a      	strb	r2, [r3, #0]
 800722e:	7bfb      	ldrb	r3, [r7, #15]
 8007230:	6879      	ldr	r1, [r7, #4]
 8007232:	1c5a      	adds	r2, r3, #1
 8007234:	4613      	mov	r3, r2
 8007236:	009b      	lsls	r3, r3, #2
 8007238:	4413      	add	r3, r2
 800723a:	00db      	lsls	r3, r3, #3
 800723c:	440b      	add	r3, r1
 800723e:	3303      	adds	r3, #3
 8007240:	2200      	movs	r2, #0
 8007242:	701a      	strb	r2, [r3, #0]
 8007244:	7bfa      	ldrb	r2, [r7, #15]
 8007246:	6879      	ldr	r1, [r7, #4]
 8007248:	4613      	mov	r3, r2
 800724a:	009b      	lsls	r3, r3, #2
 800724c:	4413      	add	r3, r2
 800724e:	00db      	lsls	r3, r3, #3
 8007250:	440b      	add	r3, r1
 8007252:	3338      	adds	r3, #56	; 0x38
 8007254:	2200      	movs	r2, #0
 8007256:	601a      	str	r2, [r3, #0]
 8007258:	7bfa      	ldrb	r2, [r7, #15]
 800725a:	6879      	ldr	r1, [r7, #4]
 800725c:	4613      	mov	r3, r2
 800725e:	009b      	lsls	r3, r3, #2
 8007260:	4413      	add	r3, r2
 8007262:	00db      	lsls	r3, r3, #3
 8007264:	440b      	add	r3, r1
 8007266:	333c      	adds	r3, #60	; 0x3c
 8007268:	2200      	movs	r2, #0
 800726a:	601a      	str	r2, [r3, #0]
 800726c:	7bfa      	ldrb	r2, [r7, #15]
 800726e:	6879      	ldr	r1, [r7, #4]
 8007270:	4613      	mov	r3, r2
 8007272:	009b      	lsls	r3, r3, #2
 8007274:	4413      	add	r3, r2
 8007276:	00db      	lsls	r3, r3, #3
 8007278:	440b      	add	r3, r1
 800727a:	3340      	adds	r3, #64	; 0x40
 800727c:	2200      	movs	r2, #0
 800727e:	601a      	str	r2, [r3, #0]
 8007280:	7bfb      	ldrb	r3, [r7, #15]
 8007282:	3301      	adds	r3, #1
 8007284:	73fb      	strb	r3, [r7, #15]
 8007286:	7bfa      	ldrb	r2, [r7, #15]
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	685b      	ldr	r3, [r3, #4]
 800728c:	429a      	cmp	r2, r3
 800728e:	d3b9      	bcc.n	8007204 <HAL_PCD_Init+0x44>
 8007290:	2300      	movs	r3, #0
 8007292:	73fb      	strb	r3, [r7, #15]
 8007294:	e044      	b.n	8007320 <HAL_PCD_Init+0x160>
 8007296:	7bfa      	ldrb	r2, [r7, #15]
 8007298:	6879      	ldr	r1, [r7, #4]
 800729a:	4613      	mov	r3, r2
 800729c:	009b      	lsls	r3, r3, #2
 800729e:	4413      	add	r3, r2
 80072a0:	00db      	lsls	r3, r3, #3
 80072a2:	440b      	add	r3, r1
 80072a4:	f203 1369 	addw	r3, r3, #361	; 0x169
 80072a8:	2200      	movs	r2, #0
 80072aa:	701a      	strb	r2, [r3, #0]
 80072ac:	7bfa      	ldrb	r2, [r7, #15]
 80072ae:	6879      	ldr	r1, [r7, #4]
 80072b0:	4613      	mov	r3, r2
 80072b2:	009b      	lsls	r3, r3, #2
 80072b4:	4413      	add	r3, r2
 80072b6:	00db      	lsls	r3, r3, #3
 80072b8:	440b      	add	r3, r1
 80072ba:	f503 73b4 	add.w	r3, r3, #360	; 0x168
 80072be:	7bfa      	ldrb	r2, [r7, #15]
 80072c0:	701a      	strb	r2, [r3, #0]
 80072c2:	7bfa      	ldrb	r2, [r7, #15]
 80072c4:	6879      	ldr	r1, [r7, #4]
 80072c6:	4613      	mov	r3, r2
 80072c8:	009b      	lsls	r3, r3, #2
 80072ca:	4413      	add	r3, r2
 80072cc:	00db      	lsls	r3, r3, #3
 80072ce:	440b      	add	r3, r1
 80072d0:	f203 136b 	addw	r3, r3, #363	; 0x16b
 80072d4:	2200      	movs	r2, #0
 80072d6:	701a      	strb	r2, [r3, #0]
 80072d8:	7bfa      	ldrb	r2, [r7, #15]
 80072da:	6879      	ldr	r1, [r7, #4]
 80072dc:	4613      	mov	r3, r2
 80072de:	009b      	lsls	r3, r3, #2
 80072e0:	4413      	add	r3, r2
 80072e2:	00db      	lsls	r3, r3, #3
 80072e4:	440b      	add	r3, r1
 80072e6:	f503 73bc 	add.w	r3, r3, #376	; 0x178
 80072ea:	2200      	movs	r2, #0
 80072ec:	601a      	str	r2, [r3, #0]
 80072ee:	7bfa      	ldrb	r2, [r7, #15]
 80072f0:	6879      	ldr	r1, [r7, #4]
 80072f2:	4613      	mov	r3, r2
 80072f4:	009b      	lsls	r3, r3, #2
 80072f6:	4413      	add	r3, r2
 80072f8:	00db      	lsls	r3, r3, #3
 80072fa:	440b      	add	r3, r1
 80072fc:	f503 73be 	add.w	r3, r3, #380	; 0x17c
 8007300:	2200      	movs	r2, #0
 8007302:	601a      	str	r2, [r3, #0]
 8007304:	7bfa      	ldrb	r2, [r7, #15]
 8007306:	6879      	ldr	r1, [r7, #4]
 8007308:	4613      	mov	r3, r2
 800730a:	009b      	lsls	r3, r3, #2
 800730c:	4413      	add	r3, r2
 800730e:	00db      	lsls	r3, r3, #3
 8007310:	440b      	add	r3, r1
 8007312:	f503 73c0 	add.w	r3, r3, #384	; 0x180
 8007316:	2200      	movs	r2, #0
 8007318:	601a      	str	r2, [r3, #0]
 800731a:	7bfb      	ldrb	r3, [r7, #15]
 800731c:	3301      	adds	r3, #1
 800731e:	73fb      	strb	r3, [r7, #15]
 8007320:	7bfa      	ldrb	r2, [r7, #15]
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	685b      	ldr	r3, [r3, #4]
 8007326:	429a      	cmp	r2, r3
 8007328:	d3b5      	bcc.n	8007296 <HAL_PCD_Init+0xd6>
 800732a:	687b      	ldr	r3, [r7, #4]
 800732c:	681b      	ldr	r3, [r3, #0]
 800732e:	603b      	str	r3, [r7, #0]
 8007330:	687e      	ldr	r6, [r7, #4]
 8007332:	466d      	mov	r5, sp
 8007334:	f106 0410 	add.w	r4, r6, #16
 8007338:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800733a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800733c:	6823      	ldr	r3, [r4, #0]
 800733e:	602b      	str	r3, [r5, #0]
 8007340:	1d33      	adds	r3, r6, #4
 8007342:	cb0e      	ldmia	r3, {r1, r2, r3}
 8007344:	6838      	ldr	r0, [r7, #0]
 8007346:	f003 fb0e 	bl	800a966 <USB_DevInit>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	2200      	movs	r2, #0
 800734e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	2201      	movs	r2, #1
 8007356:	f883 22a9 	strb.w	r2, [r3, #681]	; 0x2a9
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	69db      	ldr	r3, [r3, #28]
 800735e:	2b01      	cmp	r3, #1
 8007360:	d102      	bne.n	8007368 <HAL_PCD_Init+0x1a8>
 8007362:	6878      	ldr	r0, [r7, #4]
 8007364:	f000 f805 	bl	8007372 <HAL_PCDEx_ActivateLPM>
 8007368:	2300      	movs	r3, #0
 800736a:	4618      	mov	r0, r3
 800736c:	3714      	adds	r7, #20
 800736e:	46bd      	mov	sp, r7
 8007370:	bdf0      	pop	{r4, r5, r6, r7, pc}

08007372 <HAL_PCDEx_ActivateLPM>:
 8007372:	b480      	push	{r7}
 8007374:	b085      	sub	sp, #20
 8007376:	af00      	add	r7, sp, #0
 8007378:	6078      	str	r0, [r7, #4]
 800737a:	687b      	ldr	r3, [r7, #4]
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	60fb      	str	r3, [r7, #12]
 8007380:	687b      	ldr	r3, [r7, #4]
 8007382:	2201      	movs	r2, #1
 8007384:	f8c3 22e8 	str.w	r2, [r3, #744]	; 0x2e8
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	2200      	movs	r2, #0
 800738c:	f883 22e0 	strb.w	r2, [r3, #736]	; 0x2e0
 8007390:	68fb      	ldr	r3, [r7, #12]
 8007392:	f8b3 3054 	ldrh.w	r3, [r3, #84]	; 0x54
 8007396:	b29b      	uxth	r3, r3
 8007398:	f043 0301 	orr.w	r3, r3, #1
 800739c:	b29a      	uxth	r2, r3
 800739e:	68fb      	ldr	r3, [r7, #12]
 80073a0:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 80073a4:	68fb      	ldr	r3, [r7, #12]
 80073a6:	f8b3 3054 	ldrh.w	r3, [r3, #84]	; 0x54
 80073aa:	b29b      	uxth	r3, r3
 80073ac:	f043 0302 	orr.w	r3, r3, #2
 80073b0:	b29a      	uxth	r2, r3
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 80073b8:	2300      	movs	r3, #0
 80073ba:	4618      	mov	r0, r3
 80073bc:	3714      	adds	r7, #20
 80073be:	46bd      	mov	sp, r7
 80073c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073c4:	4770      	bx	lr
	...

080073c8 <HAL_PWR_EnableBkUpAccess>:
 80073c8:	b480      	push	{r7}
 80073ca:	af00      	add	r7, sp, #0
 80073cc:	4b05      	ldr	r3, [pc, #20]	; (80073e4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	4a04      	ldr	r2, [pc, #16]	; (80073e4 <HAL_PWR_EnableBkUpAccess+0x1c>)
 80073d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80073d6:	6013      	str	r3, [r2, #0]
 80073d8:	bf00      	nop
 80073da:	46bd      	mov	sp, r7
 80073dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e0:	4770      	bx	lr
 80073e2:	bf00      	nop
 80073e4:	58000400 	.word	0x58000400

080073e8 <HAL_PWREx_GetVoltageRange>:
 80073e8:	b480      	push	{r7}
 80073ea:	af00      	add	r7, sp, #0
 80073ec:	4b04      	ldr	r3, [pc, #16]	; (8007400 <HAL_PWREx_GetVoltageRange+0x18>)
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80073f4:	4618      	mov	r0, r3
 80073f6:	46bd      	mov	sp, r7
 80073f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073fc:	4770      	bx	lr
 80073fe:	bf00      	nop
 8007400:	58000400 	.word	0x58000400

08007404 <LL_RCC_HSE_IsEnabledDiv2>:
 8007404:	b480      	push	{r7}
 8007406:	af00      	add	r7, sp, #0
 8007408:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800740c:	681b      	ldr	r3, [r3, #0]
 800740e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007412:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007416:	d101      	bne.n	800741c <LL_RCC_HSE_IsEnabledDiv2+0x18>
 8007418:	2301      	movs	r3, #1
 800741a:	e000      	b.n	800741e <LL_RCC_HSE_IsEnabledDiv2+0x1a>
 800741c:	2300      	movs	r3, #0
 800741e:	4618      	mov	r0, r3
 8007420:	46bd      	mov	sp, r7
 8007422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007426:	4770      	bx	lr

08007428 <LL_RCC_HSE_Enable>:
 8007428:	b480      	push	{r7}
 800742a:	af00      	add	r7, sp, #0
 800742c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007436:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800743a:	6013      	str	r3, [r2, #0]
 800743c:	bf00      	nop
 800743e:	46bd      	mov	sp, r7
 8007440:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007444:	4770      	bx	lr

08007446 <LL_RCC_HSE_Disable>:
 8007446:	b480      	push	{r7}
 8007448:	af00      	add	r7, sp, #0
 800744a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007454:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007458:	6013      	str	r3, [r2, #0]
 800745a:	bf00      	nop
 800745c:	46bd      	mov	sp, r7
 800745e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007462:	4770      	bx	lr

08007464 <LL_RCC_HSE_IsReady>:
 8007464:	b480      	push	{r7}
 8007466:	af00      	add	r7, sp, #0
 8007468:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800746c:	681b      	ldr	r3, [r3, #0]
 800746e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007472:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007476:	d101      	bne.n	800747c <LL_RCC_HSE_IsReady+0x18>
 8007478:	2301      	movs	r3, #1
 800747a:	e000      	b.n	800747e <LL_RCC_HSE_IsReady+0x1a>
 800747c:	2300      	movs	r3, #0
 800747e:	4618      	mov	r0, r3
 8007480:	46bd      	mov	sp, r7
 8007482:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007486:	4770      	bx	lr

08007488 <LL_RCC_HSI_Enable>:
 8007488:	b480      	push	{r7}
 800748a:	af00      	add	r7, sp, #0
 800748c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007496:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800749a:	6013      	str	r3, [r2, #0]
 800749c:	bf00      	nop
 800749e:	46bd      	mov	sp, r7
 80074a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a4:	4770      	bx	lr

080074a6 <LL_RCC_HSI_Disable>:
 80074a6:	b480      	push	{r7}
 80074a8:	af00      	add	r7, sp, #0
 80074aa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80074ae:	681b      	ldr	r3, [r3, #0]
 80074b0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80074b4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80074b8:	6013      	str	r3, [r2, #0]
 80074ba:	bf00      	nop
 80074bc:	46bd      	mov	sp, r7
 80074be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074c2:	4770      	bx	lr

080074c4 <LL_RCC_HSI_IsReady>:
 80074c4:	b480      	push	{r7}
 80074c6:	af00      	add	r7, sp, #0
 80074c8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80074cc:	681b      	ldr	r3, [r3, #0]
 80074ce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80074d2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80074d6:	d101      	bne.n	80074dc <LL_RCC_HSI_IsReady+0x18>
 80074d8:	2301      	movs	r3, #1
 80074da:	e000      	b.n	80074de <LL_RCC_HSI_IsReady+0x1a>
 80074dc:	2300      	movs	r3, #0
 80074de:	4618      	mov	r0, r3
 80074e0:	46bd      	mov	sp, r7
 80074e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e6:	4770      	bx	lr

080074e8 <LL_RCC_HSI_SetCalibTrimming>:
 80074e8:	b480      	push	{r7}
 80074ea:	b083      	sub	sp, #12
 80074ec:	af00      	add	r7, sp, #0
 80074ee:	6078      	str	r0, [r7, #4]
 80074f0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80074f4:	685b      	ldr	r3, [r3, #4]
 80074f6:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	061b      	lsls	r3, r3, #24
 80074fe:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8007502:	4313      	orrs	r3, r2
 8007504:	604b      	str	r3, [r1, #4]
 8007506:	bf00      	nop
 8007508:	370c      	adds	r7, #12
 800750a:	46bd      	mov	sp, r7
 800750c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007510:	4770      	bx	lr

08007512 <LL_RCC_HSI48_Enable>:
 8007512:	b480      	push	{r7}
 8007514:	af00      	add	r7, sp, #0
 8007516:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800751a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800751e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007522:	f043 0301 	orr.w	r3, r3, #1
 8007526:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 800752a:	bf00      	nop
 800752c:	46bd      	mov	sp, r7
 800752e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007532:	4770      	bx	lr

08007534 <LL_RCC_HSI48_Disable>:
 8007534:	b480      	push	{r7}
 8007536:	af00      	add	r7, sp, #0
 8007538:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800753c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8007540:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007544:	f023 0301 	bic.w	r3, r3, #1
 8007548:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 800754c:	bf00      	nop
 800754e:	46bd      	mov	sp, r7
 8007550:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007554:	4770      	bx	lr

08007556 <LL_RCC_HSI48_IsReady>:
 8007556:	b480      	push	{r7}
 8007558:	af00      	add	r7, sp, #0
 800755a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800755e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8007562:	f003 0302 	and.w	r3, r3, #2
 8007566:	2b02      	cmp	r3, #2
 8007568:	d101      	bne.n	800756e <LL_RCC_HSI48_IsReady+0x18>
 800756a:	2301      	movs	r3, #1
 800756c:	e000      	b.n	8007570 <LL_RCC_HSI48_IsReady+0x1a>
 800756e:	2300      	movs	r3, #0
 8007570:	4618      	mov	r0, r3
 8007572:	46bd      	mov	sp, r7
 8007574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007578:	4770      	bx	lr

0800757a <LL_RCC_LSE_Enable>:
 800757a:	b480      	push	{r7}
 800757c:	af00      	add	r7, sp, #0
 800757e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007582:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8007586:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800758a:	f043 0301 	orr.w	r3, r3, #1
 800758e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8007592:	bf00      	nop
 8007594:	46bd      	mov	sp, r7
 8007596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800759a:	4770      	bx	lr

0800759c <LL_RCC_LSE_Disable>:
 800759c:	b480      	push	{r7}
 800759e:	af00      	add	r7, sp, #0
 80075a0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80075a4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80075a8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80075ac:	f023 0301 	bic.w	r3, r3, #1
 80075b0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80075b4:	bf00      	nop
 80075b6:	46bd      	mov	sp, r7
 80075b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075bc:	4770      	bx	lr

080075be <LL_RCC_LSE_EnableBypass>:
 80075be:	b480      	push	{r7}
 80075c0:	af00      	add	r7, sp, #0
 80075c2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80075c6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80075ca:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80075ce:	f043 0304 	orr.w	r3, r3, #4
 80075d2:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80075d6:	bf00      	nop
 80075d8:	46bd      	mov	sp, r7
 80075da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075de:	4770      	bx	lr

080075e0 <LL_RCC_LSE_DisableBypass>:
 80075e0:	b480      	push	{r7}
 80075e2:	af00      	add	r7, sp, #0
 80075e4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80075e8:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80075ec:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80075f0:	f023 0304 	bic.w	r3, r3, #4
 80075f4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80075f8:	bf00      	nop
 80075fa:	46bd      	mov	sp, r7
 80075fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007600:	4770      	bx	lr

08007602 <LL_RCC_LSE_IsReady>:
 8007602:	b480      	push	{r7}
 8007604:	af00      	add	r7, sp, #0
 8007606:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800760a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800760e:	f003 0302 	and.w	r3, r3, #2
 8007612:	2b02      	cmp	r3, #2
 8007614:	d101      	bne.n	800761a <LL_RCC_LSE_IsReady+0x18>
 8007616:	2301      	movs	r3, #1
 8007618:	e000      	b.n	800761c <LL_RCC_LSE_IsReady+0x1a>
 800761a:	2300      	movs	r3, #0
 800761c:	4618      	mov	r0, r3
 800761e:	46bd      	mov	sp, r7
 8007620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007624:	4770      	bx	lr

08007626 <LL_RCC_LSI1_Enable>:
 8007626:	b480      	push	{r7}
 8007628:	af00      	add	r7, sp, #0
 800762a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800762e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007632:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007636:	f043 0301 	orr.w	r3, r3, #1
 800763a:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800763e:	bf00      	nop
 8007640:	46bd      	mov	sp, r7
 8007642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007646:	4770      	bx	lr

08007648 <LL_RCC_LSI1_Disable>:
 8007648:	b480      	push	{r7}
 800764a:	af00      	add	r7, sp, #0
 800764c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007650:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007654:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007658:	f023 0301 	bic.w	r3, r3, #1
 800765c:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 8007660:	bf00      	nop
 8007662:	46bd      	mov	sp, r7
 8007664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007668:	4770      	bx	lr

0800766a <LL_RCC_LSI1_IsReady>:
 800766a:	b480      	push	{r7}
 800766c:	af00      	add	r7, sp, #0
 800766e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007672:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007676:	f003 0302 	and.w	r3, r3, #2
 800767a:	2b02      	cmp	r3, #2
 800767c:	d101      	bne.n	8007682 <LL_RCC_LSI1_IsReady+0x18>
 800767e:	2301      	movs	r3, #1
 8007680:	e000      	b.n	8007684 <LL_RCC_LSI1_IsReady+0x1a>
 8007682:	2300      	movs	r3, #0
 8007684:	4618      	mov	r0, r3
 8007686:	46bd      	mov	sp, r7
 8007688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800768c:	4770      	bx	lr

0800768e <LL_RCC_LSI2_Enable>:
 800768e:	b480      	push	{r7}
 8007690:	af00      	add	r7, sp, #0
 8007692:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007696:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800769a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800769e:	f043 0304 	orr.w	r3, r3, #4
 80076a2:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80076a6:	bf00      	nop
 80076a8:	46bd      	mov	sp, r7
 80076aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076ae:	4770      	bx	lr

080076b0 <LL_RCC_LSI2_Disable>:
 80076b0:	b480      	push	{r7}
 80076b2:	af00      	add	r7, sp, #0
 80076b4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80076b8:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80076bc:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80076c0:	f023 0304 	bic.w	r3, r3, #4
 80076c4:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80076c8:	bf00      	nop
 80076ca:	46bd      	mov	sp, r7
 80076cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d0:	4770      	bx	lr

080076d2 <LL_RCC_LSI2_IsReady>:
 80076d2:	b480      	push	{r7}
 80076d4:	af00      	add	r7, sp, #0
 80076d6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80076da:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80076de:	f003 0308 	and.w	r3, r3, #8
 80076e2:	2b08      	cmp	r3, #8
 80076e4:	d101      	bne.n	80076ea <LL_RCC_LSI2_IsReady+0x18>
 80076e6:	2301      	movs	r3, #1
 80076e8:	e000      	b.n	80076ec <LL_RCC_LSI2_IsReady+0x1a>
 80076ea:	2300      	movs	r3, #0
 80076ec:	4618      	mov	r0, r3
 80076ee:	46bd      	mov	sp, r7
 80076f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076f4:	4770      	bx	lr

080076f6 <LL_RCC_LSI2_SetTrimming>:
 80076f6:	b480      	push	{r7}
 80076f8:	b083      	sub	sp, #12
 80076fa:	af00      	add	r7, sp, #0
 80076fc:	6078      	str	r0, [r7, #4]
 80076fe:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007702:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8007706:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 800770a:	687b      	ldr	r3, [r7, #4]
 800770c:	021b      	lsls	r3, r3, #8
 800770e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8007712:	4313      	orrs	r3, r2
 8007714:	f8c1 3094 	str.w	r3, [r1, #148]	; 0x94
 8007718:	bf00      	nop
 800771a:	370c      	adds	r7, #12
 800771c:	46bd      	mov	sp, r7
 800771e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007722:	4770      	bx	lr

08007724 <LL_RCC_MSI_Enable>:
 8007724:	b480      	push	{r7}
 8007726:	af00      	add	r7, sp, #0
 8007728:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800772c:	681b      	ldr	r3, [r3, #0]
 800772e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007732:	f043 0301 	orr.w	r3, r3, #1
 8007736:	6013      	str	r3, [r2, #0]
 8007738:	bf00      	nop
 800773a:	46bd      	mov	sp, r7
 800773c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007740:	4770      	bx	lr

08007742 <LL_RCC_MSI_Disable>:
 8007742:	b480      	push	{r7}
 8007744:	af00      	add	r7, sp, #0
 8007746:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800774a:	681b      	ldr	r3, [r3, #0]
 800774c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007750:	f023 0301 	bic.w	r3, r3, #1
 8007754:	6013      	str	r3, [r2, #0]
 8007756:	bf00      	nop
 8007758:	46bd      	mov	sp, r7
 800775a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800775e:	4770      	bx	lr

08007760 <LL_RCC_MSI_IsReady>:
 8007760:	b480      	push	{r7}
 8007762:	af00      	add	r7, sp, #0
 8007764:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007768:	681b      	ldr	r3, [r3, #0]
 800776a:	f003 0302 	and.w	r3, r3, #2
 800776e:	2b02      	cmp	r3, #2
 8007770:	d101      	bne.n	8007776 <LL_RCC_MSI_IsReady+0x16>
 8007772:	2301      	movs	r3, #1
 8007774:	e000      	b.n	8007778 <LL_RCC_MSI_IsReady+0x18>
 8007776:	2300      	movs	r3, #0
 8007778:	4618      	mov	r0, r3
 800777a:	46bd      	mov	sp, r7
 800777c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007780:	4770      	bx	lr

08007782 <LL_RCC_MSI_SetRange>:
 8007782:	b480      	push	{r7}
 8007784:	b083      	sub	sp, #12
 8007786:	af00      	add	r7, sp, #0
 8007788:	6078      	str	r0, [r7, #4]
 800778a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800778e:	681b      	ldr	r3, [r3, #0]
 8007790:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007794:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8007798:	687b      	ldr	r3, [r7, #4]
 800779a:	4313      	orrs	r3, r2
 800779c:	600b      	str	r3, [r1, #0]
 800779e:	bf00      	nop
 80077a0:	370c      	adds	r7, #12
 80077a2:	46bd      	mov	sp, r7
 80077a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077a8:	4770      	bx	lr

080077aa <LL_RCC_MSI_GetRange>:
 80077aa:	b480      	push	{r7}
 80077ac:	b083      	sub	sp, #12
 80077ae:	af00      	add	r7, sp, #0
 80077b0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80077ba:	607b      	str	r3, [r7, #4]
 80077bc:	687b      	ldr	r3, [r7, #4]
 80077be:	2bb0      	cmp	r3, #176	; 0xb0
 80077c0:	d901      	bls.n	80077c6 <LL_RCC_MSI_GetRange+0x1c>
 80077c2:	23b0      	movs	r3, #176	; 0xb0
 80077c4:	607b      	str	r3, [r7, #4]
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	4618      	mov	r0, r3
 80077ca:	370c      	adds	r7, #12
 80077cc:	46bd      	mov	sp, r7
 80077ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077d2:	4770      	bx	lr

080077d4 <LL_RCC_MSI_SetCalibTrimming>:
 80077d4:	b480      	push	{r7}
 80077d6:	b083      	sub	sp, #12
 80077d8:	af00      	add	r7, sp, #0
 80077da:	6078      	str	r0, [r7, #4]
 80077dc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80077e0:	685b      	ldr	r3, [r3, #4]
 80077e2:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	021b      	lsls	r3, r3, #8
 80077ea:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80077ee:	4313      	orrs	r3, r2
 80077f0:	604b      	str	r3, [r1, #4]
 80077f2:	bf00      	nop
 80077f4:	370c      	adds	r7, #12
 80077f6:	46bd      	mov	sp, r7
 80077f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fc:	4770      	bx	lr

080077fe <LL_RCC_SetSysClkSource>:
 80077fe:	b480      	push	{r7}
 8007800:	b083      	sub	sp, #12
 8007802:	af00      	add	r7, sp, #0
 8007804:	6078      	str	r0, [r7, #4]
 8007806:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800780a:	689b      	ldr	r3, [r3, #8]
 800780c:	f023 0203 	bic.w	r2, r3, #3
 8007810:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8007814:	687b      	ldr	r3, [r7, #4]
 8007816:	4313      	orrs	r3, r2
 8007818:	608b      	str	r3, [r1, #8]
 800781a:	bf00      	nop
 800781c:	370c      	adds	r7, #12
 800781e:	46bd      	mov	sp, r7
 8007820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007824:	4770      	bx	lr

08007826 <LL_RCC_GetSysClkSource>:
 8007826:	b480      	push	{r7}
 8007828:	af00      	add	r7, sp, #0
 800782a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800782e:	689b      	ldr	r3, [r3, #8]
 8007830:	f003 030c 	and.w	r3, r3, #12
 8007834:	4618      	mov	r0, r3
 8007836:	46bd      	mov	sp, r7
 8007838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800783c:	4770      	bx	lr

0800783e <LL_RCC_SetAHBPrescaler>:
 800783e:	b480      	push	{r7}
 8007840:	b083      	sub	sp, #12
 8007842:	af00      	add	r7, sp, #0
 8007844:	6078      	str	r0, [r7, #4]
 8007846:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800784a:	689b      	ldr	r3, [r3, #8]
 800784c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8007850:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8007854:	687b      	ldr	r3, [r7, #4]
 8007856:	4313      	orrs	r3, r2
 8007858:	608b      	str	r3, [r1, #8]
 800785a:	bf00      	nop
 800785c:	370c      	adds	r7, #12
 800785e:	46bd      	mov	sp, r7
 8007860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007864:	4770      	bx	lr

08007866 <LL_C2_RCC_SetAHBPrescaler>:
 8007866:	b480      	push	{r7}
 8007868:	b083      	sub	sp, #12
 800786a:	af00      	add	r7, sp, #0
 800786c:	6078      	str	r0, [r7, #4]
 800786e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007872:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8007876:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800787a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800787e:	687b      	ldr	r3, [r7, #4]
 8007880:	4313      	orrs	r3, r2
 8007882:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
 8007886:	bf00      	nop
 8007888:	370c      	adds	r7, #12
 800788a:	46bd      	mov	sp, r7
 800788c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007890:	4770      	bx	lr

08007892 <LL_RCC_SetAHB4Prescaler>:
 8007892:	b480      	push	{r7}
 8007894:	b083      	sub	sp, #12
 8007896:	af00      	add	r7, sp, #0
 8007898:	6078      	str	r0, [r7, #4]
 800789a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800789e:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 80078a2:	f023 020f 	bic.w	r2, r3, #15
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	091b      	lsrs	r3, r3, #4
 80078aa:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80078ae:	4313      	orrs	r3, r2
 80078b0:	f8c1 3108 	str.w	r3, [r1, #264]	; 0x108
 80078b4:	bf00      	nop
 80078b6:	370c      	adds	r7, #12
 80078b8:	46bd      	mov	sp, r7
 80078ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078be:	4770      	bx	lr

080078c0 <LL_RCC_SetAPB1Prescaler>:
 80078c0:	b480      	push	{r7}
 80078c2:	b083      	sub	sp, #12
 80078c4:	af00      	add	r7, sp, #0
 80078c6:	6078      	str	r0, [r7, #4]
 80078c8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80078cc:	689b      	ldr	r3, [r3, #8]
 80078ce:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80078d2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80078d6:	687b      	ldr	r3, [r7, #4]
 80078d8:	4313      	orrs	r3, r2
 80078da:	608b      	str	r3, [r1, #8]
 80078dc:	bf00      	nop
 80078de:	370c      	adds	r7, #12
 80078e0:	46bd      	mov	sp, r7
 80078e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e6:	4770      	bx	lr

080078e8 <LL_RCC_SetAPB2Prescaler>:
 80078e8:	b480      	push	{r7}
 80078ea:	b083      	sub	sp, #12
 80078ec:	af00      	add	r7, sp, #0
 80078ee:	6078      	str	r0, [r7, #4]
 80078f0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80078f4:	689b      	ldr	r3, [r3, #8]
 80078f6:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80078fa:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	4313      	orrs	r3, r2
 8007902:	608b      	str	r3, [r1, #8]
 8007904:	bf00      	nop
 8007906:	370c      	adds	r7, #12
 8007908:	46bd      	mov	sp, r7
 800790a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800790e:	4770      	bx	lr

08007910 <LL_RCC_GetAHBPrescaler>:
 8007910:	b480      	push	{r7}
 8007912:	af00      	add	r7, sp, #0
 8007914:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007918:	689b      	ldr	r3, [r3, #8]
 800791a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800791e:	4618      	mov	r0, r3
 8007920:	46bd      	mov	sp, r7
 8007922:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007926:	4770      	bx	lr

08007928 <LL_RCC_GetAHB4Prescaler>:
 8007928:	b480      	push	{r7}
 800792a:	af00      	add	r7, sp, #0
 800792c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007930:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8007934:	011b      	lsls	r3, r3, #4
 8007936:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800793a:	4618      	mov	r0, r3
 800793c:	46bd      	mov	sp, r7
 800793e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007942:	4770      	bx	lr

08007944 <LL_RCC_GetAPB1Prescaler>:
 8007944:	b480      	push	{r7}
 8007946:	af00      	add	r7, sp, #0
 8007948:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800794c:	689b      	ldr	r3, [r3, #8]
 800794e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8007952:	4618      	mov	r0, r3
 8007954:	46bd      	mov	sp, r7
 8007956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800795a:	4770      	bx	lr

0800795c <LL_RCC_GetAPB2Prescaler>:
 800795c:	b480      	push	{r7}
 800795e:	af00      	add	r7, sp, #0
 8007960:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007964:	689b      	ldr	r3, [r3, #8]
 8007966:	f403 5360 	and.w	r3, r3, #14336	; 0x3800
 800796a:	4618      	mov	r0, r3
 800796c:	46bd      	mov	sp, r7
 800796e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007972:	4770      	bx	lr

08007974 <LL_RCC_PLL_Enable>:
 8007974:	b480      	push	{r7}
 8007976:	af00      	add	r7, sp, #0
 8007978:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800797c:	681b      	ldr	r3, [r3, #0]
 800797e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007982:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8007986:	6013      	str	r3, [r2, #0]
 8007988:	bf00      	nop
 800798a:	46bd      	mov	sp, r7
 800798c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007990:	4770      	bx	lr

08007992 <LL_RCC_PLL_Disable>:
 8007992:	b480      	push	{r7}
 8007994:	af00      	add	r7, sp, #0
 8007996:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800799a:	681b      	ldr	r3, [r3, #0]
 800799c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80079a0:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80079a4:	6013      	str	r3, [r2, #0]
 80079a6:	bf00      	nop
 80079a8:	46bd      	mov	sp, r7
 80079aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ae:	4770      	bx	lr

080079b0 <LL_RCC_PLL_IsReady>:
 80079b0:	b480      	push	{r7}
 80079b2:	af00      	add	r7, sp, #0
 80079b4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80079be:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80079c2:	d101      	bne.n	80079c8 <LL_RCC_PLL_IsReady+0x18>
 80079c4:	2301      	movs	r3, #1
 80079c6:	e000      	b.n	80079ca <LL_RCC_PLL_IsReady+0x1a>
 80079c8:	2300      	movs	r3, #0
 80079ca:	4618      	mov	r0, r3
 80079cc:	46bd      	mov	sp, r7
 80079ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079d2:	4770      	bx	lr

080079d4 <LL_RCC_PLL_GetN>:
 80079d4:	b480      	push	{r7}
 80079d6:	af00      	add	r7, sp, #0
 80079d8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80079dc:	68db      	ldr	r3, [r3, #12]
 80079de:	0a1b      	lsrs	r3, r3, #8
 80079e0:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80079e4:	4618      	mov	r0, r3
 80079e6:	46bd      	mov	sp, r7
 80079e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ec:	4770      	bx	lr

080079ee <LL_RCC_PLL_GetR>:
 80079ee:	b480      	push	{r7}
 80079f0:	af00      	add	r7, sp, #0
 80079f2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80079f6:	68db      	ldr	r3, [r3, #12]
 80079f8:	f003 4360 	and.w	r3, r3, #3758096384	; 0xe0000000
 80079fc:	4618      	mov	r0, r3
 80079fe:	46bd      	mov	sp, r7
 8007a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a04:	4770      	bx	lr

08007a06 <LL_RCC_PLL_GetDivider>:
 8007a06:	b480      	push	{r7}
 8007a08:	af00      	add	r7, sp, #0
 8007a0a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007a0e:	68db      	ldr	r3, [r3, #12]
 8007a10:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8007a14:	4618      	mov	r0, r3
 8007a16:	46bd      	mov	sp, r7
 8007a18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a1c:	4770      	bx	lr

08007a1e <LL_RCC_PLL_GetMainSource>:
 8007a1e:	b480      	push	{r7}
 8007a20:	af00      	add	r7, sp, #0
 8007a22:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007a26:	68db      	ldr	r3, [r3, #12]
 8007a28:	f003 0303 	and.w	r3, r3, #3
 8007a2c:	4618      	mov	r0, r3
 8007a2e:	46bd      	mov	sp, r7
 8007a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a34:	4770      	bx	lr

08007a36 <LL_RCC_IsActiveFlag_HPRE>:
 8007a36:	b480      	push	{r7}
 8007a38:	af00      	add	r7, sp, #0
 8007a3a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007a3e:	689b      	ldr	r3, [r3, #8]
 8007a40:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007a44:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007a48:	d101      	bne.n	8007a4e <LL_RCC_IsActiveFlag_HPRE+0x18>
 8007a4a:	2301      	movs	r3, #1
 8007a4c:	e000      	b.n	8007a50 <LL_RCC_IsActiveFlag_HPRE+0x1a>
 8007a4e:	2300      	movs	r3, #0
 8007a50:	4618      	mov	r0, r3
 8007a52:	46bd      	mov	sp, r7
 8007a54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a58:	4770      	bx	lr

08007a5a <LL_RCC_IsActiveFlag_C2HPRE>:
 8007a5a:	b480      	push	{r7}
 8007a5c:	af00      	add	r7, sp, #0
 8007a5e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007a62:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8007a66:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007a6a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007a6e:	d101      	bne.n	8007a74 <LL_RCC_IsActiveFlag_C2HPRE+0x1a>
 8007a70:	2301      	movs	r3, #1
 8007a72:	e000      	b.n	8007a76 <LL_RCC_IsActiveFlag_C2HPRE+0x1c>
 8007a74:	2300      	movs	r3, #0
 8007a76:	4618      	mov	r0, r3
 8007a78:	46bd      	mov	sp, r7
 8007a7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a7e:	4770      	bx	lr

08007a80 <LL_RCC_IsActiveFlag_SHDHPRE>:
 8007a80:	b480      	push	{r7}
 8007a82:	af00      	add	r7, sp, #0
 8007a84:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007a88:	f8d3 3108 	ldr.w	r3, [r3, #264]	; 0x108
 8007a8c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007a90:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007a94:	d101      	bne.n	8007a9a <LL_RCC_IsActiveFlag_SHDHPRE+0x1a>
 8007a96:	2301      	movs	r3, #1
 8007a98:	e000      	b.n	8007a9c <LL_RCC_IsActiveFlag_SHDHPRE+0x1c>
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	4618      	mov	r0, r3
 8007a9e:	46bd      	mov	sp, r7
 8007aa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aa4:	4770      	bx	lr

08007aa6 <LL_RCC_IsActiveFlag_PPRE1>:
 8007aa6:	b480      	push	{r7}
 8007aa8:	af00      	add	r7, sp, #0
 8007aaa:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007aae:	689b      	ldr	r3, [r3, #8]
 8007ab0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007ab4:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007ab8:	d101      	bne.n	8007abe <LL_RCC_IsActiveFlag_PPRE1+0x18>
 8007aba:	2301      	movs	r3, #1
 8007abc:	e000      	b.n	8007ac0 <LL_RCC_IsActiveFlag_PPRE1+0x1a>
 8007abe:	2300      	movs	r3, #0
 8007ac0:	4618      	mov	r0, r3
 8007ac2:	46bd      	mov	sp, r7
 8007ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ac8:	4770      	bx	lr

08007aca <LL_RCC_IsActiveFlag_PPRE2>:
 8007aca:	b480      	push	{r7}
 8007acc:	af00      	add	r7, sp, #0
 8007ace:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007ad2:	689b      	ldr	r3, [r3, #8]
 8007ad4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007ad8:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8007adc:	d101      	bne.n	8007ae2 <LL_RCC_IsActiveFlag_PPRE2+0x18>
 8007ade:	2301      	movs	r3, #1
 8007ae0:	e000      	b.n	8007ae4 <LL_RCC_IsActiveFlag_PPRE2+0x1a>
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	4618      	mov	r0, r3
 8007ae6:	46bd      	mov	sp, r7
 8007ae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aec:	4770      	bx	lr
	...

08007af0 <HAL_RCC_OscConfig>:
 8007af0:	b590      	push	{r4, r7, lr}
 8007af2:	b08d      	sub	sp, #52	; 0x34
 8007af4:	af00      	add	r7, sp, #0
 8007af6:	6078      	str	r0, [r7, #4]
 8007af8:	687b      	ldr	r3, [r7, #4]
 8007afa:	2b00      	cmp	r3, #0
 8007afc:	d101      	bne.n	8007b02 <HAL_RCC_OscConfig+0x12>
 8007afe:	2301      	movs	r3, #1
 8007b00:	e363      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	f003 0320 	and.w	r3, r3, #32
 8007b0a:	2b00      	cmp	r3, #0
 8007b0c:	f000 808d 	beq.w	8007c2a <HAL_RCC_OscConfig+0x13a>
 8007b10:	f7ff fe89 	bl	8007826 <LL_RCC_GetSysClkSource>
 8007b14:	62f8      	str	r0, [r7, #44]	; 0x2c
 8007b16:	f7ff ff82 	bl	8007a1e <LL_RCC_PLL_GetMainSource>
 8007b1a:	62b8      	str	r0, [r7, #40]	; 0x28
 8007b1c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b1e:	2b00      	cmp	r3, #0
 8007b20:	d005      	beq.n	8007b2e <HAL_RCC_OscConfig+0x3e>
 8007b22:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b24:	2b0c      	cmp	r3, #12
 8007b26:	d147      	bne.n	8007bb8 <HAL_RCC_OscConfig+0xc8>
 8007b28:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007b2a:	2b01      	cmp	r3, #1
 8007b2c:	d144      	bne.n	8007bb8 <HAL_RCC_OscConfig+0xc8>
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	69db      	ldr	r3, [r3, #28]
 8007b32:	2b00      	cmp	r3, #0
 8007b34:	d101      	bne.n	8007b3a <HAL_RCC_OscConfig+0x4a>
 8007b36:	2301      	movs	r3, #1
 8007b38:	e347      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007b3a:	687b      	ldr	r3, [r7, #4]
 8007b3c:	6a5c      	ldr	r4, [r3, #36]	; 0x24
 8007b3e:	f7ff fe34 	bl	80077aa <LL_RCC_MSI_GetRange>
 8007b42:	4603      	mov	r3, r0
 8007b44:	429c      	cmp	r4, r3
 8007b46:	d914      	bls.n	8007b72 <HAL_RCC_OscConfig+0x82>
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b4c:	4618      	mov	r0, r3
 8007b4e:	f000 fd2f 	bl	80085b0 <RCC_SetFlashLatencyFromMSIRange>
 8007b52:	4603      	mov	r3, r0
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	d001      	beq.n	8007b5c <HAL_RCC_OscConfig+0x6c>
 8007b58:	2301      	movs	r3, #1
 8007b5a:	e336      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b60:	4618      	mov	r0, r3
 8007b62:	f7ff fe0e 	bl	8007782 <LL_RCC_MSI_SetRange>
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	6a1b      	ldr	r3, [r3, #32]
 8007b6a:	4618      	mov	r0, r3
 8007b6c:	f7ff fe32 	bl	80077d4 <LL_RCC_MSI_SetCalibTrimming>
 8007b70:	e013      	b.n	8007b9a <HAL_RCC_OscConfig+0xaa>
 8007b72:	687b      	ldr	r3, [r7, #4]
 8007b74:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b76:	4618      	mov	r0, r3
 8007b78:	f7ff fe03 	bl	8007782 <LL_RCC_MSI_SetRange>
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	6a1b      	ldr	r3, [r3, #32]
 8007b80:	4618      	mov	r0, r3
 8007b82:	f7ff fe27 	bl	80077d4 <LL_RCC_MSI_SetCalibTrimming>
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b8a:	4618      	mov	r0, r3
 8007b8c:	f000 fd10 	bl	80085b0 <RCC_SetFlashLatencyFromMSIRange>
 8007b90:	4603      	mov	r3, r0
 8007b92:	2b00      	cmp	r3, #0
 8007b94:	d001      	beq.n	8007b9a <HAL_RCC_OscConfig+0xaa>
 8007b96:	2301      	movs	r3, #1
 8007b98:	e317      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007b9a:	f000 fcc9 	bl	8008530 <HAL_RCC_GetHCLKFreq>
 8007b9e:	4603      	mov	r3, r0
 8007ba0:	4aa4      	ldr	r2, [pc, #656]	; (8007e34 <HAL_RCC_OscConfig+0x344>)
 8007ba2:	6013      	str	r3, [r2, #0]
 8007ba4:	4ba4      	ldr	r3, [pc, #656]	; (8007e38 <HAL_RCC_OscConfig+0x348>)
 8007ba6:	681b      	ldr	r3, [r3, #0]
 8007ba8:	4618      	mov	r0, r3
 8007baa:	f7fd fa9f 	bl	80050ec <HAL_InitTick>
 8007bae:	4603      	mov	r3, r0
 8007bb0:	2b00      	cmp	r3, #0
 8007bb2:	d039      	beq.n	8007c28 <HAL_RCC_OscConfig+0x138>
 8007bb4:	2301      	movs	r3, #1
 8007bb6:	e308      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007bb8:	687b      	ldr	r3, [r7, #4]
 8007bba:	69db      	ldr	r3, [r3, #28]
 8007bbc:	2b00      	cmp	r3, #0
 8007bbe:	d01e      	beq.n	8007bfe <HAL_RCC_OscConfig+0x10e>
 8007bc0:	f7ff fdb0 	bl	8007724 <LL_RCC_MSI_Enable>
 8007bc4:	f7fd fae0 	bl	8005188 <HAL_GetTick>
 8007bc8:	6278      	str	r0, [r7, #36]	; 0x24
 8007bca:	e008      	b.n	8007bde <HAL_RCC_OscConfig+0xee>
 8007bcc:	f7fd fadc 	bl	8005188 <HAL_GetTick>
 8007bd0:	4602      	mov	r2, r0
 8007bd2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007bd4:	1ad3      	subs	r3, r2, r3
 8007bd6:	2b02      	cmp	r3, #2
 8007bd8:	d901      	bls.n	8007bde <HAL_RCC_OscConfig+0xee>
 8007bda:	2303      	movs	r3, #3
 8007bdc:	e2f5      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007bde:	f7ff fdbf 	bl	8007760 <LL_RCC_MSI_IsReady>
 8007be2:	4603      	mov	r3, r0
 8007be4:	2b00      	cmp	r3, #0
 8007be6:	d0f1      	beq.n	8007bcc <HAL_RCC_OscConfig+0xdc>
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007bec:	4618      	mov	r0, r3
 8007bee:	f7ff fdc8 	bl	8007782 <LL_RCC_MSI_SetRange>
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	6a1b      	ldr	r3, [r3, #32]
 8007bf6:	4618      	mov	r0, r3
 8007bf8:	f7ff fdec 	bl	80077d4 <LL_RCC_MSI_SetCalibTrimming>
 8007bfc:	e015      	b.n	8007c2a <HAL_RCC_OscConfig+0x13a>
 8007bfe:	f7ff fda0 	bl	8007742 <LL_RCC_MSI_Disable>
 8007c02:	f7fd fac1 	bl	8005188 <HAL_GetTick>
 8007c06:	6278      	str	r0, [r7, #36]	; 0x24
 8007c08:	e008      	b.n	8007c1c <HAL_RCC_OscConfig+0x12c>
 8007c0a:	f7fd fabd 	bl	8005188 <HAL_GetTick>
 8007c0e:	4602      	mov	r2, r0
 8007c10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c12:	1ad3      	subs	r3, r2, r3
 8007c14:	2b02      	cmp	r3, #2
 8007c16:	d901      	bls.n	8007c1c <HAL_RCC_OscConfig+0x12c>
 8007c18:	2303      	movs	r3, #3
 8007c1a:	e2d6      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007c1c:	f7ff fda0 	bl	8007760 <LL_RCC_MSI_IsReady>
 8007c20:	4603      	mov	r3, r0
 8007c22:	2b00      	cmp	r3, #0
 8007c24:	d1f1      	bne.n	8007c0a <HAL_RCC_OscConfig+0x11a>
 8007c26:	e000      	b.n	8007c2a <HAL_RCC_OscConfig+0x13a>
 8007c28:	bf00      	nop
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	681b      	ldr	r3, [r3, #0]
 8007c2e:	f003 0301 	and.w	r3, r3, #1
 8007c32:	2b00      	cmp	r3, #0
 8007c34:	d047      	beq.n	8007cc6 <HAL_RCC_OscConfig+0x1d6>
 8007c36:	f7ff fdf6 	bl	8007826 <LL_RCC_GetSysClkSource>
 8007c3a:	6238      	str	r0, [r7, #32]
 8007c3c:	f7ff feef 	bl	8007a1e <LL_RCC_PLL_GetMainSource>
 8007c40:	61f8      	str	r0, [r7, #28]
 8007c42:	6a3b      	ldr	r3, [r7, #32]
 8007c44:	2b08      	cmp	r3, #8
 8007c46:	d005      	beq.n	8007c54 <HAL_RCC_OscConfig+0x164>
 8007c48:	6a3b      	ldr	r3, [r7, #32]
 8007c4a:	2b0c      	cmp	r3, #12
 8007c4c:	d108      	bne.n	8007c60 <HAL_RCC_OscConfig+0x170>
 8007c4e:	69fb      	ldr	r3, [r7, #28]
 8007c50:	2b03      	cmp	r3, #3
 8007c52:	d105      	bne.n	8007c60 <HAL_RCC_OscConfig+0x170>
 8007c54:	687b      	ldr	r3, [r7, #4]
 8007c56:	685b      	ldr	r3, [r3, #4]
 8007c58:	2b00      	cmp	r3, #0
 8007c5a:	d134      	bne.n	8007cc6 <HAL_RCC_OscConfig+0x1d6>
 8007c5c:	2301      	movs	r3, #1
 8007c5e:	e2b4      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	685b      	ldr	r3, [r3, #4]
 8007c64:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007c68:	d102      	bne.n	8007c70 <HAL_RCC_OscConfig+0x180>
 8007c6a:	f7ff fbdd 	bl	8007428 <LL_RCC_HSE_Enable>
 8007c6e:	e001      	b.n	8007c74 <HAL_RCC_OscConfig+0x184>
 8007c70:	f7ff fbe9 	bl	8007446 <LL_RCC_HSE_Disable>
 8007c74:	687b      	ldr	r3, [r7, #4]
 8007c76:	685b      	ldr	r3, [r3, #4]
 8007c78:	2b00      	cmp	r3, #0
 8007c7a:	d012      	beq.n	8007ca2 <HAL_RCC_OscConfig+0x1b2>
 8007c7c:	f7fd fa84 	bl	8005188 <HAL_GetTick>
 8007c80:	6278      	str	r0, [r7, #36]	; 0x24
 8007c82:	e008      	b.n	8007c96 <HAL_RCC_OscConfig+0x1a6>
 8007c84:	f7fd fa80 	bl	8005188 <HAL_GetTick>
 8007c88:	4602      	mov	r2, r0
 8007c8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007c8c:	1ad3      	subs	r3, r2, r3
 8007c8e:	2b64      	cmp	r3, #100	; 0x64
 8007c90:	d901      	bls.n	8007c96 <HAL_RCC_OscConfig+0x1a6>
 8007c92:	2303      	movs	r3, #3
 8007c94:	e299      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007c96:	f7ff fbe5 	bl	8007464 <LL_RCC_HSE_IsReady>
 8007c9a:	4603      	mov	r3, r0
 8007c9c:	2b00      	cmp	r3, #0
 8007c9e:	d0f1      	beq.n	8007c84 <HAL_RCC_OscConfig+0x194>
 8007ca0:	e011      	b.n	8007cc6 <HAL_RCC_OscConfig+0x1d6>
 8007ca2:	f7fd fa71 	bl	8005188 <HAL_GetTick>
 8007ca6:	6278      	str	r0, [r7, #36]	; 0x24
 8007ca8:	e008      	b.n	8007cbc <HAL_RCC_OscConfig+0x1cc>
 8007caa:	f7fd fa6d 	bl	8005188 <HAL_GetTick>
 8007cae:	4602      	mov	r2, r0
 8007cb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007cb2:	1ad3      	subs	r3, r2, r3
 8007cb4:	2b64      	cmp	r3, #100	; 0x64
 8007cb6:	d901      	bls.n	8007cbc <HAL_RCC_OscConfig+0x1cc>
 8007cb8:	2303      	movs	r3, #3
 8007cba:	e286      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007cbc:	f7ff fbd2 	bl	8007464 <LL_RCC_HSE_IsReady>
 8007cc0:	4603      	mov	r3, r0
 8007cc2:	2b00      	cmp	r3, #0
 8007cc4:	d1f1      	bne.n	8007caa <HAL_RCC_OscConfig+0x1ba>
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	681b      	ldr	r3, [r3, #0]
 8007cca:	f003 0302 	and.w	r3, r3, #2
 8007cce:	2b00      	cmp	r3, #0
 8007cd0:	d04c      	beq.n	8007d6c <HAL_RCC_OscConfig+0x27c>
 8007cd2:	f7ff fda8 	bl	8007826 <LL_RCC_GetSysClkSource>
 8007cd6:	61b8      	str	r0, [r7, #24]
 8007cd8:	f7ff fea1 	bl	8007a1e <LL_RCC_PLL_GetMainSource>
 8007cdc:	6178      	str	r0, [r7, #20]
 8007cde:	69bb      	ldr	r3, [r7, #24]
 8007ce0:	2b04      	cmp	r3, #4
 8007ce2:	d005      	beq.n	8007cf0 <HAL_RCC_OscConfig+0x200>
 8007ce4:	69bb      	ldr	r3, [r7, #24]
 8007ce6:	2b0c      	cmp	r3, #12
 8007ce8:	d10e      	bne.n	8007d08 <HAL_RCC_OscConfig+0x218>
 8007cea:	697b      	ldr	r3, [r7, #20]
 8007cec:	2b02      	cmp	r3, #2
 8007cee:	d10b      	bne.n	8007d08 <HAL_RCC_OscConfig+0x218>
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	68db      	ldr	r3, [r3, #12]
 8007cf4:	2b00      	cmp	r3, #0
 8007cf6:	d101      	bne.n	8007cfc <HAL_RCC_OscConfig+0x20c>
 8007cf8:	2301      	movs	r3, #1
 8007cfa:	e266      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	691b      	ldr	r3, [r3, #16]
 8007d00:	4618      	mov	r0, r3
 8007d02:	f7ff fbf1 	bl	80074e8 <LL_RCC_HSI_SetCalibTrimming>
 8007d06:	e031      	b.n	8007d6c <HAL_RCC_OscConfig+0x27c>
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	68db      	ldr	r3, [r3, #12]
 8007d0c:	2b00      	cmp	r3, #0
 8007d0e:	d019      	beq.n	8007d44 <HAL_RCC_OscConfig+0x254>
 8007d10:	f7ff fbba 	bl	8007488 <LL_RCC_HSI_Enable>
 8007d14:	f7fd fa38 	bl	8005188 <HAL_GetTick>
 8007d18:	6278      	str	r0, [r7, #36]	; 0x24
 8007d1a:	e008      	b.n	8007d2e <HAL_RCC_OscConfig+0x23e>
 8007d1c:	f7fd fa34 	bl	8005188 <HAL_GetTick>
 8007d20:	4602      	mov	r2, r0
 8007d22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d24:	1ad3      	subs	r3, r2, r3
 8007d26:	2b02      	cmp	r3, #2
 8007d28:	d901      	bls.n	8007d2e <HAL_RCC_OscConfig+0x23e>
 8007d2a:	2303      	movs	r3, #3
 8007d2c:	e24d      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007d2e:	f7ff fbc9 	bl	80074c4 <LL_RCC_HSI_IsReady>
 8007d32:	4603      	mov	r3, r0
 8007d34:	2b00      	cmp	r3, #0
 8007d36:	d0f1      	beq.n	8007d1c <HAL_RCC_OscConfig+0x22c>
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	691b      	ldr	r3, [r3, #16]
 8007d3c:	4618      	mov	r0, r3
 8007d3e:	f7ff fbd3 	bl	80074e8 <LL_RCC_HSI_SetCalibTrimming>
 8007d42:	e013      	b.n	8007d6c <HAL_RCC_OscConfig+0x27c>
 8007d44:	f7ff fbaf 	bl	80074a6 <LL_RCC_HSI_Disable>
 8007d48:	f7fd fa1e 	bl	8005188 <HAL_GetTick>
 8007d4c:	6278      	str	r0, [r7, #36]	; 0x24
 8007d4e:	e008      	b.n	8007d62 <HAL_RCC_OscConfig+0x272>
 8007d50:	f7fd fa1a 	bl	8005188 <HAL_GetTick>
 8007d54:	4602      	mov	r2, r0
 8007d56:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d58:	1ad3      	subs	r3, r2, r3
 8007d5a:	2b02      	cmp	r3, #2
 8007d5c:	d901      	bls.n	8007d62 <HAL_RCC_OscConfig+0x272>
 8007d5e:	2303      	movs	r3, #3
 8007d60:	e233      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007d62:	f7ff fbaf 	bl	80074c4 <LL_RCC_HSI_IsReady>
 8007d66:	4603      	mov	r3, r0
 8007d68:	2b00      	cmp	r3, #0
 8007d6a:	d1f1      	bne.n	8007d50 <HAL_RCC_OscConfig+0x260>
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	681b      	ldr	r3, [r3, #0]
 8007d70:	f003 0308 	and.w	r3, r3, #8
 8007d74:	2b00      	cmp	r3, #0
 8007d76:	d106      	bne.n	8007d86 <HAL_RCC_OscConfig+0x296>
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	681b      	ldr	r3, [r3, #0]
 8007d7c:	f003 0310 	and.w	r3, r3, #16
 8007d80:	2b00      	cmp	r3, #0
 8007d82:	f000 80a3 	beq.w	8007ecc <HAL_RCC_OscConfig+0x3dc>
 8007d86:	687b      	ldr	r3, [r7, #4]
 8007d88:	695b      	ldr	r3, [r3, #20]
 8007d8a:	2b00      	cmp	r3, #0
 8007d8c:	d076      	beq.n	8007e7c <HAL_RCC_OscConfig+0x38c>
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	f003 0310 	and.w	r3, r3, #16
 8007d96:	2b00      	cmp	r3, #0
 8007d98:	d046      	beq.n	8007e28 <HAL_RCC_OscConfig+0x338>
 8007d9a:	f7ff fc66 	bl	800766a <LL_RCC_LSI1_IsReady>
 8007d9e:	4603      	mov	r3, r0
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	d113      	bne.n	8007dcc <HAL_RCC_OscConfig+0x2dc>
 8007da4:	f7ff fc3f 	bl	8007626 <LL_RCC_LSI1_Enable>
 8007da8:	f7fd f9ee 	bl	8005188 <HAL_GetTick>
 8007dac:	6278      	str	r0, [r7, #36]	; 0x24
 8007dae:	e008      	b.n	8007dc2 <HAL_RCC_OscConfig+0x2d2>
 8007db0:	f7fd f9ea 	bl	8005188 <HAL_GetTick>
 8007db4:	4602      	mov	r2, r0
 8007db6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007db8:	1ad3      	subs	r3, r2, r3
 8007dba:	2b02      	cmp	r3, #2
 8007dbc:	d901      	bls.n	8007dc2 <HAL_RCC_OscConfig+0x2d2>
 8007dbe:	2303      	movs	r3, #3
 8007dc0:	e203      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007dc2:	f7ff fc52 	bl	800766a <LL_RCC_LSI1_IsReady>
 8007dc6:	4603      	mov	r3, r0
 8007dc8:	2b00      	cmp	r3, #0
 8007dca:	d0f1      	beq.n	8007db0 <HAL_RCC_OscConfig+0x2c0>
 8007dcc:	f7ff fc5f 	bl	800768e <LL_RCC_LSI2_Enable>
 8007dd0:	f7fd f9da 	bl	8005188 <HAL_GetTick>
 8007dd4:	6278      	str	r0, [r7, #36]	; 0x24
 8007dd6:	e008      	b.n	8007dea <HAL_RCC_OscConfig+0x2fa>
 8007dd8:	f7fd f9d6 	bl	8005188 <HAL_GetTick>
 8007ddc:	4602      	mov	r2, r0
 8007dde:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007de0:	1ad3      	subs	r3, r2, r3
 8007de2:	2b03      	cmp	r3, #3
 8007de4:	d901      	bls.n	8007dea <HAL_RCC_OscConfig+0x2fa>
 8007de6:	2303      	movs	r3, #3
 8007de8:	e1ef      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007dea:	f7ff fc72 	bl	80076d2 <LL_RCC_LSI2_IsReady>
 8007dee:	4603      	mov	r3, r0
 8007df0:	2b00      	cmp	r3, #0
 8007df2:	d0f1      	beq.n	8007dd8 <HAL_RCC_OscConfig+0x2e8>
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	699b      	ldr	r3, [r3, #24]
 8007df8:	4618      	mov	r0, r3
 8007dfa:	f7ff fc7c 	bl	80076f6 <LL_RCC_LSI2_SetTrimming>
 8007dfe:	f7ff fc23 	bl	8007648 <LL_RCC_LSI1_Disable>
 8007e02:	f7fd f9c1 	bl	8005188 <HAL_GetTick>
 8007e06:	6278      	str	r0, [r7, #36]	; 0x24
 8007e08:	e008      	b.n	8007e1c <HAL_RCC_OscConfig+0x32c>
 8007e0a:	f7fd f9bd 	bl	8005188 <HAL_GetTick>
 8007e0e:	4602      	mov	r2, r0
 8007e10:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e12:	1ad3      	subs	r3, r2, r3
 8007e14:	2b02      	cmp	r3, #2
 8007e16:	d901      	bls.n	8007e1c <HAL_RCC_OscConfig+0x32c>
 8007e18:	2303      	movs	r3, #3
 8007e1a:	e1d6      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007e1c:	f7ff fc25 	bl	800766a <LL_RCC_LSI1_IsReady>
 8007e20:	4603      	mov	r3, r0
 8007e22:	2b00      	cmp	r3, #0
 8007e24:	d1f1      	bne.n	8007e0a <HAL_RCC_OscConfig+0x31a>
 8007e26:	e051      	b.n	8007ecc <HAL_RCC_OscConfig+0x3dc>
 8007e28:	f7ff fbfd 	bl	8007626 <LL_RCC_LSI1_Enable>
 8007e2c:	f7fd f9ac 	bl	8005188 <HAL_GetTick>
 8007e30:	6278      	str	r0, [r7, #36]	; 0x24
 8007e32:	e00c      	b.n	8007e4e <HAL_RCC_OscConfig+0x35e>
 8007e34:	20000018 	.word	0x20000018
 8007e38:	2000001c 	.word	0x2000001c
 8007e3c:	f7fd f9a4 	bl	8005188 <HAL_GetTick>
 8007e40:	4602      	mov	r2, r0
 8007e42:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e44:	1ad3      	subs	r3, r2, r3
 8007e46:	2b02      	cmp	r3, #2
 8007e48:	d901      	bls.n	8007e4e <HAL_RCC_OscConfig+0x35e>
 8007e4a:	2303      	movs	r3, #3
 8007e4c:	e1bd      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007e4e:	f7ff fc0c 	bl	800766a <LL_RCC_LSI1_IsReady>
 8007e52:	4603      	mov	r3, r0
 8007e54:	2b00      	cmp	r3, #0
 8007e56:	d0f1      	beq.n	8007e3c <HAL_RCC_OscConfig+0x34c>
 8007e58:	f7ff fc2a 	bl	80076b0 <LL_RCC_LSI2_Disable>
 8007e5c:	e008      	b.n	8007e70 <HAL_RCC_OscConfig+0x380>
 8007e5e:	f7fd f993 	bl	8005188 <HAL_GetTick>
 8007e62:	4602      	mov	r2, r0
 8007e64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e66:	1ad3      	subs	r3, r2, r3
 8007e68:	2b03      	cmp	r3, #3
 8007e6a:	d901      	bls.n	8007e70 <HAL_RCC_OscConfig+0x380>
 8007e6c:	2303      	movs	r3, #3
 8007e6e:	e1ac      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007e70:	f7ff fc2f 	bl	80076d2 <LL_RCC_LSI2_IsReady>
 8007e74:	4603      	mov	r3, r0
 8007e76:	2b00      	cmp	r3, #0
 8007e78:	d1f1      	bne.n	8007e5e <HAL_RCC_OscConfig+0x36e>
 8007e7a:	e027      	b.n	8007ecc <HAL_RCC_OscConfig+0x3dc>
 8007e7c:	f7ff fc18 	bl	80076b0 <LL_RCC_LSI2_Disable>
 8007e80:	f7fd f982 	bl	8005188 <HAL_GetTick>
 8007e84:	6278      	str	r0, [r7, #36]	; 0x24
 8007e86:	e008      	b.n	8007e9a <HAL_RCC_OscConfig+0x3aa>
 8007e88:	f7fd f97e 	bl	8005188 <HAL_GetTick>
 8007e8c:	4602      	mov	r2, r0
 8007e8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e90:	1ad3      	subs	r3, r2, r3
 8007e92:	2b03      	cmp	r3, #3
 8007e94:	d901      	bls.n	8007e9a <HAL_RCC_OscConfig+0x3aa>
 8007e96:	2303      	movs	r3, #3
 8007e98:	e197      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007e9a:	f7ff fc1a 	bl	80076d2 <LL_RCC_LSI2_IsReady>
 8007e9e:	4603      	mov	r3, r0
 8007ea0:	2b00      	cmp	r3, #0
 8007ea2:	d1f1      	bne.n	8007e88 <HAL_RCC_OscConfig+0x398>
 8007ea4:	f7ff fbd0 	bl	8007648 <LL_RCC_LSI1_Disable>
 8007ea8:	f7fd f96e 	bl	8005188 <HAL_GetTick>
 8007eac:	6278      	str	r0, [r7, #36]	; 0x24
 8007eae:	e008      	b.n	8007ec2 <HAL_RCC_OscConfig+0x3d2>
 8007eb0:	f7fd f96a 	bl	8005188 <HAL_GetTick>
 8007eb4:	4602      	mov	r2, r0
 8007eb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007eb8:	1ad3      	subs	r3, r2, r3
 8007eba:	2b02      	cmp	r3, #2
 8007ebc:	d901      	bls.n	8007ec2 <HAL_RCC_OscConfig+0x3d2>
 8007ebe:	2303      	movs	r3, #3
 8007ec0:	e183      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007ec2:	f7ff fbd2 	bl	800766a <LL_RCC_LSI1_IsReady>
 8007ec6:	4603      	mov	r3, r0
 8007ec8:	2b00      	cmp	r3, #0
 8007eca:	d1f1      	bne.n	8007eb0 <HAL_RCC_OscConfig+0x3c0>
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	f003 0304 	and.w	r3, r3, #4
 8007ed4:	2b00      	cmp	r3, #0
 8007ed6:	d05b      	beq.n	8007f90 <HAL_RCC_OscConfig+0x4a0>
 8007ed8:	4ba7      	ldr	r3, [pc, #668]	; (8008178 <HAL_RCC_OscConfig+0x688>)
 8007eda:	681b      	ldr	r3, [r3, #0]
 8007edc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007ee0:	2b00      	cmp	r3, #0
 8007ee2:	d114      	bne.n	8007f0e <HAL_RCC_OscConfig+0x41e>
 8007ee4:	f7ff fa70 	bl	80073c8 <HAL_PWR_EnableBkUpAccess>
 8007ee8:	f7fd f94e 	bl	8005188 <HAL_GetTick>
 8007eec:	6278      	str	r0, [r7, #36]	; 0x24
 8007eee:	e008      	b.n	8007f02 <HAL_RCC_OscConfig+0x412>
 8007ef0:	f7fd f94a 	bl	8005188 <HAL_GetTick>
 8007ef4:	4602      	mov	r2, r0
 8007ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007ef8:	1ad3      	subs	r3, r2, r3
 8007efa:	2b02      	cmp	r3, #2
 8007efc:	d901      	bls.n	8007f02 <HAL_RCC_OscConfig+0x412>
 8007efe:	2303      	movs	r3, #3
 8007f00:	e163      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007f02:	4b9d      	ldr	r3, [pc, #628]	; (8008178 <HAL_RCC_OscConfig+0x688>)
 8007f04:	681b      	ldr	r3, [r3, #0]
 8007f06:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f0a:	2b00      	cmp	r3, #0
 8007f0c:	d0f0      	beq.n	8007ef0 <HAL_RCC_OscConfig+0x400>
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	689b      	ldr	r3, [r3, #8]
 8007f12:	2b01      	cmp	r3, #1
 8007f14:	d102      	bne.n	8007f1c <HAL_RCC_OscConfig+0x42c>
 8007f16:	f7ff fb30 	bl	800757a <LL_RCC_LSE_Enable>
 8007f1a:	e00c      	b.n	8007f36 <HAL_RCC_OscConfig+0x446>
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	689b      	ldr	r3, [r3, #8]
 8007f20:	2b05      	cmp	r3, #5
 8007f22:	d104      	bne.n	8007f2e <HAL_RCC_OscConfig+0x43e>
 8007f24:	f7ff fb4b 	bl	80075be <LL_RCC_LSE_EnableBypass>
 8007f28:	f7ff fb27 	bl	800757a <LL_RCC_LSE_Enable>
 8007f2c:	e003      	b.n	8007f36 <HAL_RCC_OscConfig+0x446>
 8007f2e:	f7ff fb35 	bl	800759c <LL_RCC_LSE_Disable>
 8007f32:	f7ff fb55 	bl	80075e0 <LL_RCC_LSE_DisableBypass>
 8007f36:	687b      	ldr	r3, [r7, #4]
 8007f38:	689b      	ldr	r3, [r3, #8]
 8007f3a:	2b00      	cmp	r3, #0
 8007f3c:	d014      	beq.n	8007f68 <HAL_RCC_OscConfig+0x478>
 8007f3e:	f7fd f923 	bl	8005188 <HAL_GetTick>
 8007f42:	6278      	str	r0, [r7, #36]	; 0x24
 8007f44:	e00a      	b.n	8007f5c <HAL_RCC_OscConfig+0x46c>
 8007f46:	f7fd f91f 	bl	8005188 <HAL_GetTick>
 8007f4a:	4602      	mov	r2, r0
 8007f4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f4e:	1ad3      	subs	r3, r2, r3
 8007f50:	f241 3288 	movw	r2, #5000	; 0x1388
 8007f54:	4293      	cmp	r3, r2
 8007f56:	d901      	bls.n	8007f5c <HAL_RCC_OscConfig+0x46c>
 8007f58:	2303      	movs	r3, #3
 8007f5a:	e136      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007f5c:	f7ff fb51 	bl	8007602 <LL_RCC_LSE_IsReady>
 8007f60:	4603      	mov	r3, r0
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d0ef      	beq.n	8007f46 <HAL_RCC_OscConfig+0x456>
 8007f66:	e013      	b.n	8007f90 <HAL_RCC_OscConfig+0x4a0>
 8007f68:	f7fd f90e 	bl	8005188 <HAL_GetTick>
 8007f6c:	6278      	str	r0, [r7, #36]	; 0x24
 8007f6e:	e00a      	b.n	8007f86 <HAL_RCC_OscConfig+0x496>
 8007f70:	f7fd f90a 	bl	8005188 <HAL_GetTick>
 8007f74:	4602      	mov	r2, r0
 8007f76:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f78:	1ad3      	subs	r3, r2, r3
 8007f7a:	f241 3288 	movw	r2, #5000	; 0x1388
 8007f7e:	4293      	cmp	r3, r2
 8007f80:	d901      	bls.n	8007f86 <HAL_RCC_OscConfig+0x496>
 8007f82:	2303      	movs	r3, #3
 8007f84:	e121      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007f86:	f7ff fb3c 	bl	8007602 <LL_RCC_LSE_IsReady>
 8007f8a:	4603      	mov	r3, r0
 8007f8c:	2b00      	cmp	r3, #0
 8007f8e:	d1ef      	bne.n	8007f70 <HAL_RCC_OscConfig+0x480>
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007f98:	2b00      	cmp	r3, #0
 8007f9a:	d02c      	beq.n	8007ff6 <HAL_RCC_OscConfig+0x506>
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007fa0:	2b00      	cmp	r3, #0
 8007fa2:	d014      	beq.n	8007fce <HAL_RCC_OscConfig+0x4de>
 8007fa4:	f7ff fab5 	bl	8007512 <LL_RCC_HSI48_Enable>
 8007fa8:	f7fd f8ee 	bl	8005188 <HAL_GetTick>
 8007fac:	6278      	str	r0, [r7, #36]	; 0x24
 8007fae:	e008      	b.n	8007fc2 <HAL_RCC_OscConfig+0x4d2>
 8007fb0:	f7fd f8ea 	bl	8005188 <HAL_GetTick>
 8007fb4:	4602      	mov	r2, r0
 8007fb6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007fb8:	1ad3      	subs	r3, r2, r3
 8007fba:	2b02      	cmp	r3, #2
 8007fbc:	d901      	bls.n	8007fc2 <HAL_RCC_OscConfig+0x4d2>
 8007fbe:	2303      	movs	r3, #3
 8007fc0:	e103      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007fc2:	f7ff fac8 	bl	8007556 <LL_RCC_HSI48_IsReady>
 8007fc6:	4603      	mov	r3, r0
 8007fc8:	2b00      	cmp	r3, #0
 8007fca:	d0f1      	beq.n	8007fb0 <HAL_RCC_OscConfig+0x4c0>
 8007fcc:	e013      	b.n	8007ff6 <HAL_RCC_OscConfig+0x506>
 8007fce:	f7ff fab1 	bl	8007534 <LL_RCC_HSI48_Disable>
 8007fd2:	f7fd f8d9 	bl	8005188 <HAL_GetTick>
 8007fd6:	6278      	str	r0, [r7, #36]	; 0x24
 8007fd8:	e008      	b.n	8007fec <HAL_RCC_OscConfig+0x4fc>
 8007fda:	f7fd f8d5 	bl	8005188 <HAL_GetTick>
 8007fde:	4602      	mov	r2, r0
 8007fe0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007fe2:	1ad3      	subs	r3, r2, r3
 8007fe4:	2b02      	cmp	r3, #2
 8007fe6:	d901      	bls.n	8007fec <HAL_RCC_OscConfig+0x4fc>
 8007fe8:	2303      	movs	r3, #3
 8007fea:	e0ee      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8007fec:	f7ff fab3 	bl	8007556 <LL_RCC_HSI48_IsReady>
 8007ff0:	4603      	mov	r3, r0
 8007ff2:	2b00      	cmp	r3, #0
 8007ff4:	d1f1      	bne.n	8007fda <HAL_RCC_OscConfig+0x4ea>
 8007ff6:	687b      	ldr	r3, [r7, #4]
 8007ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	f000 80e4 	beq.w	80081c8 <HAL_RCC_OscConfig+0x6d8>
 8008000:	f7ff fc11 	bl	8007826 <LL_RCC_GetSysClkSource>
 8008004:	6138      	str	r0, [r7, #16]
 8008006:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800800a:	68db      	ldr	r3, [r3, #12]
 800800c:	60fb      	str	r3, [r7, #12]
 800800e:	687b      	ldr	r3, [r7, #4]
 8008010:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008012:	2b02      	cmp	r3, #2
 8008014:	f040 80b4 	bne.w	8008180 <HAL_RCC_OscConfig+0x690>
 8008018:	68fb      	ldr	r3, [r7, #12]
 800801a:	f003 0203 	and.w	r2, r3, #3
 800801e:	687b      	ldr	r3, [r7, #4]
 8008020:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008022:	429a      	cmp	r2, r3
 8008024:	d123      	bne.n	800806e <HAL_RCC_OscConfig+0x57e>
 8008026:	68fb      	ldr	r3, [r7, #12]
 8008028:	f003 0270 	and.w	r2, r3, #112	; 0x70
 800802c:	687b      	ldr	r3, [r7, #4]
 800802e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008030:	429a      	cmp	r2, r3
 8008032:	d11c      	bne.n	800806e <HAL_RCC_OscConfig+0x57e>
 8008034:	68fb      	ldr	r3, [r7, #12]
 8008036:	0a1b      	lsrs	r3, r3, #8
 8008038:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008040:	429a      	cmp	r2, r3
 8008042:	d114      	bne.n	800806e <HAL_RCC_OscConfig+0x57e>
 8008044:	68fb      	ldr	r3, [r7, #12]
 8008046:	f403 1278 	and.w	r2, r3, #4063232	; 0x3e0000
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800804e:	429a      	cmp	r2, r3
 8008050:	d10d      	bne.n	800806e <HAL_RCC_OscConfig+0x57e>
 8008052:	68fb      	ldr	r3, [r7, #12]
 8008054:	f003 6260 	and.w	r2, r3, #234881024	; 0xe000000
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800805c:	429a      	cmp	r2, r3
 800805e:	d106      	bne.n	800806e <HAL_RCC_OscConfig+0x57e>
 8008060:	68fb      	ldr	r3, [r7, #12]
 8008062:	f003 4260 	and.w	r2, r3, #3758096384	; 0xe0000000
 8008066:	687b      	ldr	r3, [r7, #4]
 8008068:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800806a:	429a      	cmp	r2, r3
 800806c:	d05d      	beq.n	800812a <HAL_RCC_OscConfig+0x63a>
 800806e:	693b      	ldr	r3, [r7, #16]
 8008070:	2b0c      	cmp	r3, #12
 8008072:	d058      	beq.n	8008126 <HAL_RCC_OscConfig+0x636>
 8008074:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008078:	681b      	ldr	r3, [r3, #0]
 800807a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800807e:	2b00      	cmp	r3, #0
 8008080:	d001      	beq.n	8008086 <HAL_RCC_OscConfig+0x596>
 8008082:	2301      	movs	r3, #1
 8008084:	e0a1      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8008086:	f7ff fc84 	bl	8007992 <LL_RCC_PLL_Disable>
 800808a:	f7fd f87d 	bl	8005188 <HAL_GetTick>
 800808e:	6278      	str	r0, [r7, #36]	; 0x24
 8008090:	e008      	b.n	80080a4 <HAL_RCC_OscConfig+0x5b4>
 8008092:	f7fd f879 	bl	8005188 <HAL_GetTick>
 8008096:	4602      	mov	r2, r0
 8008098:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800809a:	1ad3      	subs	r3, r2, r3
 800809c:	2b02      	cmp	r3, #2
 800809e:	d901      	bls.n	80080a4 <HAL_RCC_OscConfig+0x5b4>
 80080a0:	2303      	movs	r3, #3
 80080a2:	e092      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 80080a4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80080a8:	681b      	ldr	r3, [r3, #0]
 80080aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d1ef      	bne.n	8008092 <HAL_RCC_OscConfig+0x5a2>
 80080b2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80080b6:	68da      	ldr	r2, [r3, #12]
 80080b8:	4b30      	ldr	r3, [pc, #192]	; (800817c <HAL_RCC_OscConfig+0x68c>)
 80080ba:	4013      	ands	r3, r2
 80080bc:	687a      	ldr	r2, [r7, #4]
 80080be:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80080c0:	687a      	ldr	r2, [r7, #4]
 80080c2:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80080c4:	4311      	orrs	r1, r2
 80080c6:	687a      	ldr	r2, [r7, #4]
 80080c8:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80080ca:	0212      	lsls	r2, r2, #8
 80080cc:	4311      	orrs	r1, r2
 80080ce:	687a      	ldr	r2, [r7, #4]
 80080d0:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80080d2:	4311      	orrs	r1, r2
 80080d4:	687a      	ldr	r2, [r7, #4]
 80080d6:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80080d8:	4311      	orrs	r1, r2
 80080da:	687a      	ldr	r2, [r7, #4]
 80080dc:	6c52      	ldr	r2, [r2, #68]	; 0x44
 80080de:	430a      	orrs	r2, r1
 80080e0:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80080e4:	4313      	orrs	r3, r2
 80080e6:	60cb      	str	r3, [r1, #12]
 80080e8:	f7ff fc44 	bl	8007974 <LL_RCC_PLL_Enable>
 80080ec:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80080f0:	68db      	ldr	r3, [r3, #12]
 80080f2:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80080f6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80080fa:	60d3      	str	r3, [r2, #12]
 80080fc:	f7fd f844 	bl	8005188 <HAL_GetTick>
 8008100:	6278      	str	r0, [r7, #36]	; 0x24
 8008102:	e008      	b.n	8008116 <HAL_RCC_OscConfig+0x626>
 8008104:	f7fd f840 	bl	8005188 <HAL_GetTick>
 8008108:	4602      	mov	r2, r0
 800810a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800810c:	1ad3      	subs	r3, r2, r3
 800810e:	2b02      	cmp	r3, #2
 8008110:	d901      	bls.n	8008116 <HAL_RCC_OscConfig+0x626>
 8008112:	2303      	movs	r3, #3
 8008114:	e059      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8008116:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008120:	2b00      	cmp	r3, #0
 8008122:	d0ef      	beq.n	8008104 <HAL_RCC_OscConfig+0x614>
 8008124:	e050      	b.n	80081c8 <HAL_RCC_OscConfig+0x6d8>
 8008126:	2301      	movs	r3, #1
 8008128:	e04f      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 800812a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800812e:	681b      	ldr	r3, [r3, #0]
 8008130:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008134:	2b00      	cmp	r3, #0
 8008136:	d147      	bne.n	80081c8 <HAL_RCC_OscConfig+0x6d8>
 8008138:	f7ff fc1c 	bl	8007974 <LL_RCC_PLL_Enable>
 800813c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008140:	68db      	ldr	r3, [r3, #12]
 8008142:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008146:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800814a:	60d3      	str	r3, [r2, #12]
 800814c:	f7fd f81c 	bl	8005188 <HAL_GetTick>
 8008150:	6278      	str	r0, [r7, #36]	; 0x24
 8008152:	e008      	b.n	8008166 <HAL_RCC_OscConfig+0x676>
 8008154:	f7fd f818 	bl	8005188 <HAL_GetTick>
 8008158:	4602      	mov	r2, r0
 800815a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800815c:	1ad3      	subs	r3, r2, r3
 800815e:	2b02      	cmp	r3, #2
 8008160:	d901      	bls.n	8008166 <HAL_RCC_OscConfig+0x676>
 8008162:	2303      	movs	r3, #3
 8008164:	e031      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 8008166:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800816a:	681b      	ldr	r3, [r3, #0]
 800816c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008170:	2b00      	cmp	r3, #0
 8008172:	d0ef      	beq.n	8008154 <HAL_RCC_OscConfig+0x664>
 8008174:	e028      	b.n	80081c8 <HAL_RCC_OscConfig+0x6d8>
 8008176:	bf00      	nop
 8008178:	58000400 	.word	0x58000400
 800817c:	11c1808c 	.word	0x11c1808c
 8008180:	693b      	ldr	r3, [r7, #16]
 8008182:	2b0c      	cmp	r3, #12
 8008184:	d01e      	beq.n	80081c4 <HAL_RCC_OscConfig+0x6d4>
 8008186:	f7ff fc04 	bl	8007992 <LL_RCC_PLL_Disable>
 800818a:	f7fc fffd 	bl	8005188 <HAL_GetTick>
 800818e:	6278      	str	r0, [r7, #36]	; 0x24
 8008190:	e008      	b.n	80081a4 <HAL_RCC_OscConfig+0x6b4>
 8008192:	f7fc fff9 	bl	8005188 <HAL_GetTick>
 8008196:	4602      	mov	r2, r0
 8008198:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800819a:	1ad3      	subs	r3, r2, r3
 800819c:	2b02      	cmp	r3, #2
 800819e:	d901      	bls.n	80081a4 <HAL_RCC_OscConfig+0x6b4>
 80081a0:	2303      	movs	r3, #3
 80081a2:	e012      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 80081a4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d1ef      	bne.n	8008192 <HAL_RCC_OscConfig+0x6a2>
 80081b2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80081b6:	68da      	ldr	r2, [r3, #12]
 80081b8:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80081bc:	4b05      	ldr	r3, [pc, #20]	; (80081d4 <HAL_RCC_OscConfig+0x6e4>)
 80081be:	4013      	ands	r3, r2
 80081c0:	60cb      	str	r3, [r1, #12]
 80081c2:	e001      	b.n	80081c8 <HAL_RCC_OscConfig+0x6d8>
 80081c4:	2301      	movs	r3, #1
 80081c6:	e000      	b.n	80081ca <HAL_RCC_OscConfig+0x6da>
 80081c8:	2300      	movs	r3, #0
 80081ca:	4618      	mov	r0, r3
 80081cc:	3734      	adds	r7, #52	; 0x34
 80081ce:	46bd      	mov	sp, r7
 80081d0:	bd90      	pop	{r4, r7, pc}
 80081d2:	bf00      	nop
 80081d4:	eefefffc 	.word	0xeefefffc

080081d8 <HAL_RCC_ClockConfig>:
 80081d8:	b580      	push	{r7, lr}
 80081da:	b084      	sub	sp, #16
 80081dc:	af00      	add	r7, sp, #0
 80081de:	6078      	str	r0, [r7, #4]
 80081e0:	6039      	str	r1, [r7, #0]
 80081e2:	687b      	ldr	r3, [r7, #4]
 80081e4:	2b00      	cmp	r3, #0
 80081e6:	d101      	bne.n	80081ec <HAL_RCC_ClockConfig+0x14>
 80081e8:	2301      	movs	r3, #1
 80081ea:	e12d      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 80081ec:	4b98      	ldr	r3, [pc, #608]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 80081ee:	681b      	ldr	r3, [r3, #0]
 80081f0:	f003 0307 	and.w	r3, r3, #7
 80081f4:	683a      	ldr	r2, [r7, #0]
 80081f6:	429a      	cmp	r2, r3
 80081f8:	d91b      	bls.n	8008232 <HAL_RCC_ClockConfig+0x5a>
 80081fa:	4b95      	ldr	r3, [pc, #596]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 80081fc:	681b      	ldr	r3, [r3, #0]
 80081fe:	f023 0207 	bic.w	r2, r3, #7
 8008202:	4993      	ldr	r1, [pc, #588]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 8008204:	683b      	ldr	r3, [r7, #0]
 8008206:	4313      	orrs	r3, r2
 8008208:	600b      	str	r3, [r1, #0]
 800820a:	f7fc ffbd 	bl	8005188 <HAL_GetTick>
 800820e:	60f8      	str	r0, [r7, #12]
 8008210:	e008      	b.n	8008224 <HAL_RCC_ClockConfig+0x4c>
 8008212:	f7fc ffb9 	bl	8005188 <HAL_GetTick>
 8008216:	4602      	mov	r2, r0
 8008218:	68fb      	ldr	r3, [r7, #12]
 800821a:	1ad3      	subs	r3, r2, r3
 800821c:	2b02      	cmp	r3, #2
 800821e:	d901      	bls.n	8008224 <HAL_RCC_ClockConfig+0x4c>
 8008220:	2303      	movs	r3, #3
 8008222:	e111      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 8008224:	4b8a      	ldr	r3, [pc, #552]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 8008226:	681b      	ldr	r3, [r3, #0]
 8008228:	f003 0307 	and.w	r3, r3, #7
 800822c:	683a      	ldr	r2, [r7, #0]
 800822e:	429a      	cmp	r2, r3
 8008230:	d1ef      	bne.n	8008212 <HAL_RCC_ClockConfig+0x3a>
 8008232:	687b      	ldr	r3, [r7, #4]
 8008234:	681b      	ldr	r3, [r3, #0]
 8008236:	f003 0302 	and.w	r3, r3, #2
 800823a:	2b00      	cmp	r3, #0
 800823c:	d016      	beq.n	800826c <HAL_RCC_ClockConfig+0x94>
 800823e:	687b      	ldr	r3, [r7, #4]
 8008240:	689b      	ldr	r3, [r3, #8]
 8008242:	4618      	mov	r0, r3
 8008244:	f7ff fafb 	bl	800783e <LL_RCC_SetAHBPrescaler>
 8008248:	f7fc ff9e 	bl	8005188 <HAL_GetTick>
 800824c:	60f8      	str	r0, [r7, #12]
 800824e:	e008      	b.n	8008262 <HAL_RCC_ClockConfig+0x8a>
 8008250:	f7fc ff9a 	bl	8005188 <HAL_GetTick>
 8008254:	4602      	mov	r2, r0
 8008256:	68fb      	ldr	r3, [r7, #12]
 8008258:	1ad3      	subs	r3, r2, r3
 800825a:	2b02      	cmp	r3, #2
 800825c:	d901      	bls.n	8008262 <HAL_RCC_ClockConfig+0x8a>
 800825e:	2303      	movs	r3, #3
 8008260:	e0f2      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 8008262:	f7ff fbe8 	bl	8007a36 <LL_RCC_IsActiveFlag_HPRE>
 8008266:	4603      	mov	r3, r0
 8008268:	2b00      	cmp	r3, #0
 800826a:	d0f1      	beq.n	8008250 <HAL_RCC_ClockConfig+0x78>
 800826c:	687b      	ldr	r3, [r7, #4]
 800826e:	681b      	ldr	r3, [r3, #0]
 8008270:	f003 0320 	and.w	r3, r3, #32
 8008274:	2b00      	cmp	r3, #0
 8008276:	d016      	beq.n	80082a6 <HAL_RCC_ClockConfig+0xce>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	695b      	ldr	r3, [r3, #20]
 800827c:	4618      	mov	r0, r3
 800827e:	f7ff faf2 	bl	8007866 <LL_C2_RCC_SetAHBPrescaler>
 8008282:	f7fc ff81 	bl	8005188 <HAL_GetTick>
 8008286:	60f8      	str	r0, [r7, #12]
 8008288:	e008      	b.n	800829c <HAL_RCC_ClockConfig+0xc4>
 800828a:	f7fc ff7d 	bl	8005188 <HAL_GetTick>
 800828e:	4602      	mov	r2, r0
 8008290:	68fb      	ldr	r3, [r7, #12]
 8008292:	1ad3      	subs	r3, r2, r3
 8008294:	2b02      	cmp	r3, #2
 8008296:	d901      	bls.n	800829c <HAL_RCC_ClockConfig+0xc4>
 8008298:	2303      	movs	r3, #3
 800829a:	e0d5      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 800829c:	f7ff fbdd 	bl	8007a5a <LL_RCC_IsActiveFlag_C2HPRE>
 80082a0:	4603      	mov	r3, r0
 80082a2:	2b00      	cmp	r3, #0
 80082a4:	d0f1      	beq.n	800828a <HAL_RCC_ClockConfig+0xb2>
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	681b      	ldr	r3, [r3, #0]
 80082aa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80082ae:	2b00      	cmp	r3, #0
 80082b0:	d016      	beq.n	80082e0 <HAL_RCC_ClockConfig+0x108>
 80082b2:	687b      	ldr	r3, [r7, #4]
 80082b4:	699b      	ldr	r3, [r3, #24]
 80082b6:	4618      	mov	r0, r3
 80082b8:	f7ff faeb 	bl	8007892 <LL_RCC_SetAHB4Prescaler>
 80082bc:	f7fc ff64 	bl	8005188 <HAL_GetTick>
 80082c0:	60f8      	str	r0, [r7, #12]
 80082c2:	e008      	b.n	80082d6 <HAL_RCC_ClockConfig+0xfe>
 80082c4:	f7fc ff60 	bl	8005188 <HAL_GetTick>
 80082c8:	4602      	mov	r2, r0
 80082ca:	68fb      	ldr	r3, [r7, #12]
 80082cc:	1ad3      	subs	r3, r2, r3
 80082ce:	2b02      	cmp	r3, #2
 80082d0:	d901      	bls.n	80082d6 <HAL_RCC_ClockConfig+0xfe>
 80082d2:	2303      	movs	r3, #3
 80082d4:	e0b8      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 80082d6:	f7ff fbd3 	bl	8007a80 <LL_RCC_IsActiveFlag_SHDHPRE>
 80082da:	4603      	mov	r3, r0
 80082dc:	2b00      	cmp	r3, #0
 80082de:	d0f1      	beq.n	80082c4 <HAL_RCC_ClockConfig+0xec>
 80082e0:	687b      	ldr	r3, [r7, #4]
 80082e2:	681b      	ldr	r3, [r3, #0]
 80082e4:	f003 0304 	and.w	r3, r3, #4
 80082e8:	2b00      	cmp	r3, #0
 80082ea:	d016      	beq.n	800831a <HAL_RCC_ClockConfig+0x142>
 80082ec:	687b      	ldr	r3, [r7, #4]
 80082ee:	68db      	ldr	r3, [r3, #12]
 80082f0:	4618      	mov	r0, r3
 80082f2:	f7ff fae5 	bl	80078c0 <LL_RCC_SetAPB1Prescaler>
 80082f6:	f7fc ff47 	bl	8005188 <HAL_GetTick>
 80082fa:	60f8      	str	r0, [r7, #12]
 80082fc:	e008      	b.n	8008310 <HAL_RCC_ClockConfig+0x138>
 80082fe:	f7fc ff43 	bl	8005188 <HAL_GetTick>
 8008302:	4602      	mov	r2, r0
 8008304:	68fb      	ldr	r3, [r7, #12]
 8008306:	1ad3      	subs	r3, r2, r3
 8008308:	2b02      	cmp	r3, #2
 800830a:	d901      	bls.n	8008310 <HAL_RCC_ClockConfig+0x138>
 800830c:	2303      	movs	r3, #3
 800830e:	e09b      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 8008310:	f7ff fbc9 	bl	8007aa6 <LL_RCC_IsActiveFlag_PPRE1>
 8008314:	4603      	mov	r3, r0
 8008316:	2b00      	cmp	r3, #0
 8008318:	d0f1      	beq.n	80082fe <HAL_RCC_ClockConfig+0x126>
 800831a:	687b      	ldr	r3, [r7, #4]
 800831c:	681b      	ldr	r3, [r3, #0]
 800831e:	f003 0308 	and.w	r3, r3, #8
 8008322:	2b00      	cmp	r3, #0
 8008324:	d017      	beq.n	8008356 <HAL_RCC_ClockConfig+0x17e>
 8008326:	687b      	ldr	r3, [r7, #4]
 8008328:	691b      	ldr	r3, [r3, #16]
 800832a:	00db      	lsls	r3, r3, #3
 800832c:	4618      	mov	r0, r3
 800832e:	f7ff fadb 	bl	80078e8 <LL_RCC_SetAPB2Prescaler>
 8008332:	f7fc ff29 	bl	8005188 <HAL_GetTick>
 8008336:	60f8      	str	r0, [r7, #12]
 8008338:	e008      	b.n	800834c <HAL_RCC_ClockConfig+0x174>
 800833a:	f7fc ff25 	bl	8005188 <HAL_GetTick>
 800833e:	4602      	mov	r2, r0
 8008340:	68fb      	ldr	r3, [r7, #12]
 8008342:	1ad3      	subs	r3, r2, r3
 8008344:	2b02      	cmp	r3, #2
 8008346:	d901      	bls.n	800834c <HAL_RCC_ClockConfig+0x174>
 8008348:	2303      	movs	r3, #3
 800834a:	e07d      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 800834c:	f7ff fbbd 	bl	8007aca <LL_RCC_IsActiveFlag_PPRE2>
 8008350:	4603      	mov	r3, r0
 8008352:	2b00      	cmp	r3, #0
 8008354:	d0f1      	beq.n	800833a <HAL_RCC_ClockConfig+0x162>
 8008356:	687b      	ldr	r3, [r7, #4]
 8008358:	681b      	ldr	r3, [r3, #0]
 800835a:	f003 0301 	and.w	r3, r3, #1
 800835e:	2b00      	cmp	r3, #0
 8008360:	d043      	beq.n	80083ea <HAL_RCC_ClockConfig+0x212>
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	685b      	ldr	r3, [r3, #4]
 8008366:	2b02      	cmp	r3, #2
 8008368:	d106      	bne.n	8008378 <HAL_RCC_ClockConfig+0x1a0>
 800836a:	f7ff f87b 	bl	8007464 <LL_RCC_HSE_IsReady>
 800836e:	4603      	mov	r3, r0
 8008370:	2b00      	cmp	r3, #0
 8008372:	d11e      	bne.n	80083b2 <HAL_RCC_ClockConfig+0x1da>
 8008374:	2301      	movs	r3, #1
 8008376:	e067      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	685b      	ldr	r3, [r3, #4]
 800837c:	2b03      	cmp	r3, #3
 800837e:	d106      	bne.n	800838e <HAL_RCC_ClockConfig+0x1b6>
 8008380:	f7ff fb16 	bl	80079b0 <LL_RCC_PLL_IsReady>
 8008384:	4603      	mov	r3, r0
 8008386:	2b00      	cmp	r3, #0
 8008388:	d113      	bne.n	80083b2 <HAL_RCC_ClockConfig+0x1da>
 800838a:	2301      	movs	r3, #1
 800838c:	e05c      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	685b      	ldr	r3, [r3, #4]
 8008392:	2b00      	cmp	r3, #0
 8008394:	d106      	bne.n	80083a4 <HAL_RCC_ClockConfig+0x1cc>
 8008396:	f7ff f9e3 	bl	8007760 <LL_RCC_MSI_IsReady>
 800839a:	4603      	mov	r3, r0
 800839c:	2b00      	cmp	r3, #0
 800839e:	d108      	bne.n	80083b2 <HAL_RCC_ClockConfig+0x1da>
 80083a0:	2301      	movs	r3, #1
 80083a2:	e051      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 80083a4:	f7ff f88e 	bl	80074c4 <LL_RCC_HSI_IsReady>
 80083a8:	4603      	mov	r3, r0
 80083aa:	2b00      	cmp	r3, #0
 80083ac:	d101      	bne.n	80083b2 <HAL_RCC_ClockConfig+0x1da>
 80083ae:	2301      	movs	r3, #1
 80083b0:	e04a      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	685b      	ldr	r3, [r3, #4]
 80083b6:	4618      	mov	r0, r3
 80083b8:	f7ff fa21 	bl	80077fe <LL_RCC_SetSysClkSource>
 80083bc:	f7fc fee4 	bl	8005188 <HAL_GetTick>
 80083c0:	60f8      	str	r0, [r7, #12]
 80083c2:	e00a      	b.n	80083da <HAL_RCC_ClockConfig+0x202>
 80083c4:	f7fc fee0 	bl	8005188 <HAL_GetTick>
 80083c8:	4602      	mov	r2, r0
 80083ca:	68fb      	ldr	r3, [r7, #12]
 80083cc:	1ad3      	subs	r3, r2, r3
 80083ce:	f241 3288 	movw	r2, #5000	; 0x1388
 80083d2:	4293      	cmp	r3, r2
 80083d4:	d901      	bls.n	80083da <HAL_RCC_ClockConfig+0x202>
 80083d6:	2303      	movs	r3, #3
 80083d8:	e036      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 80083da:	f7ff fa24 	bl	8007826 <LL_RCC_GetSysClkSource>
 80083de:	4602      	mov	r2, r0
 80083e0:	687b      	ldr	r3, [r7, #4]
 80083e2:	685b      	ldr	r3, [r3, #4]
 80083e4:	009b      	lsls	r3, r3, #2
 80083e6:	429a      	cmp	r2, r3
 80083e8:	d1ec      	bne.n	80083c4 <HAL_RCC_ClockConfig+0x1ec>
 80083ea:	4b19      	ldr	r3, [pc, #100]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 80083ec:	681b      	ldr	r3, [r3, #0]
 80083ee:	f003 0307 	and.w	r3, r3, #7
 80083f2:	683a      	ldr	r2, [r7, #0]
 80083f4:	429a      	cmp	r2, r3
 80083f6:	d21b      	bcs.n	8008430 <HAL_RCC_ClockConfig+0x258>
 80083f8:	4b15      	ldr	r3, [pc, #84]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 80083fa:	681b      	ldr	r3, [r3, #0]
 80083fc:	f023 0207 	bic.w	r2, r3, #7
 8008400:	4913      	ldr	r1, [pc, #76]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 8008402:	683b      	ldr	r3, [r7, #0]
 8008404:	4313      	orrs	r3, r2
 8008406:	600b      	str	r3, [r1, #0]
 8008408:	f7fc febe 	bl	8005188 <HAL_GetTick>
 800840c:	60f8      	str	r0, [r7, #12]
 800840e:	e008      	b.n	8008422 <HAL_RCC_ClockConfig+0x24a>
 8008410:	f7fc feba 	bl	8005188 <HAL_GetTick>
 8008414:	4602      	mov	r2, r0
 8008416:	68fb      	ldr	r3, [r7, #12]
 8008418:	1ad3      	subs	r3, r2, r3
 800841a:	2b02      	cmp	r3, #2
 800841c:	d901      	bls.n	8008422 <HAL_RCC_ClockConfig+0x24a>
 800841e:	2303      	movs	r3, #3
 8008420:	e012      	b.n	8008448 <HAL_RCC_ClockConfig+0x270>
 8008422:	4b0b      	ldr	r3, [pc, #44]	; (8008450 <HAL_RCC_ClockConfig+0x278>)
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	f003 0307 	and.w	r3, r3, #7
 800842a:	683a      	ldr	r2, [r7, #0]
 800842c:	429a      	cmp	r2, r3
 800842e:	d1ef      	bne.n	8008410 <HAL_RCC_ClockConfig+0x238>
 8008430:	f000 f87e 	bl	8008530 <HAL_RCC_GetHCLKFreq>
 8008434:	4603      	mov	r3, r0
 8008436:	4a07      	ldr	r2, [pc, #28]	; (8008454 <HAL_RCC_ClockConfig+0x27c>)
 8008438:	6013      	str	r3, [r2, #0]
 800843a:	f7fc feb1 	bl	80051a0 <HAL_GetTickPrio>
 800843e:	4603      	mov	r3, r0
 8008440:	4618      	mov	r0, r3
 8008442:	f7fc fe53 	bl	80050ec <HAL_InitTick>
 8008446:	4603      	mov	r3, r0
 8008448:	4618      	mov	r0, r3
 800844a:	3710      	adds	r7, #16
 800844c:	46bd      	mov	sp, r7
 800844e:	bd80      	pop	{r7, pc}
 8008450:	58004000 	.word	0x58004000
 8008454:	20000018 	.word	0x20000018

08008458 <HAL_RCC_GetSysClockFreq>:
 8008458:	b590      	push	{r4, r7, lr}
 800845a:	b085      	sub	sp, #20
 800845c:	af00      	add	r7, sp, #0
 800845e:	f7ff f9e2 	bl	8007826 <LL_RCC_GetSysClkSource>
 8008462:	6078      	str	r0, [r7, #4]
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	2b00      	cmp	r3, #0
 8008468:	d10a      	bne.n	8008480 <HAL_RCC_GetSysClockFreq+0x28>
 800846a:	f7ff f99e 	bl	80077aa <LL_RCC_MSI_GetRange>
 800846e:	4603      	mov	r3, r0
 8008470:	091b      	lsrs	r3, r3, #4
 8008472:	f003 030f 	and.w	r3, r3, #15
 8008476:	4a2b      	ldr	r2, [pc, #172]	; (8008524 <HAL_RCC_GetSysClockFreq+0xcc>)
 8008478:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800847c:	60fb      	str	r3, [r7, #12]
 800847e:	e04b      	b.n	8008518 <HAL_RCC_GetSysClockFreq+0xc0>
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	2b04      	cmp	r3, #4
 8008484:	d102      	bne.n	800848c <HAL_RCC_GetSysClockFreq+0x34>
 8008486:	4b28      	ldr	r3, [pc, #160]	; (8008528 <HAL_RCC_GetSysClockFreq+0xd0>)
 8008488:	60fb      	str	r3, [r7, #12]
 800848a:	e045      	b.n	8008518 <HAL_RCC_GetSysClockFreq+0xc0>
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	2b08      	cmp	r3, #8
 8008490:	d10a      	bne.n	80084a8 <HAL_RCC_GetSysClockFreq+0x50>
 8008492:	f7fe ffb7 	bl	8007404 <LL_RCC_HSE_IsEnabledDiv2>
 8008496:	4603      	mov	r3, r0
 8008498:	2b01      	cmp	r3, #1
 800849a:	d102      	bne.n	80084a2 <HAL_RCC_GetSysClockFreq+0x4a>
 800849c:	4b22      	ldr	r3, [pc, #136]	; (8008528 <HAL_RCC_GetSysClockFreq+0xd0>)
 800849e:	60fb      	str	r3, [r7, #12]
 80084a0:	e03a      	b.n	8008518 <HAL_RCC_GetSysClockFreq+0xc0>
 80084a2:	4b22      	ldr	r3, [pc, #136]	; (800852c <HAL_RCC_GetSysClockFreq+0xd4>)
 80084a4:	60fb      	str	r3, [r7, #12]
 80084a6:	e037      	b.n	8008518 <HAL_RCC_GetSysClockFreq+0xc0>
 80084a8:	f7ff fab9 	bl	8007a1e <LL_RCC_PLL_GetMainSource>
 80084ac:	6038      	str	r0, [r7, #0]
 80084ae:	683b      	ldr	r3, [r7, #0]
 80084b0:	2b02      	cmp	r3, #2
 80084b2:	d003      	beq.n	80084bc <HAL_RCC_GetSysClockFreq+0x64>
 80084b4:	683b      	ldr	r3, [r7, #0]
 80084b6:	2b03      	cmp	r3, #3
 80084b8:	d003      	beq.n	80084c2 <HAL_RCC_GetSysClockFreq+0x6a>
 80084ba:	e00d      	b.n	80084d8 <HAL_RCC_GetSysClockFreq+0x80>
 80084bc:	4b1a      	ldr	r3, [pc, #104]	; (8008528 <HAL_RCC_GetSysClockFreq+0xd0>)
 80084be:	60bb      	str	r3, [r7, #8]
 80084c0:	e015      	b.n	80084ee <HAL_RCC_GetSysClockFreq+0x96>
 80084c2:	f7fe ff9f 	bl	8007404 <LL_RCC_HSE_IsEnabledDiv2>
 80084c6:	4603      	mov	r3, r0
 80084c8:	2b01      	cmp	r3, #1
 80084ca:	d102      	bne.n	80084d2 <HAL_RCC_GetSysClockFreq+0x7a>
 80084cc:	4b16      	ldr	r3, [pc, #88]	; (8008528 <HAL_RCC_GetSysClockFreq+0xd0>)
 80084ce:	60bb      	str	r3, [r7, #8]
 80084d0:	e00d      	b.n	80084ee <HAL_RCC_GetSysClockFreq+0x96>
 80084d2:	4b16      	ldr	r3, [pc, #88]	; (800852c <HAL_RCC_GetSysClockFreq+0xd4>)
 80084d4:	60bb      	str	r3, [r7, #8]
 80084d6:	e00a      	b.n	80084ee <HAL_RCC_GetSysClockFreq+0x96>
 80084d8:	f7ff f967 	bl	80077aa <LL_RCC_MSI_GetRange>
 80084dc:	4603      	mov	r3, r0
 80084de:	091b      	lsrs	r3, r3, #4
 80084e0:	f003 030f 	and.w	r3, r3, #15
 80084e4:	4a0f      	ldr	r2, [pc, #60]	; (8008524 <HAL_RCC_GetSysClockFreq+0xcc>)
 80084e6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80084ea:	60bb      	str	r3, [r7, #8]
 80084ec:	bf00      	nop
 80084ee:	f7ff fa71 	bl	80079d4 <LL_RCC_PLL_GetN>
 80084f2:	4602      	mov	r2, r0
 80084f4:	68bb      	ldr	r3, [r7, #8]
 80084f6:	fb03 f402 	mul.w	r4, r3, r2
 80084fa:	f7ff fa84 	bl	8007a06 <LL_RCC_PLL_GetDivider>
 80084fe:	4603      	mov	r3, r0
 8008500:	091b      	lsrs	r3, r3, #4
 8008502:	3301      	adds	r3, #1
 8008504:	fbb4 f4f3 	udiv	r4, r4, r3
 8008508:	f7ff fa71 	bl	80079ee <LL_RCC_PLL_GetR>
 800850c:	4603      	mov	r3, r0
 800850e:	0f5b      	lsrs	r3, r3, #29
 8008510:	3301      	adds	r3, #1
 8008512:	fbb4 f3f3 	udiv	r3, r4, r3
 8008516:	60fb      	str	r3, [r7, #12]
 8008518:	68fb      	ldr	r3, [r7, #12]
 800851a:	4618      	mov	r0, r3
 800851c:	3714      	adds	r7, #20
 800851e:	46bd      	mov	sp, r7
 8008520:	bd90      	pop	{r4, r7, pc}
 8008522:	bf00      	nop
 8008524:	0800f5fc 	.word	0x0800f5fc
 8008528:	00f42400 	.word	0x00f42400
 800852c:	01e84800 	.word	0x01e84800

08008530 <HAL_RCC_GetHCLKFreq>:
 8008530:	b598      	push	{r3, r4, r7, lr}
 8008532:	af00      	add	r7, sp, #0
 8008534:	f7ff ff90 	bl	8008458 <HAL_RCC_GetSysClockFreq>
 8008538:	4604      	mov	r4, r0
 800853a:	f7ff f9e9 	bl	8007910 <LL_RCC_GetAHBPrescaler>
 800853e:	4603      	mov	r3, r0
 8008540:	091b      	lsrs	r3, r3, #4
 8008542:	f003 030f 	and.w	r3, r3, #15
 8008546:	4a03      	ldr	r2, [pc, #12]	; (8008554 <HAL_RCC_GetHCLKFreq+0x24>)
 8008548:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800854c:	fbb4 f3f3 	udiv	r3, r4, r3
 8008550:	4618      	mov	r0, r3
 8008552:	bd98      	pop	{r3, r4, r7, pc}
 8008554:	0800f59c 	.word	0x0800f59c

08008558 <HAL_RCC_GetPCLK1Freq>:
 8008558:	b598      	push	{r3, r4, r7, lr}
 800855a:	af00      	add	r7, sp, #0
 800855c:	f7ff ffe8 	bl	8008530 <HAL_RCC_GetHCLKFreq>
 8008560:	4604      	mov	r4, r0
 8008562:	f7ff f9ef 	bl	8007944 <LL_RCC_GetAPB1Prescaler>
 8008566:	4603      	mov	r3, r0
 8008568:	0a1b      	lsrs	r3, r3, #8
 800856a:	f003 0307 	and.w	r3, r3, #7
 800856e:	4a04      	ldr	r2, [pc, #16]	; (8008580 <HAL_RCC_GetPCLK1Freq+0x28>)
 8008570:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8008574:	f003 031f 	and.w	r3, r3, #31
 8008578:	fa24 f303 	lsr.w	r3, r4, r3
 800857c:	4618      	mov	r0, r3
 800857e:	bd98      	pop	{r3, r4, r7, pc}
 8008580:	0800f5dc 	.word	0x0800f5dc

08008584 <HAL_RCC_GetPCLK2Freq>:
 8008584:	b598      	push	{r3, r4, r7, lr}
 8008586:	af00      	add	r7, sp, #0
 8008588:	f7ff ffd2 	bl	8008530 <HAL_RCC_GetHCLKFreq>
 800858c:	4604      	mov	r4, r0
 800858e:	f7ff f9e5 	bl	800795c <LL_RCC_GetAPB2Prescaler>
 8008592:	4603      	mov	r3, r0
 8008594:	0adb      	lsrs	r3, r3, #11
 8008596:	f003 0307 	and.w	r3, r3, #7
 800859a:	4a04      	ldr	r2, [pc, #16]	; (80085ac <HAL_RCC_GetPCLK2Freq+0x28>)
 800859c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80085a0:	f003 031f 	and.w	r3, r3, #31
 80085a4:	fa24 f303 	lsr.w	r3, r4, r3
 80085a8:	4618      	mov	r0, r3
 80085aa:	bd98      	pop	{r3, r4, r7, pc}
 80085ac:	0800f5dc 	.word	0x0800f5dc

080085b0 <RCC_SetFlashLatencyFromMSIRange>:
 80085b0:	b590      	push	{r4, r7, lr}
 80085b2:	b085      	sub	sp, #20
 80085b4:	af00      	add	r7, sp, #0
 80085b6:	6078      	str	r0, [r7, #4]
 80085b8:	687b      	ldr	r3, [r7, #4]
 80085ba:	2bb0      	cmp	r3, #176	; 0xb0
 80085bc:	d903      	bls.n	80085c6 <RCC_SetFlashLatencyFromMSIRange+0x16>
 80085be:	4b15      	ldr	r3, [pc, #84]	; (8008614 <RCC_SetFlashLatencyFromMSIRange+0x64>)
 80085c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80085c2:	60fb      	str	r3, [r7, #12]
 80085c4:	e007      	b.n	80085d6 <RCC_SetFlashLatencyFromMSIRange+0x26>
 80085c6:	687b      	ldr	r3, [r7, #4]
 80085c8:	091b      	lsrs	r3, r3, #4
 80085ca:	f003 030f 	and.w	r3, r3, #15
 80085ce:	4a11      	ldr	r2, [pc, #68]	; (8008614 <RCC_SetFlashLatencyFromMSIRange+0x64>)
 80085d0:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80085d4:	60fb      	str	r3, [r7, #12]
 80085d6:	f7ff f9a7 	bl	8007928 <LL_RCC_GetAHB4Prescaler>
 80085da:	4603      	mov	r3, r0
 80085dc:	091b      	lsrs	r3, r3, #4
 80085de:	f003 030f 	and.w	r3, r3, #15
 80085e2:	4a0d      	ldr	r2, [pc, #52]	; (8008618 <RCC_SetFlashLatencyFromMSIRange+0x68>)
 80085e4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80085e8:	68fa      	ldr	r2, [r7, #12]
 80085ea:	fbb2 f3f3 	udiv	r3, r2, r3
 80085ee:	60bb      	str	r3, [r7, #8]
 80085f0:	68bb      	ldr	r3, [r7, #8]
 80085f2:	4a0a      	ldr	r2, [pc, #40]	; (800861c <RCC_SetFlashLatencyFromMSIRange+0x6c>)
 80085f4:	fba2 2303 	umull	r2, r3, r2, r3
 80085f8:	0c9c      	lsrs	r4, r3, #18
 80085fa:	f7fe fef5 	bl	80073e8 <HAL_PWREx_GetVoltageRange>
 80085fe:	4603      	mov	r3, r0
 8008600:	4619      	mov	r1, r3
 8008602:	4620      	mov	r0, r4
 8008604:	f000 f80c 	bl	8008620 <RCC_SetFlashLatency>
 8008608:	4603      	mov	r3, r0
 800860a:	4618      	mov	r0, r3
 800860c:	3714      	adds	r7, #20
 800860e:	46bd      	mov	sp, r7
 8008610:	bd90      	pop	{r4, r7, pc}
 8008612:	bf00      	nop
 8008614:	0800f5fc 	.word	0x0800f5fc
 8008618:	0800f59c 	.word	0x0800f59c
 800861c:	431bde83 	.word	0x431bde83

08008620 <RCC_SetFlashLatency>:
 8008620:	b590      	push	{r4, r7, lr}
 8008622:	b093      	sub	sp, #76	; 0x4c
 8008624:	af00      	add	r7, sp, #0
 8008626:	6078      	str	r0, [r7, #4]
 8008628:	6039      	str	r1, [r7, #0]
 800862a:	4b37      	ldr	r3, [pc, #220]	; (8008708 <RCC_SetFlashLatency+0xe8>)
 800862c:	f107 0428 	add.w	r4, r7, #40	; 0x28
 8008630:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8008632:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008636:	4a35      	ldr	r2, [pc, #212]	; (800870c <RCC_SetFlashLatency+0xec>)
 8008638:	f107 031c 	add.w	r3, r7, #28
 800863c:	ca07      	ldmia	r2, {r0, r1, r2}
 800863e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8008642:	4b33      	ldr	r3, [pc, #204]	; (8008710 <RCC_SetFlashLatency+0xf0>)
 8008644:	f107 040c 	add.w	r4, r7, #12
 8008648:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800864a:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800864e:	2300      	movs	r3, #0
 8008650:	647b      	str	r3, [r7, #68]	; 0x44
 8008652:	683b      	ldr	r3, [r7, #0]
 8008654:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008658:	d11a      	bne.n	8008690 <RCC_SetFlashLatency+0x70>
 800865a:	2300      	movs	r3, #0
 800865c:	643b      	str	r3, [r7, #64]	; 0x40
 800865e:	e013      	b.n	8008688 <RCC_SetFlashLatency+0x68>
 8008660:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008662:	009b      	lsls	r3, r3, #2
 8008664:	3348      	adds	r3, #72	; 0x48
 8008666:	443b      	add	r3, r7
 8008668:	f853 3c20 	ldr.w	r3, [r3, #-32]
 800866c:	687a      	ldr	r2, [r7, #4]
 800866e:	429a      	cmp	r2, r3
 8008670:	d807      	bhi.n	8008682 <RCC_SetFlashLatency+0x62>
 8008672:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008674:	009b      	lsls	r3, r3, #2
 8008676:	3348      	adds	r3, #72	; 0x48
 8008678:	443b      	add	r3, r7
 800867a:	f853 3c3c 	ldr.w	r3, [r3, #-60]
 800867e:	647b      	str	r3, [r7, #68]	; 0x44
 8008680:	e020      	b.n	80086c4 <RCC_SetFlashLatency+0xa4>
 8008682:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8008684:	3301      	adds	r3, #1
 8008686:	643b      	str	r3, [r7, #64]	; 0x40
 8008688:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800868a:	2b03      	cmp	r3, #3
 800868c:	d9e8      	bls.n	8008660 <RCC_SetFlashLatency+0x40>
 800868e:	e019      	b.n	80086c4 <RCC_SetFlashLatency+0xa4>
 8008690:	2300      	movs	r3, #0
 8008692:	63fb      	str	r3, [r7, #60]	; 0x3c
 8008694:	e013      	b.n	80086be <RCC_SetFlashLatency+0x9e>
 8008696:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8008698:	009b      	lsls	r3, r3, #2
 800869a:	3348      	adds	r3, #72	; 0x48
 800869c:	443b      	add	r3, r7
 800869e:	f853 3c2c 	ldr.w	r3, [r3, #-44]
 80086a2:	687a      	ldr	r2, [r7, #4]
 80086a4:	429a      	cmp	r2, r3
 80086a6:	d807      	bhi.n	80086b8 <RCC_SetFlashLatency+0x98>
 80086a8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80086aa:	009b      	lsls	r3, r3, #2
 80086ac:	3348      	adds	r3, #72	; 0x48
 80086ae:	443b      	add	r3, r7
 80086b0:	f853 3c3c 	ldr.w	r3, [r3, #-60]
 80086b4:	647b      	str	r3, [r7, #68]	; 0x44
 80086b6:	e005      	b.n	80086c4 <RCC_SetFlashLatency+0xa4>
 80086b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80086ba:	3301      	adds	r3, #1
 80086bc:	63fb      	str	r3, [r7, #60]	; 0x3c
 80086be:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80086c0:	2b02      	cmp	r3, #2
 80086c2:	d9e8      	bls.n	8008696 <RCC_SetFlashLatency+0x76>
 80086c4:	4b13      	ldr	r3, [pc, #76]	; (8008714 <RCC_SetFlashLatency+0xf4>)
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	f023 0207 	bic.w	r2, r3, #7
 80086cc:	4911      	ldr	r1, [pc, #68]	; (8008714 <RCC_SetFlashLatency+0xf4>)
 80086ce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80086d0:	4313      	orrs	r3, r2
 80086d2:	600b      	str	r3, [r1, #0]
 80086d4:	f7fc fd58 	bl	8005188 <HAL_GetTick>
 80086d8:	63b8      	str	r0, [r7, #56]	; 0x38
 80086da:	e008      	b.n	80086ee <RCC_SetFlashLatency+0xce>
 80086dc:	f7fc fd54 	bl	8005188 <HAL_GetTick>
 80086e0:	4602      	mov	r2, r0
 80086e2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80086e4:	1ad3      	subs	r3, r2, r3
 80086e6:	2b02      	cmp	r3, #2
 80086e8:	d901      	bls.n	80086ee <RCC_SetFlashLatency+0xce>
 80086ea:	2303      	movs	r3, #3
 80086ec:	e007      	b.n	80086fe <RCC_SetFlashLatency+0xde>
 80086ee:	4b09      	ldr	r3, [pc, #36]	; (8008714 <RCC_SetFlashLatency+0xf4>)
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	f003 0307 	and.w	r3, r3, #7
 80086f6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80086f8:	429a      	cmp	r2, r3
 80086fa:	d1ef      	bne.n	80086dc <RCC_SetFlashLatency+0xbc>
 80086fc:	2300      	movs	r3, #0
 80086fe:	4618      	mov	r0, r3
 8008700:	374c      	adds	r7, #76	; 0x4c
 8008702:	46bd      	mov	sp, r7
 8008704:	bd90      	pop	{r4, r7, pc}
 8008706:	bf00      	nop
 8008708:	0800edf0 	.word	0x0800edf0
 800870c:	0800ee00 	.word	0x0800ee00
 8008710:	0800ee0c 	.word	0x0800ee0c
 8008714:	58004000 	.word	0x58004000

08008718 <LL_RCC_LSE_IsEnabled>:
 8008718:	b480      	push	{r7}
 800871a:	af00      	add	r7, sp, #0
 800871c:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008720:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008724:	f003 0301 	and.w	r3, r3, #1
 8008728:	2b01      	cmp	r3, #1
 800872a:	d101      	bne.n	8008730 <LL_RCC_LSE_IsEnabled+0x18>
 800872c:	2301      	movs	r3, #1
 800872e:	e000      	b.n	8008732 <LL_RCC_LSE_IsEnabled+0x1a>
 8008730:	2300      	movs	r3, #0
 8008732:	4618      	mov	r0, r3
 8008734:	46bd      	mov	sp, r7
 8008736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800873a:	4770      	bx	lr

0800873c <LL_RCC_LSE_IsReady>:
 800873c:	b480      	push	{r7}
 800873e:	af00      	add	r7, sp, #0
 8008740:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008744:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008748:	f003 0302 	and.w	r3, r3, #2
 800874c:	2b02      	cmp	r3, #2
 800874e:	d101      	bne.n	8008754 <LL_RCC_LSE_IsReady+0x18>
 8008750:	2301      	movs	r3, #1
 8008752:	e000      	b.n	8008756 <LL_RCC_LSE_IsReady+0x1a>
 8008754:	2300      	movs	r3, #0
 8008756:	4618      	mov	r0, r3
 8008758:	46bd      	mov	sp, r7
 800875a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800875e:	4770      	bx	lr

08008760 <LL_RCC_MSI_EnablePLLMode>:
 8008760:	b480      	push	{r7}
 8008762:	af00      	add	r7, sp, #0
 8008764:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008768:	681b      	ldr	r3, [r3, #0]
 800876a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 800876e:	f043 0304 	orr.w	r3, r3, #4
 8008772:	6013      	str	r3, [r2, #0]
 8008774:	bf00      	nop
 8008776:	46bd      	mov	sp, r7
 8008778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800877c:	4770      	bx	lr

0800877e <LL_RCC_SetRFWKPClockSource>:
 800877e:	b480      	push	{r7}
 8008780:	b083      	sub	sp, #12
 8008782:	af00      	add	r7, sp, #0
 8008784:	6078      	str	r0, [r7, #4]
 8008786:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800878a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800878e:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 8008792:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008796:	687b      	ldr	r3, [r7, #4]
 8008798:	4313      	orrs	r3, r2
 800879a:	f8c1 3094 	str.w	r3, [r1, #148]	; 0x94
 800879e:	bf00      	nop
 80087a0:	370c      	adds	r7, #12
 80087a2:	46bd      	mov	sp, r7
 80087a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087a8:	4770      	bx	lr

080087aa <LL_RCC_SetSMPSClockSource>:
 80087aa:	b480      	push	{r7}
 80087ac:	b083      	sub	sp, #12
 80087ae:	af00      	add	r7, sp, #0
 80087b0:	6078      	str	r0, [r7, #4]
 80087b2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80087b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087b8:	f023 0203 	bic.w	r2, r3, #3
 80087bc:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80087c0:	687b      	ldr	r3, [r7, #4]
 80087c2:	4313      	orrs	r3, r2
 80087c4:	624b      	str	r3, [r1, #36]	; 0x24
 80087c6:	bf00      	nop
 80087c8:	370c      	adds	r7, #12
 80087ca:	46bd      	mov	sp, r7
 80087cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087d0:	4770      	bx	lr

080087d2 <LL_RCC_SetSMPSPrescaler>:
 80087d2:	b480      	push	{r7}
 80087d4:	b083      	sub	sp, #12
 80087d6:	af00      	add	r7, sp, #0
 80087d8:	6078      	str	r0, [r7, #4]
 80087da:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80087de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80087e0:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 80087e4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	4313      	orrs	r3, r2
 80087ec:	624b      	str	r3, [r1, #36]	; 0x24
 80087ee:	bf00      	nop
 80087f0:	370c      	adds	r7, #12
 80087f2:	46bd      	mov	sp, r7
 80087f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f8:	4770      	bx	lr

080087fa <LL_RCC_SetUSARTClockSource>:
 80087fa:	b480      	push	{r7}
 80087fc:	b083      	sub	sp, #12
 80087fe:	af00      	add	r7, sp, #0
 8008800:	6078      	str	r0, [r7, #4]
 8008802:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008806:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800880a:	f023 0203 	bic.w	r2, r3, #3
 800880e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	4313      	orrs	r3, r2
 8008816:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800881a:	bf00      	nop
 800881c:	370c      	adds	r7, #12
 800881e:	46bd      	mov	sp, r7
 8008820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008824:	4770      	bx	lr

08008826 <LL_RCC_SetLPUARTClockSource>:
 8008826:	b480      	push	{r7}
 8008828:	b083      	sub	sp, #12
 800882a:	af00      	add	r7, sp, #0
 800882c:	6078      	str	r0, [r7, #4]
 800882e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008832:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008836:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800883a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800883e:	687b      	ldr	r3, [r7, #4]
 8008840:	4313      	orrs	r3, r2
 8008842:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8008846:	bf00      	nop
 8008848:	370c      	adds	r7, #12
 800884a:	46bd      	mov	sp, r7
 800884c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008850:	4770      	bx	lr

08008852 <LL_RCC_SetI2CClockSource>:
 8008852:	b480      	push	{r7}
 8008854:	b083      	sub	sp, #12
 8008856:	af00      	add	r7, sp, #0
 8008858:	6078      	str	r0, [r7, #4]
 800885a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800885e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	091b      	lsrs	r3, r3, #4
 8008866:	f403 237f 	and.w	r3, r3, #1044480	; 0xff000
 800886a:	43db      	mvns	r3, r3
 800886c:	401a      	ands	r2, r3
 800886e:	687b      	ldr	r3, [r7, #4]
 8008870:	011b      	lsls	r3, r3, #4
 8008872:	f403 237f 	and.w	r3, r3, #1044480	; 0xff000
 8008876:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800887a:	4313      	orrs	r3, r2
 800887c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8008880:	bf00      	nop
 8008882:	370c      	adds	r7, #12
 8008884:	46bd      	mov	sp, r7
 8008886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800888a:	4770      	bx	lr

0800888c <LL_RCC_SetLPTIMClockSource>:
 800888c:	b480      	push	{r7}
 800888e:	b083      	sub	sp, #12
 8008890:	af00      	add	r7, sp, #0
 8008892:	6078      	str	r0, [r7, #4]
 8008894:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008898:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800889c:	687b      	ldr	r3, [r7, #4]
 800889e:	0c1b      	lsrs	r3, r3, #16
 80088a0:	041b      	lsls	r3, r3, #16
 80088a2:	43db      	mvns	r3, r3
 80088a4:	401a      	ands	r2, r3
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	041b      	lsls	r3, r3, #16
 80088aa:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80088ae:	4313      	orrs	r3, r2
 80088b0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80088b4:	bf00      	nop
 80088b6:	370c      	adds	r7, #12
 80088b8:	46bd      	mov	sp, r7
 80088ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088be:	4770      	bx	lr

080088c0 <LL_RCC_SetSAIClockSource>:
 80088c0:	b480      	push	{r7}
 80088c2:	b083      	sub	sp, #12
 80088c4:	af00      	add	r7, sp, #0
 80088c6:	6078      	str	r0, [r7, #4]
 80088c8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80088cc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80088d0:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80088d4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	4313      	orrs	r3, r2
 80088dc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 80088e0:	bf00      	nop
 80088e2:	370c      	adds	r7, #12
 80088e4:	46bd      	mov	sp, r7
 80088e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ea:	4770      	bx	lr

080088ec <LL_RCC_SetRNGClockSource>:
 80088ec:	b480      	push	{r7}
 80088ee:	b083      	sub	sp, #12
 80088f0:	af00      	add	r7, sp, #0
 80088f2:	6078      	str	r0, [r7, #4]
 80088f4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80088f8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80088fc:	f023 4240 	bic.w	r2, r3, #3221225472	; 0xc0000000
 8008900:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	4313      	orrs	r3, r2
 8008908:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800890c:	bf00      	nop
 800890e:	370c      	adds	r7, #12
 8008910:	46bd      	mov	sp, r7
 8008912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008916:	4770      	bx	lr

08008918 <LL_RCC_SetCLK48ClockSource>:
 8008918:	b480      	push	{r7}
 800891a:	b083      	sub	sp, #12
 800891c:	af00      	add	r7, sp, #0
 800891e:	6078      	str	r0, [r7, #4]
 8008920:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008924:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8008928:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800892c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008930:	687b      	ldr	r3, [r7, #4]
 8008932:	4313      	orrs	r3, r2
 8008934:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 8008938:	bf00      	nop
 800893a:	370c      	adds	r7, #12
 800893c:	46bd      	mov	sp, r7
 800893e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008942:	4770      	bx	lr

08008944 <LL_RCC_SetUSBClockSource>:
 8008944:	b580      	push	{r7, lr}
 8008946:	b082      	sub	sp, #8
 8008948:	af00      	add	r7, sp, #0
 800894a:	6078      	str	r0, [r7, #4]
 800894c:	6878      	ldr	r0, [r7, #4]
 800894e:	f7ff ffe3 	bl	8008918 <LL_RCC_SetCLK48ClockSource>
 8008952:	bf00      	nop
 8008954:	3708      	adds	r7, #8
 8008956:	46bd      	mov	sp, r7
 8008958:	bd80      	pop	{r7, pc}

0800895a <LL_RCC_SetADCClockSource>:
 800895a:	b480      	push	{r7}
 800895c:	b083      	sub	sp, #12
 800895e:	af00      	add	r7, sp, #0
 8008960:	6078      	str	r0, [r7, #4]
 8008962:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008966:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800896a:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800896e:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	4313      	orrs	r3, r2
 8008976:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800897a:	bf00      	nop
 800897c:	370c      	adds	r7, #12
 800897e:	46bd      	mov	sp, r7
 8008980:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008984:	4770      	bx	lr

08008986 <LL_RCC_SetRTCClockSource>:
 8008986:	b480      	push	{r7}
 8008988:	b083      	sub	sp, #12
 800898a:	af00      	add	r7, sp, #0
 800898c:	6078      	str	r0, [r7, #4]
 800898e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008992:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008996:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800899a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	4313      	orrs	r3, r2
 80089a2:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 80089a6:	bf00      	nop
 80089a8:	370c      	adds	r7, #12
 80089aa:	46bd      	mov	sp, r7
 80089ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089b0:	4770      	bx	lr

080089b2 <LL_RCC_GetRTCClockSource>:
 80089b2:	b480      	push	{r7}
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80089ba:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089be:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80089c2:	4618      	mov	r0, r3
 80089c4:	46bd      	mov	sp, r7
 80089c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ca:	4770      	bx	lr

080089cc <LL_RCC_ForceBackupDomainReset>:
 80089cc:	b480      	push	{r7}
 80089ce:	af00      	add	r7, sp, #0
 80089d0:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80089d4:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089d8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80089dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80089e0:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80089e4:	bf00      	nop
 80089e6:	46bd      	mov	sp, r7
 80089e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ec:	4770      	bx	lr

080089ee <LL_RCC_ReleaseBackupDomainReset>:
 80089ee:	b480      	push	{r7}
 80089f0:	af00      	add	r7, sp, #0
 80089f2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 80089f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80089fa:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 80089fe:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008a02:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8008a06:	bf00      	nop
 8008a08:	46bd      	mov	sp, r7
 8008a0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a0e:	4770      	bx	lr

08008a10 <LL_RCC_PLLSAI1_Enable>:
 8008a10:	b480      	push	{r7}
 8008a12:	af00      	add	r7, sp, #0
 8008a14:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008a18:	681b      	ldr	r3, [r3, #0]
 8008a1a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008a1e:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8008a22:	6013      	str	r3, [r2, #0]
 8008a24:	bf00      	nop
 8008a26:	46bd      	mov	sp, r7
 8008a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a2c:	4770      	bx	lr

08008a2e <LL_RCC_PLLSAI1_Disable>:
 8008a2e:	b480      	push	{r7}
 8008a30:	af00      	add	r7, sp, #0
 8008a32:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008a36:	681b      	ldr	r3, [r3, #0]
 8008a38:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008a3c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8008a40:	6013      	str	r3, [r2, #0]
 8008a42:	bf00      	nop
 8008a44:	46bd      	mov	sp, r7
 8008a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a4a:	4770      	bx	lr

08008a4c <LL_RCC_PLLSAI1_IsReady>:
 8008a4c:	b480      	push	{r7}
 8008a4e:	af00      	add	r7, sp, #0
 8008a50:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008a54:	681b      	ldr	r3, [r3, #0]
 8008a56:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008a5a:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008a5e:	d101      	bne.n	8008a64 <LL_RCC_PLLSAI1_IsReady+0x18>
 8008a60:	2301      	movs	r3, #1
 8008a62:	e000      	b.n	8008a66 <LL_RCC_PLLSAI1_IsReady+0x1a>
 8008a64:	2300      	movs	r3, #0
 8008a66:	4618      	mov	r0, r3
 8008a68:	46bd      	mov	sp, r7
 8008a6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a6e:	4770      	bx	lr

08008a70 <HAL_RCCEx_PeriphCLKConfig>:
 8008a70:	b580      	push	{r7, lr}
 8008a72:	b088      	sub	sp, #32
 8008a74:	af00      	add	r7, sp, #0
 8008a76:	6078      	str	r0, [r7, #4]
 8008a78:	2300      	movs	r3, #0
 8008a7a:	77fb      	strb	r3, [r7, #31]
 8008a7c:	2300      	movs	r3, #0
 8008a7e:	77bb      	strb	r3, [r7, #30]
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008a88:	2b00      	cmp	r3, #0
 8008a8a:	d034      	beq.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8008a8c:	687b      	ldr	r3, [r7, #4]
 8008a8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008a90:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8008a94:	d021      	beq.n	8008ada <HAL_RCCEx_PeriphCLKConfig+0x6a>
 8008a96:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 8008a9a:	d81b      	bhi.n	8008ad4 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008a9c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008aa0:	d01d      	beq.n	8008ade <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8008aa2:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008aa6:	d815      	bhi.n	8008ad4 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008aa8:	2b00      	cmp	r3, #0
 8008aaa:	d00b      	beq.n	8008ac4 <HAL_RCCEx_PeriphCLKConfig+0x54>
 8008aac:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008ab0:	d110      	bne.n	8008ad4 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008ab2:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008ab6:	68db      	ldr	r3, [r3, #12]
 8008ab8:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008abc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008ac0:	60d3      	str	r3, [r2, #12]
 8008ac2:	e00d      	b.n	8008ae0 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	3304      	adds	r3, #4
 8008ac8:	4618      	mov	r0, r3
 8008aca:	f000 f94d 	bl	8008d68 <RCCEx_PLLSAI1_ConfigNP>
 8008ace:	4603      	mov	r3, r0
 8008ad0:	77fb      	strb	r3, [r7, #31]
 8008ad2:	e005      	b.n	8008ae0 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8008ad4:	2301      	movs	r3, #1
 8008ad6:	77fb      	strb	r3, [r7, #31]
 8008ad8:	e002      	b.n	8008ae0 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8008ada:	bf00      	nop
 8008adc:	e000      	b.n	8008ae0 <HAL_RCCEx_PeriphCLKConfig+0x70>
 8008ade:	bf00      	nop
 8008ae0:	7ffb      	ldrb	r3, [r7, #31]
 8008ae2:	2b00      	cmp	r3, #0
 8008ae4:	d105      	bne.n	8008af2 <HAL_RCCEx_PeriphCLKConfig+0x82>
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008aea:	4618      	mov	r0, r3
 8008aec:	f7ff fee8 	bl	80088c0 <LL_RCC_SetSAIClockSource>
 8008af0:	e001      	b.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0x86>
 8008af2:	7ffb      	ldrb	r3, [r7, #31]
 8008af4:	77bb      	strb	r3, [r7, #30]
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	681b      	ldr	r3, [r3, #0]
 8008afa:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008afe:	2b00      	cmp	r3, #0
 8008b00:	d046      	beq.n	8008b90 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8008b02:	f7ff ff56 	bl	80089b2 <LL_RCC_GetRTCClockSource>
 8008b06:	61b8      	str	r0, [r7, #24]
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b0c:	69ba      	ldr	r2, [r7, #24]
 8008b0e:	429a      	cmp	r2, r3
 8008b10:	d03c      	beq.n	8008b8c <HAL_RCCEx_PeriphCLKConfig+0x11c>
 8008b12:	f7fe fc59 	bl	80073c8 <HAL_PWR_EnableBkUpAccess>
 8008b16:	69bb      	ldr	r3, [r7, #24]
 8008b18:	2b00      	cmp	r3, #0
 8008b1a:	d105      	bne.n	8008b28 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b20:	4618      	mov	r0, r3
 8008b22:	f7ff ff30 	bl	8008986 <LL_RCC_SetRTCClockSource>
 8008b26:	e02e      	b.n	8008b86 <HAL_RCCEx_PeriphCLKConfig+0x116>
 8008b28:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008b2c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8008b30:	617b      	str	r3, [r7, #20]
 8008b32:	f7ff ff4b 	bl	80089cc <LL_RCC_ForceBackupDomainReset>
 8008b36:	f7ff ff5a 	bl	80089ee <LL_RCC_ReleaseBackupDomainReset>
 8008b3a:	697b      	ldr	r3, [r7, #20]
 8008b3c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8008b40:	687b      	ldr	r3, [r7, #4]
 8008b42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008b44:	4313      	orrs	r3, r2
 8008b46:	617b      	str	r3, [r7, #20]
 8008b48:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008b4c:	697b      	ldr	r3, [r7, #20]
 8008b4e:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8008b52:	f7ff fde1 	bl	8008718 <LL_RCC_LSE_IsEnabled>
 8008b56:	4603      	mov	r3, r0
 8008b58:	2b01      	cmp	r3, #1
 8008b5a:	d114      	bne.n	8008b86 <HAL_RCCEx_PeriphCLKConfig+0x116>
 8008b5c:	f7fc fb14 	bl	8005188 <HAL_GetTick>
 8008b60:	6138      	str	r0, [r7, #16]
 8008b62:	e00b      	b.n	8008b7c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8008b64:	f7fc fb10 	bl	8005188 <HAL_GetTick>
 8008b68:	4602      	mov	r2, r0
 8008b6a:	693b      	ldr	r3, [r7, #16]
 8008b6c:	1ad3      	subs	r3, r2, r3
 8008b6e:	f241 3288 	movw	r2, #5000	; 0x1388
 8008b72:	4293      	cmp	r3, r2
 8008b74:	d902      	bls.n	8008b7c <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8008b76:	2303      	movs	r3, #3
 8008b78:	77fb      	strb	r3, [r7, #31]
 8008b7a:	e004      	b.n	8008b86 <HAL_RCCEx_PeriphCLKConfig+0x116>
 8008b7c:	f7ff fdde 	bl	800873c <LL_RCC_LSE_IsReady>
 8008b80:	4603      	mov	r3, r0
 8008b82:	2b01      	cmp	r3, #1
 8008b84:	d1ee      	bne.n	8008b64 <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8008b86:	7ffb      	ldrb	r3, [r7, #31]
 8008b88:	77bb      	strb	r3, [r7, #30]
 8008b8a:	e001      	b.n	8008b90 <HAL_RCCEx_PeriphCLKConfig+0x120>
 8008b8c:	7ffb      	ldrb	r3, [r7, #31]
 8008b8e:	77bb      	strb	r3, [r7, #30]
 8008b90:	687b      	ldr	r3, [r7, #4]
 8008b92:	681b      	ldr	r3, [r3, #0]
 8008b94:	f003 0301 	and.w	r3, r3, #1
 8008b98:	2b00      	cmp	r3, #0
 8008b9a:	d004      	beq.n	8008ba6 <HAL_RCCEx_PeriphCLKConfig+0x136>
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	699b      	ldr	r3, [r3, #24]
 8008ba0:	4618      	mov	r0, r3
 8008ba2:	f7ff fe2a 	bl	80087fa <LL_RCC_SetUSARTClockSource>
 8008ba6:	687b      	ldr	r3, [r7, #4]
 8008ba8:	681b      	ldr	r3, [r3, #0]
 8008baa:	f003 0302 	and.w	r3, r3, #2
 8008bae:	2b00      	cmp	r3, #0
 8008bb0:	d004      	beq.n	8008bbc <HAL_RCCEx_PeriphCLKConfig+0x14c>
 8008bb2:	687b      	ldr	r3, [r7, #4]
 8008bb4:	69db      	ldr	r3, [r3, #28]
 8008bb6:	4618      	mov	r0, r3
 8008bb8:	f7ff fe35 	bl	8008826 <LL_RCC_SetLPUARTClockSource>
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	681b      	ldr	r3, [r3, #0]
 8008bc0:	f003 0310 	and.w	r3, r3, #16
 8008bc4:	2b00      	cmp	r3, #0
 8008bc6:	d004      	beq.n	8008bd2 <HAL_RCCEx_PeriphCLKConfig+0x162>
 8008bc8:	687b      	ldr	r3, [r7, #4]
 8008bca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008bcc:	4618      	mov	r0, r3
 8008bce:	f7ff fe5d 	bl	800888c <LL_RCC_SetLPTIMClockSource>
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	681b      	ldr	r3, [r3, #0]
 8008bd6:	f003 0320 	and.w	r3, r3, #32
 8008bda:	2b00      	cmp	r3, #0
 8008bdc:	d004      	beq.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0x178>
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008be2:	4618      	mov	r0, r3
 8008be4:	f7ff fe52 	bl	800888c <LL_RCC_SetLPTIMClockSource>
 8008be8:	687b      	ldr	r3, [r7, #4]
 8008bea:	681b      	ldr	r3, [r3, #0]
 8008bec:	f003 0304 	and.w	r3, r3, #4
 8008bf0:	2b00      	cmp	r3, #0
 8008bf2:	d004      	beq.n	8008bfe <HAL_RCCEx_PeriphCLKConfig+0x18e>
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	6a1b      	ldr	r3, [r3, #32]
 8008bf8:	4618      	mov	r0, r3
 8008bfa:	f7ff fe2a 	bl	8008852 <LL_RCC_SetI2CClockSource>
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	f003 0308 	and.w	r3, r3, #8
 8008c06:	2b00      	cmp	r3, #0
 8008c08:	d004      	beq.n	8008c14 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c0a:	687b      	ldr	r3, [r7, #4]
 8008c0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008c0e:	4618      	mov	r0, r3
 8008c10:	f7ff fe1f 	bl	8008852 <LL_RCC_SetI2CClockSource>
 8008c14:	687b      	ldr	r3, [r7, #4]
 8008c16:	681b      	ldr	r3, [r3, #0]
 8008c18:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d022      	beq.n	8008c66 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8008c20:	687b      	ldr	r3, [r7, #4]
 8008c22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008c24:	4618      	mov	r0, r3
 8008c26:	f7ff fe8d 	bl	8008944 <LL_RCC_SetUSBClockSource>
 8008c2a:	687b      	ldr	r3, [r7, #4]
 8008c2c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008c2e:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008c32:	d107      	bne.n	8008c44 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8008c34:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008c38:	68db      	ldr	r3, [r3, #12]
 8008c3a:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008c3e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008c42:	60d3      	str	r3, [r2, #12]
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008c48:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008c4c:	d10b      	bne.n	8008c66 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8008c4e:	687b      	ldr	r3, [r7, #4]
 8008c50:	3304      	adds	r3, #4
 8008c52:	4618      	mov	r0, r3
 8008c54:	f000 f8e3 	bl	8008e1e <RCCEx_PLLSAI1_ConfigNQ>
 8008c58:	4603      	mov	r3, r0
 8008c5a:	77fb      	strb	r3, [r7, #31]
 8008c5c:	7ffb      	ldrb	r3, [r7, #31]
 8008c5e:	2b00      	cmp	r3, #0
 8008c60:	d001      	beq.n	8008c66 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8008c62:	7ffb      	ldrb	r3, [r7, #31]
 8008c64:	77bb      	strb	r3, [r7, #30]
 8008c66:	687b      	ldr	r3, [r7, #4]
 8008c68:	681b      	ldr	r3, [r3, #0]
 8008c6a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d02b      	beq.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c76:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008c7a:	d008      	beq.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c80:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008c84:	d003      	beq.n	8008c8e <HAL_RCCEx_PeriphCLKConfig+0x21e>
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c8a:	2b00      	cmp	r3, #0
 8008c8c:	d105      	bne.n	8008c9a <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8008c8e:	687b      	ldr	r3, [r7, #4]
 8008c90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c92:	4618      	mov	r0, r3
 8008c94:	f7ff fe2a 	bl	80088ec <LL_RCC_SetRNGClockSource>
 8008c98:	e00a      	b.n	8008cb0 <HAL_RCCEx_PeriphCLKConfig+0x240>
 8008c9a:	687b      	ldr	r3, [r7, #4]
 8008c9c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008c9e:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008ca2:	60fb      	str	r3, [r7, #12]
 8008ca4:	2000      	movs	r0, #0
 8008ca6:	f7ff fe21 	bl	80088ec <LL_RCC_SetRNGClockSource>
 8008caa:	68f8      	ldr	r0, [r7, #12]
 8008cac:	f7ff fe34 	bl	8008918 <LL_RCC_SetCLK48ClockSource>
 8008cb0:	687b      	ldr	r3, [r7, #4]
 8008cb2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008cb4:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
 8008cb8:	d107      	bne.n	8008cca <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8008cba:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008cbe:	68db      	ldr	r3, [r3, #12]
 8008cc0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008cc4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8008cc8:	60d3      	str	r3, [r2, #12]
 8008cca:	687b      	ldr	r3, [r7, #4]
 8008ccc:	681b      	ldr	r3, [r3, #0]
 8008cce:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008cd2:	2b00      	cmp	r3, #0
 8008cd4:	d022      	beq.n	8008d1c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008cda:	4618      	mov	r0, r3
 8008cdc:	f7ff fe3d 	bl	800895a <LL_RCC_SetADCClockSource>
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008ce4:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008ce8:	d107      	bne.n	8008cfa <HAL_RCCEx_PeriphCLKConfig+0x28a>
 8008cea:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008cee:	68db      	ldr	r3, [r3, #12]
 8008cf0:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8008cf4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008cf8:	60d3      	str	r3, [r2, #12]
 8008cfa:	687b      	ldr	r3, [r7, #4]
 8008cfc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008cfe:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008d02:	d10b      	bne.n	8008d1c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	3304      	adds	r3, #4
 8008d08:	4618      	mov	r0, r3
 8008d0a:	f000 f8e3 	bl	8008ed4 <RCCEx_PLLSAI1_ConfigNR>
 8008d0e:	4603      	mov	r3, r0
 8008d10:	77fb      	strb	r3, [r7, #31]
 8008d12:	7ffb      	ldrb	r3, [r7, #31]
 8008d14:	2b00      	cmp	r3, #0
 8008d16:	d001      	beq.n	8008d1c <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8008d18:	7ffb      	ldrb	r3, [r7, #31]
 8008d1a:	77bb      	strb	r3, [r7, #30]
 8008d1c:	687b      	ldr	r3, [r7, #4]
 8008d1e:	681b      	ldr	r3, [r3, #0]
 8008d20:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8008d24:	2b00      	cmp	r3, #0
 8008d26:	d004      	beq.n	8008d32 <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008d2c:	4618      	mov	r0, r3
 8008d2e:	f7ff fd26 	bl	800877e <LL_RCC_SetRFWKPClockSource>
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	681b      	ldr	r3, [r3, #0]
 8008d36:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d009      	beq.n	8008d52 <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008d42:	4618      	mov	r0, r3
 8008d44:	f7ff fd45 	bl	80087d2 <LL_RCC_SetSMPSPrescaler>
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d4c:	4618      	mov	r0, r3
 8008d4e:	f7ff fd2c 	bl	80087aa <LL_RCC_SetSMPSClockSource>
 8008d52:	7fbb      	ldrb	r3, [r7, #30]
 8008d54:	4618      	mov	r0, r3
 8008d56:	3720      	adds	r7, #32
 8008d58:	46bd      	mov	sp, r7
 8008d5a:	bd80      	pop	{r7, pc}

08008d5c <HAL_RCCEx_EnableMSIPLLMode>:
 8008d5c:	b580      	push	{r7, lr}
 8008d5e:	af00      	add	r7, sp, #0
 8008d60:	f7ff fcfe 	bl	8008760 <LL_RCC_MSI_EnablePLLMode>
 8008d64:	bf00      	nop
 8008d66:	bd80      	pop	{r7, pc}

08008d68 <RCCEx_PLLSAI1_ConfigNP>:
 8008d68:	b580      	push	{r7, lr}
 8008d6a:	b084      	sub	sp, #16
 8008d6c:	af00      	add	r7, sp, #0
 8008d6e:	6078      	str	r0, [r7, #4]
 8008d70:	2300      	movs	r3, #0
 8008d72:	73fb      	strb	r3, [r7, #15]
 8008d74:	f7ff fe5b 	bl	8008a2e <LL_RCC_PLLSAI1_Disable>
 8008d78:	f7fc fa06 	bl	8005188 <HAL_GetTick>
 8008d7c:	60b8      	str	r0, [r7, #8]
 8008d7e:	e009      	b.n	8008d94 <RCCEx_PLLSAI1_ConfigNP+0x2c>
 8008d80:	f7fc fa02 	bl	8005188 <HAL_GetTick>
 8008d84:	4602      	mov	r2, r0
 8008d86:	68bb      	ldr	r3, [r7, #8]
 8008d88:	1ad3      	subs	r3, r2, r3
 8008d8a:	2b02      	cmp	r3, #2
 8008d8c:	d902      	bls.n	8008d94 <RCCEx_PLLSAI1_ConfigNP+0x2c>
 8008d8e:	2303      	movs	r3, #3
 8008d90:	73fb      	strb	r3, [r7, #15]
 8008d92:	e004      	b.n	8008d9e <RCCEx_PLLSAI1_ConfigNP+0x36>
 8008d94:	f7ff fe5a 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008d98:	4603      	mov	r3, r0
 8008d9a:	2b00      	cmp	r3, #0
 8008d9c:	d1f0      	bne.n	8008d80 <RCCEx_PLLSAI1_ConfigNP+0x18>
 8008d9e:	7bfb      	ldrb	r3, [r7, #15]
 8008da0:	2b00      	cmp	r3, #0
 8008da2:	d137      	bne.n	8008e14 <RCCEx_PLLSAI1_ConfigNP+0xac>
 8008da4:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008da8:	691b      	ldr	r3, [r3, #16]
 8008daa:	f423 42fe 	bic.w	r2, r3, #32512	; 0x7f00
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	681b      	ldr	r3, [r3, #0]
 8008db2:	021b      	lsls	r3, r3, #8
 8008db4:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008db8:	4313      	orrs	r3, r2
 8008dba:	610b      	str	r3, [r1, #16]
 8008dbc:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008dc0:	691b      	ldr	r3, [r3, #16]
 8008dc2:	f423 1278 	bic.w	r2, r3, #4063232	; 0x3e0000
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	685b      	ldr	r3, [r3, #4]
 8008dca:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008dce:	4313      	orrs	r3, r2
 8008dd0:	610b      	str	r3, [r1, #16]
 8008dd2:	f7ff fe1d 	bl	8008a10 <LL_RCC_PLLSAI1_Enable>
 8008dd6:	f7fc f9d7 	bl	8005188 <HAL_GetTick>
 8008dda:	60b8      	str	r0, [r7, #8]
 8008ddc:	e009      	b.n	8008df2 <RCCEx_PLLSAI1_ConfigNP+0x8a>
 8008dde:	f7fc f9d3 	bl	8005188 <HAL_GetTick>
 8008de2:	4602      	mov	r2, r0
 8008de4:	68bb      	ldr	r3, [r7, #8]
 8008de6:	1ad3      	subs	r3, r2, r3
 8008de8:	2b02      	cmp	r3, #2
 8008dea:	d902      	bls.n	8008df2 <RCCEx_PLLSAI1_ConfigNP+0x8a>
 8008dec:	2303      	movs	r3, #3
 8008dee:	73fb      	strb	r3, [r7, #15]
 8008df0:	e004      	b.n	8008dfc <RCCEx_PLLSAI1_ConfigNP+0x94>
 8008df2:	f7ff fe2b 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008df6:	4603      	mov	r3, r0
 8008df8:	2b01      	cmp	r3, #1
 8008dfa:	d1f0      	bne.n	8008dde <RCCEx_PLLSAI1_ConfigNP+0x76>
 8008dfc:	7bfb      	ldrb	r3, [r7, #15]
 8008dfe:	2b00      	cmp	r3, #0
 8008e00:	d108      	bne.n	8008e14 <RCCEx_PLLSAI1_ConfigNP+0xac>
 8008e02:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008e06:	691a      	ldr	r2, [r3, #16]
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	691b      	ldr	r3, [r3, #16]
 8008e0c:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008e10:	4313      	orrs	r3, r2
 8008e12:	610b      	str	r3, [r1, #16]
 8008e14:	7bfb      	ldrb	r3, [r7, #15]
 8008e16:	4618      	mov	r0, r3
 8008e18:	3710      	adds	r7, #16
 8008e1a:	46bd      	mov	sp, r7
 8008e1c:	bd80      	pop	{r7, pc}

08008e1e <RCCEx_PLLSAI1_ConfigNQ>:
 8008e1e:	b580      	push	{r7, lr}
 8008e20:	b084      	sub	sp, #16
 8008e22:	af00      	add	r7, sp, #0
 8008e24:	6078      	str	r0, [r7, #4]
 8008e26:	2300      	movs	r3, #0
 8008e28:	73fb      	strb	r3, [r7, #15]
 8008e2a:	f7ff fe00 	bl	8008a2e <LL_RCC_PLLSAI1_Disable>
 8008e2e:	f7fc f9ab 	bl	8005188 <HAL_GetTick>
 8008e32:	60b8      	str	r0, [r7, #8]
 8008e34:	e009      	b.n	8008e4a <RCCEx_PLLSAI1_ConfigNQ+0x2c>
 8008e36:	f7fc f9a7 	bl	8005188 <HAL_GetTick>
 8008e3a:	4602      	mov	r2, r0
 8008e3c:	68bb      	ldr	r3, [r7, #8]
 8008e3e:	1ad3      	subs	r3, r2, r3
 8008e40:	2b02      	cmp	r3, #2
 8008e42:	d902      	bls.n	8008e4a <RCCEx_PLLSAI1_ConfigNQ+0x2c>
 8008e44:	2303      	movs	r3, #3
 8008e46:	73fb      	strb	r3, [r7, #15]
 8008e48:	e004      	b.n	8008e54 <RCCEx_PLLSAI1_ConfigNQ+0x36>
 8008e4a:	f7ff fdff 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008e4e:	4603      	mov	r3, r0
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d1f0      	bne.n	8008e36 <RCCEx_PLLSAI1_ConfigNQ+0x18>
 8008e54:	7bfb      	ldrb	r3, [r7, #15]
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	d137      	bne.n	8008eca <RCCEx_PLLSAI1_ConfigNQ+0xac>
 8008e5a:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008e5e:	691b      	ldr	r3, [r3, #16]
 8008e60:	f423 42fe 	bic.w	r2, r3, #32512	; 0x7f00
 8008e64:	687b      	ldr	r3, [r7, #4]
 8008e66:	681b      	ldr	r3, [r3, #0]
 8008e68:	021b      	lsls	r3, r3, #8
 8008e6a:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008e6e:	4313      	orrs	r3, r2
 8008e70:	610b      	str	r3, [r1, #16]
 8008e72:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008e76:	691b      	ldr	r3, [r3, #16]
 8008e78:	f023 6260 	bic.w	r2, r3, #234881024	; 0xe000000
 8008e7c:	687b      	ldr	r3, [r7, #4]
 8008e7e:	689b      	ldr	r3, [r3, #8]
 8008e80:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008e84:	4313      	orrs	r3, r2
 8008e86:	610b      	str	r3, [r1, #16]
 8008e88:	f7ff fdc2 	bl	8008a10 <LL_RCC_PLLSAI1_Enable>
 8008e8c:	f7fc f97c 	bl	8005188 <HAL_GetTick>
 8008e90:	60b8      	str	r0, [r7, #8]
 8008e92:	e009      	b.n	8008ea8 <RCCEx_PLLSAI1_ConfigNQ+0x8a>
 8008e94:	f7fc f978 	bl	8005188 <HAL_GetTick>
 8008e98:	4602      	mov	r2, r0
 8008e9a:	68bb      	ldr	r3, [r7, #8]
 8008e9c:	1ad3      	subs	r3, r2, r3
 8008e9e:	2b02      	cmp	r3, #2
 8008ea0:	d902      	bls.n	8008ea8 <RCCEx_PLLSAI1_ConfigNQ+0x8a>
 8008ea2:	2303      	movs	r3, #3
 8008ea4:	73fb      	strb	r3, [r7, #15]
 8008ea6:	e004      	b.n	8008eb2 <RCCEx_PLLSAI1_ConfigNQ+0x94>
 8008ea8:	f7ff fdd0 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008eac:	4603      	mov	r3, r0
 8008eae:	2b01      	cmp	r3, #1
 8008eb0:	d1f0      	bne.n	8008e94 <RCCEx_PLLSAI1_ConfigNQ+0x76>
 8008eb2:	7bfb      	ldrb	r3, [r7, #15]
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	d108      	bne.n	8008eca <RCCEx_PLLSAI1_ConfigNQ+0xac>
 8008eb8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008ebc:	691a      	ldr	r2, [r3, #16]
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	691b      	ldr	r3, [r3, #16]
 8008ec2:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008ec6:	4313      	orrs	r3, r2
 8008ec8:	610b      	str	r3, [r1, #16]
 8008eca:	7bfb      	ldrb	r3, [r7, #15]
 8008ecc:	4618      	mov	r0, r3
 8008ece:	3710      	adds	r7, #16
 8008ed0:	46bd      	mov	sp, r7
 8008ed2:	bd80      	pop	{r7, pc}

08008ed4 <RCCEx_PLLSAI1_ConfigNR>:
 8008ed4:	b580      	push	{r7, lr}
 8008ed6:	b084      	sub	sp, #16
 8008ed8:	af00      	add	r7, sp, #0
 8008eda:	6078      	str	r0, [r7, #4]
 8008edc:	2300      	movs	r3, #0
 8008ede:	73fb      	strb	r3, [r7, #15]
 8008ee0:	f7ff fda5 	bl	8008a2e <LL_RCC_PLLSAI1_Disable>
 8008ee4:	f7fc f950 	bl	8005188 <HAL_GetTick>
 8008ee8:	60b8      	str	r0, [r7, #8]
 8008eea:	e009      	b.n	8008f00 <RCCEx_PLLSAI1_ConfigNR+0x2c>
 8008eec:	f7fc f94c 	bl	8005188 <HAL_GetTick>
 8008ef0:	4602      	mov	r2, r0
 8008ef2:	68bb      	ldr	r3, [r7, #8]
 8008ef4:	1ad3      	subs	r3, r2, r3
 8008ef6:	2b02      	cmp	r3, #2
 8008ef8:	d902      	bls.n	8008f00 <RCCEx_PLLSAI1_ConfigNR+0x2c>
 8008efa:	2303      	movs	r3, #3
 8008efc:	73fb      	strb	r3, [r7, #15]
 8008efe:	e004      	b.n	8008f0a <RCCEx_PLLSAI1_ConfigNR+0x36>
 8008f00:	f7ff fda4 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008f04:	4603      	mov	r3, r0
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d1f0      	bne.n	8008eec <RCCEx_PLLSAI1_ConfigNR+0x18>
 8008f0a:	7bfb      	ldrb	r3, [r7, #15]
 8008f0c:	2b00      	cmp	r3, #0
 8008f0e:	d137      	bne.n	8008f80 <RCCEx_PLLSAI1_ConfigNR+0xac>
 8008f10:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008f14:	691b      	ldr	r3, [r3, #16]
 8008f16:	f423 42fe 	bic.w	r2, r3, #32512	; 0x7f00
 8008f1a:	687b      	ldr	r3, [r7, #4]
 8008f1c:	681b      	ldr	r3, [r3, #0]
 8008f1e:	021b      	lsls	r3, r3, #8
 8008f20:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008f24:	4313      	orrs	r3, r2
 8008f26:	610b      	str	r3, [r1, #16]
 8008f28:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008f2c:	691b      	ldr	r3, [r3, #16]
 8008f2e:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	68db      	ldr	r3, [r3, #12]
 8008f36:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008f3a:	4313      	orrs	r3, r2
 8008f3c:	610b      	str	r3, [r1, #16]
 8008f3e:	f7ff fd67 	bl	8008a10 <LL_RCC_PLLSAI1_Enable>
 8008f42:	f7fc f921 	bl	8005188 <HAL_GetTick>
 8008f46:	60b8      	str	r0, [r7, #8]
 8008f48:	e009      	b.n	8008f5e <RCCEx_PLLSAI1_ConfigNR+0x8a>
 8008f4a:	f7fc f91d 	bl	8005188 <HAL_GetTick>
 8008f4e:	4602      	mov	r2, r0
 8008f50:	68bb      	ldr	r3, [r7, #8]
 8008f52:	1ad3      	subs	r3, r2, r3
 8008f54:	2b02      	cmp	r3, #2
 8008f56:	d902      	bls.n	8008f5e <RCCEx_PLLSAI1_ConfigNR+0x8a>
 8008f58:	2303      	movs	r3, #3
 8008f5a:	73fb      	strb	r3, [r7, #15]
 8008f5c:	e004      	b.n	8008f68 <RCCEx_PLLSAI1_ConfigNR+0x94>
 8008f5e:	f7ff fd75 	bl	8008a4c <LL_RCC_PLLSAI1_IsReady>
 8008f62:	4603      	mov	r3, r0
 8008f64:	2b01      	cmp	r3, #1
 8008f66:	d1f0      	bne.n	8008f4a <RCCEx_PLLSAI1_ConfigNR+0x76>
 8008f68:	7bfb      	ldrb	r3, [r7, #15]
 8008f6a:	2b00      	cmp	r3, #0
 8008f6c:	d108      	bne.n	8008f80 <RCCEx_PLLSAI1_ConfigNR+0xac>
 8008f6e:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8008f72:	691a      	ldr	r2, [r3, #16]
 8008f74:	687b      	ldr	r3, [r7, #4]
 8008f76:	691b      	ldr	r3, [r3, #16]
 8008f78:	f04f 41b0 	mov.w	r1, #1476395008	; 0x58000000
 8008f7c:	4313      	orrs	r3, r2
 8008f7e:	610b      	str	r3, [r1, #16]
 8008f80:	7bfb      	ldrb	r3, [r7, #15]
 8008f82:	4618      	mov	r0, r3
 8008f84:	3710      	adds	r7, #16
 8008f86:	46bd      	mov	sp, r7
 8008f88:	bd80      	pop	{r7, pc}

08008f8a <HAL_TIM_Base_Init>:
 8008f8a:	b580      	push	{r7, lr}
 8008f8c:	b082      	sub	sp, #8
 8008f8e:	af00      	add	r7, sp, #0
 8008f90:	6078      	str	r0, [r7, #4]
 8008f92:	687b      	ldr	r3, [r7, #4]
 8008f94:	2b00      	cmp	r3, #0
 8008f96:	d101      	bne.n	8008f9c <HAL_TIM_Base_Init+0x12>
 8008f98:	2301      	movs	r3, #1
 8008f9a:	e049      	b.n	8009030 <HAL_TIM_Base_Init+0xa6>
 8008f9c:	687b      	ldr	r3, [r7, #4]
 8008f9e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8008fa2:	b2db      	uxtb	r3, r3
 8008fa4:	2b00      	cmp	r3, #0
 8008fa6:	d106      	bne.n	8008fb6 <HAL_TIM_Base_Init+0x2c>
 8008fa8:	687b      	ldr	r3, [r7, #4]
 8008faa:	2200      	movs	r2, #0
 8008fac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008fb0:	6878      	ldr	r0, [r7, #4]
 8008fb2:	f7fb fe65 	bl	8004c80 <HAL_TIM_Base_MspInit>
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	2202      	movs	r2, #2
 8008fba:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008fbe:	687b      	ldr	r3, [r7, #4]
 8008fc0:	681a      	ldr	r2, [r3, #0]
 8008fc2:	687b      	ldr	r3, [r7, #4]
 8008fc4:	3304      	adds	r3, #4
 8008fc6:	4619      	mov	r1, r3
 8008fc8:	4610      	mov	r0, r2
 8008fca:	f000 f835 	bl	8009038 <TIM_Base_SetConfig>
 8008fce:	687b      	ldr	r3, [r7, #4]
 8008fd0:	2201      	movs	r2, #1
 8008fd2:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	2201      	movs	r2, #1
 8008fda:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	2201      	movs	r2, #1
 8008fe2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8008fe6:	687b      	ldr	r3, [r7, #4]
 8008fe8:	2201      	movs	r2, #1
 8008fea:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008fee:	687b      	ldr	r3, [r7, #4]
 8008ff0:	2201      	movs	r2, #1
 8008ff2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008ff6:	687b      	ldr	r3, [r7, #4]
 8008ff8:	2201      	movs	r2, #1
 8008ffa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008ffe:	687b      	ldr	r3, [r7, #4]
 8009000:	2201      	movs	r2, #1
 8009002:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8009006:	687b      	ldr	r3, [r7, #4]
 8009008:	2201      	movs	r2, #1
 800900a:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	2201      	movs	r2, #1
 8009012:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8009016:	687b      	ldr	r3, [r7, #4]
 8009018:	2201      	movs	r2, #1
 800901a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800901e:	687b      	ldr	r3, [r7, #4]
 8009020:	2201      	movs	r2, #1
 8009022:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 8009026:	687b      	ldr	r3, [r7, #4]
 8009028:	2201      	movs	r2, #1
 800902a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800902e:	2300      	movs	r3, #0
 8009030:	4618      	mov	r0, r3
 8009032:	3708      	adds	r7, #8
 8009034:	46bd      	mov	sp, r7
 8009036:	bd80      	pop	{r7, pc}

08009038 <TIM_Base_SetConfig>:
 8009038:	b480      	push	{r7}
 800903a:	b085      	sub	sp, #20
 800903c:	af00      	add	r7, sp, #0
 800903e:	6078      	str	r0, [r7, #4]
 8009040:	6039      	str	r1, [r7, #0]
 8009042:	687b      	ldr	r3, [r7, #4]
 8009044:	681b      	ldr	r3, [r3, #0]
 8009046:	60fb      	str	r3, [r7, #12]
 8009048:	687b      	ldr	r3, [r7, #4]
 800904a:	4a2a      	ldr	r2, [pc, #168]	; (80090f4 <TIM_Base_SetConfig+0xbc>)
 800904c:	4293      	cmp	r3, r2
 800904e:	d003      	beq.n	8009058 <TIM_Base_SetConfig+0x20>
 8009050:	687b      	ldr	r3, [r7, #4]
 8009052:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009056:	d108      	bne.n	800906a <TIM_Base_SetConfig+0x32>
 8009058:	68fb      	ldr	r3, [r7, #12]
 800905a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800905e:	60fb      	str	r3, [r7, #12]
 8009060:	683b      	ldr	r3, [r7, #0]
 8009062:	685b      	ldr	r3, [r3, #4]
 8009064:	68fa      	ldr	r2, [r7, #12]
 8009066:	4313      	orrs	r3, r2
 8009068:	60fb      	str	r3, [r7, #12]
 800906a:	687b      	ldr	r3, [r7, #4]
 800906c:	4a21      	ldr	r2, [pc, #132]	; (80090f4 <TIM_Base_SetConfig+0xbc>)
 800906e:	4293      	cmp	r3, r2
 8009070:	d00b      	beq.n	800908a <TIM_Base_SetConfig+0x52>
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009078:	d007      	beq.n	800908a <TIM_Base_SetConfig+0x52>
 800907a:	687b      	ldr	r3, [r7, #4]
 800907c:	4a1e      	ldr	r2, [pc, #120]	; (80090f8 <TIM_Base_SetConfig+0xc0>)
 800907e:	4293      	cmp	r3, r2
 8009080:	d003      	beq.n	800908a <TIM_Base_SetConfig+0x52>
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	4a1d      	ldr	r2, [pc, #116]	; (80090fc <TIM_Base_SetConfig+0xc4>)
 8009086:	4293      	cmp	r3, r2
 8009088:	d108      	bne.n	800909c <TIM_Base_SetConfig+0x64>
 800908a:	68fb      	ldr	r3, [r7, #12]
 800908c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8009090:	60fb      	str	r3, [r7, #12]
 8009092:	683b      	ldr	r3, [r7, #0]
 8009094:	68db      	ldr	r3, [r3, #12]
 8009096:	68fa      	ldr	r2, [r7, #12]
 8009098:	4313      	orrs	r3, r2
 800909a:	60fb      	str	r3, [r7, #12]
 800909c:	68fb      	ldr	r3, [r7, #12]
 800909e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80090a2:	683b      	ldr	r3, [r7, #0]
 80090a4:	695b      	ldr	r3, [r3, #20]
 80090a6:	4313      	orrs	r3, r2
 80090a8:	60fb      	str	r3, [r7, #12]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	68fa      	ldr	r2, [r7, #12]
 80090ae:	601a      	str	r2, [r3, #0]
 80090b0:	683b      	ldr	r3, [r7, #0]
 80090b2:	689a      	ldr	r2, [r3, #8]
 80090b4:	687b      	ldr	r3, [r7, #4]
 80090b6:	62da      	str	r2, [r3, #44]	; 0x2c
 80090b8:	683b      	ldr	r3, [r7, #0]
 80090ba:	681a      	ldr	r2, [r3, #0]
 80090bc:	687b      	ldr	r3, [r7, #4]
 80090be:	629a      	str	r2, [r3, #40]	; 0x28
 80090c0:	687b      	ldr	r3, [r7, #4]
 80090c2:	4a0c      	ldr	r2, [pc, #48]	; (80090f4 <TIM_Base_SetConfig+0xbc>)
 80090c4:	4293      	cmp	r3, r2
 80090c6:	d007      	beq.n	80090d8 <TIM_Base_SetConfig+0xa0>
 80090c8:	687b      	ldr	r3, [r7, #4]
 80090ca:	4a0b      	ldr	r2, [pc, #44]	; (80090f8 <TIM_Base_SetConfig+0xc0>)
 80090cc:	4293      	cmp	r3, r2
 80090ce:	d003      	beq.n	80090d8 <TIM_Base_SetConfig+0xa0>
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	4a0a      	ldr	r2, [pc, #40]	; (80090fc <TIM_Base_SetConfig+0xc4>)
 80090d4:	4293      	cmp	r3, r2
 80090d6:	d103      	bne.n	80090e0 <TIM_Base_SetConfig+0xa8>
 80090d8:	683b      	ldr	r3, [r7, #0]
 80090da:	691a      	ldr	r2, [r3, #16]
 80090dc:	687b      	ldr	r3, [r7, #4]
 80090de:	631a      	str	r2, [r3, #48]	; 0x30
 80090e0:	687b      	ldr	r3, [r7, #4]
 80090e2:	2201      	movs	r2, #1
 80090e4:	615a      	str	r2, [r3, #20]
 80090e6:	bf00      	nop
 80090e8:	3714      	adds	r7, #20
 80090ea:	46bd      	mov	sp, r7
 80090ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f0:	4770      	bx	lr
 80090f2:	bf00      	nop
 80090f4:	40012c00 	.word	0x40012c00
 80090f8:	40014400 	.word	0x40014400
 80090fc:	40014800 	.word	0x40014800

08009100 <LL_RCC_GetUSARTClockSource>:
 8009100:	b480      	push	{r7}
 8009102:	b083      	sub	sp, #12
 8009104:	af00      	add	r7, sp, #0
 8009106:	6078      	str	r0, [r7, #4]
 8009108:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800910c:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009110:	687b      	ldr	r3, [r7, #4]
 8009112:	4013      	ands	r3, r2
 8009114:	4618      	mov	r0, r3
 8009116:	370c      	adds	r7, #12
 8009118:	46bd      	mov	sp, r7
 800911a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800911e:	4770      	bx	lr

08009120 <LL_RCC_GetLPUARTClockSource>:
 8009120:	b480      	push	{r7}
 8009122:	b083      	sub	sp, #12
 8009124:	af00      	add	r7, sp, #0
 8009126:	6078      	str	r0, [r7, #4]
 8009128:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800912c:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009130:	687b      	ldr	r3, [r7, #4]
 8009132:	4013      	ands	r3, r2
 8009134:	4618      	mov	r0, r3
 8009136:	370c      	adds	r7, #12
 8009138:	46bd      	mov	sp, r7
 800913a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800913e:	4770      	bx	lr

08009140 <HAL_UART_Init>:
 8009140:	b580      	push	{r7, lr}
 8009142:	b082      	sub	sp, #8
 8009144:	af00      	add	r7, sp, #0
 8009146:	6078      	str	r0, [r7, #4]
 8009148:	687b      	ldr	r3, [r7, #4]
 800914a:	2b00      	cmp	r3, #0
 800914c:	d101      	bne.n	8009152 <HAL_UART_Init+0x12>
 800914e:	2301      	movs	r3, #1
 8009150:	e042      	b.n	80091d8 <HAL_UART_Init+0x98>
 8009152:	687b      	ldr	r3, [r7, #4]
 8009154:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009158:	2b00      	cmp	r3, #0
 800915a:	d106      	bne.n	800916a <HAL_UART_Init+0x2a>
 800915c:	687b      	ldr	r3, [r7, #4]
 800915e:	2200      	movs	r2, #0
 8009160:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 8009164:	6878      	ldr	r0, [r7, #4]
 8009166:	f7fb fce1 	bl	8004b2c <HAL_UART_MspInit>
 800916a:	687b      	ldr	r3, [r7, #4]
 800916c:	2224      	movs	r2, #36	; 0x24
 800916e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	681a      	ldr	r2, [r3, #0]
 8009178:	687b      	ldr	r3, [r7, #4]
 800917a:	681b      	ldr	r3, [r3, #0]
 800917c:	f022 0201 	bic.w	r2, r2, #1
 8009180:	601a      	str	r2, [r3, #0]
 8009182:	6878      	ldr	r0, [r7, #4]
 8009184:	f000 fc54 	bl	8009a30 <UART_SetConfig>
 8009188:	4603      	mov	r3, r0
 800918a:	2b01      	cmp	r3, #1
 800918c:	d101      	bne.n	8009192 <HAL_UART_Init+0x52>
 800918e:	2301      	movs	r3, #1
 8009190:	e022      	b.n	80091d8 <HAL_UART_Init+0x98>
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009196:	2b00      	cmp	r3, #0
 8009198:	d002      	beq.n	80091a0 <HAL_UART_Init+0x60>
 800919a:	6878      	ldr	r0, [r7, #4]
 800919c:	f000 fe70 	bl	8009e80 <UART_AdvFeatureConfig>
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	681b      	ldr	r3, [r3, #0]
 80091a4:	685a      	ldr	r2, [r3, #4]
 80091a6:	687b      	ldr	r3, [r7, #4]
 80091a8:	681b      	ldr	r3, [r3, #0]
 80091aa:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80091ae:	605a      	str	r2, [r3, #4]
 80091b0:	687b      	ldr	r3, [r7, #4]
 80091b2:	681b      	ldr	r3, [r3, #0]
 80091b4:	689a      	ldr	r2, [r3, #8]
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	681b      	ldr	r3, [r3, #0]
 80091ba:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80091be:	609a      	str	r2, [r3, #8]
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	681b      	ldr	r3, [r3, #0]
 80091c4:	681a      	ldr	r2, [r3, #0]
 80091c6:	687b      	ldr	r3, [r7, #4]
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	f042 0201 	orr.w	r2, r2, #1
 80091ce:	601a      	str	r2, [r3, #0]
 80091d0:	6878      	ldr	r0, [r7, #4]
 80091d2:	f000 fef7 	bl	8009fc4 <UART_CheckIdleState>
 80091d6:	4603      	mov	r3, r0
 80091d8:	4618      	mov	r0, r3
 80091da:	3708      	adds	r7, #8
 80091dc:	46bd      	mov	sp, r7
 80091de:	bd80      	pop	{r7, pc}

080091e0 <HAL_UART_Transmit>:
 80091e0:	b580      	push	{r7, lr}
 80091e2:	b08a      	sub	sp, #40	; 0x28
 80091e4:	af02      	add	r7, sp, #8
 80091e6:	60f8      	str	r0, [r7, #12]
 80091e8:	60b9      	str	r1, [r7, #8]
 80091ea:	603b      	str	r3, [r7, #0]
 80091ec:	4613      	mov	r3, r2
 80091ee:	80fb      	strh	r3, [r7, #6]
 80091f0:	68fb      	ldr	r3, [r7, #12]
 80091f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80091f6:	2b20      	cmp	r3, #32
 80091f8:	d17b      	bne.n	80092f2 <HAL_UART_Transmit+0x112>
 80091fa:	68bb      	ldr	r3, [r7, #8]
 80091fc:	2b00      	cmp	r3, #0
 80091fe:	d002      	beq.n	8009206 <HAL_UART_Transmit+0x26>
 8009200:	88fb      	ldrh	r3, [r7, #6]
 8009202:	2b00      	cmp	r3, #0
 8009204:	d101      	bne.n	800920a <HAL_UART_Transmit+0x2a>
 8009206:	2301      	movs	r3, #1
 8009208:	e074      	b.n	80092f4 <HAL_UART_Transmit+0x114>
 800920a:	68fb      	ldr	r3, [r7, #12]
 800920c:	2200      	movs	r2, #0
 800920e:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8009212:	68fb      	ldr	r3, [r7, #12]
 8009214:	2221      	movs	r2, #33	; 0x21
 8009216:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800921a:	f7fb ffb5 	bl	8005188 <HAL_GetTick>
 800921e:	6178      	str	r0, [r7, #20]
 8009220:	68fb      	ldr	r3, [r7, #12]
 8009222:	88fa      	ldrh	r2, [r7, #6]
 8009224:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 8009228:	68fb      	ldr	r3, [r7, #12]
 800922a:	88fa      	ldrh	r2, [r7, #6]
 800922c:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 8009230:	68fb      	ldr	r3, [r7, #12]
 8009232:	689b      	ldr	r3, [r3, #8]
 8009234:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009238:	d108      	bne.n	800924c <HAL_UART_Transmit+0x6c>
 800923a:	68fb      	ldr	r3, [r7, #12]
 800923c:	691b      	ldr	r3, [r3, #16]
 800923e:	2b00      	cmp	r3, #0
 8009240:	d104      	bne.n	800924c <HAL_UART_Transmit+0x6c>
 8009242:	2300      	movs	r3, #0
 8009244:	61fb      	str	r3, [r7, #28]
 8009246:	68bb      	ldr	r3, [r7, #8]
 8009248:	61bb      	str	r3, [r7, #24]
 800924a:	e003      	b.n	8009254 <HAL_UART_Transmit+0x74>
 800924c:	68bb      	ldr	r3, [r7, #8]
 800924e:	61fb      	str	r3, [r7, #28]
 8009250:	2300      	movs	r3, #0
 8009252:	61bb      	str	r3, [r7, #24]
 8009254:	e030      	b.n	80092b8 <HAL_UART_Transmit+0xd8>
 8009256:	683b      	ldr	r3, [r7, #0]
 8009258:	9300      	str	r3, [sp, #0]
 800925a:	697b      	ldr	r3, [r7, #20]
 800925c:	2200      	movs	r2, #0
 800925e:	2180      	movs	r1, #128	; 0x80
 8009260:	68f8      	ldr	r0, [r7, #12]
 8009262:	f000 ff59 	bl	800a118 <UART_WaitOnFlagUntilTimeout>
 8009266:	4603      	mov	r3, r0
 8009268:	2b00      	cmp	r3, #0
 800926a:	d005      	beq.n	8009278 <HAL_UART_Transmit+0x98>
 800926c:	68fb      	ldr	r3, [r7, #12]
 800926e:	2220      	movs	r2, #32
 8009270:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 8009274:	2303      	movs	r3, #3
 8009276:	e03d      	b.n	80092f4 <HAL_UART_Transmit+0x114>
 8009278:	69fb      	ldr	r3, [r7, #28]
 800927a:	2b00      	cmp	r3, #0
 800927c:	d10b      	bne.n	8009296 <HAL_UART_Transmit+0xb6>
 800927e:	69bb      	ldr	r3, [r7, #24]
 8009280:	881b      	ldrh	r3, [r3, #0]
 8009282:	461a      	mov	r2, r3
 8009284:	68fb      	ldr	r3, [r7, #12]
 8009286:	681b      	ldr	r3, [r3, #0]
 8009288:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800928c:	629a      	str	r2, [r3, #40]	; 0x28
 800928e:	69bb      	ldr	r3, [r7, #24]
 8009290:	3302      	adds	r3, #2
 8009292:	61bb      	str	r3, [r7, #24]
 8009294:	e007      	b.n	80092a6 <HAL_UART_Transmit+0xc6>
 8009296:	69fb      	ldr	r3, [r7, #28]
 8009298:	781a      	ldrb	r2, [r3, #0]
 800929a:	68fb      	ldr	r3, [r7, #12]
 800929c:	681b      	ldr	r3, [r3, #0]
 800929e:	629a      	str	r2, [r3, #40]	; 0x28
 80092a0:	69fb      	ldr	r3, [r7, #28]
 80092a2:	3301      	adds	r3, #1
 80092a4:	61fb      	str	r3, [r7, #28]
 80092a6:	68fb      	ldr	r3, [r7, #12]
 80092a8:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80092ac:	b29b      	uxth	r3, r3
 80092ae:	3b01      	subs	r3, #1
 80092b0:	b29a      	uxth	r2, r3
 80092b2:	68fb      	ldr	r3, [r7, #12]
 80092b4:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 80092b8:	68fb      	ldr	r3, [r7, #12]
 80092ba:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80092be:	b29b      	uxth	r3, r3
 80092c0:	2b00      	cmp	r3, #0
 80092c2:	d1c8      	bne.n	8009256 <HAL_UART_Transmit+0x76>
 80092c4:	683b      	ldr	r3, [r7, #0]
 80092c6:	9300      	str	r3, [sp, #0]
 80092c8:	697b      	ldr	r3, [r7, #20]
 80092ca:	2200      	movs	r2, #0
 80092cc:	2140      	movs	r1, #64	; 0x40
 80092ce:	68f8      	ldr	r0, [r7, #12]
 80092d0:	f000 ff22 	bl	800a118 <UART_WaitOnFlagUntilTimeout>
 80092d4:	4603      	mov	r3, r0
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	d005      	beq.n	80092e6 <HAL_UART_Transmit+0x106>
 80092da:	68fb      	ldr	r3, [r7, #12]
 80092dc:	2220      	movs	r2, #32
 80092de:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80092e2:	2303      	movs	r3, #3
 80092e4:	e006      	b.n	80092f4 <HAL_UART_Transmit+0x114>
 80092e6:	68fb      	ldr	r3, [r7, #12]
 80092e8:	2220      	movs	r2, #32
 80092ea:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80092ee:	2300      	movs	r3, #0
 80092f0:	e000      	b.n	80092f4 <HAL_UART_Transmit+0x114>
 80092f2:	2302      	movs	r3, #2
 80092f4:	4618      	mov	r0, r3
 80092f6:	3720      	adds	r7, #32
 80092f8:	46bd      	mov	sp, r7
 80092fa:	bd80      	pop	{r7, pc}

080092fc <HAL_UART_Receive_DMA>:
 80092fc:	b580      	push	{r7, lr}
 80092fe:	b08a      	sub	sp, #40	; 0x28
 8009300:	af00      	add	r7, sp, #0
 8009302:	60f8      	str	r0, [r7, #12]
 8009304:	60b9      	str	r1, [r7, #8]
 8009306:	4613      	mov	r3, r2
 8009308:	80fb      	strh	r3, [r7, #6]
 800930a:	68fb      	ldr	r3, [r7, #12]
 800930c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8009310:	2b20      	cmp	r3, #32
 8009312:	d137      	bne.n	8009384 <HAL_UART_Receive_DMA+0x88>
 8009314:	68bb      	ldr	r3, [r7, #8]
 8009316:	2b00      	cmp	r3, #0
 8009318:	d002      	beq.n	8009320 <HAL_UART_Receive_DMA+0x24>
 800931a:	88fb      	ldrh	r3, [r7, #6]
 800931c:	2b00      	cmp	r3, #0
 800931e:	d101      	bne.n	8009324 <HAL_UART_Receive_DMA+0x28>
 8009320:	2301      	movs	r3, #1
 8009322:	e030      	b.n	8009386 <HAL_UART_Receive_DMA+0x8a>
 8009324:	68fb      	ldr	r3, [r7, #12]
 8009326:	2200      	movs	r2, #0
 8009328:	66da      	str	r2, [r3, #108]	; 0x6c
 800932a:	68fb      	ldr	r3, [r7, #12]
 800932c:	681b      	ldr	r3, [r3, #0]
 800932e:	4a18      	ldr	r2, [pc, #96]	; (8009390 <HAL_UART_Receive_DMA+0x94>)
 8009330:	4293      	cmp	r3, r2
 8009332:	d01f      	beq.n	8009374 <HAL_UART_Receive_DMA+0x78>
 8009334:	68fb      	ldr	r3, [r7, #12]
 8009336:	681b      	ldr	r3, [r3, #0]
 8009338:	685b      	ldr	r3, [r3, #4]
 800933a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800933e:	2b00      	cmp	r3, #0
 8009340:	d018      	beq.n	8009374 <HAL_UART_Receive_DMA+0x78>
 8009342:	68fb      	ldr	r3, [r7, #12]
 8009344:	681b      	ldr	r3, [r3, #0]
 8009346:	617b      	str	r3, [r7, #20]
 8009348:	697b      	ldr	r3, [r7, #20]
 800934a:	e853 3f00 	ldrex	r3, [r3]
 800934e:	613b      	str	r3, [r7, #16]
 8009350:	693b      	ldr	r3, [r7, #16]
 8009352:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8009356:	627b      	str	r3, [r7, #36]	; 0x24
 8009358:	68fb      	ldr	r3, [r7, #12]
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	461a      	mov	r2, r3
 800935e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009360:	623b      	str	r3, [r7, #32]
 8009362:	61fa      	str	r2, [r7, #28]
 8009364:	69f9      	ldr	r1, [r7, #28]
 8009366:	6a3a      	ldr	r2, [r7, #32]
 8009368:	e841 2300 	strex	r3, r2, [r1]
 800936c:	61bb      	str	r3, [r7, #24]
 800936e:	69bb      	ldr	r3, [r7, #24]
 8009370:	2b00      	cmp	r3, #0
 8009372:	d1e6      	bne.n	8009342 <HAL_UART_Receive_DMA+0x46>
 8009374:	88fb      	ldrh	r3, [r7, #6]
 8009376:	461a      	mov	r2, r3
 8009378:	68b9      	ldr	r1, [r7, #8]
 800937a:	68f8      	ldr	r0, [r7, #12]
 800937c:	f000 ff34 	bl	800a1e8 <UART_Start_Receive_DMA>
 8009380:	4603      	mov	r3, r0
 8009382:	e000      	b.n	8009386 <HAL_UART_Receive_DMA+0x8a>
 8009384:	2302      	movs	r3, #2
 8009386:	4618      	mov	r0, r3
 8009388:	3728      	adds	r7, #40	; 0x28
 800938a:	46bd      	mov	sp, r7
 800938c:	bd80      	pop	{r7, pc}
 800938e:	bf00      	nop
 8009390:	40008000 	.word	0x40008000

08009394 <HAL_UART_IRQHandler>:
 8009394:	b580      	push	{r7, lr}
 8009396:	b0ba      	sub	sp, #232	; 0xe8
 8009398:	af00      	add	r7, sp, #0
 800939a:	6078      	str	r0, [r7, #4]
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	681b      	ldr	r3, [r3, #0]
 80093a0:	69db      	ldr	r3, [r3, #28]
 80093a2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	681b      	ldr	r3, [r3, #0]
 80093aa:	681b      	ldr	r3, [r3, #0]
 80093ac:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80093b0:	687b      	ldr	r3, [r7, #4]
 80093b2:	681b      	ldr	r3, [r3, #0]
 80093b4:	689b      	ldr	r3, [r3, #8]
 80093b6:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80093ba:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 80093be:	f640 030f 	movw	r3, #2063	; 0x80f
 80093c2:	4013      	ands	r3, r2
 80093c4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80093c8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80093cc:	2b00      	cmp	r3, #0
 80093ce:	d11b      	bne.n	8009408 <HAL_UART_IRQHandler+0x74>
 80093d0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80093d4:	f003 0320 	and.w	r3, r3, #32
 80093d8:	2b00      	cmp	r3, #0
 80093da:	d015      	beq.n	8009408 <HAL_UART_IRQHandler+0x74>
 80093dc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80093e0:	f003 0320 	and.w	r3, r3, #32
 80093e4:	2b00      	cmp	r3, #0
 80093e6:	d105      	bne.n	80093f4 <HAL_UART_IRQHandler+0x60>
 80093e8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80093ec:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80093f0:	2b00      	cmp	r3, #0
 80093f2:	d009      	beq.n	8009408 <HAL_UART_IRQHandler+0x74>
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80093f8:	2b00      	cmp	r3, #0
 80093fa:	f000 82e3 	beq.w	80099c4 <HAL_UART_IRQHandler+0x630>
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009402:	6878      	ldr	r0, [r7, #4]
 8009404:	4798      	blx	r3
 8009406:	e2dd      	b.n	80099c4 <HAL_UART_IRQHandler+0x630>
 8009408:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800940c:	2b00      	cmp	r3, #0
 800940e:	f000 8123 	beq.w	8009658 <HAL_UART_IRQHandler+0x2c4>
 8009412:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 8009416:	4b8d      	ldr	r3, [pc, #564]	; (800964c <HAL_UART_IRQHandler+0x2b8>)
 8009418:	4013      	ands	r3, r2
 800941a:	2b00      	cmp	r3, #0
 800941c:	d106      	bne.n	800942c <HAL_UART_IRQHandler+0x98>
 800941e:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 8009422:	4b8b      	ldr	r3, [pc, #556]	; (8009650 <HAL_UART_IRQHandler+0x2bc>)
 8009424:	4013      	ands	r3, r2
 8009426:	2b00      	cmp	r3, #0
 8009428:	f000 8116 	beq.w	8009658 <HAL_UART_IRQHandler+0x2c4>
 800942c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009430:	f003 0301 	and.w	r3, r3, #1
 8009434:	2b00      	cmp	r3, #0
 8009436:	d011      	beq.n	800945c <HAL_UART_IRQHandler+0xc8>
 8009438:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800943c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009440:	2b00      	cmp	r3, #0
 8009442:	d00b      	beq.n	800945c <HAL_UART_IRQHandler+0xc8>
 8009444:	687b      	ldr	r3, [r7, #4]
 8009446:	681b      	ldr	r3, [r3, #0]
 8009448:	2201      	movs	r2, #1
 800944a:	621a      	str	r2, [r3, #32]
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009452:	f043 0201 	orr.w	r2, r3, #1
 8009456:	687b      	ldr	r3, [r7, #4]
 8009458:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800945c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009460:	f003 0302 	and.w	r3, r3, #2
 8009464:	2b00      	cmp	r3, #0
 8009466:	d011      	beq.n	800948c <HAL_UART_IRQHandler+0xf8>
 8009468:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800946c:	f003 0301 	and.w	r3, r3, #1
 8009470:	2b00      	cmp	r3, #0
 8009472:	d00b      	beq.n	800948c <HAL_UART_IRQHandler+0xf8>
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	681b      	ldr	r3, [r3, #0]
 8009478:	2202      	movs	r2, #2
 800947a:	621a      	str	r2, [r3, #32]
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009482:	f043 0204 	orr.w	r2, r3, #4
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800948c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009490:	f003 0304 	and.w	r3, r3, #4
 8009494:	2b00      	cmp	r3, #0
 8009496:	d011      	beq.n	80094bc <HAL_UART_IRQHandler+0x128>
 8009498:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800949c:	f003 0301 	and.w	r3, r3, #1
 80094a0:	2b00      	cmp	r3, #0
 80094a2:	d00b      	beq.n	80094bc <HAL_UART_IRQHandler+0x128>
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	681b      	ldr	r3, [r3, #0]
 80094a8:	2204      	movs	r2, #4
 80094aa:	621a      	str	r2, [r3, #32]
 80094ac:	687b      	ldr	r3, [r7, #4]
 80094ae:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80094b2:	f043 0202 	orr.w	r2, r3, #2
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80094bc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80094c0:	f003 0308 	and.w	r3, r3, #8
 80094c4:	2b00      	cmp	r3, #0
 80094c6:	d017      	beq.n	80094f8 <HAL_UART_IRQHandler+0x164>
 80094c8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80094cc:	f003 0320 	and.w	r3, r3, #32
 80094d0:	2b00      	cmp	r3, #0
 80094d2:	d105      	bne.n	80094e0 <HAL_UART_IRQHandler+0x14c>
 80094d4:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 80094d8:	4b5c      	ldr	r3, [pc, #368]	; (800964c <HAL_UART_IRQHandler+0x2b8>)
 80094da:	4013      	ands	r3, r2
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d00b      	beq.n	80094f8 <HAL_UART_IRQHandler+0x164>
 80094e0:	687b      	ldr	r3, [r7, #4]
 80094e2:	681b      	ldr	r3, [r3, #0]
 80094e4:	2208      	movs	r2, #8
 80094e6:	621a      	str	r2, [r3, #32]
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80094ee:	f043 0208 	orr.w	r2, r3, #8
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80094f8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80094fc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009500:	2b00      	cmp	r3, #0
 8009502:	d012      	beq.n	800952a <HAL_UART_IRQHandler+0x196>
 8009504:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009508:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800950c:	2b00      	cmp	r3, #0
 800950e:	d00c      	beq.n	800952a <HAL_UART_IRQHandler+0x196>
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8009518:	621a      	str	r2, [r3, #32]
 800951a:	687b      	ldr	r3, [r7, #4]
 800951c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009520:	f043 0220 	orr.w	r2, r3, #32
 8009524:	687b      	ldr	r3, [r7, #4]
 8009526:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800952a:	687b      	ldr	r3, [r7, #4]
 800952c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009530:	2b00      	cmp	r3, #0
 8009532:	f000 8249 	beq.w	80099c8 <HAL_UART_IRQHandler+0x634>
 8009536:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800953a:	f003 0320 	and.w	r3, r3, #32
 800953e:	2b00      	cmp	r3, #0
 8009540:	d013      	beq.n	800956a <HAL_UART_IRQHandler+0x1d6>
 8009542:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009546:	f003 0320 	and.w	r3, r3, #32
 800954a:	2b00      	cmp	r3, #0
 800954c:	d105      	bne.n	800955a <HAL_UART_IRQHandler+0x1c6>
 800954e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8009552:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009556:	2b00      	cmp	r3, #0
 8009558:	d007      	beq.n	800956a <HAL_UART_IRQHandler+0x1d6>
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800955e:	2b00      	cmp	r3, #0
 8009560:	d003      	beq.n	800956a <HAL_UART_IRQHandler+0x1d6>
 8009562:	687b      	ldr	r3, [r7, #4]
 8009564:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009566:	6878      	ldr	r0, [r7, #4]
 8009568:	4798      	blx	r3
 800956a:	687b      	ldr	r3, [r7, #4]
 800956c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009570:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8009574:	687b      	ldr	r3, [r7, #4]
 8009576:	681b      	ldr	r3, [r3, #0]
 8009578:	689b      	ldr	r3, [r3, #8]
 800957a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800957e:	2b40      	cmp	r3, #64	; 0x40
 8009580:	d005      	beq.n	800958e <HAL_UART_IRQHandler+0x1fa>
 8009582:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8009586:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800958a:	2b00      	cmp	r3, #0
 800958c:	d054      	beq.n	8009638 <HAL_UART_IRQHandler+0x2a4>
 800958e:	6878      	ldr	r0, [r7, #4]
 8009590:	f000 ff11 	bl	800a3b6 <UART_EndRxTransfer>
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	681b      	ldr	r3, [r3, #0]
 8009598:	689b      	ldr	r3, [r3, #8]
 800959a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800959e:	2b40      	cmp	r3, #64	; 0x40
 80095a0:	d146      	bne.n	8009630 <HAL_UART_IRQHandler+0x29c>
 80095a2:	687b      	ldr	r3, [r7, #4]
 80095a4:	681b      	ldr	r3, [r3, #0]
 80095a6:	3308      	adds	r3, #8
 80095a8:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80095ac:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 80095b0:	e853 3f00 	ldrex	r3, [r3]
 80095b4:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 80095b8:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 80095bc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80095c0:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80095c4:	687b      	ldr	r3, [r7, #4]
 80095c6:	681b      	ldr	r3, [r3, #0]
 80095c8:	3308      	adds	r3, #8
 80095ca:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 80095ce:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 80095d2:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 80095d6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 80095da:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 80095de:	e841 2300 	strex	r3, r2, [r1]
 80095e2:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 80095e6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 80095ea:	2b00      	cmp	r3, #0
 80095ec:	d1d9      	bne.n	80095a2 <HAL_UART_IRQHandler+0x20e>
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80095f4:	2b00      	cmp	r3, #0
 80095f6:	d017      	beq.n	8009628 <HAL_UART_IRQHandler+0x294>
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80095fe:	4a15      	ldr	r2, [pc, #84]	; (8009654 <HAL_UART_IRQHandler+0x2c0>)
 8009600:	639a      	str	r2, [r3, #56]	; 0x38
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009608:	4618      	mov	r0, r3
 800960a:	f7fd fa57 	bl	8006abc <HAL_DMA_Abort_IT>
 800960e:	4603      	mov	r3, r0
 8009610:	2b00      	cmp	r3, #0
 8009612:	d019      	beq.n	8009648 <HAL_UART_IRQHandler+0x2b4>
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800961a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800961c:	687a      	ldr	r2, [r7, #4]
 800961e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8009622:	4610      	mov	r0, r2
 8009624:	4798      	blx	r3
 8009626:	e00f      	b.n	8009648 <HAL_UART_IRQHandler+0x2b4>
 8009628:	6878      	ldr	r0, [r7, #4]
 800962a:	f000 f9eb 	bl	8009a04 <HAL_UART_ErrorCallback>
 800962e:	e00b      	b.n	8009648 <HAL_UART_IRQHandler+0x2b4>
 8009630:	6878      	ldr	r0, [r7, #4]
 8009632:	f000 f9e7 	bl	8009a04 <HAL_UART_ErrorCallback>
 8009636:	e007      	b.n	8009648 <HAL_UART_IRQHandler+0x2b4>
 8009638:	6878      	ldr	r0, [r7, #4]
 800963a:	f000 f9e3 	bl	8009a04 <HAL_UART_ErrorCallback>
 800963e:	687b      	ldr	r3, [r7, #4]
 8009640:	2200      	movs	r2, #0
 8009642:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8009646:	e1bf      	b.n	80099c8 <HAL_UART_IRQHandler+0x634>
 8009648:	bf00      	nop
 800964a:	e1bd      	b.n	80099c8 <HAL_UART_IRQHandler+0x634>
 800964c:	10000001 	.word	0x10000001
 8009650:	04000120 	.word	0x04000120
 8009654:	0800a66d 	.word	0x0800a66d
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800965c:	2b01      	cmp	r3, #1
 800965e:	f040 8153 	bne.w	8009908 <HAL_UART_IRQHandler+0x574>
 8009662:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009666:	f003 0310 	and.w	r3, r3, #16
 800966a:	2b00      	cmp	r3, #0
 800966c:	f000 814c 	beq.w	8009908 <HAL_UART_IRQHandler+0x574>
 8009670:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009674:	f003 0310 	and.w	r3, r3, #16
 8009678:	2b00      	cmp	r3, #0
 800967a:	f000 8145 	beq.w	8009908 <HAL_UART_IRQHandler+0x574>
 800967e:	687b      	ldr	r3, [r7, #4]
 8009680:	681b      	ldr	r3, [r3, #0]
 8009682:	2210      	movs	r2, #16
 8009684:	621a      	str	r2, [r3, #32]
 8009686:	687b      	ldr	r3, [r7, #4]
 8009688:	681b      	ldr	r3, [r3, #0]
 800968a:	689b      	ldr	r3, [r3, #8]
 800968c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009690:	2b40      	cmp	r3, #64	; 0x40
 8009692:	f040 80bb 	bne.w	800980c <HAL_UART_IRQHandler+0x478>
 8009696:	687b      	ldr	r3, [r7, #4]
 8009698:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800969c:	681b      	ldr	r3, [r3, #0]
 800969e:	685b      	ldr	r3, [r3, #4]
 80096a0:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 80096a4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 80096a8:	2b00      	cmp	r3, #0
 80096aa:	f000 818f 	beq.w	80099cc <HAL_UART_IRQHandler+0x638>
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 80096b4:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80096b8:	429a      	cmp	r2, r3
 80096ba:	f080 8187 	bcs.w	80099cc <HAL_UART_IRQHandler+0x638>
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 80096c4:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 80096c8:	687b      	ldr	r3, [r7, #4]
 80096ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80096ce:	681b      	ldr	r3, [r3, #0]
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	f003 0320 	and.w	r3, r3, #32
 80096d6:	2b00      	cmp	r3, #0
 80096d8:	f040 8087 	bne.w	80097ea <HAL_UART_IRQHandler+0x456>
 80096dc:	687b      	ldr	r3, [r7, #4]
 80096de:	681b      	ldr	r3, [r3, #0]
 80096e0:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80096e4:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 80096e8:	e853 3f00 	ldrex	r3, [r3]
 80096ec:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 80096f0:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80096f4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80096f8:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	681b      	ldr	r3, [r3, #0]
 8009700:	461a      	mov	r2, r3
 8009702:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 8009706:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800970a:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800970e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8009712:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8009716:	e841 2300 	strex	r3, r2, [r1]
 800971a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800971e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8009722:	2b00      	cmp	r3, #0
 8009724:	d1da      	bne.n	80096dc <HAL_UART_IRQHandler+0x348>
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	681b      	ldr	r3, [r3, #0]
 800972a:	3308      	adds	r3, #8
 800972c:	677b      	str	r3, [r7, #116]	; 0x74
 800972e:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8009730:	e853 3f00 	ldrex	r3, [r3]
 8009734:	673b      	str	r3, [r7, #112]	; 0x70
 8009736:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 8009738:	f023 0301 	bic.w	r3, r3, #1
 800973c:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8009740:	687b      	ldr	r3, [r7, #4]
 8009742:	681b      	ldr	r3, [r3, #0]
 8009744:	3308      	adds	r3, #8
 8009746:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800974a:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800974e:	67fb      	str	r3, [r7, #124]	; 0x7c
 8009750:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 8009752:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 8009756:	e841 2300 	strex	r3, r2, [r1]
 800975a:	67bb      	str	r3, [r7, #120]	; 0x78
 800975c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800975e:	2b00      	cmp	r3, #0
 8009760:	d1e1      	bne.n	8009726 <HAL_UART_IRQHandler+0x392>
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	681b      	ldr	r3, [r3, #0]
 8009766:	3308      	adds	r3, #8
 8009768:	663b      	str	r3, [r7, #96]	; 0x60
 800976a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800976c:	e853 3f00 	ldrex	r3, [r3]
 8009770:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009772:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8009774:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009778:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	3308      	adds	r3, #8
 8009782:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8009786:	66fa      	str	r2, [r7, #108]	; 0x6c
 8009788:	66bb      	str	r3, [r7, #104]	; 0x68
 800978a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800978c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800978e:	e841 2300 	strex	r3, r2, [r1]
 8009792:	667b      	str	r3, [r7, #100]	; 0x64
 8009794:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8009796:	2b00      	cmp	r3, #0
 8009798:	d1e3      	bne.n	8009762 <HAL_UART_IRQHandler+0x3ce>
 800979a:	687b      	ldr	r3, [r7, #4]
 800979c:	2220      	movs	r2, #32
 800979e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	2200      	movs	r2, #0
 80097a6:	66da      	str	r2, [r3, #108]	; 0x6c
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	64fb      	str	r3, [r7, #76]	; 0x4c
 80097ae:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80097b0:	e853 3f00 	ldrex	r3, [r3]
 80097b4:	64bb      	str	r3, [r7, #72]	; 0x48
 80097b6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80097b8:	f023 0310 	bic.w	r3, r3, #16
 80097bc:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	681b      	ldr	r3, [r3, #0]
 80097c4:	461a      	mov	r2, r3
 80097c6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 80097ca:	65bb      	str	r3, [r7, #88]	; 0x58
 80097cc:	657a      	str	r2, [r7, #84]	; 0x54
 80097ce:	6d79      	ldr	r1, [r7, #84]	; 0x54
 80097d0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80097d2:	e841 2300 	strex	r3, r2, [r1]
 80097d6:	653b      	str	r3, [r7, #80]	; 0x50
 80097d8:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80097da:	2b00      	cmp	r3, #0
 80097dc:	d1e4      	bne.n	80097a8 <HAL_UART_IRQHandler+0x414>
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80097e4:	4618      	mov	r0, r3
 80097e6:	f7fd f90a 	bl	80069fe <HAL_DMA_Abort>
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	2202      	movs	r2, #2
 80097ee:	671a      	str	r2, [r3, #112]	; 0x70
 80097f0:	687b      	ldr	r3, [r7, #4]
 80097f2:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 80097f6:	687b      	ldr	r3, [r7, #4]
 80097f8:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 80097fc:	b29b      	uxth	r3, r3
 80097fe:	1ad3      	subs	r3, r2, r3
 8009800:	b29b      	uxth	r3, r3
 8009802:	4619      	mov	r1, r3
 8009804:	6878      	ldr	r0, [r7, #4]
 8009806:	f000 f907 	bl	8009a18 <HAL_UARTEx_RxEventCallback>
 800980a:	e0df      	b.n	80099cc <HAL_UART_IRQHandler+0x638>
 800980c:	687b      	ldr	r3, [r7, #4]
 800980e:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009818:	b29b      	uxth	r3, r3
 800981a:	1ad3      	subs	r3, r2, r3
 800981c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8009820:	687b      	ldr	r3, [r7, #4]
 8009822:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 8009826:	b29b      	uxth	r3, r3
 8009828:	2b00      	cmp	r3, #0
 800982a:	f000 80d1 	beq.w	80099d0 <HAL_UART_IRQHandler+0x63c>
 800982e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8009832:	2b00      	cmp	r3, #0
 8009834:	f000 80cc 	beq.w	80099d0 <HAL_UART_IRQHandler+0x63c>
 8009838:	687b      	ldr	r3, [r7, #4]
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	63bb      	str	r3, [r7, #56]	; 0x38
 800983e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009840:	e853 3f00 	ldrex	r3, [r3]
 8009844:	637b      	str	r3, [r7, #52]	; 0x34
 8009846:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009848:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800984c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8009850:	687b      	ldr	r3, [r7, #4]
 8009852:	681b      	ldr	r3, [r3, #0]
 8009854:	461a      	mov	r2, r3
 8009856:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800985a:	647b      	str	r3, [r7, #68]	; 0x44
 800985c:	643a      	str	r2, [r7, #64]	; 0x40
 800985e:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8009860:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009862:	e841 2300 	strex	r3, r2, [r1]
 8009866:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009868:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800986a:	2b00      	cmp	r3, #0
 800986c:	d1e4      	bne.n	8009838 <HAL_UART_IRQHandler+0x4a4>
 800986e:	687b      	ldr	r3, [r7, #4]
 8009870:	681b      	ldr	r3, [r3, #0]
 8009872:	3308      	adds	r3, #8
 8009874:	627b      	str	r3, [r7, #36]	; 0x24
 8009876:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009878:	e853 3f00 	ldrex	r3, [r3]
 800987c:	623b      	str	r3, [r7, #32]
 800987e:	6a3b      	ldr	r3, [r7, #32]
 8009880:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009884:	f023 0301 	bic.w	r3, r3, #1
 8009888:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	3308      	adds	r3, #8
 8009892:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 8009896:	633a      	str	r2, [r7, #48]	; 0x30
 8009898:	62fb      	str	r3, [r7, #44]	; 0x2c
 800989a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800989c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800989e:	e841 2300 	strex	r3, r2, [r1]
 80098a2:	62bb      	str	r3, [r7, #40]	; 0x28
 80098a4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80098a6:	2b00      	cmp	r3, #0
 80098a8:	d1e1      	bne.n	800986e <HAL_UART_IRQHandler+0x4da>
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	2220      	movs	r2, #32
 80098ae:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	2200      	movs	r2, #0
 80098b6:	66da      	str	r2, [r3, #108]	; 0x6c
 80098b8:	687b      	ldr	r3, [r7, #4]
 80098ba:	2200      	movs	r2, #0
 80098bc:	675a      	str	r2, [r3, #116]	; 0x74
 80098be:	687b      	ldr	r3, [r7, #4]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	613b      	str	r3, [r7, #16]
 80098c4:	693b      	ldr	r3, [r7, #16]
 80098c6:	e853 3f00 	ldrex	r3, [r3]
 80098ca:	60fb      	str	r3, [r7, #12]
 80098cc:	68fb      	ldr	r3, [r7, #12]
 80098ce:	f023 0310 	bic.w	r3, r3, #16
 80098d2:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	681b      	ldr	r3, [r3, #0]
 80098da:	461a      	mov	r2, r3
 80098dc:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 80098e0:	61fb      	str	r3, [r7, #28]
 80098e2:	61ba      	str	r2, [r7, #24]
 80098e4:	69b9      	ldr	r1, [r7, #24]
 80098e6:	69fa      	ldr	r2, [r7, #28]
 80098e8:	e841 2300 	strex	r3, r2, [r1]
 80098ec:	617b      	str	r3, [r7, #20]
 80098ee:	697b      	ldr	r3, [r7, #20]
 80098f0:	2b00      	cmp	r3, #0
 80098f2:	d1e4      	bne.n	80098be <HAL_UART_IRQHandler+0x52a>
 80098f4:	687b      	ldr	r3, [r7, #4]
 80098f6:	2202      	movs	r2, #2
 80098f8:	671a      	str	r2, [r3, #112]	; 0x70
 80098fa:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80098fe:	4619      	mov	r1, r3
 8009900:	6878      	ldr	r0, [r7, #4]
 8009902:	f000 f889 	bl	8009a18 <HAL_UARTEx_RxEventCallback>
 8009906:	e063      	b.n	80099d0 <HAL_UART_IRQHandler+0x63c>
 8009908:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800990c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009910:	2b00      	cmp	r3, #0
 8009912:	d00e      	beq.n	8009932 <HAL_UART_IRQHandler+0x59e>
 8009914:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8009918:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800991c:	2b00      	cmp	r3, #0
 800991e:	d008      	beq.n	8009932 <HAL_UART_IRQHandler+0x59e>
 8009920:	687b      	ldr	r3, [r7, #4]
 8009922:	681b      	ldr	r3, [r3, #0]
 8009924:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8009928:	621a      	str	r2, [r3, #32]
 800992a:	6878      	ldr	r0, [r7, #4]
 800992c:	f000 fedf 	bl	800a6ee <HAL_UARTEx_WakeupCallback>
 8009930:	e051      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 8009932:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009936:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800993a:	2b00      	cmp	r3, #0
 800993c:	d014      	beq.n	8009968 <HAL_UART_IRQHandler+0x5d4>
 800993e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009942:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009946:	2b00      	cmp	r3, #0
 8009948:	d105      	bne.n	8009956 <HAL_UART_IRQHandler+0x5c2>
 800994a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800994e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009952:	2b00      	cmp	r3, #0
 8009954:	d008      	beq.n	8009968 <HAL_UART_IRQHandler+0x5d4>
 8009956:	687b      	ldr	r3, [r7, #4]
 8009958:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800995a:	2b00      	cmp	r3, #0
 800995c:	d03a      	beq.n	80099d4 <HAL_UART_IRQHandler+0x640>
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009962:	6878      	ldr	r0, [r7, #4]
 8009964:	4798      	blx	r3
 8009966:	e035      	b.n	80099d4 <HAL_UART_IRQHandler+0x640>
 8009968:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800996c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009970:	2b00      	cmp	r3, #0
 8009972:	d009      	beq.n	8009988 <HAL_UART_IRQHandler+0x5f4>
 8009974:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009978:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800997c:	2b00      	cmp	r3, #0
 800997e:	d003      	beq.n	8009988 <HAL_UART_IRQHandler+0x5f4>
 8009980:	6878      	ldr	r0, [r7, #4]
 8009982:	f000 fe89 	bl	800a698 <UART_EndTransmit_IT>
 8009986:	e026      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 8009988:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800998c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8009990:	2b00      	cmp	r3, #0
 8009992:	d009      	beq.n	80099a8 <HAL_UART_IRQHandler+0x614>
 8009994:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009998:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800999c:	2b00      	cmp	r3, #0
 800999e:	d003      	beq.n	80099a8 <HAL_UART_IRQHandler+0x614>
 80099a0:	6878      	ldr	r0, [r7, #4]
 80099a2:	f000 feb8 	bl	800a716 <HAL_UARTEx_TxFifoEmptyCallback>
 80099a6:	e016      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099a8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80099ac:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80099b0:	2b00      	cmp	r3, #0
 80099b2:	d010      	beq.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099b4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80099b8:	2b00      	cmp	r3, #0
 80099ba:	da0c      	bge.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099bc:	6878      	ldr	r0, [r7, #4]
 80099be:	f000 fea0 	bl	800a702 <HAL_UARTEx_RxFifoFullCallback>
 80099c2:	e008      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099c4:	bf00      	nop
 80099c6:	e006      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099c8:	bf00      	nop
 80099ca:	e004      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099cc:	bf00      	nop
 80099ce:	e002      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099d0:	bf00      	nop
 80099d2:	e000      	b.n	80099d6 <HAL_UART_IRQHandler+0x642>
 80099d4:	bf00      	nop
 80099d6:	37e8      	adds	r7, #232	; 0xe8
 80099d8:	46bd      	mov	sp, r7
 80099da:	bd80      	pop	{r7, pc}

080099dc <HAL_UART_TxCpltCallback>:
 80099dc:	b480      	push	{r7}
 80099de:	b083      	sub	sp, #12
 80099e0:	af00      	add	r7, sp, #0
 80099e2:	6078      	str	r0, [r7, #4]
 80099e4:	bf00      	nop
 80099e6:	370c      	adds	r7, #12
 80099e8:	46bd      	mov	sp, r7
 80099ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099ee:	4770      	bx	lr

080099f0 <HAL_UART_RxHalfCpltCallback>:
 80099f0:	b480      	push	{r7}
 80099f2:	b083      	sub	sp, #12
 80099f4:	af00      	add	r7, sp, #0
 80099f6:	6078      	str	r0, [r7, #4]
 80099f8:	bf00      	nop
 80099fa:	370c      	adds	r7, #12
 80099fc:	46bd      	mov	sp, r7
 80099fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a02:	4770      	bx	lr

08009a04 <HAL_UART_ErrorCallback>:
 8009a04:	b480      	push	{r7}
 8009a06:	b083      	sub	sp, #12
 8009a08:	af00      	add	r7, sp, #0
 8009a0a:	6078      	str	r0, [r7, #4]
 8009a0c:	bf00      	nop
 8009a0e:	370c      	adds	r7, #12
 8009a10:	46bd      	mov	sp, r7
 8009a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a16:	4770      	bx	lr

08009a18 <HAL_UARTEx_RxEventCallback>:
 8009a18:	b480      	push	{r7}
 8009a1a:	b083      	sub	sp, #12
 8009a1c:	af00      	add	r7, sp, #0
 8009a1e:	6078      	str	r0, [r7, #4]
 8009a20:	460b      	mov	r3, r1
 8009a22:	807b      	strh	r3, [r7, #2]
 8009a24:	bf00      	nop
 8009a26:	370c      	adds	r7, #12
 8009a28:	46bd      	mov	sp, r7
 8009a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2e:	4770      	bx	lr

08009a30 <UART_SetConfig>:
 8009a30:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009a34:	b08c      	sub	sp, #48	; 0x30
 8009a36:	af00      	add	r7, sp, #0
 8009a38:	6178      	str	r0, [r7, #20]
 8009a3a:	2300      	movs	r3, #0
 8009a3c:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009a40:	697b      	ldr	r3, [r7, #20]
 8009a42:	689a      	ldr	r2, [r3, #8]
 8009a44:	697b      	ldr	r3, [r7, #20]
 8009a46:	691b      	ldr	r3, [r3, #16]
 8009a48:	431a      	orrs	r2, r3
 8009a4a:	697b      	ldr	r3, [r7, #20]
 8009a4c:	695b      	ldr	r3, [r3, #20]
 8009a4e:	431a      	orrs	r2, r3
 8009a50:	697b      	ldr	r3, [r7, #20]
 8009a52:	69db      	ldr	r3, [r3, #28]
 8009a54:	4313      	orrs	r3, r2
 8009a56:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009a58:	697b      	ldr	r3, [r7, #20]
 8009a5a:	681b      	ldr	r3, [r3, #0]
 8009a5c:	681a      	ldr	r2, [r3, #0]
 8009a5e:	4baf      	ldr	r3, [pc, #700]	; (8009d1c <UART_SetConfig+0x2ec>)
 8009a60:	4013      	ands	r3, r2
 8009a62:	697a      	ldr	r2, [r7, #20]
 8009a64:	6812      	ldr	r2, [r2, #0]
 8009a66:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009a68:	430b      	orrs	r3, r1
 8009a6a:	6013      	str	r3, [r2, #0]
 8009a6c:	697b      	ldr	r3, [r7, #20]
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	685b      	ldr	r3, [r3, #4]
 8009a72:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8009a76:	697b      	ldr	r3, [r7, #20]
 8009a78:	68da      	ldr	r2, [r3, #12]
 8009a7a:	697b      	ldr	r3, [r7, #20]
 8009a7c:	681b      	ldr	r3, [r3, #0]
 8009a7e:	430a      	orrs	r2, r1
 8009a80:	605a      	str	r2, [r3, #4]
 8009a82:	697b      	ldr	r3, [r7, #20]
 8009a84:	699b      	ldr	r3, [r3, #24]
 8009a86:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009a88:	697b      	ldr	r3, [r7, #20]
 8009a8a:	681b      	ldr	r3, [r3, #0]
 8009a8c:	4aa4      	ldr	r2, [pc, #656]	; (8009d20 <UART_SetConfig+0x2f0>)
 8009a8e:	4293      	cmp	r3, r2
 8009a90:	d004      	beq.n	8009a9c <UART_SetConfig+0x6c>
 8009a92:	697b      	ldr	r3, [r7, #20]
 8009a94:	6a1b      	ldr	r3, [r3, #32]
 8009a96:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009a98:	4313      	orrs	r3, r2
 8009a9a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009a9c:	697b      	ldr	r3, [r7, #20]
 8009a9e:	681b      	ldr	r3, [r3, #0]
 8009aa0:	689b      	ldr	r3, [r3, #8]
 8009aa2:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 8009aa6:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 8009aaa:	697a      	ldr	r2, [r7, #20]
 8009aac:	6812      	ldr	r2, [r2, #0]
 8009aae:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009ab0:	430b      	orrs	r3, r1
 8009ab2:	6093      	str	r3, [r2, #8]
 8009ab4:	697b      	ldr	r3, [r7, #20]
 8009ab6:	681b      	ldr	r3, [r3, #0]
 8009ab8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009aba:	f023 010f 	bic.w	r1, r3, #15
 8009abe:	697b      	ldr	r3, [r7, #20]
 8009ac0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8009ac2:	697b      	ldr	r3, [r7, #20]
 8009ac4:	681b      	ldr	r3, [r3, #0]
 8009ac6:	430a      	orrs	r2, r1
 8009ac8:	62da      	str	r2, [r3, #44]	; 0x2c
 8009aca:	697b      	ldr	r3, [r7, #20]
 8009acc:	681b      	ldr	r3, [r3, #0]
 8009ace:	4a95      	ldr	r2, [pc, #596]	; (8009d24 <UART_SetConfig+0x2f4>)
 8009ad0:	4293      	cmp	r3, r2
 8009ad2:	d125      	bne.n	8009b20 <UART_SetConfig+0xf0>
 8009ad4:	2003      	movs	r0, #3
 8009ad6:	f7ff fb13 	bl	8009100 <LL_RCC_GetUSARTClockSource>
 8009ada:	4603      	mov	r3, r0
 8009adc:	2b03      	cmp	r3, #3
 8009ade:	d81b      	bhi.n	8009b18 <UART_SetConfig+0xe8>
 8009ae0:	a201      	add	r2, pc, #4	; (adr r2, 8009ae8 <UART_SetConfig+0xb8>)
 8009ae2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ae6:	bf00      	nop
 8009ae8:	08009af9 	.word	0x08009af9
 8009aec:	08009b09 	.word	0x08009b09
 8009af0:	08009b01 	.word	0x08009b01
 8009af4:	08009b11 	.word	0x08009b11
 8009af8:	2301      	movs	r3, #1
 8009afa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009afe:	e042      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b00:	2302      	movs	r3, #2
 8009b02:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b06:	e03e      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b08:	2304      	movs	r3, #4
 8009b0a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b0e:	e03a      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b10:	2308      	movs	r3, #8
 8009b12:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b16:	e036      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b18:	2310      	movs	r3, #16
 8009b1a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b1e:	e032      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b20:	697b      	ldr	r3, [r7, #20]
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	4a7e      	ldr	r2, [pc, #504]	; (8009d20 <UART_SetConfig+0x2f0>)
 8009b26:	4293      	cmp	r3, r2
 8009b28:	d12a      	bne.n	8009b80 <UART_SetConfig+0x150>
 8009b2a:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 8009b2e:	f7ff faf7 	bl	8009120 <LL_RCC_GetLPUARTClockSource>
 8009b32:	4603      	mov	r3, r0
 8009b34:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009b38:	d01a      	beq.n	8009b70 <UART_SetConfig+0x140>
 8009b3a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 8009b3e:	d81b      	bhi.n	8009b78 <UART_SetConfig+0x148>
 8009b40:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009b44:	d00c      	beq.n	8009b60 <UART_SetConfig+0x130>
 8009b46:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009b4a:	d815      	bhi.n	8009b78 <UART_SetConfig+0x148>
 8009b4c:	2b00      	cmp	r3, #0
 8009b4e:	d003      	beq.n	8009b58 <UART_SetConfig+0x128>
 8009b50:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009b54:	d008      	beq.n	8009b68 <UART_SetConfig+0x138>
 8009b56:	e00f      	b.n	8009b78 <UART_SetConfig+0x148>
 8009b58:	2300      	movs	r3, #0
 8009b5a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b5e:	e012      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b60:	2302      	movs	r3, #2
 8009b62:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b66:	e00e      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b68:	2304      	movs	r3, #4
 8009b6a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b6e:	e00a      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b70:	2308      	movs	r3, #8
 8009b72:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b76:	e006      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b78:	2310      	movs	r3, #16
 8009b7a:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b7e:	e002      	b.n	8009b86 <UART_SetConfig+0x156>
 8009b80:	2310      	movs	r3, #16
 8009b82:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8009b86:	697b      	ldr	r3, [r7, #20]
 8009b88:	681b      	ldr	r3, [r3, #0]
 8009b8a:	4a65      	ldr	r2, [pc, #404]	; (8009d20 <UART_SetConfig+0x2f0>)
 8009b8c:	4293      	cmp	r3, r2
 8009b8e:	f040 8097 	bne.w	8009cc0 <UART_SetConfig+0x290>
 8009b92:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8009b96:	2b08      	cmp	r3, #8
 8009b98:	d823      	bhi.n	8009be2 <UART_SetConfig+0x1b2>
 8009b9a:	a201      	add	r2, pc, #4	; (adr r2, 8009ba0 <UART_SetConfig+0x170>)
 8009b9c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009ba0:	08009bc5 	.word	0x08009bc5
 8009ba4:	08009be3 	.word	0x08009be3
 8009ba8:	08009bcd 	.word	0x08009bcd
 8009bac:	08009be3 	.word	0x08009be3
 8009bb0:	08009bd3 	.word	0x08009bd3
 8009bb4:	08009be3 	.word	0x08009be3
 8009bb8:	08009be3 	.word	0x08009be3
 8009bbc:	08009be3 	.word	0x08009be3
 8009bc0:	08009bdb 	.word	0x08009bdb
 8009bc4:	f7fe fcc8 	bl	8008558 <HAL_RCC_GetPCLK1Freq>
 8009bc8:	6278      	str	r0, [r7, #36]	; 0x24
 8009bca:	e010      	b.n	8009bee <UART_SetConfig+0x1be>
 8009bcc:	4b56      	ldr	r3, [pc, #344]	; (8009d28 <UART_SetConfig+0x2f8>)
 8009bce:	627b      	str	r3, [r7, #36]	; 0x24
 8009bd0:	e00d      	b.n	8009bee <UART_SetConfig+0x1be>
 8009bd2:	f7fe fc41 	bl	8008458 <HAL_RCC_GetSysClockFreq>
 8009bd6:	6278      	str	r0, [r7, #36]	; 0x24
 8009bd8:	e009      	b.n	8009bee <UART_SetConfig+0x1be>
 8009bda:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009bde:	627b      	str	r3, [r7, #36]	; 0x24
 8009be0:	e005      	b.n	8009bee <UART_SetConfig+0x1be>
 8009be2:	2300      	movs	r3, #0
 8009be4:	627b      	str	r3, [r7, #36]	; 0x24
 8009be6:	2301      	movs	r3, #1
 8009be8:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009bec:	bf00      	nop
 8009bee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bf0:	2b00      	cmp	r3, #0
 8009bf2:	f000 812b 	beq.w	8009e4c <UART_SetConfig+0x41c>
 8009bf6:	697b      	ldr	r3, [r7, #20]
 8009bf8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bfa:	4a4c      	ldr	r2, [pc, #304]	; (8009d2c <UART_SetConfig+0x2fc>)
 8009bfc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009c00:	461a      	mov	r2, r3
 8009c02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c04:	fbb3 f3f2 	udiv	r3, r3, r2
 8009c08:	61bb      	str	r3, [r7, #24]
 8009c0a:	697b      	ldr	r3, [r7, #20]
 8009c0c:	685a      	ldr	r2, [r3, #4]
 8009c0e:	4613      	mov	r3, r2
 8009c10:	005b      	lsls	r3, r3, #1
 8009c12:	4413      	add	r3, r2
 8009c14:	69ba      	ldr	r2, [r7, #24]
 8009c16:	429a      	cmp	r2, r3
 8009c18:	d305      	bcc.n	8009c26 <UART_SetConfig+0x1f6>
 8009c1a:	697b      	ldr	r3, [r7, #20]
 8009c1c:	685b      	ldr	r3, [r3, #4]
 8009c1e:	031b      	lsls	r3, r3, #12
 8009c20:	69ba      	ldr	r2, [r7, #24]
 8009c22:	429a      	cmp	r2, r3
 8009c24:	d903      	bls.n	8009c2e <UART_SetConfig+0x1fe>
 8009c26:	2301      	movs	r3, #1
 8009c28:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009c2c:	e10e      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009c2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009c30:	2200      	movs	r2, #0
 8009c32:	60bb      	str	r3, [r7, #8]
 8009c34:	60fa      	str	r2, [r7, #12]
 8009c36:	697b      	ldr	r3, [r7, #20]
 8009c38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c3a:	4a3c      	ldr	r2, [pc, #240]	; (8009d2c <UART_SetConfig+0x2fc>)
 8009c3c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009c40:	b29b      	uxth	r3, r3
 8009c42:	2200      	movs	r2, #0
 8009c44:	603b      	str	r3, [r7, #0]
 8009c46:	607a      	str	r2, [r7, #4]
 8009c48:	e9d7 2300 	ldrd	r2, r3, [r7]
 8009c4c:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8009c50:	f7f6 ffa2 	bl	8000b98 <__aeabi_uldivmod>
 8009c54:	4602      	mov	r2, r0
 8009c56:	460b      	mov	r3, r1
 8009c58:	4610      	mov	r0, r2
 8009c5a:	4619      	mov	r1, r3
 8009c5c:	f04f 0200 	mov.w	r2, #0
 8009c60:	f04f 0300 	mov.w	r3, #0
 8009c64:	020b      	lsls	r3, r1, #8
 8009c66:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 8009c6a:	0202      	lsls	r2, r0, #8
 8009c6c:	6979      	ldr	r1, [r7, #20]
 8009c6e:	6849      	ldr	r1, [r1, #4]
 8009c70:	0849      	lsrs	r1, r1, #1
 8009c72:	2000      	movs	r0, #0
 8009c74:	460c      	mov	r4, r1
 8009c76:	4605      	mov	r5, r0
 8009c78:	eb12 0804 	adds.w	r8, r2, r4
 8009c7c:	eb43 0905 	adc.w	r9, r3, r5
 8009c80:	697b      	ldr	r3, [r7, #20]
 8009c82:	685b      	ldr	r3, [r3, #4]
 8009c84:	2200      	movs	r2, #0
 8009c86:	469a      	mov	sl, r3
 8009c88:	4693      	mov	fp, r2
 8009c8a:	4652      	mov	r2, sl
 8009c8c:	465b      	mov	r3, fp
 8009c8e:	4640      	mov	r0, r8
 8009c90:	4649      	mov	r1, r9
 8009c92:	f7f6 ff81 	bl	8000b98 <__aeabi_uldivmod>
 8009c96:	4602      	mov	r2, r0
 8009c98:	460b      	mov	r3, r1
 8009c9a:	4613      	mov	r3, r2
 8009c9c:	623b      	str	r3, [r7, #32]
 8009c9e:	6a3b      	ldr	r3, [r7, #32]
 8009ca0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009ca4:	d308      	bcc.n	8009cb8 <UART_SetConfig+0x288>
 8009ca6:	6a3b      	ldr	r3, [r7, #32]
 8009ca8:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009cac:	d204      	bcs.n	8009cb8 <UART_SetConfig+0x288>
 8009cae:	697b      	ldr	r3, [r7, #20]
 8009cb0:	681b      	ldr	r3, [r3, #0]
 8009cb2:	6a3a      	ldr	r2, [r7, #32]
 8009cb4:	60da      	str	r2, [r3, #12]
 8009cb6:	e0c9      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009cb8:	2301      	movs	r3, #1
 8009cba:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009cbe:	e0c5      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009cc0:	697b      	ldr	r3, [r7, #20]
 8009cc2:	69db      	ldr	r3, [r3, #28]
 8009cc4:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009cc8:	d16d      	bne.n	8009da6 <UART_SetConfig+0x376>
 8009cca:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8009cce:	3b01      	subs	r3, #1
 8009cd0:	2b07      	cmp	r3, #7
 8009cd2:	d82d      	bhi.n	8009d30 <UART_SetConfig+0x300>
 8009cd4:	a201      	add	r2, pc, #4	; (adr r2, 8009cdc <UART_SetConfig+0x2ac>)
 8009cd6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009cda:	bf00      	nop
 8009cdc:	08009cfd 	.word	0x08009cfd
 8009ce0:	08009d05 	.word	0x08009d05
 8009ce4:	08009d31 	.word	0x08009d31
 8009ce8:	08009d0b 	.word	0x08009d0b
 8009cec:	08009d31 	.word	0x08009d31
 8009cf0:	08009d31 	.word	0x08009d31
 8009cf4:	08009d31 	.word	0x08009d31
 8009cf8:	08009d13 	.word	0x08009d13
 8009cfc:	f7fe fc42 	bl	8008584 <HAL_RCC_GetPCLK2Freq>
 8009d00:	6278      	str	r0, [r7, #36]	; 0x24
 8009d02:	e01b      	b.n	8009d3c <UART_SetConfig+0x30c>
 8009d04:	4b08      	ldr	r3, [pc, #32]	; (8009d28 <UART_SetConfig+0x2f8>)
 8009d06:	627b      	str	r3, [r7, #36]	; 0x24
 8009d08:	e018      	b.n	8009d3c <UART_SetConfig+0x30c>
 8009d0a:	f7fe fba5 	bl	8008458 <HAL_RCC_GetSysClockFreq>
 8009d0e:	6278      	str	r0, [r7, #36]	; 0x24
 8009d10:	e014      	b.n	8009d3c <UART_SetConfig+0x30c>
 8009d12:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009d16:	627b      	str	r3, [r7, #36]	; 0x24
 8009d18:	e010      	b.n	8009d3c <UART_SetConfig+0x30c>
 8009d1a:	bf00      	nop
 8009d1c:	cfff69f3 	.word	0xcfff69f3
 8009d20:	40008000 	.word	0x40008000
 8009d24:	40013800 	.word	0x40013800
 8009d28:	00f42400 	.word	0x00f42400
 8009d2c:	0800f63c 	.word	0x0800f63c
 8009d30:	2300      	movs	r3, #0
 8009d32:	627b      	str	r3, [r7, #36]	; 0x24
 8009d34:	2301      	movs	r3, #1
 8009d36:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009d3a:	bf00      	nop
 8009d3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009d3e:	2b00      	cmp	r3, #0
 8009d40:	f000 8084 	beq.w	8009e4c <UART_SetConfig+0x41c>
 8009d44:	697b      	ldr	r3, [r7, #20]
 8009d46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009d48:	4a4b      	ldr	r2, [pc, #300]	; (8009e78 <UART_SetConfig+0x448>)
 8009d4a:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009d4e:	461a      	mov	r2, r3
 8009d50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009d52:	fbb3 f3f2 	udiv	r3, r3, r2
 8009d56:	005a      	lsls	r2, r3, #1
 8009d58:	697b      	ldr	r3, [r7, #20]
 8009d5a:	685b      	ldr	r3, [r3, #4]
 8009d5c:	085b      	lsrs	r3, r3, #1
 8009d5e:	441a      	add	r2, r3
 8009d60:	697b      	ldr	r3, [r7, #20]
 8009d62:	685b      	ldr	r3, [r3, #4]
 8009d64:	fbb2 f3f3 	udiv	r3, r2, r3
 8009d68:	623b      	str	r3, [r7, #32]
 8009d6a:	6a3b      	ldr	r3, [r7, #32]
 8009d6c:	2b0f      	cmp	r3, #15
 8009d6e:	d916      	bls.n	8009d9e <UART_SetConfig+0x36e>
 8009d70:	6a3b      	ldr	r3, [r7, #32]
 8009d72:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009d76:	d212      	bcs.n	8009d9e <UART_SetConfig+0x36e>
 8009d78:	6a3b      	ldr	r3, [r7, #32]
 8009d7a:	b29b      	uxth	r3, r3
 8009d7c:	f023 030f 	bic.w	r3, r3, #15
 8009d80:	83fb      	strh	r3, [r7, #30]
 8009d82:	6a3b      	ldr	r3, [r7, #32]
 8009d84:	085b      	lsrs	r3, r3, #1
 8009d86:	b29b      	uxth	r3, r3
 8009d88:	f003 0307 	and.w	r3, r3, #7
 8009d8c:	b29a      	uxth	r2, r3
 8009d8e:	8bfb      	ldrh	r3, [r7, #30]
 8009d90:	4313      	orrs	r3, r2
 8009d92:	83fb      	strh	r3, [r7, #30]
 8009d94:	697b      	ldr	r3, [r7, #20]
 8009d96:	681b      	ldr	r3, [r3, #0]
 8009d98:	8bfa      	ldrh	r2, [r7, #30]
 8009d9a:	60da      	str	r2, [r3, #12]
 8009d9c:	e056      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009d9e:	2301      	movs	r3, #1
 8009da0:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009da4:	e052      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009da6:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8009daa:	3b01      	subs	r3, #1
 8009dac:	2b07      	cmp	r3, #7
 8009dae:	d822      	bhi.n	8009df6 <UART_SetConfig+0x3c6>
 8009db0:	a201      	add	r2, pc, #4	; (adr r2, 8009db8 <UART_SetConfig+0x388>)
 8009db2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009db6:	bf00      	nop
 8009db8:	08009dd9 	.word	0x08009dd9
 8009dbc:	08009de1 	.word	0x08009de1
 8009dc0:	08009df7 	.word	0x08009df7
 8009dc4:	08009de7 	.word	0x08009de7
 8009dc8:	08009df7 	.word	0x08009df7
 8009dcc:	08009df7 	.word	0x08009df7
 8009dd0:	08009df7 	.word	0x08009df7
 8009dd4:	08009def 	.word	0x08009def
 8009dd8:	f7fe fbd4 	bl	8008584 <HAL_RCC_GetPCLK2Freq>
 8009ddc:	6278      	str	r0, [r7, #36]	; 0x24
 8009dde:	e010      	b.n	8009e02 <UART_SetConfig+0x3d2>
 8009de0:	4b26      	ldr	r3, [pc, #152]	; (8009e7c <UART_SetConfig+0x44c>)
 8009de2:	627b      	str	r3, [r7, #36]	; 0x24
 8009de4:	e00d      	b.n	8009e02 <UART_SetConfig+0x3d2>
 8009de6:	f7fe fb37 	bl	8008458 <HAL_RCC_GetSysClockFreq>
 8009dea:	6278      	str	r0, [r7, #36]	; 0x24
 8009dec:	e009      	b.n	8009e02 <UART_SetConfig+0x3d2>
 8009dee:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8009df2:	627b      	str	r3, [r7, #36]	; 0x24
 8009df4:	e005      	b.n	8009e02 <UART_SetConfig+0x3d2>
 8009df6:	2300      	movs	r3, #0
 8009df8:	627b      	str	r3, [r7, #36]	; 0x24
 8009dfa:	2301      	movs	r3, #1
 8009dfc:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009e00:	bf00      	nop
 8009e02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009e04:	2b00      	cmp	r3, #0
 8009e06:	d021      	beq.n	8009e4c <UART_SetConfig+0x41c>
 8009e08:	697b      	ldr	r3, [r7, #20]
 8009e0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009e0c:	4a1a      	ldr	r2, [pc, #104]	; (8009e78 <UART_SetConfig+0x448>)
 8009e0e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009e12:	461a      	mov	r2, r3
 8009e14:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009e16:	fbb3 f2f2 	udiv	r2, r3, r2
 8009e1a:	697b      	ldr	r3, [r7, #20]
 8009e1c:	685b      	ldr	r3, [r3, #4]
 8009e1e:	085b      	lsrs	r3, r3, #1
 8009e20:	441a      	add	r2, r3
 8009e22:	697b      	ldr	r3, [r7, #20]
 8009e24:	685b      	ldr	r3, [r3, #4]
 8009e26:	fbb2 f3f3 	udiv	r3, r2, r3
 8009e2a:	623b      	str	r3, [r7, #32]
 8009e2c:	6a3b      	ldr	r3, [r7, #32]
 8009e2e:	2b0f      	cmp	r3, #15
 8009e30:	d909      	bls.n	8009e46 <UART_SetConfig+0x416>
 8009e32:	6a3b      	ldr	r3, [r7, #32]
 8009e34:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8009e38:	d205      	bcs.n	8009e46 <UART_SetConfig+0x416>
 8009e3a:	6a3b      	ldr	r3, [r7, #32]
 8009e3c:	b29a      	uxth	r2, r3
 8009e3e:	697b      	ldr	r3, [r7, #20]
 8009e40:	681b      	ldr	r3, [r3, #0]
 8009e42:	60da      	str	r2, [r3, #12]
 8009e44:	e002      	b.n	8009e4c <UART_SetConfig+0x41c>
 8009e46:	2301      	movs	r3, #1
 8009e48:	f887 302a 	strb.w	r3, [r7, #42]	; 0x2a
 8009e4c:	697b      	ldr	r3, [r7, #20]
 8009e4e:	2201      	movs	r2, #1
 8009e50:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 8009e54:	697b      	ldr	r3, [r7, #20]
 8009e56:	2201      	movs	r2, #1
 8009e58:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 8009e5c:	697b      	ldr	r3, [r7, #20]
 8009e5e:	2200      	movs	r2, #0
 8009e60:	675a      	str	r2, [r3, #116]	; 0x74
 8009e62:	697b      	ldr	r3, [r7, #20]
 8009e64:	2200      	movs	r2, #0
 8009e66:	679a      	str	r2, [r3, #120]	; 0x78
 8009e68:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 8009e6c:	4618      	mov	r0, r3
 8009e6e:	3730      	adds	r7, #48	; 0x30
 8009e70:	46bd      	mov	sp, r7
 8009e72:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009e76:	bf00      	nop
 8009e78:	0800f63c 	.word	0x0800f63c
 8009e7c:	00f42400 	.word	0x00f42400

08009e80 <UART_AdvFeatureConfig>:
 8009e80:	b480      	push	{r7}
 8009e82:	b083      	sub	sp, #12
 8009e84:	af00      	add	r7, sp, #0
 8009e86:	6078      	str	r0, [r7, #4]
 8009e88:	687b      	ldr	r3, [r7, #4]
 8009e8a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e8c:	f003 0301 	and.w	r3, r3, #1
 8009e90:	2b00      	cmp	r3, #0
 8009e92:	d00a      	beq.n	8009eaa <UART_AdvFeatureConfig+0x2a>
 8009e94:	687b      	ldr	r3, [r7, #4]
 8009e96:	681b      	ldr	r3, [r3, #0]
 8009e98:	685b      	ldr	r3, [r3, #4]
 8009e9a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 8009e9e:	687b      	ldr	r3, [r7, #4]
 8009ea0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	681b      	ldr	r3, [r3, #0]
 8009ea6:	430a      	orrs	r2, r1
 8009ea8:	605a      	str	r2, [r3, #4]
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009eae:	f003 0302 	and.w	r3, r3, #2
 8009eb2:	2b00      	cmp	r3, #0
 8009eb4:	d00a      	beq.n	8009ecc <UART_AdvFeatureConfig+0x4c>
 8009eb6:	687b      	ldr	r3, [r7, #4]
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	685b      	ldr	r3, [r3, #4]
 8009ebc:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	681b      	ldr	r3, [r3, #0]
 8009ec8:	430a      	orrs	r2, r1
 8009eca:	605a      	str	r2, [r3, #4]
 8009ecc:	687b      	ldr	r3, [r7, #4]
 8009ece:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009ed0:	f003 0304 	and.w	r3, r3, #4
 8009ed4:	2b00      	cmp	r3, #0
 8009ed6:	d00a      	beq.n	8009eee <UART_AdvFeatureConfig+0x6e>
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	685b      	ldr	r3, [r3, #4]
 8009ede:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 8009ee2:	687b      	ldr	r3, [r7, #4]
 8009ee4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009ee6:	687b      	ldr	r3, [r7, #4]
 8009ee8:	681b      	ldr	r3, [r3, #0]
 8009eea:	430a      	orrs	r2, r1
 8009eec:	605a      	str	r2, [r3, #4]
 8009eee:	687b      	ldr	r3, [r7, #4]
 8009ef0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009ef2:	f003 0308 	and.w	r3, r3, #8
 8009ef6:	2b00      	cmp	r3, #0
 8009ef8:	d00a      	beq.n	8009f10 <UART_AdvFeatureConfig+0x90>
 8009efa:	687b      	ldr	r3, [r7, #4]
 8009efc:	681b      	ldr	r3, [r3, #0]
 8009efe:	685b      	ldr	r3, [r3, #4]
 8009f00:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 8009f04:	687b      	ldr	r3, [r7, #4]
 8009f06:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009f08:	687b      	ldr	r3, [r7, #4]
 8009f0a:	681b      	ldr	r3, [r3, #0]
 8009f0c:	430a      	orrs	r2, r1
 8009f0e:	605a      	str	r2, [r3, #4]
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f14:	f003 0310 	and.w	r3, r3, #16
 8009f18:	2b00      	cmp	r3, #0
 8009f1a:	d00a      	beq.n	8009f32 <UART_AdvFeatureConfig+0xb2>
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	681b      	ldr	r3, [r3, #0]
 8009f20:	689b      	ldr	r3, [r3, #8]
 8009f22:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 8009f26:	687b      	ldr	r3, [r7, #4]
 8009f28:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009f2a:	687b      	ldr	r3, [r7, #4]
 8009f2c:	681b      	ldr	r3, [r3, #0]
 8009f2e:	430a      	orrs	r2, r1
 8009f30:	609a      	str	r2, [r3, #8]
 8009f32:	687b      	ldr	r3, [r7, #4]
 8009f34:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f36:	f003 0320 	and.w	r3, r3, #32
 8009f3a:	2b00      	cmp	r3, #0
 8009f3c:	d00a      	beq.n	8009f54 <UART_AdvFeatureConfig+0xd4>
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	681b      	ldr	r3, [r3, #0]
 8009f42:	689b      	ldr	r3, [r3, #8]
 8009f44:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	681b      	ldr	r3, [r3, #0]
 8009f50:	430a      	orrs	r2, r1
 8009f52:	609a      	str	r2, [r3, #8]
 8009f54:	687b      	ldr	r3, [r7, #4]
 8009f56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f58:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009f5c:	2b00      	cmp	r3, #0
 8009f5e:	d01a      	beq.n	8009f96 <UART_AdvFeatureConfig+0x116>
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	681b      	ldr	r3, [r3, #0]
 8009f64:	685b      	ldr	r3, [r3, #4]
 8009f66:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8009f6a:	687b      	ldr	r3, [r7, #4]
 8009f6c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	681b      	ldr	r3, [r3, #0]
 8009f72:	430a      	orrs	r2, r1
 8009f74:	605a      	str	r2, [r3, #4]
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009f7a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009f7e:	d10a      	bne.n	8009f96 <UART_AdvFeatureConfig+0x116>
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	681b      	ldr	r3, [r3, #0]
 8009f84:	685b      	ldr	r3, [r3, #4]
 8009f86:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 8009f8a:	687b      	ldr	r3, [r7, #4]
 8009f8c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8009f8e:	687b      	ldr	r3, [r7, #4]
 8009f90:	681b      	ldr	r3, [r3, #0]
 8009f92:	430a      	orrs	r2, r1
 8009f94:	605a      	str	r2, [r3, #4]
 8009f96:	687b      	ldr	r3, [r7, #4]
 8009f98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f9a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009f9e:	2b00      	cmp	r3, #0
 8009fa0:	d00a      	beq.n	8009fb8 <UART_AdvFeatureConfig+0x138>
 8009fa2:	687b      	ldr	r3, [r7, #4]
 8009fa4:	681b      	ldr	r3, [r3, #0]
 8009fa6:	685b      	ldr	r3, [r3, #4]
 8009fa8:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8009fac:	687b      	ldr	r3, [r7, #4]
 8009fae:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8009fb0:	687b      	ldr	r3, [r7, #4]
 8009fb2:	681b      	ldr	r3, [r3, #0]
 8009fb4:	430a      	orrs	r2, r1
 8009fb6:	605a      	str	r2, [r3, #4]
 8009fb8:	bf00      	nop
 8009fba:	370c      	adds	r7, #12
 8009fbc:	46bd      	mov	sp, r7
 8009fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fc2:	4770      	bx	lr

08009fc4 <UART_CheckIdleState>:
 8009fc4:	b580      	push	{r7, lr}
 8009fc6:	b098      	sub	sp, #96	; 0x60
 8009fc8:	af02      	add	r7, sp, #8
 8009fca:	6078      	str	r0, [r7, #4]
 8009fcc:	687b      	ldr	r3, [r7, #4]
 8009fce:	2200      	movs	r2, #0
 8009fd0:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8009fd4:	f7fb f8d8 	bl	8005188 <HAL_GetTick>
 8009fd8:	6578      	str	r0, [r7, #84]	; 0x54
 8009fda:	687b      	ldr	r3, [r7, #4]
 8009fdc:	681b      	ldr	r3, [r3, #0]
 8009fde:	681b      	ldr	r3, [r3, #0]
 8009fe0:	f003 0308 	and.w	r3, r3, #8
 8009fe4:	2b08      	cmp	r3, #8
 8009fe6:	d12f      	bne.n	800a048 <UART_CheckIdleState+0x84>
 8009fe8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 8009fec:	9300      	str	r3, [sp, #0]
 8009fee:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 8009ff0:	2200      	movs	r2, #0
 8009ff2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 8009ff6:	6878      	ldr	r0, [r7, #4]
 8009ff8:	f000 f88e 	bl	800a118 <UART_WaitOnFlagUntilTimeout>
 8009ffc:	4603      	mov	r3, r0
 8009ffe:	2b00      	cmp	r3, #0
 800a000:	d022      	beq.n	800a048 <UART_CheckIdleState+0x84>
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	681b      	ldr	r3, [r3, #0]
 800a006:	63bb      	str	r3, [r7, #56]	; 0x38
 800a008:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a00a:	e853 3f00 	ldrex	r3, [r3]
 800a00e:	637b      	str	r3, [r7, #52]	; 0x34
 800a010:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a012:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800a016:	653b      	str	r3, [r7, #80]	; 0x50
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	681b      	ldr	r3, [r3, #0]
 800a01c:	461a      	mov	r2, r3
 800a01e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a020:	647b      	str	r3, [r7, #68]	; 0x44
 800a022:	643a      	str	r2, [r7, #64]	; 0x40
 800a024:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800a026:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a028:	e841 2300 	strex	r3, r2, [r1]
 800a02c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a02e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a030:	2b00      	cmp	r3, #0
 800a032:	d1e6      	bne.n	800a002 <UART_CheckIdleState+0x3e>
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	2220      	movs	r2, #32
 800a038:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	2200      	movs	r2, #0
 800a040:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a044:	2303      	movs	r3, #3
 800a046:	e063      	b.n	800a110 <UART_CheckIdleState+0x14c>
 800a048:	687b      	ldr	r3, [r7, #4]
 800a04a:	681b      	ldr	r3, [r3, #0]
 800a04c:	681b      	ldr	r3, [r3, #0]
 800a04e:	f003 0304 	and.w	r3, r3, #4
 800a052:	2b04      	cmp	r3, #4
 800a054:	d149      	bne.n	800a0ea <UART_CheckIdleState+0x126>
 800a056:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800a05a:	9300      	str	r3, [sp, #0]
 800a05c:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a05e:	2200      	movs	r2, #0
 800a060:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800a064:	6878      	ldr	r0, [r7, #4]
 800a066:	f000 f857 	bl	800a118 <UART_WaitOnFlagUntilTimeout>
 800a06a:	4603      	mov	r3, r0
 800a06c:	2b00      	cmp	r3, #0
 800a06e:	d03c      	beq.n	800a0ea <UART_CheckIdleState+0x126>
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	681b      	ldr	r3, [r3, #0]
 800a074:	627b      	str	r3, [r7, #36]	; 0x24
 800a076:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a078:	e853 3f00 	ldrex	r3, [r3]
 800a07c:	623b      	str	r3, [r7, #32]
 800a07e:	6a3b      	ldr	r3, [r7, #32]
 800a080:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800a084:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	681b      	ldr	r3, [r3, #0]
 800a08a:	461a      	mov	r2, r3
 800a08c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a08e:	633b      	str	r3, [r7, #48]	; 0x30
 800a090:	62fa      	str	r2, [r7, #44]	; 0x2c
 800a092:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a094:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a096:	e841 2300 	strex	r3, r2, [r1]
 800a09a:	62bb      	str	r3, [r7, #40]	; 0x28
 800a09c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a09e:	2b00      	cmp	r3, #0
 800a0a0:	d1e6      	bne.n	800a070 <UART_CheckIdleState+0xac>
 800a0a2:	687b      	ldr	r3, [r7, #4]
 800a0a4:	681b      	ldr	r3, [r3, #0]
 800a0a6:	3308      	adds	r3, #8
 800a0a8:	613b      	str	r3, [r7, #16]
 800a0aa:	693b      	ldr	r3, [r7, #16]
 800a0ac:	e853 3f00 	ldrex	r3, [r3]
 800a0b0:	60fb      	str	r3, [r7, #12]
 800a0b2:	68fb      	ldr	r3, [r7, #12]
 800a0b4:	f023 0301 	bic.w	r3, r3, #1
 800a0b8:	64bb      	str	r3, [r7, #72]	; 0x48
 800a0ba:	687b      	ldr	r3, [r7, #4]
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	3308      	adds	r3, #8
 800a0c0:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a0c2:	61fa      	str	r2, [r7, #28]
 800a0c4:	61bb      	str	r3, [r7, #24]
 800a0c6:	69b9      	ldr	r1, [r7, #24]
 800a0c8:	69fa      	ldr	r2, [r7, #28]
 800a0ca:	e841 2300 	strex	r3, r2, [r1]
 800a0ce:	617b      	str	r3, [r7, #20]
 800a0d0:	697b      	ldr	r3, [r7, #20]
 800a0d2:	2b00      	cmp	r3, #0
 800a0d4:	d1e5      	bne.n	800a0a2 <UART_CheckIdleState+0xde>
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	2220      	movs	r2, #32
 800a0da:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a0de:	687b      	ldr	r3, [r7, #4]
 800a0e0:	2200      	movs	r2, #0
 800a0e2:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a0e6:	2303      	movs	r3, #3
 800a0e8:	e012      	b.n	800a110 <UART_CheckIdleState+0x14c>
 800a0ea:	687b      	ldr	r3, [r7, #4]
 800a0ec:	2220      	movs	r2, #32
 800a0ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	2220      	movs	r2, #32
 800a0f6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	2200      	movs	r2, #0
 800a0fe:	66da      	str	r2, [r3, #108]	; 0x6c
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	2200      	movs	r2, #0
 800a104:	671a      	str	r2, [r3, #112]	; 0x70
 800a106:	687b      	ldr	r3, [r7, #4]
 800a108:	2200      	movs	r2, #0
 800a10a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a10e:	2300      	movs	r3, #0
 800a110:	4618      	mov	r0, r3
 800a112:	3758      	adds	r7, #88	; 0x58
 800a114:	46bd      	mov	sp, r7
 800a116:	bd80      	pop	{r7, pc}

0800a118 <UART_WaitOnFlagUntilTimeout>:
 800a118:	b580      	push	{r7, lr}
 800a11a:	b084      	sub	sp, #16
 800a11c:	af00      	add	r7, sp, #0
 800a11e:	60f8      	str	r0, [r7, #12]
 800a120:	60b9      	str	r1, [r7, #8]
 800a122:	603b      	str	r3, [r7, #0]
 800a124:	4613      	mov	r3, r2
 800a126:	71fb      	strb	r3, [r7, #7]
 800a128:	e049      	b.n	800a1be <UART_WaitOnFlagUntilTimeout+0xa6>
 800a12a:	69bb      	ldr	r3, [r7, #24]
 800a12c:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a130:	d045      	beq.n	800a1be <UART_WaitOnFlagUntilTimeout+0xa6>
 800a132:	f7fb f829 	bl	8005188 <HAL_GetTick>
 800a136:	4602      	mov	r2, r0
 800a138:	683b      	ldr	r3, [r7, #0]
 800a13a:	1ad3      	subs	r3, r2, r3
 800a13c:	69ba      	ldr	r2, [r7, #24]
 800a13e:	429a      	cmp	r2, r3
 800a140:	d302      	bcc.n	800a148 <UART_WaitOnFlagUntilTimeout+0x30>
 800a142:	69bb      	ldr	r3, [r7, #24]
 800a144:	2b00      	cmp	r3, #0
 800a146:	d101      	bne.n	800a14c <UART_WaitOnFlagUntilTimeout+0x34>
 800a148:	2303      	movs	r3, #3
 800a14a:	e048      	b.n	800a1de <UART_WaitOnFlagUntilTimeout+0xc6>
 800a14c:	68fb      	ldr	r3, [r7, #12]
 800a14e:	681b      	ldr	r3, [r3, #0]
 800a150:	681b      	ldr	r3, [r3, #0]
 800a152:	f003 0304 	and.w	r3, r3, #4
 800a156:	2b00      	cmp	r3, #0
 800a158:	d031      	beq.n	800a1be <UART_WaitOnFlagUntilTimeout+0xa6>
 800a15a:	68fb      	ldr	r3, [r7, #12]
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	69db      	ldr	r3, [r3, #28]
 800a160:	f003 0308 	and.w	r3, r3, #8
 800a164:	2b08      	cmp	r3, #8
 800a166:	d110      	bne.n	800a18a <UART_WaitOnFlagUntilTimeout+0x72>
 800a168:	68fb      	ldr	r3, [r7, #12]
 800a16a:	681b      	ldr	r3, [r3, #0]
 800a16c:	2208      	movs	r2, #8
 800a16e:	621a      	str	r2, [r3, #32]
 800a170:	68f8      	ldr	r0, [r7, #12]
 800a172:	f000 f920 	bl	800a3b6 <UART_EndRxTransfer>
 800a176:	68fb      	ldr	r3, [r7, #12]
 800a178:	2208      	movs	r2, #8
 800a17a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800a17e:	68fb      	ldr	r3, [r7, #12]
 800a180:	2200      	movs	r2, #0
 800a182:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a186:	2301      	movs	r3, #1
 800a188:	e029      	b.n	800a1de <UART_WaitOnFlagUntilTimeout+0xc6>
 800a18a:	68fb      	ldr	r3, [r7, #12]
 800a18c:	681b      	ldr	r3, [r3, #0]
 800a18e:	69db      	ldr	r3, [r3, #28]
 800a190:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800a194:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a198:	d111      	bne.n	800a1be <UART_WaitOnFlagUntilTimeout+0xa6>
 800a19a:	68fb      	ldr	r3, [r7, #12]
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800a1a2:	621a      	str	r2, [r3, #32]
 800a1a4:	68f8      	ldr	r0, [r7, #12]
 800a1a6:	f000 f906 	bl	800a3b6 <UART_EndRxTransfer>
 800a1aa:	68fb      	ldr	r3, [r7, #12]
 800a1ac:	2220      	movs	r2, #32
 800a1ae:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800a1b2:	68fb      	ldr	r3, [r7, #12]
 800a1b4:	2200      	movs	r2, #0
 800a1b6:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a1ba:	2303      	movs	r3, #3
 800a1bc:	e00f      	b.n	800a1de <UART_WaitOnFlagUntilTimeout+0xc6>
 800a1be:	68fb      	ldr	r3, [r7, #12]
 800a1c0:	681b      	ldr	r3, [r3, #0]
 800a1c2:	69da      	ldr	r2, [r3, #28]
 800a1c4:	68bb      	ldr	r3, [r7, #8]
 800a1c6:	4013      	ands	r3, r2
 800a1c8:	68ba      	ldr	r2, [r7, #8]
 800a1ca:	429a      	cmp	r2, r3
 800a1cc:	bf0c      	ite	eq
 800a1ce:	2301      	moveq	r3, #1
 800a1d0:	2300      	movne	r3, #0
 800a1d2:	b2db      	uxtb	r3, r3
 800a1d4:	461a      	mov	r2, r3
 800a1d6:	79fb      	ldrb	r3, [r7, #7]
 800a1d8:	429a      	cmp	r2, r3
 800a1da:	d0a6      	beq.n	800a12a <UART_WaitOnFlagUntilTimeout+0x12>
 800a1dc:	2300      	movs	r3, #0
 800a1de:	4618      	mov	r0, r3
 800a1e0:	3710      	adds	r7, #16
 800a1e2:	46bd      	mov	sp, r7
 800a1e4:	bd80      	pop	{r7, pc}
	...

0800a1e8 <UART_Start_Receive_DMA>:
 800a1e8:	b580      	push	{r7, lr}
 800a1ea:	b096      	sub	sp, #88	; 0x58
 800a1ec:	af00      	add	r7, sp, #0
 800a1ee:	60f8      	str	r0, [r7, #12]
 800a1f0:	60b9      	str	r1, [r7, #8]
 800a1f2:	4613      	mov	r3, r2
 800a1f4:	80fb      	strh	r3, [r7, #6]
 800a1f6:	68fb      	ldr	r3, [r7, #12]
 800a1f8:	68ba      	ldr	r2, [r7, #8]
 800a1fa:	659a      	str	r2, [r3, #88]	; 0x58
 800a1fc:	68fb      	ldr	r3, [r7, #12]
 800a1fe:	88fa      	ldrh	r2, [r7, #6]
 800a200:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800a204:	68fb      	ldr	r3, [r7, #12]
 800a206:	2200      	movs	r2, #0
 800a208:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800a20c:	68fb      	ldr	r3, [r7, #12]
 800a20e:	2222      	movs	r2, #34	; 0x22
 800a210:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a214:	68fb      	ldr	r3, [r7, #12]
 800a216:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	d02d      	beq.n	800a27a <UART_Start_Receive_DMA+0x92>
 800a21e:	68fb      	ldr	r3, [r7, #12]
 800a220:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a224:	4a40      	ldr	r2, [pc, #256]	; (800a328 <UART_Start_Receive_DMA+0x140>)
 800a226:	62da      	str	r2, [r3, #44]	; 0x2c
 800a228:	68fb      	ldr	r3, [r7, #12]
 800a22a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a22e:	4a3f      	ldr	r2, [pc, #252]	; (800a32c <UART_Start_Receive_DMA+0x144>)
 800a230:	631a      	str	r2, [r3, #48]	; 0x30
 800a232:	68fb      	ldr	r3, [r7, #12]
 800a234:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a238:	4a3d      	ldr	r2, [pc, #244]	; (800a330 <UART_Start_Receive_DMA+0x148>)
 800a23a:	635a      	str	r2, [r3, #52]	; 0x34
 800a23c:	68fb      	ldr	r3, [r7, #12]
 800a23e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a242:	2200      	movs	r2, #0
 800a244:	639a      	str	r2, [r3, #56]	; 0x38
 800a246:	68fb      	ldr	r3, [r7, #12]
 800a248:	f8d3 0080 	ldr.w	r0, [r3, #128]	; 0x80
 800a24c:	68fb      	ldr	r3, [r7, #12]
 800a24e:	681b      	ldr	r3, [r3, #0]
 800a250:	3324      	adds	r3, #36	; 0x24
 800a252:	4619      	mov	r1, r3
 800a254:	68fb      	ldr	r3, [r7, #12]
 800a256:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a258:	461a      	mov	r2, r3
 800a25a:	88fb      	ldrh	r3, [r7, #6]
 800a25c:	f7fc fb54 	bl	8006908 <HAL_DMA_Start_IT>
 800a260:	4603      	mov	r3, r0
 800a262:	2b00      	cmp	r3, #0
 800a264:	d009      	beq.n	800a27a <UART_Start_Receive_DMA+0x92>
 800a266:	68fb      	ldr	r3, [r7, #12]
 800a268:	2210      	movs	r2, #16
 800a26a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800a26e:	68fb      	ldr	r3, [r7, #12]
 800a270:	2220      	movs	r2, #32
 800a272:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a276:	2301      	movs	r3, #1
 800a278:	e051      	b.n	800a31e <UART_Start_Receive_DMA+0x136>
 800a27a:	68fb      	ldr	r3, [r7, #12]
 800a27c:	691b      	ldr	r3, [r3, #16]
 800a27e:	2b00      	cmp	r3, #0
 800a280:	d018      	beq.n	800a2b4 <UART_Start_Receive_DMA+0xcc>
 800a282:	68fb      	ldr	r3, [r7, #12]
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a288:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a28a:	e853 3f00 	ldrex	r3, [r3]
 800a28e:	63bb      	str	r3, [r7, #56]	; 0x38
 800a290:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a292:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a296:	657b      	str	r3, [r7, #84]	; 0x54
 800a298:	68fb      	ldr	r3, [r7, #12]
 800a29a:	681b      	ldr	r3, [r3, #0]
 800a29c:	461a      	mov	r2, r3
 800a29e:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800a2a0:	64bb      	str	r3, [r7, #72]	; 0x48
 800a2a2:	647a      	str	r2, [r7, #68]	; 0x44
 800a2a4:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800a2a6:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a2a8:	e841 2300 	strex	r3, r2, [r1]
 800a2ac:	643b      	str	r3, [r7, #64]	; 0x40
 800a2ae:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800a2b0:	2b00      	cmp	r3, #0
 800a2b2:	d1e6      	bne.n	800a282 <UART_Start_Receive_DMA+0x9a>
 800a2b4:	68fb      	ldr	r3, [r7, #12]
 800a2b6:	681b      	ldr	r3, [r3, #0]
 800a2b8:	3308      	adds	r3, #8
 800a2ba:	62bb      	str	r3, [r7, #40]	; 0x28
 800a2bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a2be:	e853 3f00 	ldrex	r3, [r3]
 800a2c2:	627b      	str	r3, [r7, #36]	; 0x24
 800a2c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2c6:	f043 0301 	orr.w	r3, r3, #1
 800a2ca:	653b      	str	r3, [r7, #80]	; 0x50
 800a2cc:	68fb      	ldr	r3, [r7, #12]
 800a2ce:	681b      	ldr	r3, [r3, #0]
 800a2d0:	3308      	adds	r3, #8
 800a2d2:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800a2d4:	637a      	str	r2, [r7, #52]	; 0x34
 800a2d6:	633b      	str	r3, [r7, #48]	; 0x30
 800a2d8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800a2da:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a2dc:	e841 2300 	strex	r3, r2, [r1]
 800a2e0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a2e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a2e4:	2b00      	cmp	r3, #0
 800a2e6:	d1e5      	bne.n	800a2b4 <UART_Start_Receive_DMA+0xcc>
 800a2e8:	68fb      	ldr	r3, [r7, #12]
 800a2ea:	681b      	ldr	r3, [r3, #0]
 800a2ec:	3308      	adds	r3, #8
 800a2ee:	617b      	str	r3, [r7, #20]
 800a2f0:	697b      	ldr	r3, [r7, #20]
 800a2f2:	e853 3f00 	ldrex	r3, [r3]
 800a2f6:	613b      	str	r3, [r7, #16]
 800a2f8:	693b      	ldr	r3, [r7, #16]
 800a2fa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800a2fe:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a300:	68fb      	ldr	r3, [r7, #12]
 800a302:	681b      	ldr	r3, [r3, #0]
 800a304:	3308      	adds	r3, #8
 800a306:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800a308:	623a      	str	r2, [r7, #32]
 800a30a:	61fb      	str	r3, [r7, #28]
 800a30c:	69f9      	ldr	r1, [r7, #28]
 800a30e:	6a3a      	ldr	r2, [r7, #32]
 800a310:	e841 2300 	strex	r3, r2, [r1]
 800a314:	61bb      	str	r3, [r7, #24]
 800a316:	69bb      	ldr	r3, [r7, #24]
 800a318:	2b00      	cmp	r3, #0
 800a31a:	d1e5      	bne.n	800a2e8 <UART_Start_Receive_DMA+0x100>
 800a31c:	2300      	movs	r3, #0
 800a31e:	4618      	mov	r0, r3
 800a320:	3758      	adds	r7, #88	; 0x58
 800a322:	46bd      	mov	sp, r7
 800a324:	bd80      	pop	{r7, pc}
 800a326:	bf00      	nop
 800a328:	0800a483 	.word	0x0800a483
 800a32c:	0800a5af 	.word	0x0800a5af
 800a330:	0800a5ed 	.word	0x0800a5ed

0800a334 <UART_EndTxTransfer>:
 800a334:	b480      	push	{r7}
 800a336:	b08f      	sub	sp, #60	; 0x3c
 800a338:	af00      	add	r7, sp, #0
 800a33a:	6078      	str	r0, [r7, #4]
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	623b      	str	r3, [r7, #32]
 800a342:	6a3b      	ldr	r3, [r7, #32]
 800a344:	e853 3f00 	ldrex	r3, [r3]
 800a348:	61fb      	str	r3, [r7, #28]
 800a34a:	69fb      	ldr	r3, [r7, #28]
 800a34c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800a350:	637b      	str	r3, [r7, #52]	; 0x34
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	681b      	ldr	r3, [r3, #0]
 800a356:	461a      	mov	r2, r3
 800a358:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a35a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a35c:	62ba      	str	r2, [r7, #40]	; 0x28
 800a35e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a360:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a362:	e841 2300 	strex	r3, r2, [r1]
 800a366:	627b      	str	r3, [r7, #36]	; 0x24
 800a368:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a36a:	2b00      	cmp	r3, #0
 800a36c:	d1e6      	bne.n	800a33c <UART_EndTxTransfer+0x8>
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	681b      	ldr	r3, [r3, #0]
 800a372:	3308      	adds	r3, #8
 800a374:	60fb      	str	r3, [r7, #12]
 800a376:	68fb      	ldr	r3, [r7, #12]
 800a378:	e853 3f00 	ldrex	r3, [r3]
 800a37c:	60bb      	str	r3, [r7, #8]
 800a37e:	68bb      	ldr	r3, [r7, #8]
 800a380:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800a384:	633b      	str	r3, [r7, #48]	; 0x30
 800a386:	687b      	ldr	r3, [r7, #4]
 800a388:	681b      	ldr	r3, [r3, #0]
 800a38a:	3308      	adds	r3, #8
 800a38c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a38e:	61ba      	str	r2, [r7, #24]
 800a390:	617b      	str	r3, [r7, #20]
 800a392:	6979      	ldr	r1, [r7, #20]
 800a394:	69ba      	ldr	r2, [r7, #24]
 800a396:	e841 2300 	strex	r3, r2, [r1]
 800a39a:	613b      	str	r3, [r7, #16]
 800a39c:	693b      	ldr	r3, [r7, #16]
 800a39e:	2b00      	cmp	r3, #0
 800a3a0:	d1e5      	bne.n	800a36e <UART_EndTxTransfer+0x3a>
 800a3a2:	687b      	ldr	r3, [r7, #4]
 800a3a4:	2220      	movs	r2, #32
 800a3a6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a3aa:	bf00      	nop
 800a3ac:	373c      	adds	r7, #60	; 0x3c
 800a3ae:	46bd      	mov	sp, r7
 800a3b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3b4:	4770      	bx	lr

0800a3b6 <UART_EndRxTransfer>:
 800a3b6:	b480      	push	{r7}
 800a3b8:	b095      	sub	sp, #84	; 0x54
 800a3ba:	af00      	add	r7, sp, #0
 800a3bc:	6078      	str	r0, [r7, #4]
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	681b      	ldr	r3, [r3, #0]
 800a3c2:	637b      	str	r3, [r7, #52]	; 0x34
 800a3c4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a3c6:	e853 3f00 	ldrex	r3, [r3]
 800a3ca:	633b      	str	r3, [r7, #48]	; 0x30
 800a3cc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3ce:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800a3d2:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	681b      	ldr	r3, [r3, #0]
 800a3d8:	461a      	mov	r2, r3
 800a3da:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a3dc:	643b      	str	r3, [r7, #64]	; 0x40
 800a3de:	63fa      	str	r2, [r7, #60]	; 0x3c
 800a3e0:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800a3e2:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800a3e4:	e841 2300 	strex	r3, r2, [r1]
 800a3e8:	63bb      	str	r3, [r7, #56]	; 0x38
 800a3ea:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a3ec:	2b00      	cmp	r3, #0
 800a3ee:	d1e6      	bne.n	800a3be <UART_EndRxTransfer+0x8>
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	681b      	ldr	r3, [r3, #0]
 800a3f4:	3308      	adds	r3, #8
 800a3f6:	623b      	str	r3, [r7, #32]
 800a3f8:	6a3b      	ldr	r3, [r7, #32]
 800a3fa:	e853 3f00 	ldrex	r3, [r3]
 800a3fe:	61fb      	str	r3, [r7, #28]
 800a400:	69fb      	ldr	r3, [r7, #28]
 800a402:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a406:	f023 0301 	bic.w	r3, r3, #1
 800a40a:	64bb      	str	r3, [r7, #72]	; 0x48
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	681b      	ldr	r3, [r3, #0]
 800a410:	3308      	adds	r3, #8
 800a412:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800a414:	62fa      	str	r2, [r7, #44]	; 0x2c
 800a416:	62bb      	str	r3, [r7, #40]	; 0x28
 800a418:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800a41a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800a41c:	e841 2300 	strex	r3, r2, [r1]
 800a420:	627b      	str	r3, [r7, #36]	; 0x24
 800a422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a424:	2b00      	cmp	r3, #0
 800a426:	d1e3      	bne.n	800a3f0 <UART_EndRxTransfer+0x3a>
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a42c:	2b01      	cmp	r3, #1
 800a42e:	d118      	bne.n	800a462 <UART_EndRxTransfer+0xac>
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	681b      	ldr	r3, [r3, #0]
 800a434:	60fb      	str	r3, [r7, #12]
 800a436:	68fb      	ldr	r3, [r7, #12]
 800a438:	e853 3f00 	ldrex	r3, [r3]
 800a43c:	60bb      	str	r3, [r7, #8]
 800a43e:	68bb      	ldr	r3, [r7, #8]
 800a440:	f023 0310 	bic.w	r3, r3, #16
 800a444:	647b      	str	r3, [r7, #68]	; 0x44
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	681b      	ldr	r3, [r3, #0]
 800a44a:	461a      	mov	r2, r3
 800a44c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800a44e:	61bb      	str	r3, [r7, #24]
 800a450:	617a      	str	r2, [r7, #20]
 800a452:	6979      	ldr	r1, [r7, #20]
 800a454:	69ba      	ldr	r2, [r7, #24]
 800a456:	e841 2300 	strex	r3, r2, [r1]
 800a45a:	613b      	str	r3, [r7, #16]
 800a45c:	693b      	ldr	r3, [r7, #16]
 800a45e:	2b00      	cmp	r3, #0
 800a460:	d1e6      	bne.n	800a430 <UART_EndRxTransfer+0x7a>
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	2220      	movs	r2, #32
 800a466:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	2200      	movs	r2, #0
 800a46e:	66da      	str	r2, [r3, #108]	; 0x6c
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	2200      	movs	r2, #0
 800a474:	675a      	str	r2, [r3, #116]	; 0x74
 800a476:	bf00      	nop
 800a478:	3754      	adds	r7, #84	; 0x54
 800a47a:	46bd      	mov	sp, r7
 800a47c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a480:	4770      	bx	lr

0800a482 <UART_DMAReceiveCplt>:
 800a482:	b580      	push	{r7, lr}
 800a484:	b09c      	sub	sp, #112	; 0x70
 800a486:	af00      	add	r7, sp, #0
 800a488:	6078      	str	r0, [r7, #4]
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a48e:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a490:	687b      	ldr	r3, [r7, #4]
 800a492:	681b      	ldr	r3, [r3, #0]
 800a494:	681b      	ldr	r3, [r3, #0]
 800a496:	f003 0320 	and.w	r3, r3, #32
 800a49a:	2b00      	cmp	r3, #0
 800a49c:	d171      	bne.n	800a582 <UART_DMAReceiveCplt+0x100>
 800a49e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4a0:	2200      	movs	r2, #0
 800a4a2:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800a4a6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4a8:	681b      	ldr	r3, [r3, #0]
 800a4aa:	64fb      	str	r3, [r7, #76]	; 0x4c
 800a4ac:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800a4ae:	e853 3f00 	ldrex	r3, [r3]
 800a4b2:	64bb      	str	r3, [r7, #72]	; 0x48
 800a4b4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800a4b6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a4ba:	66bb      	str	r3, [r7, #104]	; 0x68
 800a4bc:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4be:	681b      	ldr	r3, [r3, #0]
 800a4c0:	461a      	mov	r2, r3
 800a4c2:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800a4c4:	65bb      	str	r3, [r7, #88]	; 0x58
 800a4c6:	657a      	str	r2, [r7, #84]	; 0x54
 800a4c8:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800a4ca:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800a4cc:	e841 2300 	strex	r3, r2, [r1]
 800a4d0:	653b      	str	r3, [r7, #80]	; 0x50
 800a4d2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800a4d4:	2b00      	cmp	r3, #0
 800a4d6:	d1e6      	bne.n	800a4a6 <UART_DMAReceiveCplt+0x24>
 800a4d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4da:	681b      	ldr	r3, [r3, #0]
 800a4dc:	3308      	adds	r3, #8
 800a4de:	63bb      	str	r3, [r7, #56]	; 0x38
 800a4e0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a4e2:	e853 3f00 	ldrex	r3, [r3]
 800a4e6:	637b      	str	r3, [r7, #52]	; 0x34
 800a4e8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a4ea:	f023 0301 	bic.w	r3, r3, #1
 800a4ee:	667b      	str	r3, [r7, #100]	; 0x64
 800a4f0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a4f2:	681b      	ldr	r3, [r3, #0]
 800a4f4:	3308      	adds	r3, #8
 800a4f6:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800a4f8:	647a      	str	r2, [r7, #68]	; 0x44
 800a4fa:	643b      	str	r3, [r7, #64]	; 0x40
 800a4fc:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800a4fe:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800a500:	e841 2300 	strex	r3, r2, [r1]
 800a504:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a506:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800a508:	2b00      	cmp	r3, #0
 800a50a:	d1e5      	bne.n	800a4d8 <UART_DMAReceiveCplt+0x56>
 800a50c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	3308      	adds	r3, #8
 800a512:	627b      	str	r3, [r7, #36]	; 0x24
 800a514:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a516:	e853 3f00 	ldrex	r3, [r3]
 800a51a:	623b      	str	r3, [r7, #32]
 800a51c:	6a3b      	ldr	r3, [r7, #32]
 800a51e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a522:	663b      	str	r3, [r7, #96]	; 0x60
 800a524:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	3308      	adds	r3, #8
 800a52a:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800a52c:	633a      	str	r2, [r7, #48]	; 0x30
 800a52e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a530:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800a532:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a534:	e841 2300 	strex	r3, r2, [r1]
 800a538:	62bb      	str	r3, [r7, #40]	; 0x28
 800a53a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a53c:	2b00      	cmp	r3, #0
 800a53e:	d1e5      	bne.n	800a50c <UART_DMAReceiveCplt+0x8a>
 800a540:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a542:	2220      	movs	r2, #32
 800a544:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800a548:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a54a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a54c:	2b01      	cmp	r3, #1
 800a54e:	d118      	bne.n	800a582 <UART_DMAReceiveCplt+0x100>
 800a550:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a552:	681b      	ldr	r3, [r3, #0]
 800a554:	613b      	str	r3, [r7, #16]
 800a556:	693b      	ldr	r3, [r7, #16]
 800a558:	e853 3f00 	ldrex	r3, [r3]
 800a55c:	60fb      	str	r3, [r7, #12]
 800a55e:	68fb      	ldr	r3, [r7, #12]
 800a560:	f023 0310 	bic.w	r3, r3, #16
 800a564:	65fb      	str	r3, [r7, #92]	; 0x5c
 800a566:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a568:	681b      	ldr	r3, [r3, #0]
 800a56a:	461a      	mov	r2, r3
 800a56c:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800a56e:	61fb      	str	r3, [r7, #28]
 800a570:	61ba      	str	r2, [r7, #24]
 800a572:	69b9      	ldr	r1, [r7, #24]
 800a574:	69fa      	ldr	r2, [r7, #28]
 800a576:	e841 2300 	strex	r3, r2, [r1]
 800a57a:	617b      	str	r3, [r7, #20]
 800a57c:	697b      	ldr	r3, [r7, #20]
 800a57e:	2b00      	cmp	r3, #0
 800a580:	d1e6      	bne.n	800a550 <UART_DMAReceiveCplt+0xce>
 800a582:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a584:	2200      	movs	r2, #0
 800a586:	671a      	str	r2, [r3, #112]	; 0x70
 800a588:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a58a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a58c:	2b01      	cmp	r3, #1
 800a58e:	d107      	bne.n	800a5a0 <UART_DMAReceiveCplt+0x11e>
 800a590:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800a592:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800a596:	4619      	mov	r1, r3
 800a598:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800a59a:	f7ff fa3d 	bl	8009a18 <HAL_UARTEx_RxEventCallback>
 800a59e:	e002      	b.n	800a5a6 <UART_DMAReceiveCplt+0x124>
 800a5a0:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800a5a2:	f7f7 faa7 	bl	8001af4 <HAL_UART_RxCpltCallback>
 800a5a6:	bf00      	nop
 800a5a8:	3770      	adds	r7, #112	; 0x70
 800a5aa:	46bd      	mov	sp, r7
 800a5ac:	bd80      	pop	{r7, pc}

0800a5ae <UART_DMARxHalfCplt>:
 800a5ae:	b580      	push	{r7, lr}
 800a5b0:	b084      	sub	sp, #16
 800a5b2:	af00      	add	r7, sp, #0
 800a5b4:	6078      	str	r0, [r7, #4]
 800a5b6:	687b      	ldr	r3, [r7, #4]
 800a5b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5ba:	60fb      	str	r3, [r7, #12]
 800a5bc:	68fb      	ldr	r3, [r7, #12]
 800a5be:	2201      	movs	r2, #1
 800a5c0:	671a      	str	r2, [r3, #112]	; 0x70
 800a5c2:	68fb      	ldr	r3, [r7, #12]
 800a5c4:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800a5c6:	2b01      	cmp	r3, #1
 800a5c8:	d109      	bne.n	800a5de <UART_DMARxHalfCplt+0x30>
 800a5ca:	68fb      	ldr	r3, [r7, #12]
 800a5cc:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800a5d0:	085b      	lsrs	r3, r3, #1
 800a5d2:	b29b      	uxth	r3, r3
 800a5d4:	4619      	mov	r1, r3
 800a5d6:	68f8      	ldr	r0, [r7, #12]
 800a5d8:	f7ff fa1e 	bl	8009a18 <HAL_UARTEx_RxEventCallback>
 800a5dc:	e002      	b.n	800a5e4 <UART_DMARxHalfCplt+0x36>
 800a5de:	68f8      	ldr	r0, [r7, #12]
 800a5e0:	f7ff fa06 	bl	80099f0 <HAL_UART_RxHalfCpltCallback>
 800a5e4:	bf00      	nop
 800a5e6:	3710      	adds	r7, #16
 800a5e8:	46bd      	mov	sp, r7
 800a5ea:	bd80      	pop	{r7, pc}

0800a5ec <UART_DMAError>:
 800a5ec:	b580      	push	{r7, lr}
 800a5ee:	b086      	sub	sp, #24
 800a5f0:	af00      	add	r7, sp, #0
 800a5f2:	6078      	str	r0, [r7, #4]
 800a5f4:	687b      	ldr	r3, [r7, #4]
 800a5f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a5f8:	617b      	str	r3, [r7, #20]
 800a5fa:	697b      	ldr	r3, [r7, #20]
 800a5fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a600:	613b      	str	r3, [r7, #16]
 800a602:	697b      	ldr	r3, [r7, #20]
 800a604:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a608:	60fb      	str	r3, [r7, #12]
 800a60a:	697b      	ldr	r3, [r7, #20]
 800a60c:	681b      	ldr	r3, [r3, #0]
 800a60e:	689b      	ldr	r3, [r3, #8]
 800a610:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a614:	2b80      	cmp	r3, #128	; 0x80
 800a616:	d109      	bne.n	800a62c <UART_DMAError+0x40>
 800a618:	693b      	ldr	r3, [r7, #16]
 800a61a:	2b21      	cmp	r3, #33	; 0x21
 800a61c:	d106      	bne.n	800a62c <UART_DMAError+0x40>
 800a61e:	697b      	ldr	r3, [r7, #20]
 800a620:	2200      	movs	r2, #0
 800a622:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800a626:	6978      	ldr	r0, [r7, #20]
 800a628:	f7ff fe84 	bl	800a334 <UART_EndTxTransfer>
 800a62c:	697b      	ldr	r3, [r7, #20]
 800a62e:	681b      	ldr	r3, [r3, #0]
 800a630:	689b      	ldr	r3, [r3, #8]
 800a632:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a636:	2b40      	cmp	r3, #64	; 0x40
 800a638:	d109      	bne.n	800a64e <UART_DMAError+0x62>
 800a63a:	68fb      	ldr	r3, [r7, #12]
 800a63c:	2b22      	cmp	r3, #34	; 0x22
 800a63e:	d106      	bne.n	800a64e <UART_DMAError+0x62>
 800a640:	697b      	ldr	r3, [r7, #20]
 800a642:	2200      	movs	r2, #0
 800a644:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800a648:	6978      	ldr	r0, [r7, #20]
 800a64a:	f7ff feb4 	bl	800a3b6 <UART_EndRxTransfer>
 800a64e:	697b      	ldr	r3, [r7, #20]
 800a650:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a654:	f043 0210 	orr.w	r2, r3, #16
 800a658:	697b      	ldr	r3, [r7, #20]
 800a65a:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 800a65e:	6978      	ldr	r0, [r7, #20]
 800a660:	f7ff f9d0 	bl	8009a04 <HAL_UART_ErrorCallback>
 800a664:	bf00      	nop
 800a666:	3718      	adds	r7, #24
 800a668:	46bd      	mov	sp, r7
 800a66a:	bd80      	pop	{r7, pc}

0800a66c <UART_DMAAbortOnError>:
 800a66c:	b580      	push	{r7, lr}
 800a66e:	b084      	sub	sp, #16
 800a670:	af00      	add	r7, sp, #0
 800a672:	6078      	str	r0, [r7, #4]
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a678:	60fb      	str	r3, [r7, #12]
 800a67a:	68fb      	ldr	r3, [r7, #12]
 800a67c:	2200      	movs	r2, #0
 800a67e:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800a682:	68fb      	ldr	r3, [r7, #12]
 800a684:	2200      	movs	r2, #0
 800a686:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800a68a:	68f8      	ldr	r0, [r7, #12]
 800a68c:	f7ff f9ba 	bl	8009a04 <HAL_UART_ErrorCallback>
 800a690:	bf00      	nop
 800a692:	3710      	adds	r7, #16
 800a694:	46bd      	mov	sp, r7
 800a696:	bd80      	pop	{r7, pc}

0800a698 <UART_EndTransmit_IT>:
 800a698:	b580      	push	{r7, lr}
 800a69a:	b088      	sub	sp, #32
 800a69c:	af00      	add	r7, sp, #0
 800a69e:	6078      	str	r0, [r7, #4]
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	681b      	ldr	r3, [r3, #0]
 800a6a4:	60fb      	str	r3, [r7, #12]
 800a6a6:	68fb      	ldr	r3, [r7, #12]
 800a6a8:	e853 3f00 	ldrex	r3, [r3]
 800a6ac:	60bb      	str	r3, [r7, #8]
 800a6ae:	68bb      	ldr	r3, [r7, #8]
 800a6b0:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800a6b4:	61fb      	str	r3, [r7, #28]
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	681b      	ldr	r3, [r3, #0]
 800a6ba:	461a      	mov	r2, r3
 800a6bc:	69fb      	ldr	r3, [r7, #28]
 800a6be:	61bb      	str	r3, [r7, #24]
 800a6c0:	617a      	str	r2, [r7, #20]
 800a6c2:	6979      	ldr	r1, [r7, #20]
 800a6c4:	69ba      	ldr	r2, [r7, #24]
 800a6c6:	e841 2300 	strex	r3, r2, [r1]
 800a6ca:	613b      	str	r3, [r7, #16]
 800a6cc:	693b      	ldr	r3, [r7, #16]
 800a6ce:	2b00      	cmp	r3, #0
 800a6d0:	d1e6      	bne.n	800a6a0 <UART_EndTransmit_IT+0x8>
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	2220      	movs	r2, #32
 800a6d6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a6da:	687b      	ldr	r3, [r7, #4]
 800a6dc:	2200      	movs	r2, #0
 800a6de:	679a      	str	r2, [r3, #120]	; 0x78
 800a6e0:	6878      	ldr	r0, [r7, #4]
 800a6e2:	f7ff f97b 	bl	80099dc <HAL_UART_TxCpltCallback>
 800a6e6:	bf00      	nop
 800a6e8:	3720      	adds	r7, #32
 800a6ea:	46bd      	mov	sp, r7
 800a6ec:	bd80      	pop	{r7, pc}

0800a6ee <HAL_UARTEx_WakeupCallback>:
 800a6ee:	b480      	push	{r7}
 800a6f0:	b083      	sub	sp, #12
 800a6f2:	af00      	add	r7, sp, #0
 800a6f4:	6078      	str	r0, [r7, #4]
 800a6f6:	bf00      	nop
 800a6f8:	370c      	adds	r7, #12
 800a6fa:	46bd      	mov	sp, r7
 800a6fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a700:	4770      	bx	lr

0800a702 <HAL_UARTEx_RxFifoFullCallback>:
 800a702:	b480      	push	{r7}
 800a704:	b083      	sub	sp, #12
 800a706:	af00      	add	r7, sp, #0
 800a708:	6078      	str	r0, [r7, #4]
 800a70a:	bf00      	nop
 800a70c:	370c      	adds	r7, #12
 800a70e:	46bd      	mov	sp, r7
 800a710:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a714:	4770      	bx	lr

0800a716 <HAL_UARTEx_TxFifoEmptyCallback>:
 800a716:	b480      	push	{r7}
 800a718:	b083      	sub	sp, #12
 800a71a:	af00      	add	r7, sp, #0
 800a71c:	6078      	str	r0, [r7, #4]
 800a71e:	bf00      	nop
 800a720:	370c      	adds	r7, #12
 800a722:	46bd      	mov	sp, r7
 800a724:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a728:	4770      	bx	lr

0800a72a <HAL_UARTEx_DisableFifoMode>:
 800a72a:	b480      	push	{r7}
 800a72c:	b085      	sub	sp, #20
 800a72e:	af00      	add	r7, sp, #0
 800a730:	6078      	str	r0, [r7, #4]
 800a732:	687b      	ldr	r3, [r7, #4]
 800a734:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a738:	2b01      	cmp	r3, #1
 800a73a:	d101      	bne.n	800a740 <HAL_UARTEx_DisableFifoMode+0x16>
 800a73c:	2302      	movs	r3, #2
 800a73e:	e027      	b.n	800a790 <HAL_UARTEx_DisableFifoMode+0x66>
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	2201      	movs	r2, #1
 800a744:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a748:	687b      	ldr	r3, [r7, #4]
 800a74a:	2224      	movs	r2, #36	; 0x24
 800a74c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a750:	687b      	ldr	r3, [r7, #4]
 800a752:	681b      	ldr	r3, [r3, #0]
 800a754:	681b      	ldr	r3, [r3, #0]
 800a756:	60fb      	str	r3, [r7, #12]
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	681b      	ldr	r3, [r3, #0]
 800a75c:	681a      	ldr	r2, [r3, #0]
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	681b      	ldr	r3, [r3, #0]
 800a762:	f022 0201 	bic.w	r2, r2, #1
 800a766:	601a      	str	r2, [r3, #0]
 800a768:	68fb      	ldr	r3, [r7, #12]
 800a76a:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800a76e:	60fb      	str	r3, [r7, #12]
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	2200      	movs	r2, #0
 800a774:	665a      	str	r2, [r3, #100]	; 0x64
 800a776:	687b      	ldr	r3, [r7, #4]
 800a778:	681b      	ldr	r3, [r3, #0]
 800a77a:	68fa      	ldr	r2, [r7, #12]
 800a77c:	601a      	str	r2, [r3, #0]
 800a77e:	687b      	ldr	r3, [r7, #4]
 800a780:	2220      	movs	r2, #32
 800a782:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a786:	687b      	ldr	r3, [r7, #4]
 800a788:	2200      	movs	r2, #0
 800a78a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a78e:	2300      	movs	r3, #0
 800a790:	4618      	mov	r0, r3
 800a792:	3714      	adds	r7, #20
 800a794:	46bd      	mov	sp, r7
 800a796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a79a:	4770      	bx	lr

0800a79c <HAL_UARTEx_SetTxFifoThreshold>:
 800a79c:	b580      	push	{r7, lr}
 800a79e:	b084      	sub	sp, #16
 800a7a0:	af00      	add	r7, sp, #0
 800a7a2:	6078      	str	r0, [r7, #4]
 800a7a4:	6039      	str	r1, [r7, #0]
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a7ac:	2b01      	cmp	r3, #1
 800a7ae:	d101      	bne.n	800a7b4 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800a7b0:	2302      	movs	r3, #2
 800a7b2:	e02d      	b.n	800a810 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	2201      	movs	r2, #1
 800a7b8:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	2224      	movs	r2, #36	; 0x24
 800a7c0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a7c4:	687b      	ldr	r3, [r7, #4]
 800a7c6:	681b      	ldr	r3, [r3, #0]
 800a7c8:	681b      	ldr	r3, [r3, #0]
 800a7ca:	60fb      	str	r3, [r7, #12]
 800a7cc:	687b      	ldr	r3, [r7, #4]
 800a7ce:	681b      	ldr	r3, [r3, #0]
 800a7d0:	681a      	ldr	r2, [r3, #0]
 800a7d2:	687b      	ldr	r3, [r7, #4]
 800a7d4:	681b      	ldr	r3, [r3, #0]
 800a7d6:	f022 0201 	bic.w	r2, r2, #1
 800a7da:	601a      	str	r2, [r3, #0]
 800a7dc:	687b      	ldr	r3, [r7, #4]
 800a7de:	681b      	ldr	r3, [r3, #0]
 800a7e0:	689b      	ldr	r3, [r3, #8]
 800a7e2:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	681b      	ldr	r3, [r3, #0]
 800a7ea:	683a      	ldr	r2, [r7, #0]
 800a7ec:	430a      	orrs	r2, r1
 800a7ee:	609a      	str	r2, [r3, #8]
 800a7f0:	6878      	ldr	r0, [r7, #4]
 800a7f2:	f000 f84f 	bl	800a894 <UARTEx_SetNbDataToProcess>
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	68fa      	ldr	r2, [r7, #12]
 800a7fc:	601a      	str	r2, [r3, #0]
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	2220      	movs	r2, #32
 800a802:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	2200      	movs	r2, #0
 800a80a:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a80e:	2300      	movs	r3, #0
 800a810:	4618      	mov	r0, r3
 800a812:	3710      	adds	r7, #16
 800a814:	46bd      	mov	sp, r7
 800a816:	bd80      	pop	{r7, pc}

0800a818 <HAL_UARTEx_SetRxFifoThreshold>:
 800a818:	b580      	push	{r7, lr}
 800a81a:	b084      	sub	sp, #16
 800a81c:	af00      	add	r7, sp, #0
 800a81e:	6078      	str	r0, [r7, #4]
 800a820:	6039      	str	r1, [r7, #0]
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	f893 3084 	ldrb.w	r3, [r3, #132]	; 0x84
 800a828:	2b01      	cmp	r3, #1
 800a82a:	d101      	bne.n	800a830 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800a82c:	2302      	movs	r3, #2
 800a82e:	e02d      	b.n	800a88c <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	2201      	movs	r2, #1
 800a834:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a838:	687b      	ldr	r3, [r7, #4]
 800a83a:	2224      	movs	r2, #36	; 0x24
 800a83c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	681b      	ldr	r3, [r3, #0]
 800a844:	681b      	ldr	r3, [r3, #0]
 800a846:	60fb      	str	r3, [r7, #12]
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	681b      	ldr	r3, [r3, #0]
 800a84c:	681a      	ldr	r2, [r3, #0]
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	681b      	ldr	r3, [r3, #0]
 800a852:	f022 0201 	bic.w	r2, r2, #1
 800a856:	601a      	str	r2, [r3, #0]
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	689b      	ldr	r3, [r3, #8]
 800a85e:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	681b      	ldr	r3, [r3, #0]
 800a866:	683a      	ldr	r2, [r7, #0]
 800a868:	430a      	orrs	r2, r1
 800a86a:	609a      	str	r2, [r3, #8]
 800a86c:	6878      	ldr	r0, [r7, #4]
 800a86e:	f000 f811 	bl	800a894 <UARTEx_SetNbDataToProcess>
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	681b      	ldr	r3, [r3, #0]
 800a876:	68fa      	ldr	r2, [r7, #12]
 800a878:	601a      	str	r2, [r3, #0]
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	2220      	movs	r2, #32
 800a87e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	2200      	movs	r2, #0
 800a886:	f883 2084 	strb.w	r2, [r3, #132]	; 0x84
 800a88a:	2300      	movs	r3, #0
 800a88c:	4618      	mov	r0, r3
 800a88e:	3710      	adds	r7, #16
 800a890:	46bd      	mov	sp, r7
 800a892:	bd80      	pop	{r7, pc}

0800a894 <UARTEx_SetNbDataToProcess>:
 800a894:	b480      	push	{r7}
 800a896:	b085      	sub	sp, #20
 800a898:	af00      	add	r7, sp, #0
 800a89a:	6078      	str	r0, [r7, #4]
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a8a0:	2b00      	cmp	r3, #0
 800a8a2:	d108      	bne.n	800a8b6 <UARTEx_SetNbDataToProcess+0x22>
 800a8a4:	687b      	ldr	r3, [r7, #4]
 800a8a6:	2201      	movs	r2, #1
 800a8a8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800a8ac:	687b      	ldr	r3, [r7, #4]
 800a8ae:	2201      	movs	r2, #1
 800a8b0:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800a8b4:	e031      	b.n	800a91a <UARTEx_SetNbDataToProcess+0x86>
 800a8b6:	2308      	movs	r3, #8
 800a8b8:	73fb      	strb	r3, [r7, #15]
 800a8ba:	2308      	movs	r3, #8
 800a8bc:	73bb      	strb	r3, [r7, #14]
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	681b      	ldr	r3, [r3, #0]
 800a8c2:	689b      	ldr	r3, [r3, #8]
 800a8c4:	0e5b      	lsrs	r3, r3, #25
 800a8c6:	b2db      	uxtb	r3, r3
 800a8c8:	f003 0307 	and.w	r3, r3, #7
 800a8cc:	737b      	strb	r3, [r7, #13]
 800a8ce:	687b      	ldr	r3, [r7, #4]
 800a8d0:	681b      	ldr	r3, [r3, #0]
 800a8d2:	689b      	ldr	r3, [r3, #8]
 800a8d4:	0f5b      	lsrs	r3, r3, #29
 800a8d6:	b2db      	uxtb	r3, r3
 800a8d8:	f003 0307 	and.w	r3, r3, #7
 800a8dc:	733b      	strb	r3, [r7, #12]
 800a8de:	7bbb      	ldrb	r3, [r7, #14]
 800a8e0:	7b3a      	ldrb	r2, [r7, #12]
 800a8e2:	4911      	ldr	r1, [pc, #68]	; (800a928 <UARTEx_SetNbDataToProcess+0x94>)
 800a8e4:	5c8a      	ldrb	r2, [r1, r2]
 800a8e6:	fb02 f303 	mul.w	r3, r2, r3
 800a8ea:	7b3a      	ldrb	r2, [r7, #12]
 800a8ec:	490f      	ldr	r1, [pc, #60]	; (800a92c <UARTEx_SetNbDataToProcess+0x98>)
 800a8ee:	5c8a      	ldrb	r2, [r1, r2]
 800a8f0:	fb93 f3f2 	sdiv	r3, r3, r2
 800a8f4:	b29a      	uxth	r2, r3
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800a8fc:	7bfb      	ldrb	r3, [r7, #15]
 800a8fe:	7b7a      	ldrb	r2, [r7, #13]
 800a900:	4909      	ldr	r1, [pc, #36]	; (800a928 <UARTEx_SetNbDataToProcess+0x94>)
 800a902:	5c8a      	ldrb	r2, [r1, r2]
 800a904:	fb02 f303 	mul.w	r3, r2, r3
 800a908:	7b7a      	ldrb	r2, [r7, #13]
 800a90a:	4908      	ldr	r1, [pc, #32]	; (800a92c <UARTEx_SetNbDataToProcess+0x98>)
 800a90c:	5c8a      	ldrb	r2, [r1, r2]
 800a90e:	fb93 f3f2 	sdiv	r3, r3, r2
 800a912:	b29a      	uxth	r2, r3
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800a91a:	bf00      	nop
 800a91c:	3714      	adds	r7, #20
 800a91e:	46bd      	mov	sp, r7
 800a920:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a924:	4770      	bx	lr
 800a926:	bf00      	nop
 800a928:	0800f654 	.word	0x0800f654
 800a92c:	0800f65c 	.word	0x0800f65c

0800a930 <USB_DisableGlobalInt>:
 800a930:	b480      	push	{r7}
 800a932:	b085      	sub	sp, #20
 800a934:	af00      	add	r7, sp, #0
 800a936:	6078      	str	r0, [r7, #4]
 800a938:	f64b 7380 	movw	r3, #49024	; 0xbf80
 800a93c:	60fb      	str	r3, [r7, #12]
 800a93e:	687b      	ldr	r3, [r7, #4]
 800a940:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 800a944:	b29a      	uxth	r2, r3
 800a946:	68fb      	ldr	r3, [r7, #12]
 800a948:	b29b      	uxth	r3, r3
 800a94a:	43db      	mvns	r3, r3
 800a94c:	b29b      	uxth	r3, r3
 800a94e:	4013      	ands	r3, r2
 800a950:	b29a      	uxth	r2, r3
 800a952:	687b      	ldr	r3, [r7, #4]
 800a954:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800a958:	2300      	movs	r3, #0
 800a95a:	4618      	mov	r0, r3
 800a95c:	3714      	adds	r7, #20
 800a95e:	46bd      	mov	sp, r7
 800a960:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a964:	4770      	bx	lr

0800a966 <USB_DevInit>:
 800a966:	b084      	sub	sp, #16
 800a968:	b480      	push	{r7}
 800a96a:	b083      	sub	sp, #12
 800a96c:	af00      	add	r7, sp, #0
 800a96e:	6078      	str	r0, [r7, #4]
 800a970:	f107 0014 	add.w	r0, r7, #20
 800a974:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	2201      	movs	r2, #1
 800a97c:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800a980:	687b      	ldr	r3, [r7, #4]
 800a982:	2200      	movs	r2, #0
 800a984:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
 800a988:	687b      	ldr	r3, [r7, #4]
 800a98a:	2200      	movs	r2, #0
 800a98c:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	2200      	movs	r2, #0
 800a994:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
 800a998:	2300      	movs	r3, #0
 800a99a:	4618      	mov	r0, r3
 800a99c:	370c      	adds	r7, #12
 800a99e:	46bd      	mov	sp, r7
 800a9a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9a4:	b004      	add	sp, #16
 800a9a6:	4770      	bx	lr

0800a9a8 <uart_esp32_transmit>:
uint8_t UART_ESP32_TxBUF[UART_ESP32_MAX_SENDLEN];
uint8_t UART_ESP32_RxBUF[UART_ESP32_MAX_RECVLEN];
volatile uint8_t UART_ESP32_RxLen = 0;
volatile uint8_t UART_ESP32_RecvEndFlag = 0;

void uart_esp32_transmit(char *fmt, ...) {
 800a9a8:	b40f      	push	{r0, r1, r2, r3}
 800a9aa:	b580      	push	{r7, lr}
 800a9ac:	b082      	sub	sp, #8
 800a9ae:	af00      	add	r7, sp, #0
	uint16_t i, j;
	va_list ap;
	va_start(ap, fmt);
 800a9b0:	f107 0314 	add.w	r3, r7, #20
 800a9b4:	603b      	str	r3, [r7, #0]
	vsprintf((char*) UART_ESP32_TxBUF, fmt, ap);
 800a9b6:	683a      	ldr	r2, [r7, #0]
 800a9b8:	6939      	ldr	r1, [r7, #16]
 800a9ba:	4822      	ldr	r0, [pc, #136]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800a9bc:	f002 f984 	bl	800ccc8 <vsiprintf>
	va_end(ap);

	for (i = 0; i < UART_ESP32_MAX_SENDLEN; i++) {
 800a9c0:	2300      	movs	r3, #0
 800a9c2:	80fb      	strh	r3, [r7, #6]
 800a9c4:	e019      	b.n	800a9fa <uart_esp32_transmit+0x52>
		j = i + 1;
 800a9c6:	88fb      	ldrh	r3, [r7, #6]
 800a9c8:	3301      	adds	r3, #1
 800a9ca:	80bb      	strh	r3, [r7, #4]
		if (UART_ESP32_TxBUF[i] == '\00') {
 800a9cc:	88fb      	ldrh	r3, [r7, #6]
 800a9ce:	4a1d      	ldr	r2, [pc, #116]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800a9d0:	5cd3      	ldrb	r3, [r2, r3]
 800a9d2:	2b00      	cmp	r3, #0
 800a9d4:	d10e      	bne.n	800a9f4 <uart_esp32_transmit+0x4c>
			for (; j < UART_ESP32_MAX_SENDLEN; j++) {
 800a9d6:	e009      	b.n	800a9ec <uart_esp32_transmit+0x44>
				UART_ESP32_TxBUF[j - 1] = UART_ESP32_TxBUF[j];
 800a9d8:	88ba      	ldrh	r2, [r7, #4]
 800a9da:	88bb      	ldrh	r3, [r7, #4]
 800a9dc:	3b01      	subs	r3, #1
 800a9de:	4919      	ldr	r1, [pc, #100]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800a9e0:	5c89      	ldrb	r1, [r1, r2]
 800a9e2:	4a18      	ldr	r2, [pc, #96]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800a9e4:	54d1      	strb	r1, [r2, r3]
			for (; j < UART_ESP32_MAX_SENDLEN; j++) {
 800a9e6:	88bb      	ldrh	r3, [r7, #4]
 800a9e8:	3301      	adds	r3, #1
 800a9ea:	80bb      	strh	r3, [r7, #4]
 800a9ec:	88bb      	ldrh	r3, [r7, #4]
 800a9ee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800a9f2:	d3f1      	bcc.n	800a9d8 <uart_esp32_transmit+0x30>
	for (i = 0; i < UART_ESP32_MAX_SENDLEN; i++) {
 800a9f4:	88fb      	ldrh	r3, [r7, #6]
 800a9f6:	3301      	adds	r3, #1
 800a9f8:	80fb      	strh	r3, [r7, #6]
 800a9fa:	88fb      	ldrh	r3, [r7, #6]
 800a9fc:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800aa00:	d3e1      	bcc.n	800a9c6 <uart_esp32_transmit+0x1e>
			}
		}
	}

	i = strlen((const char*) UART_ESP32_TxBUF);
 800aa02:	4810      	ldr	r0, [pc, #64]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800aa04:	f7f5 fbbc 	bl	8000180 <strlen>
 800aa08:	4603      	mov	r3, r0
 800aa0a:	80fb      	strh	r3, [r7, #6]

	HAL_UART_Transmit(&hlpuart1, UART_ESP32_TxBUF, i, 100);
 800aa0c:	88fa      	ldrh	r2, [r7, #6]
 800aa0e:	2364      	movs	r3, #100	; 0x64
 800aa10:	490c      	ldr	r1, [pc, #48]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800aa12:	480d      	ldr	r0, [pc, #52]	; (800aa48 <uart_esp32_transmit+0xa0>)
 800aa14:	f7fe fbe4 	bl	80091e0 <HAL_UART_Transmit>

	memset(UART_ESP32_TxBUF, 0, UART_ESP32_MAX_SENDLEN);
 800aa18:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800aa1c:	2100      	movs	r1, #0
 800aa1e:	4809      	ldr	r0, [pc, #36]	; (800aa44 <uart_esp32_transmit+0x9c>)
 800aa20:	f001 f862 	bl	800bae8 <memset>
	memset(UART_ESP32_RxBUF, 0, UART_ESP32_MAX_RECVLEN);
 800aa24:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800aa28:	2100      	movs	r1, #0
 800aa2a:	4808      	ldr	r0, [pc, #32]	; (800aa4c <uart_esp32_transmit+0xa4>)
 800aa2c:	f001 f85c 	bl	800bae8 <memset>
	UART_ESP32_RecvEndFlag = 0;
 800aa30:	4b07      	ldr	r3, [pc, #28]	; (800aa50 <uart_esp32_transmit+0xa8>)
 800aa32:	2200      	movs	r2, #0
 800aa34:	701a      	strb	r2, [r3, #0]
}
 800aa36:	bf00      	nop
 800aa38:	3708      	adds	r7, #8
 800aa3a:	46bd      	mov	sp, r7
 800aa3c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800aa40:	b004      	add	sp, #16
 800aa42:	4770      	bx	lr
 800aa44:	20000754 	.word	0x20000754
 800aa48:	20000278 	.word	0x20000278
 800aa4c:	20000f54 	.word	0x20000f54
 800aa50:	20001755 	.word	0x20001755

0800aa54 <esp8266_CheckRespond>:

WIFI_StateTypeDef esp8266_CheckRespond(uint8_t *str) {
 800aa54:	b580      	push	{r7, lr}
 800aa56:	b082      	sub	sp, #8
 800aa58:	af00      	add	r7, sp, #0
 800aa5a:	6078      	str	r0, [r7, #4]
	printf("(DBG:) recv:\r\n%s\r\n", UART_ESP32_RxBUF);
 800aa5c:	4910      	ldr	r1, [pc, #64]	; (800aaa0 <esp8266_CheckRespond+0x4c>)
 800aa5e:	4811      	ldr	r0, [pc, #68]	; (800aaa4 <esp8266_CheckRespond+0x50>)
 800aa60:	f001 f92a 	bl	800bcb8 <iprintf>
	if (strstr((const char*) UART_ESP32_RxBUF, (const char*) str) != NULL) {
 800aa64:	6879      	ldr	r1, [r7, #4]
 800aa66:	480e      	ldr	r0, [pc, #56]	; (800aaa0 <esp8266_CheckRespond+0x4c>)
 800aa68:	f001 fa48 	bl	800befc <strstr>
 800aa6c:	4603      	mov	r3, r0
 800aa6e:	2b00      	cmp	r3, #0
 800aa70:	d00a      	beq.n	800aa88 <esp8266_CheckRespond+0x34>
		printf("(DBG:) Match succeed\r\n");
 800aa72:	480d      	ldr	r0, [pc, #52]	; (800aaa8 <esp8266_CheckRespond+0x54>)
 800aa74:	f001 f9a6 	bl	800bdc4 <puts>
		memset(UART_ESP32_RxBUF, 0, UART_ESP32_MAX_RECVLEN);
 800aa78:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800aa7c:	2100      	movs	r1, #0
 800aa7e:	4808      	ldr	r0, [pc, #32]	; (800aaa0 <esp8266_CheckRespond+0x4c>)
 800aa80:	f001 f832 	bl	800bae8 <memset>
		return _MATCHOK;
 800aa84:	2304      	movs	r3, #4
 800aa86:	e006      	b.n	800aa96 <esp8266_CheckRespond+0x42>
	}

	memset(UART_ESP32_RxBUF, 0, UART_ESP32_MAX_RECVLEN);
 800aa88:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800aa8c:	2100      	movs	r1, #0
 800aa8e:	4804      	ldr	r0, [pc, #16]	; (800aaa0 <esp8266_CheckRespond+0x4c>)
 800aa90:	f001 f82a 	bl	800bae8 <memset>
	return _MATCHERROR;
 800aa94:	2303      	movs	r3, #3
}
 800aa96:	4618      	mov	r0, r3
 800aa98:	3708      	adds	r7, #8
 800aa9a:	46bd      	mov	sp, r7
 800aa9c:	bd80      	pop	{r7, pc}
 800aa9e:	bf00      	nop
 800aaa0:	20000f54 	.word	0x20000f54
 800aaa4:	0800ee1c 	.word	0x0800ee1c
 800aaa8:	0800ee30 	.word	0x0800ee30

0800aaac <esp8266_TransmitCmd>:

WIFI_StateTypeDef esp8266_TransmitCmd(uint8_t *cmd, uint8_t *ack,
		uint32_t waitms, uint8_t newline) {
 800aaac:	b580      	push	{r7, lr}
 800aaae:	b086      	sub	sp, #24
 800aab0:	af00      	add	r7, sp, #0
 800aab2:	60f8      	str	r0, [r7, #12]
 800aab4:	60b9      	str	r1, [r7, #8]
 800aab6:	607a      	str	r2, [r7, #4]
 800aab8:	70fb      	strb	r3, [r7, #3]
	int timeout = waitms;
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	617b      	str	r3, [r7, #20]
	uint8_t check = 0;
 800aabe:	2300      	movs	r3, #0
 800aac0:	74fb      	strb	r3, [r7, #19]
	memset(UART_ESP32_RxBUF, 0, UART_ESP32_MAX_RECVLEN);
 800aac2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800aac6:	2100      	movs	r1, #0
 800aac8:	4826      	ldr	r0, [pc, #152]	; (800ab64 <esp8266_TransmitCmd+0xb8>)
 800aaca:	f001 f80d 	bl	800bae8 <memset>
	printf("\r\n(DBG:) Try to send cmd: %s\r\n", cmd);
 800aace:	68f9      	ldr	r1, [r7, #12]
 800aad0:	4825      	ldr	r0, [pc, #148]	; (800ab68 <esp8266_TransmitCmd+0xbc>)
 800aad2:	f001 f8f1 	bl	800bcb8 <iprintf>
	if (newline == 0)
 800aad6:	78fb      	ldrb	r3, [r7, #3]
 800aad8:	2b00      	cmp	r3, #0
 800aada:	d104      	bne.n	800aae6 <esp8266_TransmitCmd+0x3a>
		uart_esp32_transmit("%s", cmd);      // transmit cmd to usart2
 800aadc:	68f9      	ldr	r1, [r7, #12]
 800aade:	4823      	ldr	r0, [pc, #140]	; (800ab6c <esp8266_TransmitCmd+0xc0>)
 800aae0:	f7ff ff62 	bl	800a9a8 <uart_esp32_transmit>
 800aae4:	e01e      	b.n	800ab24 <esp8266_TransmitCmd+0x78>
	else
		uart_esp32_transmit("%s\r\n", cmd); // transmit cmd to usart2
 800aae6:	68f9      	ldr	r1, [r7, #12]
 800aae8:	4821      	ldr	r0, [pc, #132]	; (800ab70 <esp8266_TransmitCmd+0xc4>)
 800aaea:	f7ff ff5d 	bl	800a9a8 <uart_esp32_transmit>

	//printf("(DBG:) Waiting reply\r\n");
	while (timeout--) {
 800aaee:	e019      	b.n	800ab24 <esp8266_TransmitCmd+0x78>
		// //printf("%d ", timeout);
		// finish dma receive
		if (UART_ESP32_RecvEndFlag == 1) {
 800aaf0:	4b20      	ldr	r3, [pc, #128]	; (800ab74 <esp8266_TransmitCmd+0xc8>)
 800aaf2:	781b      	ldrb	r3, [r3, #0]
 800aaf4:	b2db      	uxtb	r3, r3
 800aaf6:	2b01      	cmp	r3, #1
 800aaf8:	d111      	bne.n	800ab1e <esp8266_TransmitCmd+0x72>
			check = esp8266_CheckRespond(ack);
 800aafa:	68b8      	ldr	r0, [r7, #8]
 800aafc:	f7ff ffaa 	bl	800aa54 <esp8266_CheckRespond>
 800ab00:	4603      	mov	r3, r0
 800ab02:	74fb      	strb	r3, [r7, #19]
			if (check == _MATCHOK) {
				//printf("(DBG:) Command closed loop completed\r\n");
			}

			UART_ESP32_RxLen = 0;
 800ab04:	4b1c      	ldr	r3, [pc, #112]	; (800ab78 <esp8266_TransmitCmd+0xcc>)
 800ab06:	2200      	movs	r2, #0
 800ab08:	701a      	strb	r2, [r3, #0]
			UART_ESP32_RecvEndFlag = 0;
 800ab0a:	4b1a      	ldr	r3, [pc, #104]	; (800ab74 <esp8266_TransmitCmd+0xc8>)
 800ab0c:	2200      	movs	r2, #0
 800ab0e:	701a      	strb	r2, [r3, #0]
			HAL_UART_Receive_DMA(&hlpuart1, UART_ESP32_RxBUF, UART_ESP32_MAX_RECVLEN);
 800ab10:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800ab14:	4913      	ldr	r1, [pc, #76]	; (800ab64 <esp8266_TransmitCmd+0xb8>)
 800ab16:	4819      	ldr	r0, [pc, #100]	; (800ab7c <esp8266_TransmitCmd+0xd0>)
 800ab18:	f7fe fbf0 	bl	80092fc <HAL_UART_Receive_DMA>

			break;
 800ab1c:	e007      	b.n	800ab2e <esp8266_TransmitCmd+0x82>
		}
		HAL_Delay(1);
 800ab1e:	2001      	movs	r0, #1
 800ab20:	f7fa fb4a 	bl	80051b8 <HAL_Delay>
	while (timeout--) {
 800ab24:	697b      	ldr	r3, [r7, #20]
 800ab26:	1e5a      	subs	r2, r3, #1
 800ab28:	617a      	str	r2, [r7, #20]
 800ab2a:	2b00      	cmp	r3, #0
 800ab2c:	d1e0      	bne.n	800aaf0 <esp8266_TransmitCmd+0x44>
	}

	if (check == _MATCHERROR) {
 800ab2e:	7cfb      	ldrb	r3, [r7, #19]
 800ab30:	2b03      	cmp	r3, #3
 800ab32:	d104      	bne.n	800ab3e <esp8266_TransmitCmd+0x92>
		printf("\r\n(DBG:) Cmd match failed\r\n");
 800ab34:	4812      	ldr	r0, [pc, #72]	; (800ab80 <esp8266_TransmitCmd+0xd4>)
 800ab36:	f001 f945 	bl	800bdc4 <puts>
		return check;
 800ab3a:	7cfb      	ldrb	r3, [r7, #19]
 800ab3c:	e00e      	b.n	800ab5c <esp8266_TransmitCmd+0xb0>
	}
	if (timeout <= 0) {
 800ab3e:	697b      	ldr	r3, [r7, #20]
 800ab40:	2b00      	cmp	r3, #0
 800ab42:	dc07      	bgt.n	800ab54 <esp8266_TransmitCmd+0xa8>
		printf("(DBG:) Finish waiting\r\n");
 800ab44:	480f      	ldr	r0, [pc, #60]	; (800ab84 <esp8266_TransmitCmd+0xd8>)
 800ab46:	f001 f93d 	bl	800bdc4 <puts>
		printf("\r\n(DBG:) Timeout\r\n");
 800ab4a:	480f      	ldr	r0, [pc, #60]	; (800ab88 <esp8266_TransmitCmd+0xdc>)
 800ab4c:	f001 f93a 	bl	800bdc4 <puts>
		return _TIMEOUT;
 800ab50:	2302      	movs	r3, #2
 800ab52:	e003      	b.n	800ab5c <esp8266_TransmitCmd+0xb0>
	}
	printf("(DBG:) Succeed\r\n");
 800ab54:	480d      	ldr	r0, [pc, #52]	; (800ab8c <esp8266_TransmitCmd+0xe0>)
 800ab56:	f001 f935 	bl	800bdc4 <puts>
	return _SUCCEED;
 800ab5a:	2301      	movs	r3, #1
}
 800ab5c:	4618      	mov	r0, r3
 800ab5e:	3718      	adds	r7, #24
 800ab60:	46bd      	mov	sp, r7
 800ab62:	bd80      	pop	{r7, pc}
 800ab64:	20000f54 	.word	0x20000f54
 800ab68:	0800ee48 	.word	0x0800ee48
 800ab6c:	0800ee68 	.word	0x0800ee68
 800ab70:	0800ee6c 	.word	0x0800ee6c
 800ab74:	20001755 	.word	0x20001755
 800ab78:	20001754 	.word	0x20001754
 800ab7c:	20000278 	.word	0x20000278
 800ab80:	0800ee74 	.word	0x0800ee74
 800ab84:	0800ee90 	.word	0x0800ee90
 800ab88:	0800eea8 	.word	0x0800eea8
 800ab8c:	0800eebc 	.word	0x0800eebc

0800ab90 <esp8266_HardwareReset>:

WIFI_StateTypeDef esp8266_HardwareReset(uint32_t waitms) {
 800ab90:	b580      	push	{r7, lr}
 800ab92:	b084      	sub	sp, #16
 800ab94:	af00      	add	r7, sp, #0
 800ab96:	6078      	str	r0, [r7, #4]
	int timeout = waitms;
 800ab98:	687b      	ldr	r3, [r7, #4]
 800ab9a:	60fb      	str	r3, [r7, #12]
	WIFI_RST_Enable();
 800ab9c:	2200      	movs	r2, #0
 800ab9e:	2108      	movs	r1, #8
 800aba0:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800aba4:	f7fc fac2 	bl	800712c <HAL_GPIO_WritePin>
	HAL_Delay(500);
 800aba8:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800abac:	f7fa fb04 	bl	80051b8 <HAL_Delay>
	WIFI_RST_Disable();
 800abb0:	2201      	movs	r2, #1
 800abb2:	2108      	movs	r1, #8
 800abb4:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800abb8:	f7fc fab8 	bl	800712c <HAL_GPIO_WritePin>
	while (timeout--) {
 800abbc:	e01b      	b.n	800abf6 <esp8266_HardwareReset+0x66>
		if (UART_ESP32_RecvEndFlag == 1) {
 800abbe:	4b18      	ldr	r3, [pc, #96]	; (800ac20 <esp8266_HardwareReset+0x90>)
 800abc0:	781b      	ldrb	r3, [r3, #0]
 800abc2:	b2db      	uxtb	r3, r3
 800abc4:	2b01      	cmp	r3, #1
 800abc6:	d113      	bne.n	800abf0 <esp8266_HardwareReset+0x60>

			printf("(DBG:) Hardware Reset OK!\r\n");
 800abc8:	4816      	ldr	r0, [pc, #88]	; (800ac24 <esp8266_HardwareReset+0x94>)
 800abca:	f001 f8fb 	bl	800bdc4 <puts>
			HAL_Delay(100);
 800abce:	2064      	movs	r0, #100	; 0x64
 800abd0:	f7fa faf2 	bl	80051b8 <HAL_Delay>

			UART_ESP32_RxLen = 0;
 800abd4:	4b14      	ldr	r3, [pc, #80]	; (800ac28 <esp8266_HardwareReset+0x98>)
 800abd6:	2200      	movs	r2, #0
 800abd8:	701a      	strb	r2, [r3, #0]
			UART_ESP32_RecvEndFlag = 0;
 800abda:	4b11      	ldr	r3, [pc, #68]	; (800ac20 <esp8266_HardwareReset+0x90>)
 800abdc:	2200      	movs	r2, #0
 800abde:	701a      	strb	r2, [r3, #0]
			HAL_UART_Receive_DMA(&hlpuart1, UART_ESP32_RxBUF, UART_ESP32_MAX_RECVLEN);
 800abe0:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800abe4:	4911      	ldr	r1, [pc, #68]	; (800ac2c <esp8266_HardwareReset+0x9c>)
 800abe6:	4812      	ldr	r0, [pc, #72]	; (800ac30 <esp8266_HardwareReset+0xa0>)
 800abe8:	f7fe fb88 	bl	80092fc <HAL_UART_Receive_DMA>

			return _SUCCEED;
 800abec:	2301      	movs	r3, #1
 800abee:	e013      	b.n	800ac18 <esp8266_HardwareReset+0x88>
		}
		HAL_Delay(1);
 800abf0:	2001      	movs	r0, #1
 800abf2:	f7fa fae1 	bl	80051b8 <HAL_Delay>
	while (timeout--) {
 800abf6:	68fb      	ldr	r3, [r7, #12]
 800abf8:	1e5a      	subs	r2, r3, #1
 800abfa:	60fa      	str	r2, [r7, #12]
 800abfc:	2b00      	cmp	r3, #0
 800abfe:	d1de      	bne.n	800abbe <esp8266_HardwareReset+0x2e>
	}
	if (timeout <= 0) {
 800ac00:	68fb      	ldr	r3, [r7, #12]
 800ac02:	2b00      	cmp	r3, #0
 800ac04:	dc07      	bgt.n	800ac16 <esp8266_HardwareReset+0x86>
		printf("(DBG:) Finish waiting\r\n");
 800ac06:	480b      	ldr	r0, [pc, #44]	; (800ac34 <esp8266_HardwareReset+0xa4>)
 800ac08:	f001 f8dc 	bl	800bdc4 <puts>
		printf("\r\n(DBG:) Timeout\r\n");
 800ac0c:	480a      	ldr	r0, [pc, #40]	; (800ac38 <esp8266_HardwareReset+0xa8>)
 800ac0e:	f001 f8d9 	bl	800bdc4 <puts>
		return _TIMEOUT;
 800ac12:	2302      	movs	r3, #2
 800ac14:	e000      	b.n	800ac18 <esp8266_HardwareReset+0x88>
	}

	return _UNKNOWN_ERROR;
 800ac16:	23ff      	movs	r3, #255	; 0xff
}
 800ac18:	4618      	mov	r0, r3
 800ac1a:	3710      	adds	r7, #16
 800ac1c:	46bd      	mov	sp, r7
 800ac1e:	bd80      	pop	{r7, pc}
 800ac20:	20001755 	.word	0x20001755
 800ac24:	0800eecc 	.word	0x0800eecc
 800ac28:	20001754 	.word	0x20001754
 800ac2c:	20000f54 	.word	0x20000f54
 800ac30:	20000278 	.word	0x20000278
 800ac34:	0800ee90 	.word	0x0800ee90
 800ac38:	0800eea8 	.word	0x0800eea8

0800ac3c <esp8266_ConnectAP>:

WIFI_StateTypeDef esp8266_ConnectAP() {
 800ac3c:	b580      	push	{r7, lr}
 800ac3e:	b082      	sub	sp, #8
 800ac40:	af00      	add	r7, sp, #0
	uint16_t cmd_len = strlen(AP_SSID) + strlen(AP_PSWD) + 30;
 800ac42:	2333      	movs	r3, #51	; 0x33
 800ac44:	80fb      	strh	r3, [r7, #6]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800ac46:	88fb      	ldrh	r3, [r7, #6]
 800ac48:	4618      	mov	r0, r3
 800ac4a:	f000 ff15 	bl	800ba78 <malloc>
 800ac4e:	4603      	mov	r3, r0
 800ac50:	603b      	str	r3, [r7, #0]
	memset(cmd, 0, cmd_len);
 800ac52:	88fb      	ldrh	r3, [r7, #6]
 800ac54:	461a      	mov	r2, r3
 800ac56:	2100      	movs	r1, #0
 800ac58:	6838      	ldr	r0, [r7, #0]
 800ac5a:	f000 ff45 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+CWJAP=\"%s\",\"%s\"", AP_SSID, AP_PSWD);
 800ac5e:	4b0e      	ldr	r3, [pc, #56]	; (800ac98 <esp8266_ConnectAP+0x5c>)
 800ac60:	4a0e      	ldr	r2, [pc, #56]	; (800ac9c <esp8266_ConnectAP+0x60>)
 800ac62:	490f      	ldr	r1, [pc, #60]	; (800aca0 <esp8266_ConnectAP+0x64>)
 800ac64:	6838      	ldr	r0, [r7, #0]
 800ac66:	f001 f8c5 	bl	800bdf4 <siprintf>

	if (esp8266_TransmitCmd(cmd, (uint8_t*) "WIFI CONNECTED", ESP8266_MAX_TIMEOUT, WITH_NEWLINE) == _SUCCEED)
 800ac6a:	2301      	movs	r3, #1
 800ac6c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ac70:	490c      	ldr	r1, [pc, #48]	; (800aca4 <esp8266_ConnectAP+0x68>)
 800ac72:	6838      	ldr	r0, [r7, #0]
 800ac74:	f7ff ff1a 	bl	800aaac <esp8266_TransmitCmd>
 800ac78:	4603      	mov	r3, r0
 800ac7a:	2b01      	cmp	r3, #1
 800ac7c:	d103      	bne.n	800ac86 <esp8266_ConnectAP+0x4a>
		wifi_state = _ONLINE;
 800ac7e:	4b0a      	ldr	r3, [pc, #40]	; (800aca8 <esp8266_ConnectAP+0x6c>)
 800ac80:	2205      	movs	r2, #5
 800ac82:	701a      	strb	r2, [r3, #0]
 800ac84:	e002      	b.n	800ac8c <esp8266_ConnectAP+0x50>
	else
		wifi_state = _OFFLINE;
 800ac86:	4b08      	ldr	r3, [pc, #32]	; (800aca8 <esp8266_ConnectAP+0x6c>)
 800ac88:	2206      	movs	r2, #6
 800ac8a:	701a      	strb	r2, [r3, #0]

	return wifi_state;
 800ac8c:	4b06      	ldr	r3, [pc, #24]	; (800aca8 <esp8266_ConnectAP+0x6c>)
 800ac8e:	781b      	ldrb	r3, [r3, #0]
}
 800ac90:	4618      	mov	r0, r3
 800ac92:	3708      	adds	r7, #8
 800ac94:	46bd      	mov	sp, r7
 800ac96:	bd80      	pop	{r7, pc}
 800ac98:	0800eee8 	.word	0x0800eee8
 800ac9c:	0800eef4 	.word	0x0800eef4
 800aca0:	0800ef04 	.word	0x0800ef04
 800aca4:	0800ef18 	.word	0x0800ef18
 800aca8:	20000021 	.word	0x20000021

0800acac <esp8266_SetupIP>:
	return _SUCCEED;
}

// +BCH
WIFI_StateTypeDef esp8266_SetupIP()
{
 800acac:	b580      	push	{r7, lr}
 800acae:	b082      	sub	sp, #8
 800acb0:	af00      	add	r7, sp, #0
	uint8_t retry_count = 0;
 800acb2:	2300      	movs	r3, #0
 800acb4:	71fb      	strb	r3, [r7, #7]

	/* Reset esp8266 */
	printf("(DBG:) Trying to reset esp8266\r\n");
 800acb6:	48a8      	ldr	r0, [pc, #672]	; (800af58 <esp8266_SetupIP+0x2ac>)
 800acb8:	f001 f884 	bl	800bdc4 <puts>
	wifi_config_step++;
 800acbc:	4ba7      	ldr	r3, [pc, #668]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800acbe:	781b      	ldrb	r3, [r3, #0]
 800acc0:	3301      	adds	r3, #1
 800acc2:	b2da      	uxtb	r2, r3
 800acc4:	4ba5      	ldr	r3, [pc, #660]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800acc6:	701a      	strb	r2, [r3, #0]
	while (esp8266_HardwareReset(500) != _SUCCEED) {
 800acc8:	e019      	b.n	800acfe <esp8266_SetupIP+0x52>
		retry_count++;
 800acca:	79fb      	ldrb	r3, [r7, #7]
 800accc:	3301      	adds	r3, #1
 800acce:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800acd0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800acd4:	f7fa fa70 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800acd8:	79fb      	ldrb	r3, [r7, #7]
 800acda:	2b03      	cmp	r3, #3
 800acdc:	d90f      	bls.n	800acfe <esp8266_SetupIP+0x52>
			printf("(DBG:) Reset failed\r\n");
 800acde:	48a0      	ldr	r0, [pc, #640]	; (800af60 <esp8266_SetupIP+0x2b4>)
 800ace0:	f001 f870 	bl	800bdc4 <puts>
			retry_count = 0;
 800ace4:	2300      	movs	r3, #0
 800ace6:	71fb      	strb	r3, [r7, #7]
			trans_state = _UNKNOWN_STATE;
 800ace8:	4b9e      	ldr	r3, [pc, #632]	; (800af64 <esp8266_SetupIP+0x2b8>)
 800acea:	22ee      	movs	r2, #238	; 0xee
 800acec:	701a      	strb	r2, [r3, #0]
			wifi_config_step--;
 800acee:	4b9b      	ldr	r3, [pc, #620]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800acf0:	781b      	ldrb	r3, [r3, #0]
 800acf2:	3b01      	subs	r3, #1
 800acf4:	b2da      	uxtb	r2, r3
 800acf6:	4b99      	ldr	r3, [pc, #612]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800acf8:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800acfa:	2300      	movs	r3, #0
 800acfc:	e1e1      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_HardwareReset(500) != _SUCCEED) {
 800acfe:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800ad02:	f7ff ff45 	bl	800ab90 <esp8266_HardwareReset>
 800ad06:	4603      	mov	r3, r0
 800ad08:	2b01      	cmp	r3, #1
 800ad0a:	d1de      	bne.n	800acca <esp8266_SetupIP+0x1e>
		}
	}

	HAL_Delay(2000);		// wait 2 seconds
 800ad0c:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 800ad10:	f7fa fa52 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800ad14:	2300      	movs	r3, #0
 800ad16:	71fb      	strb	r3, [r7, #7]

	/* Close echo */
	printf("(DBG:) Trying to close echo\r\n");
 800ad18:	4893      	ldr	r0, [pc, #588]	; (800af68 <esp8266_SetupIP+0x2bc>)
 800ad1a:	f001 f853 	bl	800bdc4 <puts>
	wifi_config_step++;
 800ad1e:	4b8f      	ldr	r3, [pc, #572]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad20:	781b      	ldrb	r3, [r3, #0]
 800ad22:	3301      	adds	r3, #1
 800ad24:	b2da      	uxtb	r2, r3
 800ad26:	4b8d      	ldr	r3, [pc, #564]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad28:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "ATE0", OK_ACK, 500, WITH_NEWLINE)
 800ad2a:	e016      	b.n	800ad5a <esp8266_SetupIP+0xae>
			!= _SUCCEED) {
		retry_count++;
 800ad2c:	79fb      	ldrb	r3, [r7, #7]
 800ad2e:	3301      	adds	r3, #1
 800ad30:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800ad32:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800ad36:	f7fa fa3f 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800ad3a:	79fb      	ldrb	r3, [r7, #7]
 800ad3c:	2b03      	cmp	r3, #3
 800ad3e:	d90c      	bls.n	800ad5a <esp8266_SetupIP+0xae>
			printf("(DBG:) Close echo failed\r\n");
 800ad40:	488a      	ldr	r0, [pc, #552]	; (800af6c <esp8266_SetupIP+0x2c0>)
 800ad42:	f001 f83f 	bl	800bdc4 <puts>
			retry_count = 0;
 800ad46:	2300      	movs	r3, #0
 800ad48:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800ad4a:	4b84      	ldr	r3, [pc, #528]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad4c:	781b      	ldrb	r3, [r3, #0]
 800ad4e:	3b01      	subs	r3, #1
 800ad50:	b2da      	uxtb	r2, r3
 800ad52:	4b82      	ldr	r3, [pc, #520]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad54:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800ad56:	2300      	movs	r3, #0
 800ad58:	e1b3      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "ATE0", OK_ACK, 500, WITH_NEWLINE)
 800ad5a:	2301      	movs	r3, #1
 800ad5c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ad60:	4983      	ldr	r1, [pc, #524]	; (800af70 <esp8266_SetupIP+0x2c4>)
 800ad62:	4884      	ldr	r0, [pc, #528]	; (800af74 <esp8266_SetupIP+0x2c8>)
 800ad64:	f7ff fea2 	bl	800aaac <esp8266_TransmitCmd>
 800ad68:	4603      	mov	r3, r0
 800ad6a:	2b01      	cmp	r3, #1
 800ad6c:	d1de      	bne.n	800ad2c <esp8266_SetupIP+0x80>
		}
	}

	HAL_Delay(100);
 800ad6e:	2064      	movs	r0, #100	; 0x64
 800ad70:	f7fa fa22 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800ad74:	2300      	movs	r3, #0
 800ad76:	71fb      	strb	r3, [r7, #7]

	/* Set wifi mode 0:AP 1:STA 2:AP+STA */
	printf("(DBG:) Trying to set Wifi mode\r\n");
 800ad78:	487f      	ldr	r0, [pc, #508]	; (800af78 <esp8266_SetupIP+0x2cc>)
 800ad7a:	f001 f823 	bl	800bdc4 <puts>
	wifi_config_step++;
 800ad7e:	4b77      	ldr	r3, [pc, #476]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad80:	781b      	ldrb	r3, [r3, #0]
 800ad82:	3301      	adds	r3, #1
 800ad84:	b2da      	uxtb	r2, r3
 800ad86:	4b75      	ldr	r3, [pc, #468]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ad88:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWMODE=1", OK_ACK, 500,
 800ad8a:	e016      	b.n	800adba <esp8266_SetupIP+0x10e>
	WITH_NEWLINE) != _SUCCEED) {
		retry_count++;
 800ad8c:	79fb      	ldrb	r3, [r7, #7]
 800ad8e:	3301      	adds	r3, #1
 800ad90:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800ad92:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800ad96:	f7fa fa0f 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800ad9a:	79fb      	ldrb	r3, [r7, #7]
 800ad9c:	2b03      	cmp	r3, #3
 800ad9e:	d90c      	bls.n	800adba <esp8266_SetupIP+0x10e>
			printf("(DBG:) Set Wifi mode failed\r\n");
 800ada0:	4876      	ldr	r0, [pc, #472]	; (800af7c <esp8266_SetupIP+0x2d0>)
 800ada2:	f001 f80f 	bl	800bdc4 <puts>
			retry_count = 0;
 800ada6:	2300      	movs	r3, #0
 800ada8:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800adaa:	4b6c      	ldr	r3, [pc, #432]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800adac:	781b      	ldrb	r3, [r3, #0]
 800adae:	3b01      	subs	r3, #1
 800adb0:	b2da      	uxtb	r2, r3
 800adb2:	4b6a      	ldr	r3, [pc, #424]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800adb4:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800adb6:	2300      	movs	r3, #0
 800adb8:	e183      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWMODE=1", OK_ACK, 500,
 800adba:	2301      	movs	r3, #1
 800adbc:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800adc0:	496b      	ldr	r1, [pc, #428]	; (800af70 <esp8266_SetupIP+0x2c4>)
 800adc2:	486f      	ldr	r0, [pc, #444]	; (800af80 <esp8266_SetupIP+0x2d4>)
 800adc4:	f7ff fe72 	bl	800aaac <esp8266_TransmitCmd>
 800adc8:	4603      	mov	r3, r0
 800adca:	2b01      	cmp	r3, #1
 800adcc:	d1de      	bne.n	800ad8c <esp8266_SetupIP+0xe0>
		}
	}

	HAL_Delay(100);
 800adce:	2064      	movs	r0, #100	; 0x64
 800add0:	f7fa f9f2 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800add4:	2300      	movs	r3, #0
 800add6:	71fb      	strb	r3, [r7, #7]

	/* Disable auto connect */
	printf("(DBG:) Trying to close auto connect\r\n");
 800add8:	486a      	ldr	r0, [pc, #424]	; (800af84 <esp8266_SetupIP+0x2d8>)
 800adda:	f000 fff3 	bl	800bdc4 <puts>
	wifi_config_step++;
 800adde:	4b5f      	ldr	r3, [pc, #380]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ade0:	781b      	ldrb	r3, [r3, #0]
 800ade2:	3301      	adds	r3, #1
 800ade4:	b2da      	uxtb	r2, r3
 800ade6:	4b5d      	ldr	r3, [pc, #372]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ade8:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWAUTOCONN=0", OK_ACK, 500,
 800adea:	e016      	b.n	800ae1a <esp8266_SetupIP+0x16e>
	WITH_NEWLINE) != _SUCCEED) {
		retry_count++;
 800adec:	79fb      	ldrb	r3, [r7, #7]
 800adee:	3301      	adds	r3, #1
 800adf0:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800adf2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800adf6:	f7fa f9df 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800adfa:	79fb      	ldrb	r3, [r7, #7]
 800adfc:	2b03      	cmp	r3, #3
 800adfe:	d90c      	bls.n	800ae1a <esp8266_SetupIP+0x16e>
			printf("(DBG:) Close auto connect failed\r\n");
 800ae00:	4861      	ldr	r0, [pc, #388]	; (800af88 <esp8266_SetupIP+0x2dc>)
 800ae02:	f000 ffdf 	bl	800bdc4 <puts>
			retry_count = 0;
 800ae06:	2300      	movs	r3, #0
 800ae08:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800ae0a:	4b54      	ldr	r3, [pc, #336]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae0c:	781b      	ldrb	r3, [r3, #0]
 800ae0e:	3b01      	subs	r3, #1
 800ae10:	b2da      	uxtb	r2, r3
 800ae12:	4b52      	ldr	r3, [pc, #328]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae14:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800ae16:	2300      	movs	r3, #0
 800ae18:	e153      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWAUTOCONN=0", OK_ACK, 500,
 800ae1a:	2301      	movs	r3, #1
 800ae1c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 800ae20:	4953      	ldr	r1, [pc, #332]	; (800af70 <esp8266_SetupIP+0x2c4>)
 800ae22:	485a      	ldr	r0, [pc, #360]	; (800af8c <esp8266_SetupIP+0x2e0>)
 800ae24:	f7ff fe42 	bl	800aaac <esp8266_TransmitCmd>
 800ae28:	4603      	mov	r3, r0
 800ae2a:	2b01      	cmp	r3, #1
 800ae2c:	d1de      	bne.n	800adec <esp8266_SetupIP+0x140>
		}
	}

	HAL_Delay(100);
 800ae2e:	2064      	movs	r0, #100	; 0x64
 800ae30:	f7fa f9c2 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800ae34:	2300      	movs	r3, #0
 800ae36:	71fb      	strb	r3, [r7, #7]

	/* Connect to AP(Wifi) */
	printf("(DBG:) Trying to connect to AP\r\n");
 800ae38:	4855      	ldr	r0, [pc, #340]	; (800af90 <esp8266_SetupIP+0x2e4>)
 800ae3a:	f000 ffc3 	bl	800bdc4 <puts>
	wifi_config_step++;
 800ae3e:	4b47      	ldr	r3, [pc, #284]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae40:	781b      	ldrb	r3, [r3, #0]
 800ae42:	3301      	adds	r3, #1
 800ae44:	b2da      	uxtb	r2, r3
 800ae46:	4b45      	ldr	r3, [pc, #276]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae48:	701a      	strb	r2, [r3, #0]
	while (esp8266_ConnectAP() != _ONLINE) {
 800ae4a:	e016      	b.n	800ae7a <esp8266_SetupIP+0x1ce>
		retry_count++;
 800ae4c:	79fb      	ldrb	r3, [r7, #7]
 800ae4e:	3301      	adds	r3, #1
 800ae50:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800ae52:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800ae56:	f7fa f9af 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800ae5a:	79fb      	ldrb	r3, [r7, #7]
 800ae5c:	2b03      	cmp	r3, #3
 800ae5e:	d90c      	bls.n	800ae7a <esp8266_SetupIP+0x1ce>
			printf("(DBG:) Connect to AP failed\r\n");
 800ae60:	484c      	ldr	r0, [pc, #304]	; (800af94 <esp8266_SetupIP+0x2e8>)
 800ae62:	f000 ffaf 	bl	800bdc4 <puts>
			retry_count = 0;
 800ae66:	2300      	movs	r3, #0
 800ae68:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800ae6a:	4b3c      	ldr	r3, [pc, #240]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae6c:	781b      	ldrb	r3, [r3, #0]
 800ae6e:	3b01      	subs	r3, #1
 800ae70:	b2da      	uxtb	r2, r3
 800ae72:	4b3a      	ldr	r3, [pc, #232]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800ae74:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800ae76:	2300      	movs	r3, #0
 800ae78:	e123      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_ConnectAP() != _ONLINE) {
 800ae7a:	f7ff fedf 	bl	800ac3c <esp8266_ConnectAP>
 800ae7e:	4603      	mov	r3, r0
 800ae80:	2b05      	cmp	r3, #5
 800ae82:	d1e3      	bne.n	800ae4c <esp8266_SetupIP+0x1a0>
		}
	}

	HAL_Delay(100);
 800ae84:	2064      	movs	r0, #100	; 0x64
 800ae86:	f7fa f997 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800ae8a:	2300      	movs	r3, #0
 800ae8c:	71fb      	strb	r3, [r7, #7]

	/* Try to get AP info */
	if (wifi_state == _ONLINE) {
 800ae8e:	4b42      	ldr	r3, [pc, #264]	; (800af98 <esp8266_SetupIP+0x2ec>)
 800ae90:	781b      	ldrb	r3, [r3, #0]
 800ae92:	2b05      	cmp	r3, #5
 800ae94:	d123      	bne.n	800aede <esp8266_SetupIP+0x232>
		while (esp8266_TransmitCmd((uint8_t*) "AT+CWJAP?", OK_ACK,
 800ae96:	e018      	b.n	800aeca <esp8266_SetupIP+0x21e>
		ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED) {
			retry_count++;
 800ae98:	79fb      	ldrb	r3, [r7, #7]
 800ae9a:	3301      	adds	r3, #1
 800ae9c:	71fb      	strb	r3, [r7, #7]
			HAL_Delay(1000);
 800ae9e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800aea2:	f7fa f989 	bl	80051b8 <HAL_Delay>
			if (retry_count > ESP8266_MAX_RETRY_TIME / 2) {
 800aea6:	79fb      	ldrb	r3, [r7, #7]
 800aea8:	2b01      	cmp	r3, #1
 800aeaa:	d90e      	bls.n	800aeca <esp8266_SetupIP+0x21e>
				printf("(DBG:) Get AP msg failed\r\n");
 800aeac:	483b      	ldr	r0, [pc, #236]	; (800af9c <esp8266_SetupIP+0x2f0>)
 800aeae:	f000 ff89 	bl	800bdc4 <puts>
				printf("(DBG:) Connect server process will not be terminated");
 800aeb2:	483b      	ldr	r0, [pc, #236]	; (800afa0 <esp8266_SetupIP+0x2f4>)
 800aeb4:	f000 ff00 	bl	800bcb8 <iprintf>
				retry_count = 0;
 800aeb8:	2300      	movs	r3, #0
 800aeba:	71fb      	strb	r3, [r7, #7]
				wifi_config_step--;
 800aebc:	4b27      	ldr	r3, [pc, #156]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800aebe:	781b      	ldrb	r3, [r3, #0]
 800aec0:	3b01      	subs	r3, #1
 800aec2:	b2da      	uxtb	r2, r3
 800aec4:	4b25      	ldr	r3, [pc, #148]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800aec6:	701a      	strb	r2, [r3, #0]
				break;
 800aec8:	e009      	b.n	800aede <esp8266_SetupIP+0x232>
		while (esp8266_TransmitCmd((uint8_t*) "AT+CWJAP?", OK_ACK,
 800aeca:	2301      	movs	r3, #1
 800aecc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800aed0:	4927      	ldr	r1, [pc, #156]	; (800af70 <esp8266_SetupIP+0x2c4>)
 800aed2:	4834      	ldr	r0, [pc, #208]	; (800afa4 <esp8266_SetupIP+0x2f8>)
 800aed4:	f7ff fdea 	bl	800aaac <esp8266_TransmitCmd>
 800aed8:	4603      	mov	r3, r0
 800aeda:	2b01      	cmp	r3, #1
 800aedc:	d1dc      	bne.n	800ae98 <esp8266_SetupIP+0x1ec>
			}
		}
	}

	HAL_Delay(100);
 800aede:	2064      	movs	r0, #100	; 0x64
 800aee0:	f7fa f96a 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800aee4:	2300      	movs	r3, #0
 800aee6:	71fb      	strb	r3, [r7, #7]

	/* Try to get IP info */
	if (wifi_state == _ONLINE) {
 800aee8:	4b2b      	ldr	r3, [pc, #172]	; (800af98 <esp8266_SetupIP+0x2ec>)
 800aeea:	781b      	ldrb	r3, [r3, #0]
 800aeec:	2b05      	cmp	r3, #5
 800aeee:	d123      	bne.n	800af38 <esp8266_SetupIP+0x28c>
		while (esp8266_TransmitCmd((uint8_t*) "AT+CIPSTA?", OK_ACK,
 800aef0:	e018      	b.n	800af24 <esp8266_SetupIP+0x278>
		ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED) {
			retry_count++;
 800aef2:	79fb      	ldrb	r3, [r7, #7]
 800aef4:	3301      	adds	r3, #1
 800aef6:	71fb      	strb	r3, [r7, #7]
			HAL_Delay(1000);
 800aef8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800aefc:	f7fa f95c 	bl	80051b8 <HAL_Delay>
			if (retry_count > ESP8266_MAX_RETRY_TIME / 2) {
 800af00:	79fb      	ldrb	r3, [r7, #7]
 800af02:	2b01      	cmp	r3, #1
 800af04:	d90e      	bls.n	800af24 <esp8266_SetupIP+0x278>
				printf("(DBG:) Get IP info failed\r\n");
 800af06:	4828      	ldr	r0, [pc, #160]	; (800afa8 <esp8266_SetupIP+0x2fc>)
 800af08:	f000 ff5c 	bl	800bdc4 <puts>
				printf("(DBG:) Connect server process will not be terminated");
 800af0c:	4824      	ldr	r0, [pc, #144]	; (800afa0 <esp8266_SetupIP+0x2f4>)
 800af0e:	f000 fed3 	bl	800bcb8 <iprintf>
				retry_count = 0;
 800af12:	2300      	movs	r3, #0
 800af14:	71fb      	strb	r3, [r7, #7]
				wifi_config_step--;
 800af16:	4b11      	ldr	r3, [pc, #68]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800af18:	781b      	ldrb	r3, [r3, #0]
 800af1a:	3b01      	subs	r3, #1
 800af1c:	b2da      	uxtb	r2, r3
 800af1e:	4b0f      	ldr	r3, [pc, #60]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800af20:	701a      	strb	r2, [r3, #0]
				break;
 800af22:	e009      	b.n	800af38 <esp8266_SetupIP+0x28c>
		while (esp8266_TransmitCmd((uint8_t*) "AT+CIPSTA?", OK_ACK,
 800af24:	2301      	movs	r3, #1
 800af26:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800af2a:	4911      	ldr	r1, [pc, #68]	; (800af70 <esp8266_SetupIP+0x2c4>)
 800af2c:	481f      	ldr	r0, [pc, #124]	; (800afac <esp8266_SetupIP+0x300>)
 800af2e:	f7ff fdbd 	bl	800aaac <esp8266_TransmitCmd>
 800af32:	4603      	mov	r3, r0
 800af34:	2b01      	cmp	r3, #1
 800af36:	d1dc      	bne.n	800aef2 <esp8266_SetupIP+0x246>
			}
		}
	}

	HAL_Delay(100);
 800af38:	2064      	movs	r0, #100	; 0x64
 800af3a:	f7fa f93d 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800af3e:	2300      	movs	r3, #0
 800af40:	71fb      	strb	r3, [r7, #7]

	/* Set DHCP */
	printf("(DBG:) Trying to set DHCP mode\r\n");
 800af42:	481b      	ldr	r0, [pc, #108]	; (800afb0 <esp8266_SetupIP+0x304>)
 800af44:	f000 ff3e 	bl	800bdc4 <puts>
	wifi_config_step++;
 800af48:	4b04      	ldr	r3, [pc, #16]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800af4a:	781b      	ldrb	r3, [r3, #0]
 800af4c:	3301      	adds	r3, #1
 800af4e:	b2da      	uxtb	r2, r3
 800af50:	4b02      	ldr	r3, [pc, #8]	; (800af5c <esp8266_SetupIP+0x2b0>)
 800af52:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWDHCP=1,1", OK_ACK, 1000,
 800af54:	e045      	b.n	800afe2 <esp8266_SetupIP+0x336>
 800af56:	bf00      	nop
 800af58:	0800ef68 	.word	0x0800ef68
 800af5c:	20000750 	.word	0x20000750
 800af60:	0800ef88 	.word	0x0800ef88
 800af64:	20000022 	.word	0x20000022
 800af68:	0800efd4 	.word	0x0800efd4
 800af6c:	0800eff4 	.word	0x0800eff4
 800af70:	0800f010 	.word	0x0800f010
 800af74:	0800f014 	.word	0x0800f014
 800af78:	0800f01c 	.word	0x0800f01c
 800af7c:	0800f03c 	.word	0x0800f03c
 800af80:	0800f05c 	.word	0x0800f05c
 800af84:	0800f068 	.word	0x0800f068
 800af88:	0800f090 	.word	0x0800f090
 800af8c:	0800f0b4 	.word	0x0800f0b4
 800af90:	0800f0c4 	.word	0x0800f0c4
 800af94:	0800f0e4 	.word	0x0800f0e4
 800af98:	20000021 	.word	0x20000021
 800af9c:	0800f104 	.word	0x0800f104
 800afa0:	0800f120 	.word	0x0800f120
 800afa4:	0800f158 	.word	0x0800f158
 800afa8:	0800f164 	.word	0x0800f164
 800afac:	0800f180 	.word	0x0800f180
 800afb0:	0800f18c 	.word	0x0800f18c
	WITH_NEWLINE) != _SUCCEED) {
		retry_count++;
 800afb4:	79fb      	ldrb	r3, [r7, #7]
 800afb6:	3301      	adds	r3, #1
 800afb8:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800afba:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800afbe:	f7fa f8fb 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800afc2:	79fb      	ldrb	r3, [r7, #7]
 800afc4:	2b03      	cmp	r3, #3
 800afc6:	d90c      	bls.n	800afe2 <esp8266_SetupIP+0x336>
			printf("(DBG:) Set DHCP model failed\r\n");
 800afc8:	4840      	ldr	r0, [pc, #256]	; (800b0cc <esp8266_SetupIP+0x420>)
 800afca:	f000 fefb 	bl	800bdc4 <puts>
			retry_count = 0;
 800afce:	2300      	movs	r3, #0
 800afd0:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800afd2:	4b3f      	ldr	r3, [pc, #252]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800afd4:	781b      	ldrb	r3, [r3, #0]
 800afd6:	3b01      	subs	r3, #1
 800afd8:	b2da      	uxtb	r2, r3
 800afda:	4b3d      	ldr	r3, [pc, #244]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800afdc:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800afde:	2300      	movs	r3, #0
 800afe0:	e06f      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "AT+CWDHCP=1,1", OK_ACK, 1000,
 800afe2:	2301      	movs	r3, #1
 800afe4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800afe8:	493a      	ldr	r1, [pc, #232]	; (800b0d4 <esp8266_SetupIP+0x428>)
 800afea:	483b      	ldr	r0, [pc, #236]	; (800b0d8 <esp8266_SetupIP+0x42c>)
 800afec:	f7ff fd5e 	bl	800aaac <esp8266_TransmitCmd>
 800aff0:	4603      	mov	r3, r0
 800aff2:	2b01      	cmp	r3, #1
 800aff4:	d1de      	bne.n	800afb4 <esp8266_SetupIP+0x308>
		}
	}

	HAL_Delay(100);
 800aff6:	2064      	movs	r0, #100	; 0x64
 800aff8:	f7fa f8de 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800affc:	2300      	movs	r3, #0
 800affe:	71fb      	strb	r3, [r7, #7]

	/* Set single connection */
	printf("(DBG:) Trying to set single connection\r\n");
 800b000:	4836      	ldr	r0, [pc, #216]	; (800b0dc <esp8266_SetupIP+0x430>)
 800b002:	f000 fedf 	bl	800bdc4 <puts>
	wifi_config_step++;
 800b006:	4b32      	ldr	r3, [pc, #200]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b008:	781b      	ldrb	r3, [r3, #0]
 800b00a:	3301      	adds	r3, #1
 800b00c:	b2da      	uxtb	r2, r3
 800b00e:	4b30      	ldr	r3, [pc, #192]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b010:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "AT+CIPMUX=0", OK_ACK, 1000,
 800b012:	e016      	b.n	800b042 <esp8266_SetupIP+0x396>
	WITH_NEWLINE) != _SUCCEED) {
		retry_count++;
 800b014:	79fb      	ldrb	r3, [r7, #7]
 800b016:	3301      	adds	r3, #1
 800b018:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800b01a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b01e:	f7fa f8cb 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b022:	79fb      	ldrb	r3, [r7, #7]
 800b024:	2b03      	cmp	r3, #3
 800b026:	d90c      	bls.n	800b042 <esp8266_SetupIP+0x396>
			printf("(DBG:) Set single connection model failed\r\n");
 800b028:	482d      	ldr	r0, [pc, #180]	; (800b0e0 <esp8266_SetupIP+0x434>)
 800b02a:	f000 fecb 	bl	800bdc4 <puts>
			retry_count = 0;
 800b02e:	2300      	movs	r3, #0
 800b030:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800b032:	4b27      	ldr	r3, [pc, #156]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b034:	781b      	ldrb	r3, [r3, #0]
 800b036:	3b01      	subs	r3, #1
 800b038:	b2da      	uxtb	r2, r3
 800b03a:	4b25      	ldr	r3, [pc, #148]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b03c:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800b03e:	2300      	movs	r3, #0
 800b040:	e03f      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "AT+CIPMUX=0", OK_ACK, 1000,
 800b042:	2301      	movs	r3, #1
 800b044:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b048:	4922      	ldr	r1, [pc, #136]	; (800b0d4 <esp8266_SetupIP+0x428>)
 800b04a:	4826      	ldr	r0, [pc, #152]	; (800b0e4 <esp8266_SetupIP+0x438>)
 800b04c:	f7ff fd2e 	bl	800aaac <esp8266_TransmitCmd>
 800b050:	4603      	mov	r3, r0
 800b052:	2b01      	cmp	r3, #1
 800b054:	d1de      	bne.n	800b014 <esp8266_SetupIP+0x368>
		}
	}

	HAL_Delay(100);
 800b056:	2064      	movs	r0, #100	; 0x64
 800b058:	f7fa f8ae 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b05c:	2300      	movs	r3, #0
 800b05e:	71fb      	strb	r3, [r7, #7]

	/* Set transparent transmission */
	printf("(DBG:) Trying to set transparent transmission mode\r\n");
 800b060:	4821      	ldr	r0, [pc, #132]	; (800b0e8 <esp8266_SetupIP+0x43c>)
 800b062:	f000 feaf 	bl	800bdc4 <puts>
	wifi_config_step++;
 800b066:	4b1a      	ldr	r3, [pc, #104]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b068:	781b      	ldrb	r3, [r3, #0]
 800b06a:	3301      	adds	r3, #1
 800b06c:	b2da      	uxtb	r2, r3
 800b06e:	4b18      	ldr	r3, [pc, #96]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b070:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd((uint8_t*) "AT+CIPMODE=1", OK_ACK, 1000,
 800b072:	e016      	b.n	800b0a2 <esp8266_SetupIP+0x3f6>
	WITH_NEWLINE) != _SUCCEED) {
		retry_count++;
 800b074:	79fb      	ldrb	r3, [r7, #7]
 800b076:	3301      	adds	r3, #1
 800b078:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(1000);
 800b07a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b07e:	f7fa f89b 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b082:	79fb      	ldrb	r3, [r7, #7]
 800b084:	2b03      	cmp	r3, #3
 800b086:	d90c      	bls.n	800b0a2 <esp8266_SetupIP+0x3f6>
			printf("(DBG:) Set transparent transmission mode failed\r\n");
 800b088:	4818      	ldr	r0, [pc, #96]	; (800b0ec <esp8266_SetupIP+0x440>)
 800b08a:	f000 fe9b 	bl	800bdc4 <puts>
			retry_count = 0;
 800b08e:	2300      	movs	r3, #0
 800b090:	71fb      	strb	r3, [r7, #7]
			wifi_config_step--;
 800b092:	4b0f      	ldr	r3, [pc, #60]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b094:	781b      	ldrb	r3, [r3, #0]
 800b096:	3b01      	subs	r3, #1
 800b098:	b2da      	uxtb	r2, r3
 800b09a:	4b0d      	ldr	r3, [pc, #52]	; (800b0d0 <esp8266_SetupIP+0x424>)
 800b09c:	701a      	strb	r2, [r3, #0]
			return _FAILED;
 800b09e:	2300      	movs	r3, #0
 800b0a0:	e00f      	b.n	800b0c2 <esp8266_SetupIP+0x416>
	while (esp8266_TransmitCmd((uint8_t*) "AT+CIPMODE=1", OK_ACK, 1000,
 800b0a2:	2301      	movs	r3, #1
 800b0a4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b0a8:	490a      	ldr	r1, [pc, #40]	; (800b0d4 <esp8266_SetupIP+0x428>)
 800b0aa:	4811      	ldr	r0, [pc, #68]	; (800b0f0 <esp8266_SetupIP+0x444>)
 800b0ac:	f7ff fcfe 	bl	800aaac <esp8266_TransmitCmd>
 800b0b0:	4603      	mov	r3, r0
 800b0b2:	2b01      	cmp	r3, #1
 800b0b4:	d1de      	bne.n	800b074 <esp8266_SetupIP+0x3c8>
		}
	}

	HAL_Delay(100);
 800b0b6:	2064      	movs	r0, #100	; 0x64
 800b0b8:	f7fa f87e 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b0bc:	2300      	movs	r3, #0
 800b0be:	71fb      	strb	r3, [r7, #7]
	return _SUCCEED;
 800b0c0:	2301      	movs	r3, #1

}
 800b0c2:	4618      	mov	r0, r3
 800b0c4:	3708      	adds	r7, #8
 800b0c6:	46bd      	mov	sp, r7
 800b0c8:	bd80      	pop	{r7, pc}
 800b0ca:	bf00      	nop
 800b0cc:	0800f1ac 	.word	0x0800f1ac
 800b0d0:	20000750 	.word	0x20000750
 800b0d4:	0800f010 	.word	0x0800f010
 800b0d8:	0800f1cc 	.word	0x0800f1cc
 800b0dc:	0800f1dc 	.word	0x0800f1dc
 800b0e0:	0800f204 	.word	0x0800f204
 800b0e4:	0800f230 	.word	0x0800f230
 800b0e8:	0800f23c 	.word	0x0800f23c
 800b0ec:	0800f270 	.word	0x0800f270
 800b0f0:	0800f2a4 	.word	0x0800f2a4

0800b0f4 <esp8266_ConfigAccessBroker>:

static MQTT_StateTypeDef esp8266_ConfigAccessBroker()
{
 800b0f4:	b580      	push	{r7, lr}
 800b0f6:	b086      	sub	sp, #24
 800b0f8:	af02      	add	r7, sp, #8
	int retry_count = 0;
 800b0fa:	2300      	movs	r3, #0
 800b0fc:	60fb      	str	r3, [r7, #12]
	uint16_t cmd_len = strlen(MQTT_CLIENTID) + strlen(MQTT_USERNAME) + strlen(MQTT_PASSWORD) + 40;
 800b0fe:	232d      	movs	r3, #45	; 0x2d
 800b100:	817b      	strh	r3, [r7, #10]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b102:	897b      	ldrh	r3, [r7, #10]
 800b104:	4618      	mov	r0, r3
 800b106:	f000 fcb7 	bl	800ba78 <malloc>
 800b10a:	4603      	mov	r3, r0
 800b10c:	607b      	str	r3, [r7, #4]
	memset(cmd, 0, cmd_len);
 800b10e:	897b      	ldrh	r3, [r7, #10]
 800b110:	461a      	mov	r2, r3
 800b112:	2100      	movs	r1, #0
 800b114:	6878      	ldr	r0, [r7, #4]
 800b116:	f000 fce7 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+MQTTUSERCFG=0,1,\"%s\",\"%s\",\"%s\",0,0,\"\"", MQTT_CLIENTID, MQTT_USERNAME, MQTT_PASSWORD);
 800b11a:	4b19      	ldr	r3, [pc, #100]	; (800b180 <esp8266_ConfigAccessBroker+0x8c>)
 800b11c:	9300      	str	r3, [sp, #0]
 800b11e:	4b18      	ldr	r3, [pc, #96]	; (800b180 <esp8266_ConfigAccessBroker+0x8c>)
 800b120:	4a18      	ldr	r2, [pc, #96]	; (800b184 <esp8266_ConfigAccessBroker+0x90>)
 800b122:	4919      	ldr	r1, [pc, #100]	; (800b188 <esp8266_ConfigAccessBroker+0x94>)
 800b124:	6878      	ldr	r0, [r7, #4]
 800b126:	f000 fe65 	bl	800bdf4 <siprintf>

	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b12a:	e011      	b.n	800b150 <esp8266_ConfigAccessBroker+0x5c>
	{
		retry_count++;
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	3301      	adds	r3, #1
 800b130:	60fb      	str	r3, [r7, #12]
		HAL_Delay(1000);
 800b132:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b136:	f7fa f83f 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b13a:	68fb      	ldr	r3, [r7, #12]
 800b13c:	2b03      	cmp	r3, #3
 800b13e:	dd07      	ble.n	800b150 <esp8266_ConfigAccessBroker+0x5c>
			printf("(DBG:) esp8266_ConfigAccessBroker() failed\r\n");
 800b140:	4812      	ldr	r0, [pc, #72]	; (800b18c <esp8266_ConfigAccessBroker+0x98>)
 800b142:	f000 fe3f 	bl	800bdc4 <puts>
			retry_count = 0;
 800b146:	2300      	movs	r3, #0
 800b148:	60fb      	str	r3, [r7, #12]
			mqtt_state = _CONFIG_ERROR_MQTT;
 800b14a:	4b11      	ldr	r3, [pc, #68]	; (800b190 <esp8266_ConfigAccessBroker+0x9c>)
 800b14c:	2204      	movs	r2, #4
 800b14e:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b150:	2301      	movs	r3, #1
 800b152:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b156:	490f      	ldr	r1, [pc, #60]	; (800b194 <esp8266_ConfigAccessBroker+0xa0>)
 800b158:	6878      	ldr	r0, [r7, #4]
 800b15a:	f7ff fca7 	bl	800aaac <esp8266_TransmitCmd>
 800b15e:	4603      	mov	r3, r0
 800b160:	2b01      	cmp	r3, #1
 800b162:	d1e3      	bne.n	800b12c <esp8266_ConfigAccessBroker+0x38>
		}
	}

	mqtt_state = _CONFIG_OK_MQTT;
 800b164:	4b0a      	ldr	r3, [pc, #40]	; (800b190 <esp8266_ConfigAccessBroker+0x9c>)
 800b166:	2205      	movs	r2, #5
 800b168:	701a      	strb	r2, [r3, #0]
	HAL_Delay(100);
 800b16a:	2064      	movs	r0, #100	; 0x64
 800b16c:	f7fa f824 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b170:	2300      	movs	r3, #0
 800b172:	60fb      	str	r3, [r7, #12]

	return mqtt_state;
 800b174:	4b06      	ldr	r3, [pc, #24]	; (800b190 <esp8266_ConfigAccessBroker+0x9c>)
 800b176:	781b      	ldrb	r3, [r3, #0]
}
 800b178:	4618      	mov	r0, r3
 800b17a:	3710      	adds	r7, #16
 800b17c:	46bd      	mov	sp, r7
 800b17e:	bd80      	pop	{r7, pc}
 800b180:	0800f330 	.word	0x0800f330
 800b184:	0800f334 	.word	0x0800f334
 800b188:	0800f33c 	.word	0x0800f33c
 800b18c:	0800f368 	.word	0x0800f368
 800b190:	20000023 	.word	0x20000023
 800b194:	0800f010 	.word	0x0800f010

0800b198 <esp8266_ConnectBroker>:

	return mqtt_state;
}

static MQTT_StateTypeDef esp8266_ConnectBroker()
{
 800b198:	b580      	push	{r7, lr}
 800b19a:	b084      	sub	sp, #16
 800b19c:	af00      	add	r7, sp, #0
	int retry_count = 0;
 800b19e:	2300      	movs	r3, #0
 800b1a0:	60fb      	str	r3, [r7, #12]
	uint16_t cmd_len = strlen(IpServer) + strlen(ServerPort) + 25;
 800b1a2:	232e      	movs	r3, #46	; 0x2e
 800b1a4:	817b      	strh	r3, [r7, #10]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b1a6:	897b      	ldrh	r3, [r7, #10]
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	f000 fc65 	bl	800ba78 <malloc>
 800b1ae:	4603      	mov	r3, r0
 800b1b0:	607b      	str	r3, [r7, #4]
	memset(cmd, 0, cmd_len);
 800b1b2:	897b      	ldrh	r3, [r7, #10]
 800b1b4:	461a      	mov	r2, r3
 800b1b6:	2100      	movs	r1, #0
 800b1b8:	6878      	ldr	r0, [r7, #4]
 800b1ba:	f000 fc95 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+MQTTCONN=0,\"%s\",%s,0", IpServer, ServerPort);
 800b1be:	4b16      	ldr	r3, [pc, #88]	; (800b218 <esp8266_ConnectBroker+0x80>)
 800b1c0:	4a16      	ldr	r2, [pc, #88]	; (800b21c <esp8266_ConnectBroker+0x84>)
 800b1c2:	4917      	ldr	r1, [pc, #92]	; (800b220 <esp8266_ConnectBroker+0x88>)
 800b1c4:	6878      	ldr	r0, [r7, #4]
 800b1c6:	f000 fe15 	bl	800bdf4 <siprintf>

	//if (esp8266_TransmitCmd(cmd, (uint8_t*)"\r\nready\r\n", ESP8266_MAX_TIMEOUT, WITH_NEWLINE) == _SUCCEED)
	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b1ca:	e011      	b.n	800b1f0 <esp8266_ConnectBroker+0x58>
	{
		retry_count++;
 800b1cc:	68fb      	ldr	r3, [r7, #12]
 800b1ce:	3301      	adds	r3, #1
 800b1d0:	60fb      	str	r3, [r7, #12]
		HAL_Delay(1000);
 800b1d2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b1d6:	f7f9 ffef 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b1da:	68fb      	ldr	r3, [r7, #12]
 800b1dc:	2b03      	cmp	r3, #3
 800b1de:	dd07      	ble.n	800b1f0 <esp8266_ConnectBroker+0x58>
			printf("(DBG:) esp8266_ConnectBroker() failed\r\n");
 800b1e0:	4810      	ldr	r0, [pc, #64]	; (800b224 <esp8266_ConnectBroker+0x8c>)
 800b1e2:	f000 fdef 	bl	800bdc4 <puts>
			retry_count = 0;
 800b1e6:	2300      	movs	r3, #0
 800b1e8:	60fb      	str	r3, [r7, #12]
			mqtt_state = _UNCONNECTED_MQTT;
 800b1ea:	4b0f      	ldr	r3, [pc, #60]	; (800b228 <esp8266_ConnectBroker+0x90>)
 800b1ec:	2206      	movs	r2, #6
 800b1ee:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b1f0:	2301      	movs	r3, #1
 800b1f2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b1f6:	490d      	ldr	r1, [pc, #52]	; (800b22c <esp8266_ConnectBroker+0x94>)
 800b1f8:	6878      	ldr	r0, [r7, #4]
 800b1fa:	f7ff fc57 	bl	800aaac <esp8266_TransmitCmd>
 800b1fe:	4603      	mov	r3, r0
 800b200:	2b01      	cmp	r3, #1
 800b202:	d1e3      	bne.n	800b1cc <esp8266_ConnectBroker+0x34>
		}
	}

	mqtt_state = _CONNECTED_MQTT;
 800b204:	4b08      	ldr	r3, [pc, #32]	; (800b228 <esp8266_ConnectBroker+0x90>)
 800b206:	2207      	movs	r2, #7
 800b208:	701a      	strb	r2, [r3, #0]

	return mqtt_state;
 800b20a:	4b07      	ldr	r3, [pc, #28]	; (800b228 <esp8266_ConnectBroker+0x90>)
 800b20c:	781b      	ldrb	r3, [r3, #0]
}
 800b20e:	4618      	mov	r0, r3
 800b210:	3710      	adds	r7, #16
 800b212:	46bd      	mov	sp, r7
 800b214:	bd80      	pop	{r7, pc}
 800b216:	bf00      	nop
 800b218:	0800ef28 	.word	0x0800ef28
 800b21c:	0800ef30 	.word	0x0800ef30
 800b220:	0800f3bc 	.word	0x0800f3bc
 800b224:	0800f3d4 	.word	0x0800f3d4
 800b228:	20000023 	.word	0x20000023
 800b22c:	0800f010 	.word	0x0800f010

0800b230 <esp8266_SetupConnect_BrokerMQTT>:

MQTT_StateTypeDef esp8266_SetupConnect_BrokerMQTT()
{
 800b230:	b580      	push	{r7, lr}
 800b232:	b082      	sub	sp, #8
 800b234:	af00      	add	r7, sp, #0
	uint8_t retry_count = 0;
 800b236:	2300      	movs	r3, #0
 800b238:	71fb      	strb	r3, [r7, #7]
//
//	HAL_Delay(100);
//	retry_count = 0;		// reset retry count

	/* MQTT broker configuration esp8266 */
	printf("(DBG:) Trying to configure MQTT access broker esp8266\r\n");
 800b23a:	482d      	ldr	r0, [pc, #180]	; (800b2f0 <esp8266_SetupConnect_BrokerMQTT+0xc0>)
 800b23c:	f000 fdc2 	bl	800bdc4 <puts>
	mqtt_config_step++;
 800b240:	4b2c      	ldr	r3, [pc, #176]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b242:	781b      	ldrb	r3, [r3, #0]
 800b244:	3301      	adds	r3, #1
 800b246:	b2da      	uxtb	r2, r3
 800b248:	4b2a      	ldr	r3, [pc, #168]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b24a:	701a      	strb	r2, [r3, #0]
	while (esp8266_ConfigAccessBroker() != _CONFIG_OK_MQTT) {
 800b24c:	e016      	b.n	800b27c <esp8266_SetupConnect_BrokerMQTT+0x4c>
		retry_count++;
 800b24e:	79fb      	ldrb	r3, [r7, #7]
 800b250:	3301      	adds	r3, #1
 800b252:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(500);
 800b254:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800b258:	f7f9 ffae 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b25c:	79fb      	ldrb	r3, [r7, #7]
 800b25e:	2b03      	cmp	r3, #3
 800b260:	d90c      	bls.n	800b27c <esp8266_SetupConnect_BrokerMQTT+0x4c>
			printf("(DBG:) Configure MQTT access broker failed\r\n");
 800b262:	4825      	ldr	r0, [pc, #148]	; (800b2f8 <esp8266_SetupConnect_BrokerMQTT+0xc8>)
 800b264:	f000 fdae 	bl	800bdc4 <puts>
			retry_count = 0;
 800b268:	2300      	movs	r3, #0
 800b26a:	71fb      	strb	r3, [r7, #7]
			mqtt_config_step--;
 800b26c:	4b21      	ldr	r3, [pc, #132]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b26e:	781b      	ldrb	r3, [r3, #0]
 800b270:	3b01      	subs	r3, #1
 800b272:	b2da      	uxtb	r2, r3
 800b274:	4b1f      	ldr	r3, [pc, #124]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b276:	701a      	strb	r2, [r3, #0]
			return _FAILED_MQTT;
 800b278:	2300      	movs	r3, #0
 800b27a:	e035      	b.n	800b2e8 <esp8266_SetupConnect_BrokerMQTT+0xb8>
	while (esp8266_ConfigAccessBroker() != _CONFIG_OK_MQTT) {
 800b27c:	f7ff ff3a 	bl	800b0f4 <esp8266_ConfigAccessBroker>
 800b280:	4603      	mov	r3, r0
 800b282:	2b05      	cmp	r3, #5
 800b284:	d1e3      	bne.n	800b24e <esp8266_SetupConnect_BrokerMQTT+0x1e>
		}
	}

	HAL_Delay(100);
 800b286:	2064      	movs	r0, #100	; 0x64
 800b288:	f7f9 ff96 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800b28c:	2300      	movs	r3, #0
 800b28e:	71fb      	strb	r3, [r7, #7]
	HAL_Delay(100);
	retry_count = 0;		// reset retry count
	*/

	/* MQTT broker connection esp8266 */
	printf("(DBG:) Trying to connect to MQTT broker esp8266\r\n");
 800b290:	481a      	ldr	r0, [pc, #104]	; (800b2fc <esp8266_SetupConnect_BrokerMQTT+0xcc>)
 800b292:	f000 fd97 	bl	800bdc4 <puts>
	mqtt_config_step++;
 800b296:	4b17      	ldr	r3, [pc, #92]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b298:	781b      	ldrb	r3, [r3, #0]
 800b29a:	3301      	adds	r3, #1
 800b29c:	b2da      	uxtb	r2, r3
 800b29e:	4b15      	ldr	r3, [pc, #84]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b2a0:	701a      	strb	r2, [r3, #0]
	while (esp8266_ConnectBroker() < _CONNECTED_MQTT) {
 800b2a2:	e016      	b.n	800b2d2 <esp8266_SetupConnect_BrokerMQTT+0xa2>
		retry_count++;
 800b2a4:	79fb      	ldrb	r3, [r7, #7]
 800b2a6:	3301      	adds	r3, #1
 800b2a8:	71fb      	strb	r3, [r7, #7]
		HAL_Delay(500);
 800b2aa:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 800b2ae:	f7f9 ff83 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b2b2:	79fb      	ldrb	r3, [r7, #7]
 800b2b4:	2b03      	cmp	r3, #3
 800b2b6:	d90c      	bls.n	800b2d2 <esp8266_SetupConnect_BrokerMQTT+0xa2>
			printf("(DBG:) connection MQTT broker failed\r\n");
 800b2b8:	4811      	ldr	r0, [pc, #68]	; (800b300 <esp8266_SetupConnect_BrokerMQTT+0xd0>)
 800b2ba:	f000 fd83 	bl	800bdc4 <puts>
			retry_count = 0;
 800b2be:	2300      	movs	r3, #0
 800b2c0:	71fb      	strb	r3, [r7, #7]
			mqtt_config_step--;
 800b2c2:	4b0c      	ldr	r3, [pc, #48]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b2c4:	781b      	ldrb	r3, [r3, #0]
 800b2c6:	3b01      	subs	r3, #1
 800b2c8:	b2da      	uxtb	r2, r3
 800b2ca:	4b0a      	ldr	r3, [pc, #40]	; (800b2f4 <esp8266_SetupConnect_BrokerMQTT+0xc4>)
 800b2cc:	701a      	strb	r2, [r3, #0]
			return _FAILED_MQTT;
 800b2ce:	2300      	movs	r3, #0
 800b2d0:	e00a      	b.n	800b2e8 <esp8266_SetupConnect_BrokerMQTT+0xb8>
	while (esp8266_ConnectBroker() < _CONNECTED_MQTT) {
 800b2d2:	f7ff ff61 	bl	800b198 <esp8266_ConnectBroker>
 800b2d6:	4603      	mov	r3, r0
 800b2d8:	2b06      	cmp	r3, #6
 800b2da:	d9e3      	bls.n	800b2a4 <esp8266_SetupConnect_BrokerMQTT+0x74>
		}
	}

	HAL_Delay(100);
 800b2dc:	2064      	movs	r0, #100	; 0x64
 800b2de:	f7f9 ff6b 	bl	80051b8 <HAL_Delay>
	retry_count = 0;		// reset retry count
 800b2e2:	2300      	movs	r3, #0
 800b2e4:	71fb      	strb	r3, [r7, #7]
	return _SUCCEED_MQTT;
 800b2e6:	2301      	movs	r3, #1
}
 800b2e8:	4618      	mov	r0, r3
 800b2ea:	3708      	adds	r7, #8
 800b2ec:	46bd      	mov	sp, r7
 800b2ee:	bd80      	pop	{r7, pc}
 800b2f0:	0800f3fc 	.word	0x0800f3fc
 800b2f4:	20000751 	.word	0x20000751
 800b2f8:	0800f434 	.word	0x0800f434
 800b2fc:	0800f460 	.word	0x0800f460
 800b300:	0800f494 	.word	0x0800f494

0800b304 <esp8266_Subscribe_Led_BrokerMQTT>:

MQTT_StateTypeDef esp8266_Subscribe_Led_BrokerMQTT()
{
 800b304:	b580      	push	{r7, lr}
 800b306:	b084      	sub	sp, #16
 800b308:	af00      	add	r7, sp, #0
	int retry_count = 0;
 800b30a:	2300      	movs	r3, #0
 800b30c:	60fb      	str	r3, [r7, #12]
	if(mqtt_state < _CONNECTED_MQTT)
 800b30e:	4b22      	ldr	r3, [pc, #136]	; (800b398 <esp8266_Subscribe_Led_BrokerMQTT+0x94>)
 800b310:	781b      	ldrb	r3, [r3, #0]
 800b312:	2b06      	cmp	r3, #6
 800b314:	d801      	bhi.n	800b31a <esp8266_Subscribe_Led_BrokerMQTT+0x16>
		return _FAILED_MQTT;
 800b316:	2300      	movs	r3, #0
 800b318:	e039      	b.n	800b38e <esp8266_Subscribe_Led_BrokerMQTT+0x8a>

	uint16_t cmd_len = 40;
 800b31a:	2328      	movs	r3, #40	; 0x28
 800b31c:	817b      	strh	r3, [r7, #10]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b31e:	897b      	ldrh	r3, [r7, #10]
 800b320:	4618      	mov	r0, r3
 800b322:	f000 fba9 	bl	800ba78 <malloc>
 800b326:	4603      	mov	r3, r0
 800b328:	607b      	str	r3, [r7, #4]
	memset(cmd, 0, cmd_len);
 800b32a:	897b      	ldrh	r3, [r7, #10]
 800b32c:	461a      	mov	r2, r3
 800b32e:	2100      	movs	r1, #0
 800b330:	6878      	ldr	r0, [r7, #4]
 800b332:	f000 fbd9 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+MQTTSUB=0,\"%s/led\",1", MQTT_CLIENTID);
 800b336:	4a19      	ldr	r2, [pc, #100]	; (800b39c <esp8266_Subscribe_Led_BrokerMQTT+0x98>)
 800b338:	4919      	ldr	r1, [pc, #100]	; (800b3a0 <esp8266_Subscribe_Led_BrokerMQTT+0x9c>)
 800b33a:	6878      	ldr	r0, [r7, #4]
 800b33c:	f000 fd5a 	bl	800bdf4 <siprintf>

	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b340:	e011      	b.n	800b366 <esp8266_Subscribe_Led_BrokerMQTT+0x62>
	{
		retry_count++;
 800b342:	68fb      	ldr	r3, [r7, #12]
 800b344:	3301      	adds	r3, #1
 800b346:	60fb      	str	r3, [r7, #12]
		HAL_Delay(1000);
 800b348:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b34c:	f7f9 ff34 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b350:	68fb      	ldr	r3, [r7, #12]
 800b352:	2b03      	cmp	r3, #3
 800b354:	dd07      	ble.n	800b366 <esp8266_Subscribe_Led_BrokerMQTT+0x62>
			printf("(DBG:) esp8266_Subscribe_Led_BrokerMQTT() failed\r\n");
 800b356:	4813      	ldr	r0, [pc, #76]	; (800b3a4 <esp8266_Subscribe_Led_BrokerMQTT+0xa0>)
 800b358:	f000 fd34 	bl	800bdc4 <puts>
			retry_count = 0;
 800b35c:	2300      	movs	r3, #0
 800b35e:	60fb      	str	r3, [r7, #12]
			mqtt_state = _FAILED_MQTT;
 800b360:	4b0d      	ldr	r3, [pc, #52]	; (800b398 <esp8266_Subscribe_Led_BrokerMQTT+0x94>)
 800b362:	2200      	movs	r2, #0
 800b364:	701a      	strb	r2, [r3, #0]
	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b366:	2301      	movs	r3, #1
 800b368:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b36c:	490e      	ldr	r1, [pc, #56]	; (800b3a8 <esp8266_Subscribe_Led_BrokerMQTT+0xa4>)
 800b36e:	6878      	ldr	r0, [r7, #4]
 800b370:	f7ff fb9c 	bl	800aaac <esp8266_TransmitCmd>
 800b374:	4603      	mov	r3, r0
 800b376:	2b01      	cmp	r3, #1
 800b378:	d1e3      	bne.n	800b342 <esp8266_Subscribe_Led_BrokerMQTT+0x3e>
		}
	}

	HAL_Delay(100);
 800b37a:	2064      	movs	r0, #100	; 0x64
 800b37c:	f7f9 ff1c 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b380:	2300      	movs	r3, #0
 800b382:	60fb      	str	r3, [r7, #12]
	mqtt_state = _SUBSCRIBED_LED_MQTT;
 800b384:	4b04      	ldr	r3, [pc, #16]	; (800b398 <esp8266_Subscribe_Led_BrokerMQTT+0x94>)
 800b386:	2208      	movs	r2, #8
 800b388:	701a      	strb	r2, [r3, #0]
	return mqtt_state;
 800b38a:	4b03      	ldr	r3, [pc, #12]	; (800b398 <esp8266_Subscribe_Led_BrokerMQTT+0x94>)
 800b38c:	781b      	ldrb	r3, [r3, #0]
}
 800b38e:	4618      	mov	r0, r3
 800b390:	3710      	adds	r7, #16
 800b392:	46bd      	mov	sp, r7
 800b394:	bd80      	pop	{r7, pc}
 800b396:	bf00      	nop
 800b398:	20000023 	.word	0x20000023
 800b39c:	0800f334 	.word	0x0800f334
 800b3a0:	0800f4bc 	.word	0x0800f4bc
 800b3a4:	0800f4d4 	.word	0x0800f4d4
 800b3a8:	0800f010 	.word	0x0800f010

0800b3ac <esp8266_Subscribe_Temp_BrokerMQTT>:

MQTT_StateTypeDef esp8266_Subscribe_Temp_BrokerMQTT()
{
 800b3ac:	b580      	push	{r7, lr}
 800b3ae:	b084      	sub	sp, #16
 800b3b0:	af00      	add	r7, sp, #0
	int retry_count = 0;
 800b3b2:	2300      	movs	r3, #0
 800b3b4:	60fb      	str	r3, [r7, #12]
	if(mqtt_state < _CONNECTED_MQTT)
 800b3b6:	4b22      	ldr	r3, [pc, #136]	; (800b440 <esp8266_Subscribe_Temp_BrokerMQTT+0x94>)
 800b3b8:	781b      	ldrb	r3, [r3, #0]
 800b3ba:	2b06      	cmp	r3, #6
 800b3bc:	d801      	bhi.n	800b3c2 <esp8266_Subscribe_Temp_BrokerMQTT+0x16>
		return _FAILED_MQTT;
 800b3be:	2300      	movs	r3, #0
 800b3c0:	e039      	b.n	800b436 <esp8266_Subscribe_Temp_BrokerMQTT+0x8a>

	uint16_t cmd_len = 40;
 800b3c2:	2328      	movs	r3, #40	; 0x28
 800b3c4:	817b      	strh	r3, [r7, #10]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b3c6:	897b      	ldrh	r3, [r7, #10]
 800b3c8:	4618      	mov	r0, r3
 800b3ca:	f000 fb55 	bl	800ba78 <malloc>
 800b3ce:	4603      	mov	r3, r0
 800b3d0:	607b      	str	r3, [r7, #4]
	memset(cmd, 0, cmd_len);
 800b3d2:	897b      	ldrh	r3, [r7, #10]
 800b3d4:	461a      	mov	r2, r3
 800b3d6:	2100      	movs	r1, #0
 800b3d8:	6878      	ldr	r0, [r7, #4]
 800b3da:	f000 fb85 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+MQTTSUB=0,\"%s/getTemp\",1", MQTT_CLIENTID);
 800b3de:	4a19      	ldr	r2, [pc, #100]	; (800b444 <esp8266_Subscribe_Temp_BrokerMQTT+0x98>)
 800b3e0:	4919      	ldr	r1, [pc, #100]	; (800b448 <esp8266_Subscribe_Temp_BrokerMQTT+0x9c>)
 800b3e2:	6878      	ldr	r0, [r7, #4]
 800b3e4:	f000 fd06 	bl	800bdf4 <siprintf>

	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b3e8:	e011      	b.n	800b40e <esp8266_Subscribe_Temp_BrokerMQTT+0x62>
	{
		retry_count++;
 800b3ea:	68fb      	ldr	r3, [r7, #12]
 800b3ec:	3301      	adds	r3, #1
 800b3ee:	60fb      	str	r3, [r7, #12]
		HAL_Delay(1000);
 800b3f0:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b3f4:	f7f9 fee0 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b3f8:	68fb      	ldr	r3, [r7, #12]
 800b3fa:	2b03      	cmp	r3, #3
 800b3fc:	dd07      	ble.n	800b40e <esp8266_Subscribe_Temp_BrokerMQTT+0x62>
			printf("(DBG:) esp8266_Subscribe_Temp_BrokerMQTT() failed\r\n");
 800b3fe:	4813      	ldr	r0, [pc, #76]	; (800b44c <esp8266_Subscribe_Temp_BrokerMQTT+0xa0>)
 800b400:	f000 fce0 	bl	800bdc4 <puts>
			retry_count = 0;
 800b404:	2300      	movs	r3, #0
 800b406:	60fb      	str	r3, [r7, #12]
			mqtt_state = _FAILED_MQTT;
 800b408:	4b0d      	ldr	r3, [pc, #52]	; (800b440 <esp8266_Subscribe_Temp_BrokerMQTT+0x94>)
 800b40a:	2200      	movs	r2, #0
 800b40c:	701a      	strb	r2, [r3, #0]
	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b40e:	2301      	movs	r3, #1
 800b410:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b414:	490e      	ldr	r1, [pc, #56]	; (800b450 <esp8266_Subscribe_Temp_BrokerMQTT+0xa4>)
 800b416:	6878      	ldr	r0, [r7, #4]
 800b418:	f7ff fb48 	bl	800aaac <esp8266_TransmitCmd>
 800b41c:	4603      	mov	r3, r0
 800b41e:	2b01      	cmp	r3, #1
 800b420:	d1e3      	bne.n	800b3ea <esp8266_Subscribe_Temp_BrokerMQTT+0x3e>
		}
	}
	HAL_Delay(100);
 800b422:	2064      	movs	r0, #100	; 0x64
 800b424:	f7f9 fec8 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b428:	2300      	movs	r3, #0
 800b42a:	60fb      	str	r3, [r7, #12]
	mqtt_state = _SUBSCRIBED_TEMP_MQTT;
 800b42c:	4b04      	ldr	r3, [pc, #16]	; (800b440 <esp8266_Subscribe_Temp_BrokerMQTT+0x94>)
 800b42e:	2209      	movs	r2, #9
 800b430:	701a      	strb	r2, [r3, #0]
	return mqtt_state;
 800b432:	4b03      	ldr	r3, [pc, #12]	; (800b440 <esp8266_Subscribe_Temp_BrokerMQTT+0x94>)
 800b434:	781b      	ldrb	r3, [r3, #0]
}
 800b436:	4618      	mov	r0, r3
 800b438:	3710      	adds	r7, #16
 800b43a:	46bd      	mov	sp, r7
 800b43c:	bd80      	pop	{r7, pc}
 800b43e:	bf00      	nop
 800b440:	20000023 	.word	0x20000023
 800b444:	0800f334 	.word	0x0800f334
 800b448:	0800f508 	.word	0x0800f508
 800b44c:	0800f524 	.word	0x0800f524
 800b450:	0800f010 	.word	0x0800f010

0800b454 <esp8266_Publish_Button_BrokerMQTT>:

MQTT_StateTypeDef esp8266_Publish_Button_BrokerMQTT(uint8_t *data, uint16_t size)
{
 800b454:	b580      	push	{r7, lr}
 800b456:	b086      	sub	sp, #24
 800b458:	af00      	add	r7, sp, #0
 800b45a:	6078      	str	r0, [r7, #4]
 800b45c:	460b      	mov	r3, r1
 800b45e:	807b      	strh	r3, [r7, #2]
	int retry_count = 0;
 800b460:	2300      	movs	r3, #0
 800b462:	617b      	str	r3, [r7, #20]
	if(mqtt_state < _CONNECTED_MQTT || data == NULL)
 800b464:	4b24      	ldr	r3, [pc, #144]	; (800b4f8 <esp8266_Publish_Button_BrokerMQTT+0xa4>)
 800b466:	781b      	ldrb	r3, [r3, #0]
 800b468:	2b06      	cmp	r3, #6
 800b46a:	d902      	bls.n	800b472 <esp8266_Publish_Button_BrokerMQTT+0x1e>
 800b46c:	687b      	ldr	r3, [r7, #4]
 800b46e:	2b00      	cmp	r3, #0
 800b470:	d101      	bne.n	800b476 <esp8266_Publish_Button_BrokerMQTT+0x22>
		return _FAILED_MQTT;
 800b472:	2300      	movs	r3, #0
 800b474:	e03b      	b.n	800b4ee <esp8266_Publish_Button_BrokerMQTT+0x9a>

	uint16_t cmd_len = size + 40;
 800b476:	887b      	ldrh	r3, [r7, #2]
 800b478:	3328      	adds	r3, #40	; 0x28
 800b47a:	827b      	strh	r3, [r7, #18]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b47c:	8a7b      	ldrh	r3, [r7, #18]
 800b47e:	4618      	mov	r0, r3
 800b480:	f000 fafa 	bl	800ba78 <malloc>
 800b484:	4603      	mov	r3, r0
 800b486:	60fb      	str	r3, [r7, #12]
	memset(cmd, 0, cmd_len);
 800b488:	8a7b      	ldrh	r3, [r7, #18]
 800b48a:	461a      	mov	r2, r3
 800b48c:	2100      	movs	r1, #0
 800b48e:	68f8      	ldr	r0, [r7, #12]
 800b490:	f000 fb2a 	bl	800bae8 <memset>
	//sprintf((char*) cmd, "AT+MQTTPUB=0,\"home/temp\",\"%s\",1,0", data);
	sprintf((char*) cmd, "AT+MQTTPUB=0,\"%s/button\",\"%s\",1,0", MQTT_CLIENTID, data);
 800b494:	687b      	ldr	r3, [r7, #4]
 800b496:	4a19      	ldr	r2, [pc, #100]	; (800b4fc <esp8266_Publish_Button_BrokerMQTT+0xa8>)
 800b498:	4919      	ldr	r1, [pc, #100]	; (800b500 <esp8266_Publish_Button_BrokerMQTT+0xac>)
 800b49a:	68f8      	ldr	r0, [r7, #12]
 800b49c:	f000 fcaa 	bl	800bdf4 <siprintf>

	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b4a0:	e011      	b.n	800b4c6 <esp8266_Publish_Button_BrokerMQTT+0x72>
	{
		retry_count++;
 800b4a2:	697b      	ldr	r3, [r7, #20]
 800b4a4:	3301      	adds	r3, #1
 800b4a6:	617b      	str	r3, [r7, #20]
		HAL_Delay(1000);
 800b4a8:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b4ac:	f7f9 fe84 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b4b0:	697b      	ldr	r3, [r7, #20]
 800b4b2:	2b03      	cmp	r3, #3
 800b4b4:	dd07      	ble.n	800b4c6 <esp8266_Publish_Button_BrokerMQTT+0x72>
			printf("(DBG:) esp8266_Subscribe_Temp_BrokerMQTT() failed\r\n");
 800b4b6:	4813      	ldr	r0, [pc, #76]	; (800b504 <esp8266_Publish_Button_BrokerMQTT+0xb0>)
 800b4b8:	f000 fc84 	bl	800bdc4 <puts>
			retry_count = 0;
 800b4bc:	2300      	movs	r3, #0
 800b4be:	617b      	str	r3, [r7, #20]
			mqtt_state = _FAILED_MQTT;
 800b4c0:	4b0d      	ldr	r3, [pc, #52]	; (800b4f8 <esp8266_Publish_Button_BrokerMQTT+0xa4>)
 800b4c2:	2200      	movs	r2, #0
 800b4c4:	701a      	strb	r2, [r3, #0]
	while(esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b4c6:	2301      	movs	r3, #1
 800b4c8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b4cc:	490e      	ldr	r1, [pc, #56]	; (800b508 <esp8266_Publish_Button_BrokerMQTT+0xb4>)
 800b4ce:	68f8      	ldr	r0, [r7, #12]
 800b4d0:	f7ff faec 	bl	800aaac <esp8266_TransmitCmd>
 800b4d4:	4603      	mov	r3, r0
 800b4d6:	2b01      	cmp	r3, #1
 800b4d8:	d1e3      	bne.n	800b4a2 <esp8266_Publish_Button_BrokerMQTT+0x4e>
		}
	}
	HAL_Delay(100);
 800b4da:	2064      	movs	r0, #100	; 0x64
 800b4dc:	f7f9 fe6c 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b4e0:	2300      	movs	r3, #0
 800b4e2:	617b      	str	r3, [r7, #20]
	mqtt_state = _PUBLISH_BUTTON_MQTT;
 800b4e4:	4b04      	ldr	r3, [pc, #16]	; (800b4f8 <esp8266_Publish_Button_BrokerMQTT+0xa4>)
 800b4e6:	220a      	movs	r2, #10
 800b4e8:	701a      	strb	r2, [r3, #0]
	return mqtt_state;
 800b4ea:	4b03      	ldr	r3, [pc, #12]	; (800b4f8 <esp8266_Publish_Button_BrokerMQTT+0xa4>)
 800b4ec:	781b      	ldrb	r3, [r3, #0]
}
 800b4ee:	4618      	mov	r0, r3
 800b4f0:	3718      	adds	r7, #24
 800b4f2:	46bd      	mov	sp, r7
 800b4f4:	bd80      	pop	{r7, pc}
 800b4f6:	bf00      	nop
 800b4f8:	20000023 	.word	0x20000023
 800b4fc:	0800f334 	.word	0x0800f334
 800b500:	0800f558 	.word	0x0800f558
 800b504:	0800f524 	.word	0x0800f524
 800b508:	0800f010 	.word	0x0800f010

0800b50c <esp8266_Publish_Temp_BrokerMQTT>:

MQTT_StateTypeDef esp8266_Publish_Temp_BrokerMQTT(uint8_t *data, uint16_t size)
{
 800b50c:	b580      	push	{r7, lr}
 800b50e:	b086      	sub	sp, #24
 800b510:	af00      	add	r7, sp, #0
 800b512:	6078      	str	r0, [r7, #4]
 800b514:	460b      	mov	r3, r1
 800b516:	807b      	strh	r3, [r7, #2]
	int retry_count = 0;
 800b518:	2300      	movs	r3, #0
 800b51a:	617b      	str	r3, [r7, #20]
	if(mqtt_state < _CONNECTED_MQTT || data == NULL)
 800b51c:	4b24      	ldr	r3, [pc, #144]	; (800b5b0 <esp8266_Publish_Temp_BrokerMQTT+0xa4>)
 800b51e:	781b      	ldrb	r3, [r3, #0]
 800b520:	2b06      	cmp	r3, #6
 800b522:	d902      	bls.n	800b52a <esp8266_Publish_Temp_BrokerMQTT+0x1e>
 800b524:	687b      	ldr	r3, [r7, #4]
 800b526:	2b00      	cmp	r3, #0
 800b528:	d101      	bne.n	800b52e <esp8266_Publish_Temp_BrokerMQTT+0x22>
		return _FAILED_MQTT;
 800b52a:	2300      	movs	r3, #0
 800b52c:	e03b      	b.n	800b5a6 <esp8266_Publish_Temp_BrokerMQTT+0x9a>

	uint16_t cmd_len = size + 40;
 800b52e:	887b      	ldrh	r3, [r7, #2]
 800b530:	3328      	adds	r3, #40	; 0x28
 800b532:	827b      	strh	r3, [r7, #18]
	uint8_t *cmd = (uint8_t*) malloc(cmd_len * sizeof(uint8_t));
 800b534:	8a7b      	ldrh	r3, [r7, #18]
 800b536:	4618      	mov	r0, r3
 800b538:	f000 fa9e 	bl	800ba78 <malloc>
 800b53c:	4603      	mov	r3, r0
 800b53e:	60fb      	str	r3, [r7, #12]
	memset(cmd, 0, cmd_len);
 800b540:	8a7b      	ldrh	r3, [r7, #18]
 800b542:	461a      	mov	r2, r3
 800b544:	2100      	movs	r1, #0
 800b546:	68f8      	ldr	r0, [r7, #12]
 800b548:	f000 face 	bl	800bae8 <memset>
	sprintf((char*) cmd, "AT+MQTTPUB=0,\"%s/temp\",\"%s\",1,0", MQTT_CLIENTID, data);
 800b54c:	687b      	ldr	r3, [r7, #4]
 800b54e:	4a19      	ldr	r2, [pc, #100]	; (800b5b4 <esp8266_Publish_Temp_BrokerMQTT+0xa8>)
 800b550:	4919      	ldr	r1, [pc, #100]	; (800b5b8 <esp8266_Publish_Temp_BrokerMQTT+0xac>)
 800b552:	68f8      	ldr	r0, [r7, #12]
 800b554:	f000 fc4e 	bl	800bdf4 <siprintf>

	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b558:	e011      	b.n	800b57e <esp8266_Publish_Temp_BrokerMQTT+0x72>
	{
		retry_count++;
 800b55a:	697b      	ldr	r3, [r7, #20]
 800b55c:	3301      	adds	r3, #1
 800b55e:	617b      	str	r3, [r7, #20]
		HAL_Delay(1000);
 800b560:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800b564:	f7f9 fe28 	bl	80051b8 <HAL_Delay>
		if (retry_count > ESP8266_MAX_RETRY_TIME) {
 800b568:	697b      	ldr	r3, [r7, #20]
 800b56a:	2b03      	cmp	r3, #3
 800b56c:	dd07      	ble.n	800b57e <esp8266_Publish_Temp_BrokerMQTT+0x72>
			printf("(DBG:) esp8266_Subscribe_Temp_BrokerMQTT() failed\r\n");
 800b56e:	4813      	ldr	r0, [pc, #76]	; (800b5bc <esp8266_Publish_Temp_BrokerMQTT+0xb0>)
 800b570:	f000 fc28 	bl	800bdc4 <puts>
			retry_count = 0;
 800b574:	2300      	movs	r3, #0
 800b576:	617b      	str	r3, [r7, #20]
			mqtt_state = _FAILED_MQTT;
 800b578:	4b0d      	ldr	r3, [pc, #52]	; (800b5b0 <esp8266_Publish_Temp_BrokerMQTT+0xa4>)
 800b57a:	2200      	movs	r2, #0
 800b57c:	701a      	strb	r2, [r3, #0]
	while (esp8266_TransmitCmd(cmd, OK_ACK, ESP8266_MAX_TIMEOUT, WITH_NEWLINE) != _SUCCEED)
 800b57e:	2301      	movs	r3, #1
 800b580:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b584:	490e      	ldr	r1, [pc, #56]	; (800b5c0 <esp8266_Publish_Temp_BrokerMQTT+0xb4>)
 800b586:	68f8      	ldr	r0, [r7, #12]
 800b588:	f7ff fa90 	bl	800aaac <esp8266_TransmitCmd>
 800b58c:	4603      	mov	r3, r0
 800b58e:	2b01      	cmp	r3, #1
 800b590:	d1e3      	bne.n	800b55a <esp8266_Publish_Temp_BrokerMQTT+0x4e>
		}
	}
	HAL_Delay(100);
 800b592:	2064      	movs	r0, #100	; 0x64
 800b594:	f7f9 fe10 	bl	80051b8 <HAL_Delay>
	retry_count = 0;
 800b598:	2300      	movs	r3, #0
 800b59a:	617b      	str	r3, [r7, #20]
	mqtt_state = _PUBLISH_TEMP_MQTT;
 800b59c:	4b04      	ldr	r3, [pc, #16]	; (800b5b0 <esp8266_Publish_Temp_BrokerMQTT+0xa4>)
 800b59e:	220b      	movs	r2, #11
 800b5a0:	701a      	strb	r2, [r3, #0]
	return mqtt_state;
 800b5a2:	4b03      	ldr	r3, [pc, #12]	; (800b5b0 <esp8266_Publish_Temp_BrokerMQTT+0xa4>)
 800b5a4:	781b      	ldrb	r3, [r3, #0]
}
 800b5a6:	4618      	mov	r0, r3
 800b5a8:	3718      	adds	r7, #24
 800b5aa:	46bd      	mov	sp, r7
 800b5ac:	bd80      	pop	{r7, pc}
 800b5ae:	bf00      	nop
 800b5b0:	20000023 	.word	0x20000023
 800b5b4:	0800f334 	.word	0x0800f334
 800b5b8:	0800f57c 	.word	0x0800f57c
 800b5bc:	0800f524 	.word	0x0800f524
 800b5c0:	0800f010 	.word	0x0800f010

0800b5c4 <get_mqtt_state>:

uint8_t get_mqtt_state()
{
 800b5c4:	b480      	push	{r7}
 800b5c6:	af00      	add	r7, sp, #0
	return mqtt_state;
 800b5c8:	4b03      	ldr	r3, [pc, #12]	; (800b5d8 <get_mqtt_state+0x14>)
 800b5ca:	781b      	ldrb	r3, [r3, #0]
}
 800b5cc:	4618      	mov	r0, r3
 800b5ce:	46bd      	mov	sp, r7
 800b5d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d4:	4770      	bx	lr
 800b5d6:	bf00      	nop
 800b5d8:	20000023 	.word	0x20000023

0800b5dc <atoi>:
 800b5dc:	220a      	movs	r2, #10
 800b5de:	2100      	movs	r1, #0
 800b5e0:	f001 bb52 	b.w	800cc88 <strtol>

0800b5e4 <__errno>:
 800b5e4:	4b01      	ldr	r3, [pc, #4]	; (800b5ec <__errno+0x8>)
 800b5e6:	6818      	ldr	r0, [r3, #0]
 800b5e8:	4770      	bx	lr
 800b5ea:	bf00      	nop
 800b5ec:	20000024 	.word	0x20000024

0800b5f0 <__sflush_r>:
 800b5f0:	898a      	ldrh	r2, [r1, #12]
 800b5f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5f6:	4605      	mov	r5, r0
 800b5f8:	0710      	lsls	r0, r2, #28
 800b5fa:	460c      	mov	r4, r1
 800b5fc:	d458      	bmi.n	800b6b0 <__sflush_r+0xc0>
 800b5fe:	684b      	ldr	r3, [r1, #4]
 800b600:	2b00      	cmp	r3, #0
 800b602:	dc05      	bgt.n	800b610 <__sflush_r+0x20>
 800b604:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800b606:	2b00      	cmp	r3, #0
 800b608:	dc02      	bgt.n	800b610 <__sflush_r+0x20>
 800b60a:	2000      	movs	r0, #0
 800b60c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b610:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800b612:	2e00      	cmp	r6, #0
 800b614:	d0f9      	beq.n	800b60a <__sflush_r+0x1a>
 800b616:	2300      	movs	r3, #0
 800b618:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800b61c:	682f      	ldr	r7, [r5, #0]
 800b61e:	602b      	str	r3, [r5, #0]
 800b620:	d032      	beq.n	800b688 <__sflush_r+0x98>
 800b622:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800b624:	89a3      	ldrh	r3, [r4, #12]
 800b626:	075a      	lsls	r2, r3, #29
 800b628:	d505      	bpl.n	800b636 <__sflush_r+0x46>
 800b62a:	6863      	ldr	r3, [r4, #4]
 800b62c:	1ac0      	subs	r0, r0, r3
 800b62e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b630:	b10b      	cbz	r3, 800b636 <__sflush_r+0x46>
 800b632:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b634:	1ac0      	subs	r0, r0, r3
 800b636:	2300      	movs	r3, #0
 800b638:	4602      	mov	r2, r0
 800b63a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800b63c:	6a21      	ldr	r1, [r4, #32]
 800b63e:	4628      	mov	r0, r5
 800b640:	47b0      	blx	r6
 800b642:	1c43      	adds	r3, r0, #1
 800b644:	89a3      	ldrh	r3, [r4, #12]
 800b646:	d106      	bne.n	800b656 <__sflush_r+0x66>
 800b648:	6829      	ldr	r1, [r5, #0]
 800b64a:	291d      	cmp	r1, #29
 800b64c:	d82c      	bhi.n	800b6a8 <__sflush_r+0xb8>
 800b64e:	4a2a      	ldr	r2, [pc, #168]	; (800b6f8 <__sflush_r+0x108>)
 800b650:	40ca      	lsrs	r2, r1
 800b652:	07d6      	lsls	r6, r2, #31
 800b654:	d528      	bpl.n	800b6a8 <__sflush_r+0xb8>
 800b656:	2200      	movs	r2, #0
 800b658:	6062      	str	r2, [r4, #4]
 800b65a:	04d9      	lsls	r1, r3, #19
 800b65c:	6922      	ldr	r2, [r4, #16]
 800b65e:	6022      	str	r2, [r4, #0]
 800b660:	d504      	bpl.n	800b66c <__sflush_r+0x7c>
 800b662:	1c42      	adds	r2, r0, #1
 800b664:	d101      	bne.n	800b66a <__sflush_r+0x7a>
 800b666:	682b      	ldr	r3, [r5, #0]
 800b668:	b903      	cbnz	r3, 800b66c <__sflush_r+0x7c>
 800b66a:	6560      	str	r0, [r4, #84]	; 0x54
 800b66c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800b66e:	602f      	str	r7, [r5, #0]
 800b670:	2900      	cmp	r1, #0
 800b672:	d0ca      	beq.n	800b60a <__sflush_r+0x1a>
 800b674:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800b678:	4299      	cmp	r1, r3
 800b67a:	d002      	beq.n	800b682 <__sflush_r+0x92>
 800b67c:	4628      	mov	r0, r5
 800b67e:	f000 fa3b 	bl	800baf8 <_free_r>
 800b682:	2000      	movs	r0, #0
 800b684:	6360      	str	r0, [r4, #52]	; 0x34
 800b686:	e7c1      	b.n	800b60c <__sflush_r+0x1c>
 800b688:	6a21      	ldr	r1, [r4, #32]
 800b68a:	2301      	movs	r3, #1
 800b68c:	4628      	mov	r0, r5
 800b68e:	47b0      	blx	r6
 800b690:	1c41      	adds	r1, r0, #1
 800b692:	d1c7      	bne.n	800b624 <__sflush_r+0x34>
 800b694:	682b      	ldr	r3, [r5, #0]
 800b696:	2b00      	cmp	r3, #0
 800b698:	d0c4      	beq.n	800b624 <__sflush_r+0x34>
 800b69a:	2b1d      	cmp	r3, #29
 800b69c:	d001      	beq.n	800b6a2 <__sflush_r+0xb2>
 800b69e:	2b16      	cmp	r3, #22
 800b6a0:	d101      	bne.n	800b6a6 <__sflush_r+0xb6>
 800b6a2:	602f      	str	r7, [r5, #0]
 800b6a4:	e7b1      	b.n	800b60a <__sflush_r+0x1a>
 800b6a6:	89a3      	ldrh	r3, [r4, #12]
 800b6a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b6ac:	81a3      	strh	r3, [r4, #12]
 800b6ae:	e7ad      	b.n	800b60c <__sflush_r+0x1c>
 800b6b0:	690f      	ldr	r7, [r1, #16]
 800b6b2:	2f00      	cmp	r7, #0
 800b6b4:	d0a9      	beq.n	800b60a <__sflush_r+0x1a>
 800b6b6:	0793      	lsls	r3, r2, #30
 800b6b8:	680e      	ldr	r6, [r1, #0]
 800b6ba:	bf08      	it	eq
 800b6bc:	694b      	ldreq	r3, [r1, #20]
 800b6be:	600f      	str	r7, [r1, #0]
 800b6c0:	bf18      	it	ne
 800b6c2:	2300      	movne	r3, #0
 800b6c4:	eba6 0807 	sub.w	r8, r6, r7
 800b6c8:	608b      	str	r3, [r1, #8]
 800b6ca:	f1b8 0f00 	cmp.w	r8, #0
 800b6ce:	dd9c      	ble.n	800b60a <__sflush_r+0x1a>
 800b6d0:	6a21      	ldr	r1, [r4, #32]
 800b6d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800b6d4:	4643      	mov	r3, r8
 800b6d6:	463a      	mov	r2, r7
 800b6d8:	4628      	mov	r0, r5
 800b6da:	47b0      	blx	r6
 800b6dc:	2800      	cmp	r0, #0
 800b6de:	dc06      	bgt.n	800b6ee <__sflush_r+0xfe>
 800b6e0:	89a3      	ldrh	r3, [r4, #12]
 800b6e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b6e6:	81a3      	strh	r3, [r4, #12]
 800b6e8:	f04f 30ff 	mov.w	r0, #4294967295
 800b6ec:	e78e      	b.n	800b60c <__sflush_r+0x1c>
 800b6ee:	4407      	add	r7, r0
 800b6f0:	eba8 0800 	sub.w	r8, r8, r0
 800b6f4:	e7e9      	b.n	800b6ca <__sflush_r+0xda>
 800b6f6:	bf00      	nop
 800b6f8:	20400001 	.word	0x20400001

0800b6fc <_fflush_r>:
 800b6fc:	b538      	push	{r3, r4, r5, lr}
 800b6fe:	690b      	ldr	r3, [r1, #16]
 800b700:	4605      	mov	r5, r0
 800b702:	460c      	mov	r4, r1
 800b704:	b913      	cbnz	r3, 800b70c <_fflush_r+0x10>
 800b706:	2500      	movs	r5, #0
 800b708:	4628      	mov	r0, r5
 800b70a:	bd38      	pop	{r3, r4, r5, pc}
 800b70c:	b118      	cbz	r0, 800b716 <_fflush_r+0x1a>
 800b70e:	6983      	ldr	r3, [r0, #24]
 800b710:	b90b      	cbnz	r3, 800b716 <_fflush_r+0x1a>
 800b712:	f000 f887 	bl	800b824 <__sinit>
 800b716:	4b14      	ldr	r3, [pc, #80]	; (800b768 <_fflush_r+0x6c>)
 800b718:	429c      	cmp	r4, r3
 800b71a:	d11b      	bne.n	800b754 <_fflush_r+0x58>
 800b71c:	686c      	ldr	r4, [r5, #4]
 800b71e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800b722:	2b00      	cmp	r3, #0
 800b724:	d0ef      	beq.n	800b706 <_fflush_r+0xa>
 800b726:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800b728:	07d0      	lsls	r0, r2, #31
 800b72a:	d404      	bmi.n	800b736 <_fflush_r+0x3a>
 800b72c:	0599      	lsls	r1, r3, #22
 800b72e:	d402      	bmi.n	800b736 <_fflush_r+0x3a>
 800b730:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b732:	f000 f93a 	bl	800b9aa <__retarget_lock_acquire_recursive>
 800b736:	4628      	mov	r0, r5
 800b738:	4621      	mov	r1, r4
 800b73a:	f7ff ff59 	bl	800b5f0 <__sflush_r>
 800b73e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800b740:	07da      	lsls	r2, r3, #31
 800b742:	4605      	mov	r5, r0
 800b744:	d4e0      	bmi.n	800b708 <_fflush_r+0xc>
 800b746:	89a3      	ldrh	r3, [r4, #12]
 800b748:	059b      	lsls	r3, r3, #22
 800b74a:	d4dd      	bmi.n	800b708 <_fflush_r+0xc>
 800b74c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b74e:	f000 f92d 	bl	800b9ac <__retarget_lock_release_recursive>
 800b752:	e7d9      	b.n	800b708 <_fflush_r+0xc>
 800b754:	4b05      	ldr	r3, [pc, #20]	; (800b76c <_fflush_r+0x70>)
 800b756:	429c      	cmp	r4, r3
 800b758:	d101      	bne.n	800b75e <_fflush_r+0x62>
 800b75a:	68ac      	ldr	r4, [r5, #8]
 800b75c:	e7df      	b.n	800b71e <_fflush_r+0x22>
 800b75e:	4b04      	ldr	r3, [pc, #16]	; (800b770 <_fflush_r+0x74>)
 800b760:	429c      	cmp	r4, r3
 800b762:	bf08      	it	eq
 800b764:	68ec      	ldreq	r4, [r5, #12]
 800b766:	e7da      	b.n	800b71e <_fflush_r+0x22>
 800b768:	0800f788 	.word	0x0800f788
 800b76c:	0800f7a8 	.word	0x0800f7a8
 800b770:	0800f768 	.word	0x0800f768

0800b774 <std>:
 800b774:	2300      	movs	r3, #0
 800b776:	b510      	push	{r4, lr}
 800b778:	4604      	mov	r4, r0
 800b77a:	e9c0 3300 	strd	r3, r3, [r0]
 800b77e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b782:	6083      	str	r3, [r0, #8]
 800b784:	8181      	strh	r1, [r0, #12]
 800b786:	6643      	str	r3, [r0, #100]	; 0x64
 800b788:	81c2      	strh	r2, [r0, #14]
 800b78a:	6183      	str	r3, [r0, #24]
 800b78c:	4619      	mov	r1, r3
 800b78e:	2208      	movs	r2, #8
 800b790:	305c      	adds	r0, #92	; 0x5c
 800b792:	f000 f9a9 	bl	800bae8 <memset>
 800b796:	4b05      	ldr	r3, [pc, #20]	; (800b7ac <std+0x38>)
 800b798:	6263      	str	r3, [r4, #36]	; 0x24
 800b79a:	4b05      	ldr	r3, [pc, #20]	; (800b7b0 <std+0x3c>)
 800b79c:	62a3      	str	r3, [r4, #40]	; 0x28
 800b79e:	4b05      	ldr	r3, [pc, #20]	; (800b7b4 <std+0x40>)
 800b7a0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b7a2:	4b05      	ldr	r3, [pc, #20]	; (800b7b8 <std+0x44>)
 800b7a4:	6224      	str	r4, [r4, #32]
 800b7a6:	6323      	str	r3, [r4, #48]	; 0x30
 800b7a8:	bd10      	pop	{r4, pc}
 800b7aa:	bf00      	nop
 800b7ac:	0800be35 	.word	0x0800be35
 800b7b0:	0800be57 	.word	0x0800be57
 800b7b4:	0800be8f 	.word	0x0800be8f
 800b7b8:	0800beb3 	.word	0x0800beb3

0800b7bc <_cleanup_r>:
 800b7bc:	4901      	ldr	r1, [pc, #4]	; (800b7c4 <_cleanup_r+0x8>)
 800b7be:	f000 b8af 	b.w	800b920 <_fwalk_reent>
 800b7c2:	bf00      	nop
 800b7c4:	0800b6fd 	.word	0x0800b6fd

0800b7c8 <__sfmoreglue>:
 800b7c8:	b570      	push	{r4, r5, r6, lr}
 800b7ca:	2268      	movs	r2, #104	; 0x68
 800b7cc:	1e4d      	subs	r5, r1, #1
 800b7ce:	4355      	muls	r5, r2
 800b7d0:	460e      	mov	r6, r1
 800b7d2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800b7d6:	f000 f9fb 	bl	800bbd0 <_malloc_r>
 800b7da:	4604      	mov	r4, r0
 800b7dc:	b140      	cbz	r0, 800b7f0 <__sfmoreglue+0x28>
 800b7de:	2100      	movs	r1, #0
 800b7e0:	e9c0 1600 	strd	r1, r6, [r0]
 800b7e4:	300c      	adds	r0, #12
 800b7e6:	60a0      	str	r0, [r4, #8]
 800b7e8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800b7ec:	f000 f97c 	bl	800bae8 <memset>
 800b7f0:	4620      	mov	r0, r4
 800b7f2:	bd70      	pop	{r4, r5, r6, pc}

0800b7f4 <__sfp_lock_acquire>:
 800b7f4:	4801      	ldr	r0, [pc, #4]	; (800b7fc <__sfp_lock_acquire+0x8>)
 800b7f6:	f000 b8d8 	b.w	800b9aa <__retarget_lock_acquire_recursive>
 800b7fa:	bf00      	nop
 800b7fc:	20001757 	.word	0x20001757

0800b800 <__sfp_lock_release>:
 800b800:	4801      	ldr	r0, [pc, #4]	; (800b808 <__sfp_lock_release+0x8>)
 800b802:	f000 b8d3 	b.w	800b9ac <__retarget_lock_release_recursive>
 800b806:	bf00      	nop
 800b808:	20001757 	.word	0x20001757

0800b80c <__sinit_lock_acquire>:
 800b80c:	4801      	ldr	r0, [pc, #4]	; (800b814 <__sinit_lock_acquire+0x8>)
 800b80e:	f000 b8cc 	b.w	800b9aa <__retarget_lock_acquire_recursive>
 800b812:	bf00      	nop
 800b814:	20001758 	.word	0x20001758

0800b818 <__sinit_lock_release>:
 800b818:	4801      	ldr	r0, [pc, #4]	; (800b820 <__sinit_lock_release+0x8>)
 800b81a:	f000 b8c7 	b.w	800b9ac <__retarget_lock_release_recursive>
 800b81e:	bf00      	nop
 800b820:	20001758 	.word	0x20001758

0800b824 <__sinit>:
 800b824:	b510      	push	{r4, lr}
 800b826:	4604      	mov	r4, r0
 800b828:	f7ff fff0 	bl	800b80c <__sinit_lock_acquire>
 800b82c:	69a3      	ldr	r3, [r4, #24]
 800b82e:	b11b      	cbz	r3, 800b838 <__sinit+0x14>
 800b830:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b834:	f7ff bff0 	b.w	800b818 <__sinit_lock_release>
 800b838:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 800b83c:	6523      	str	r3, [r4, #80]	; 0x50
 800b83e:	4b13      	ldr	r3, [pc, #76]	; (800b88c <__sinit+0x68>)
 800b840:	4a13      	ldr	r2, [pc, #76]	; (800b890 <__sinit+0x6c>)
 800b842:	681b      	ldr	r3, [r3, #0]
 800b844:	62a2      	str	r2, [r4, #40]	; 0x28
 800b846:	42a3      	cmp	r3, r4
 800b848:	bf04      	itt	eq
 800b84a:	2301      	moveq	r3, #1
 800b84c:	61a3      	streq	r3, [r4, #24]
 800b84e:	4620      	mov	r0, r4
 800b850:	f000 f820 	bl	800b894 <__sfp>
 800b854:	6060      	str	r0, [r4, #4]
 800b856:	4620      	mov	r0, r4
 800b858:	f000 f81c 	bl	800b894 <__sfp>
 800b85c:	60a0      	str	r0, [r4, #8]
 800b85e:	4620      	mov	r0, r4
 800b860:	f000 f818 	bl	800b894 <__sfp>
 800b864:	2200      	movs	r2, #0
 800b866:	60e0      	str	r0, [r4, #12]
 800b868:	2104      	movs	r1, #4
 800b86a:	6860      	ldr	r0, [r4, #4]
 800b86c:	f7ff ff82 	bl	800b774 <std>
 800b870:	68a0      	ldr	r0, [r4, #8]
 800b872:	2201      	movs	r2, #1
 800b874:	2109      	movs	r1, #9
 800b876:	f7ff ff7d 	bl	800b774 <std>
 800b87a:	68e0      	ldr	r0, [r4, #12]
 800b87c:	2202      	movs	r2, #2
 800b87e:	2112      	movs	r1, #18
 800b880:	f7ff ff78 	bl	800b774 <std>
 800b884:	2301      	movs	r3, #1
 800b886:	61a3      	str	r3, [r4, #24]
 800b888:	e7d2      	b.n	800b830 <__sinit+0xc>
 800b88a:	bf00      	nop
 800b88c:	0800f7c8 	.word	0x0800f7c8
 800b890:	0800b7bd 	.word	0x0800b7bd

0800b894 <__sfp>:
 800b894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b896:	4607      	mov	r7, r0
 800b898:	f7ff ffac 	bl	800b7f4 <__sfp_lock_acquire>
 800b89c:	4b1e      	ldr	r3, [pc, #120]	; (800b918 <__sfp+0x84>)
 800b89e:	681e      	ldr	r6, [r3, #0]
 800b8a0:	69b3      	ldr	r3, [r6, #24]
 800b8a2:	b913      	cbnz	r3, 800b8aa <__sfp+0x16>
 800b8a4:	4630      	mov	r0, r6
 800b8a6:	f7ff ffbd 	bl	800b824 <__sinit>
 800b8aa:	3648      	adds	r6, #72	; 0x48
 800b8ac:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800b8b0:	3b01      	subs	r3, #1
 800b8b2:	d503      	bpl.n	800b8bc <__sfp+0x28>
 800b8b4:	6833      	ldr	r3, [r6, #0]
 800b8b6:	b30b      	cbz	r3, 800b8fc <__sfp+0x68>
 800b8b8:	6836      	ldr	r6, [r6, #0]
 800b8ba:	e7f7      	b.n	800b8ac <__sfp+0x18>
 800b8bc:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800b8c0:	b9d5      	cbnz	r5, 800b8f8 <__sfp+0x64>
 800b8c2:	4b16      	ldr	r3, [pc, #88]	; (800b91c <__sfp+0x88>)
 800b8c4:	60e3      	str	r3, [r4, #12]
 800b8c6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b8ca:	6665      	str	r5, [r4, #100]	; 0x64
 800b8cc:	f000 f86c 	bl	800b9a8 <__retarget_lock_init_recursive>
 800b8d0:	f7ff ff96 	bl	800b800 <__sfp_lock_release>
 800b8d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800b8d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800b8dc:	6025      	str	r5, [r4, #0]
 800b8de:	61a5      	str	r5, [r4, #24]
 800b8e0:	2208      	movs	r2, #8
 800b8e2:	4629      	mov	r1, r5
 800b8e4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800b8e8:	f000 f8fe 	bl	800bae8 <memset>
 800b8ec:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800b8f0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800b8f4:	4620      	mov	r0, r4
 800b8f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b8f8:	3468      	adds	r4, #104	; 0x68
 800b8fa:	e7d9      	b.n	800b8b0 <__sfp+0x1c>
 800b8fc:	2104      	movs	r1, #4
 800b8fe:	4638      	mov	r0, r7
 800b900:	f7ff ff62 	bl	800b7c8 <__sfmoreglue>
 800b904:	4604      	mov	r4, r0
 800b906:	6030      	str	r0, [r6, #0]
 800b908:	2800      	cmp	r0, #0
 800b90a:	d1d5      	bne.n	800b8b8 <__sfp+0x24>
 800b90c:	f7ff ff78 	bl	800b800 <__sfp_lock_release>
 800b910:	230c      	movs	r3, #12
 800b912:	603b      	str	r3, [r7, #0]
 800b914:	e7ee      	b.n	800b8f4 <__sfp+0x60>
 800b916:	bf00      	nop
 800b918:	0800f7c8 	.word	0x0800f7c8
 800b91c:	ffff0001 	.word	0xffff0001

0800b920 <_fwalk_reent>:
 800b920:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b924:	4606      	mov	r6, r0
 800b926:	4688      	mov	r8, r1
 800b928:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800b92c:	2700      	movs	r7, #0
 800b92e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b932:	f1b9 0901 	subs.w	r9, r9, #1
 800b936:	d505      	bpl.n	800b944 <_fwalk_reent+0x24>
 800b938:	6824      	ldr	r4, [r4, #0]
 800b93a:	2c00      	cmp	r4, #0
 800b93c:	d1f7      	bne.n	800b92e <_fwalk_reent+0xe>
 800b93e:	4638      	mov	r0, r7
 800b940:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b944:	89ab      	ldrh	r3, [r5, #12]
 800b946:	2b01      	cmp	r3, #1
 800b948:	d907      	bls.n	800b95a <_fwalk_reent+0x3a>
 800b94a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b94e:	3301      	adds	r3, #1
 800b950:	d003      	beq.n	800b95a <_fwalk_reent+0x3a>
 800b952:	4629      	mov	r1, r5
 800b954:	4630      	mov	r0, r6
 800b956:	47c0      	blx	r8
 800b958:	4307      	orrs	r7, r0
 800b95a:	3568      	adds	r5, #104	; 0x68
 800b95c:	e7e9      	b.n	800b932 <_fwalk_reent+0x12>
	...

0800b960 <__libc_init_array>:
 800b960:	b570      	push	{r4, r5, r6, lr}
 800b962:	4d0d      	ldr	r5, [pc, #52]	; (800b998 <__libc_init_array+0x38>)
 800b964:	4c0d      	ldr	r4, [pc, #52]	; (800b99c <__libc_init_array+0x3c>)
 800b966:	1b64      	subs	r4, r4, r5
 800b968:	10a4      	asrs	r4, r4, #2
 800b96a:	2600      	movs	r6, #0
 800b96c:	42a6      	cmp	r6, r4
 800b96e:	d109      	bne.n	800b984 <__libc_init_array+0x24>
 800b970:	4d0b      	ldr	r5, [pc, #44]	; (800b9a0 <__libc_init_array+0x40>)
 800b972:	4c0c      	ldr	r4, [pc, #48]	; (800b9a4 <__libc_init_array+0x44>)
 800b974:	f003 f852 	bl	800ea1c <_init>
 800b978:	1b64      	subs	r4, r4, r5
 800b97a:	10a4      	asrs	r4, r4, #2
 800b97c:	2600      	movs	r6, #0
 800b97e:	42a6      	cmp	r6, r4
 800b980:	d105      	bne.n	800b98e <__libc_init_array+0x2e>
 800b982:	bd70      	pop	{r4, r5, r6, pc}
 800b984:	f855 3b04 	ldr.w	r3, [r5], #4
 800b988:	4798      	blx	r3
 800b98a:	3601      	adds	r6, #1
 800b98c:	e7ee      	b.n	800b96c <__libc_init_array+0xc>
 800b98e:	f855 3b04 	ldr.w	r3, [r5], #4
 800b992:	4798      	blx	r3
 800b994:	3601      	adds	r6, #1
 800b996:	e7f2      	b.n	800b97e <__libc_init_array+0x1e>
 800b998:	0800fa9c 	.word	0x0800fa9c
 800b99c:	0800fa9c 	.word	0x0800fa9c
 800b9a0:	0800fa9c 	.word	0x0800fa9c
 800b9a4:	0800faa0 	.word	0x0800faa0

0800b9a8 <__retarget_lock_init_recursive>:
 800b9a8:	4770      	bx	lr

0800b9aa <__retarget_lock_acquire_recursive>:
 800b9aa:	4770      	bx	lr

0800b9ac <__retarget_lock_release_recursive>:
 800b9ac:	4770      	bx	lr

0800b9ae <__swhatbuf_r>:
 800b9ae:	b570      	push	{r4, r5, r6, lr}
 800b9b0:	460e      	mov	r6, r1
 800b9b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b9b6:	2900      	cmp	r1, #0
 800b9b8:	b096      	sub	sp, #88	; 0x58
 800b9ba:	4614      	mov	r4, r2
 800b9bc:	461d      	mov	r5, r3
 800b9be:	da08      	bge.n	800b9d2 <__swhatbuf_r+0x24>
 800b9c0:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 800b9c4:	2200      	movs	r2, #0
 800b9c6:	602a      	str	r2, [r5, #0]
 800b9c8:	061a      	lsls	r2, r3, #24
 800b9ca:	d410      	bmi.n	800b9ee <__swhatbuf_r+0x40>
 800b9cc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b9d0:	e00e      	b.n	800b9f0 <__swhatbuf_r+0x42>
 800b9d2:	466a      	mov	r2, sp
 800b9d4:	f001 fa64 	bl	800cea0 <_fstat_r>
 800b9d8:	2800      	cmp	r0, #0
 800b9da:	dbf1      	blt.n	800b9c0 <__swhatbuf_r+0x12>
 800b9dc:	9a01      	ldr	r2, [sp, #4]
 800b9de:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800b9e2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 800b9e6:	425a      	negs	r2, r3
 800b9e8:	415a      	adcs	r2, r3
 800b9ea:	602a      	str	r2, [r5, #0]
 800b9ec:	e7ee      	b.n	800b9cc <__swhatbuf_r+0x1e>
 800b9ee:	2340      	movs	r3, #64	; 0x40
 800b9f0:	2000      	movs	r0, #0
 800b9f2:	6023      	str	r3, [r4, #0]
 800b9f4:	b016      	add	sp, #88	; 0x58
 800b9f6:	bd70      	pop	{r4, r5, r6, pc}

0800b9f8 <__smakebuf_r>:
 800b9f8:	898b      	ldrh	r3, [r1, #12]
 800b9fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b9fc:	079d      	lsls	r5, r3, #30
 800b9fe:	4606      	mov	r6, r0
 800ba00:	460c      	mov	r4, r1
 800ba02:	d507      	bpl.n	800ba14 <__smakebuf_r+0x1c>
 800ba04:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800ba08:	6023      	str	r3, [r4, #0]
 800ba0a:	6123      	str	r3, [r4, #16]
 800ba0c:	2301      	movs	r3, #1
 800ba0e:	6163      	str	r3, [r4, #20]
 800ba10:	b002      	add	sp, #8
 800ba12:	bd70      	pop	{r4, r5, r6, pc}
 800ba14:	ab01      	add	r3, sp, #4
 800ba16:	466a      	mov	r2, sp
 800ba18:	f7ff ffc9 	bl	800b9ae <__swhatbuf_r>
 800ba1c:	9900      	ldr	r1, [sp, #0]
 800ba1e:	4605      	mov	r5, r0
 800ba20:	4630      	mov	r0, r6
 800ba22:	f000 f8d5 	bl	800bbd0 <_malloc_r>
 800ba26:	b948      	cbnz	r0, 800ba3c <__smakebuf_r+0x44>
 800ba28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ba2c:	059a      	lsls	r2, r3, #22
 800ba2e:	d4ef      	bmi.n	800ba10 <__smakebuf_r+0x18>
 800ba30:	f023 0303 	bic.w	r3, r3, #3
 800ba34:	f043 0302 	orr.w	r3, r3, #2
 800ba38:	81a3      	strh	r3, [r4, #12]
 800ba3a:	e7e3      	b.n	800ba04 <__smakebuf_r+0xc>
 800ba3c:	4b0d      	ldr	r3, [pc, #52]	; (800ba74 <__smakebuf_r+0x7c>)
 800ba3e:	62b3      	str	r3, [r6, #40]	; 0x28
 800ba40:	89a3      	ldrh	r3, [r4, #12]
 800ba42:	6020      	str	r0, [r4, #0]
 800ba44:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ba48:	81a3      	strh	r3, [r4, #12]
 800ba4a:	9b00      	ldr	r3, [sp, #0]
 800ba4c:	6163      	str	r3, [r4, #20]
 800ba4e:	9b01      	ldr	r3, [sp, #4]
 800ba50:	6120      	str	r0, [r4, #16]
 800ba52:	b15b      	cbz	r3, 800ba6c <__smakebuf_r+0x74>
 800ba54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ba58:	4630      	mov	r0, r6
 800ba5a:	f001 fda3 	bl	800d5a4 <_isatty_r>
 800ba5e:	b128      	cbz	r0, 800ba6c <__smakebuf_r+0x74>
 800ba60:	89a3      	ldrh	r3, [r4, #12]
 800ba62:	f023 0303 	bic.w	r3, r3, #3
 800ba66:	f043 0301 	orr.w	r3, r3, #1
 800ba6a:	81a3      	strh	r3, [r4, #12]
 800ba6c:	89a0      	ldrh	r0, [r4, #12]
 800ba6e:	4305      	orrs	r5, r0
 800ba70:	81a5      	strh	r5, [r4, #12]
 800ba72:	e7cd      	b.n	800ba10 <__smakebuf_r+0x18>
 800ba74:	0800b7bd 	.word	0x0800b7bd

0800ba78 <malloc>:
 800ba78:	4b02      	ldr	r3, [pc, #8]	; (800ba84 <malloc+0xc>)
 800ba7a:	4601      	mov	r1, r0
 800ba7c:	6818      	ldr	r0, [r3, #0]
 800ba7e:	f000 b8a7 	b.w	800bbd0 <_malloc_r>
 800ba82:	bf00      	nop
 800ba84:	20000024 	.word	0x20000024

0800ba88 <free>:
 800ba88:	4b02      	ldr	r3, [pc, #8]	; (800ba94 <free+0xc>)
 800ba8a:	4601      	mov	r1, r0
 800ba8c:	6818      	ldr	r0, [r3, #0]
 800ba8e:	f000 b833 	b.w	800baf8 <_free_r>
 800ba92:	bf00      	nop
 800ba94:	20000024 	.word	0x20000024

0800ba98 <memcpy>:
 800ba98:	440a      	add	r2, r1
 800ba9a:	4291      	cmp	r1, r2
 800ba9c:	f100 33ff 	add.w	r3, r0, #4294967295
 800baa0:	d100      	bne.n	800baa4 <memcpy+0xc>
 800baa2:	4770      	bx	lr
 800baa4:	b510      	push	{r4, lr}
 800baa6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800baaa:	f803 4f01 	strb.w	r4, [r3, #1]!
 800baae:	4291      	cmp	r1, r2
 800bab0:	d1f9      	bne.n	800baa6 <memcpy+0xe>
 800bab2:	bd10      	pop	{r4, pc}

0800bab4 <memmove>:
 800bab4:	4288      	cmp	r0, r1
 800bab6:	b510      	push	{r4, lr}
 800bab8:	eb01 0402 	add.w	r4, r1, r2
 800babc:	d902      	bls.n	800bac4 <memmove+0x10>
 800babe:	4284      	cmp	r4, r0
 800bac0:	4623      	mov	r3, r4
 800bac2:	d807      	bhi.n	800bad4 <memmove+0x20>
 800bac4:	1e43      	subs	r3, r0, #1
 800bac6:	42a1      	cmp	r1, r4
 800bac8:	d008      	beq.n	800badc <memmove+0x28>
 800baca:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bace:	f803 2f01 	strb.w	r2, [r3, #1]!
 800bad2:	e7f8      	b.n	800bac6 <memmove+0x12>
 800bad4:	4402      	add	r2, r0
 800bad6:	4601      	mov	r1, r0
 800bad8:	428a      	cmp	r2, r1
 800bada:	d100      	bne.n	800bade <memmove+0x2a>
 800badc:	bd10      	pop	{r4, pc}
 800bade:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800bae2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800bae6:	e7f7      	b.n	800bad8 <memmove+0x24>

0800bae8 <memset>:
 800bae8:	4402      	add	r2, r0
 800baea:	4603      	mov	r3, r0
 800baec:	4293      	cmp	r3, r2
 800baee:	d100      	bne.n	800baf2 <memset+0xa>
 800baf0:	4770      	bx	lr
 800baf2:	f803 1b01 	strb.w	r1, [r3], #1
 800baf6:	e7f9      	b.n	800baec <memset+0x4>

0800baf8 <_free_r>:
 800baf8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bafa:	2900      	cmp	r1, #0
 800bafc:	d044      	beq.n	800bb88 <_free_r+0x90>
 800bafe:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800bb02:	9001      	str	r0, [sp, #4]
 800bb04:	2b00      	cmp	r3, #0
 800bb06:	f1a1 0404 	sub.w	r4, r1, #4
 800bb0a:	bfb8      	it	lt
 800bb0c:	18e4      	addlt	r4, r4, r3
 800bb0e:	f001 fd7d 	bl	800d60c <__malloc_lock>
 800bb12:	4a1e      	ldr	r2, [pc, #120]	; (800bb8c <_free_r+0x94>)
 800bb14:	9801      	ldr	r0, [sp, #4]
 800bb16:	6813      	ldr	r3, [r2, #0]
 800bb18:	b933      	cbnz	r3, 800bb28 <_free_r+0x30>
 800bb1a:	6063      	str	r3, [r4, #4]
 800bb1c:	6014      	str	r4, [r2, #0]
 800bb1e:	b003      	add	sp, #12
 800bb20:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800bb24:	f001 bd78 	b.w	800d618 <__malloc_unlock>
 800bb28:	42a3      	cmp	r3, r4
 800bb2a:	d908      	bls.n	800bb3e <_free_r+0x46>
 800bb2c:	6825      	ldr	r5, [r4, #0]
 800bb2e:	1961      	adds	r1, r4, r5
 800bb30:	428b      	cmp	r3, r1
 800bb32:	bf01      	itttt	eq
 800bb34:	6819      	ldreq	r1, [r3, #0]
 800bb36:	685b      	ldreq	r3, [r3, #4]
 800bb38:	1949      	addeq	r1, r1, r5
 800bb3a:	6021      	streq	r1, [r4, #0]
 800bb3c:	e7ed      	b.n	800bb1a <_free_r+0x22>
 800bb3e:	461a      	mov	r2, r3
 800bb40:	685b      	ldr	r3, [r3, #4]
 800bb42:	b10b      	cbz	r3, 800bb48 <_free_r+0x50>
 800bb44:	42a3      	cmp	r3, r4
 800bb46:	d9fa      	bls.n	800bb3e <_free_r+0x46>
 800bb48:	6811      	ldr	r1, [r2, #0]
 800bb4a:	1855      	adds	r5, r2, r1
 800bb4c:	42a5      	cmp	r5, r4
 800bb4e:	d10b      	bne.n	800bb68 <_free_r+0x70>
 800bb50:	6824      	ldr	r4, [r4, #0]
 800bb52:	4421      	add	r1, r4
 800bb54:	1854      	adds	r4, r2, r1
 800bb56:	42a3      	cmp	r3, r4
 800bb58:	6011      	str	r1, [r2, #0]
 800bb5a:	d1e0      	bne.n	800bb1e <_free_r+0x26>
 800bb5c:	681c      	ldr	r4, [r3, #0]
 800bb5e:	685b      	ldr	r3, [r3, #4]
 800bb60:	6053      	str	r3, [r2, #4]
 800bb62:	4421      	add	r1, r4
 800bb64:	6011      	str	r1, [r2, #0]
 800bb66:	e7da      	b.n	800bb1e <_free_r+0x26>
 800bb68:	d902      	bls.n	800bb70 <_free_r+0x78>
 800bb6a:	230c      	movs	r3, #12
 800bb6c:	6003      	str	r3, [r0, #0]
 800bb6e:	e7d6      	b.n	800bb1e <_free_r+0x26>
 800bb70:	6825      	ldr	r5, [r4, #0]
 800bb72:	1961      	adds	r1, r4, r5
 800bb74:	428b      	cmp	r3, r1
 800bb76:	bf04      	itt	eq
 800bb78:	6819      	ldreq	r1, [r3, #0]
 800bb7a:	685b      	ldreq	r3, [r3, #4]
 800bb7c:	6063      	str	r3, [r4, #4]
 800bb7e:	bf04      	itt	eq
 800bb80:	1949      	addeq	r1, r1, r5
 800bb82:	6021      	streq	r1, [r4, #0]
 800bb84:	6054      	str	r4, [r2, #4]
 800bb86:	e7ca      	b.n	800bb1e <_free_r+0x26>
 800bb88:	b003      	add	sp, #12
 800bb8a:	bd30      	pop	{r4, r5, pc}
 800bb8c:	2000175c 	.word	0x2000175c

0800bb90 <sbrk_aligned>:
 800bb90:	b570      	push	{r4, r5, r6, lr}
 800bb92:	4e0e      	ldr	r6, [pc, #56]	; (800bbcc <sbrk_aligned+0x3c>)
 800bb94:	460c      	mov	r4, r1
 800bb96:	6831      	ldr	r1, [r6, #0]
 800bb98:	4605      	mov	r5, r0
 800bb9a:	b911      	cbnz	r1, 800bba2 <sbrk_aligned+0x12>
 800bb9c:	f000 f91a 	bl	800bdd4 <_sbrk_r>
 800bba0:	6030      	str	r0, [r6, #0]
 800bba2:	4621      	mov	r1, r4
 800bba4:	4628      	mov	r0, r5
 800bba6:	f000 f915 	bl	800bdd4 <_sbrk_r>
 800bbaa:	1c43      	adds	r3, r0, #1
 800bbac:	d00a      	beq.n	800bbc4 <sbrk_aligned+0x34>
 800bbae:	1cc4      	adds	r4, r0, #3
 800bbb0:	f024 0403 	bic.w	r4, r4, #3
 800bbb4:	42a0      	cmp	r0, r4
 800bbb6:	d007      	beq.n	800bbc8 <sbrk_aligned+0x38>
 800bbb8:	1a21      	subs	r1, r4, r0
 800bbba:	4628      	mov	r0, r5
 800bbbc:	f000 f90a 	bl	800bdd4 <_sbrk_r>
 800bbc0:	3001      	adds	r0, #1
 800bbc2:	d101      	bne.n	800bbc8 <sbrk_aligned+0x38>
 800bbc4:	f04f 34ff 	mov.w	r4, #4294967295
 800bbc8:	4620      	mov	r0, r4
 800bbca:	bd70      	pop	{r4, r5, r6, pc}
 800bbcc:	20001760 	.word	0x20001760

0800bbd0 <_malloc_r>:
 800bbd0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbd4:	1ccd      	adds	r5, r1, #3
 800bbd6:	f025 0503 	bic.w	r5, r5, #3
 800bbda:	3508      	adds	r5, #8
 800bbdc:	2d0c      	cmp	r5, #12
 800bbde:	bf38      	it	cc
 800bbe0:	250c      	movcc	r5, #12
 800bbe2:	2d00      	cmp	r5, #0
 800bbe4:	4607      	mov	r7, r0
 800bbe6:	db01      	blt.n	800bbec <_malloc_r+0x1c>
 800bbe8:	42a9      	cmp	r1, r5
 800bbea:	d905      	bls.n	800bbf8 <_malloc_r+0x28>
 800bbec:	230c      	movs	r3, #12
 800bbee:	603b      	str	r3, [r7, #0]
 800bbf0:	2600      	movs	r6, #0
 800bbf2:	4630      	mov	r0, r6
 800bbf4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bbf8:	4e2e      	ldr	r6, [pc, #184]	; (800bcb4 <_malloc_r+0xe4>)
 800bbfa:	f001 fd07 	bl	800d60c <__malloc_lock>
 800bbfe:	6833      	ldr	r3, [r6, #0]
 800bc00:	461c      	mov	r4, r3
 800bc02:	bb34      	cbnz	r4, 800bc52 <_malloc_r+0x82>
 800bc04:	4629      	mov	r1, r5
 800bc06:	4638      	mov	r0, r7
 800bc08:	f7ff ffc2 	bl	800bb90 <sbrk_aligned>
 800bc0c:	1c43      	adds	r3, r0, #1
 800bc0e:	4604      	mov	r4, r0
 800bc10:	d14d      	bne.n	800bcae <_malloc_r+0xde>
 800bc12:	6834      	ldr	r4, [r6, #0]
 800bc14:	4626      	mov	r6, r4
 800bc16:	2e00      	cmp	r6, #0
 800bc18:	d140      	bne.n	800bc9c <_malloc_r+0xcc>
 800bc1a:	6823      	ldr	r3, [r4, #0]
 800bc1c:	4631      	mov	r1, r6
 800bc1e:	4638      	mov	r0, r7
 800bc20:	eb04 0803 	add.w	r8, r4, r3
 800bc24:	f000 f8d6 	bl	800bdd4 <_sbrk_r>
 800bc28:	4580      	cmp	r8, r0
 800bc2a:	d13a      	bne.n	800bca2 <_malloc_r+0xd2>
 800bc2c:	6821      	ldr	r1, [r4, #0]
 800bc2e:	3503      	adds	r5, #3
 800bc30:	1a6d      	subs	r5, r5, r1
 800bc32:	f025 0503 	bic.w	r5, r5, #3
 800bc36:	3508      	adds	r5, #8
 800bc38:	2d0c      	cmp	r5, #12
 800bc3a:	bf38      	it	cc
 800bc3c:	250c      	movcc	r5, #12
 800bc3e:	4629      	mov	r1, r5
 800bc40:	4638      	mov	r0, r7
 800bc42:	f7ff ffa5 	bl	800bb90 <sbrk_aligned>
 800bc46:	3001      	adds	r0, #1
 800bc48:	d02b      	beq.n	800bca2 <_malloc_r+0xd2>
 800bc4a:	6823      	ldr	r3, [r4, #0]
 800bc4c:	442b      	add	r3, r5
 800bc4e:	6023      	str	r3, [r4, #0]
 800bc50:	e00e      	b.n	800bc70 <_malloc_r+0xa0>
 800bc52:	6822      	ldr	r2, [r4, #0]
 800bc54:	1b52      	subs	r2, r2, r5
 800bc56:	d41e      	bmi.n	800bc96 <_malloc_r+0xc6>
 800bc58:	2a0b      	cmp	r2, #11
 800bc5a:	d916      	bls.n	800bc8a <_malloc_r+0xba>
 800bc5c:	1961      	adds	r1, r4, r5
 800bc5e:	42a3      	cmp	r3, r4
 800bc60:	6025      	str	r5, [r4, #0]
 800bc62:	bf18      	it	ne
 800bc64:	6059      	strne	r1, [r3, #4]
 800bc66:	6863      	ldr	r3, [r4, #4]
 800bc68:	bf08      	it	eq
 800bc6a:	6031      	streq	r1, [r6, #0]
 800bc6c:	5162      	str	r2, [r4, r5]
 800bc6e:	604b      	str	r3, [r1, #4]
 800bc70:	4638      	mov	r0, r7
 800bc72:	f104 060b 	add.w	r6, r4, #11
 800bc76:	f001 fccf 	bl	800d618 <__malloc_unlock>
 800bc7a:	f026 0607 	bic.w	r6, r6, #7
 800bc7e:	1d23      	adds	r3, r4, #4
 800bc80:	1af2      	subs	r2, r6, r3
 800bc82:	d0b6      	beq.n	800bbf2 <_malloc_r+0x22>
 800bc84:	1b9b      	subs	r3, r3, r6
 800bc86:	50a3      	str	r3, [r4, r2]
 800bc88:	e7b3      	b.n	800bbf2 <_malloc_r+0x22>
 800bc8a:	6862      	ldr	r2, [r4, #4]
 800bc8c:	42a3      	cmp	r3, r4
 800bc8e:	bf0c      	ite	eq
 800bc90:	6032      	streq	r2, [r6, #0]
 800bc92:	605a      	strne	r2, [r3, #4]
 800bc94:	e7ec      	b.n	800bc70 <_malloc_r+0xa0>
 800bc96:	4623      	mov	r3, r4
 800bc98:	6864      	ldr	r4, [r4, #4]
 800bc9a:	e7b2      	b.n	800bc02 <_malloc_r+0x32>
 800bc9c:	4634      	mov	r4, r6
 800bc9e:	6876      	ldr	r6, [r6, #4]
 800bca0:	e7b9      	b.n	800bc16 <_malloc_r+0x46>
 800bca2:	230c      	movs	r3, #12
 800bca4:	603b      	str	r3, [r7, #0]
 800bca6:	4638      	mov	r0, r7
 800bca8:	f001 fcb6 	bl	800d618 <__malloc_unlock>
 800bcac:	e7a1      	b.n	800bbf2 <_malloc_r+0x22>
 800bcae:	6025      	str	r5, [r4, #0]
 800bcb0:	e7de      	b.n	800bc70 <_malloc_r+0xa0>
 800bcb2:	bf00      	nop
 800bcb4:	2000175c 	.word	0x2000175c

0800bcb8 <iprintf>:
 800bcb8:	b40f      	push	{r0, r1, r2, r3}
 800bcba:	4b0a      	ldr	r3, [pc, #40]	; (800bce4 <iprintf+0x2c>)
 800bcbc:	b513      	push	{r0, r1, r4, lr}
 800bcbe:	681c      	ldr	r4, [r3, #0]
 800bcc0:	b124      	cbz	r4, 800bccc <iprintf+0x14>
 800bcc2:	69a3      	ldr	r3, [r4, #24]
 800bcc4:	b913      	cbnz	r3, 800bccc <iprintf+0x14>
 800bcc6:	4620      	mov	r0, r4
 800bcc8:	f7ff fdac 	bl	800b824 <__sinit>
 800bccc:	ab05      	add	r3, sp, #20
 800bcce:	9a04      	ldr	r2, [sp, #16]
 800bcd0:	68a1      	ldr	r1, [r4, #8]
 800bcd2:	9301      	str	r3, [sp, #4]
 800bcd4:	4620      	mov	r0, r4
 800bcd6:	f002 fb31 	bl	800e33c <_vfiprintf_r>
 800bcda:	b002      	add	sp, #8
 800bcdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bce0:	b004      	add	sp, #16
 800bce2:	4770      	bx	lr
 800bce4:	20000024 	.word	0x20000024

0800bce8 <_puts_r>:
 800bce8:	b570      	push	{r4, r5, r6, lr}
 800bcea:	460e      	mov	r6, r1
 800bcec:	4605      	mov	r5, r0
 800bcee:	b118      	cbz	r0, 800bcf8 <_puts_r+0x10>
 800bcf0:	6983      	ldr	r3, [r0, #24]
 800bcf2:	b90b      	cbnz	r3, 800bcf8 <_puts_r+0x10>
 800bcf4:	f7ff fd96 	bl	800b824 <__sinit>
 800bcf8:	69ab      	ldr	r3, [r5, #24]
 800bcfa:	68ac      	ldr	r4, [r5, #8]
 800bcfc:	b913      	cbnz	r3, 800bd04 <_puts_r+0x1c>
 800bcfe:	4628      	mov	r0, r5
 800bd00:	f7ff fd90 	bl	800b824 <__sinit>
 800bd04:	4b2c      	ldr	r3, [pc, #176]	; (800bdb8 <_puts_r+0xd0>)
 800bd06:	429c      	cmp	r4, r3
 800bd08:	d120      	bne.n	800bd4c <_puts_r+0x64>
 800bd0a:	686c      	ldr	r4, [r5, #4]
 800bd0c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800bd0e:	07db      	lsls	r3, r3, #31
 800bd10:	d405      	bmi.n	800bd1e <_puts_r+0x36>
 800bd12:	89a3      	ldrh	r3, [r4, #12]
 800bd14:	0598      	lsls	r0, r3, #22
 800bd16:	d402      	bmi.n	800bd1e <_puts_r+0x36>
 800bd18:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bd1a:	f7ff fe46 	bl	800b9aa <__retarget_lock_acquire_recursive>
 800bd1e:	89a3      	ldrh	r3, [r4, #12]
 800bd20:	0719      	lsls	r1, r3, #28
 800bd22:	d51d      	bpl.n	800bd60 <_puts_r+0x78>
 800bd24:	6923      	ldr	r3, [r4, #16]
 800bd26:	b1db      	cbz	r3, 800bd60 <_puts_r+0x78>
 800bd28:	3e01      	subs	r6, #1
 800bd2a:	68a3      	ldr	r3, [r4, #8]
 800bd2c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800bd30:	3b01      	subs	r3, #1
 800bd32:	60a3      	str	r3, [r4, #8]
 800bd34:	bb39      	cbnz	r1, 800bd86 <_puts_r+0x9e>
 800bd36:	2b00      	cmp	r3, #0
 800bd38:	da38      	bge.n	800bdac <_puts_r+0xc4>
 800bd3a:	4622      	mov	r2, r4
 800bd3c:	210a      	movs	r1, #10
 800bd3e:	4628      	mov	r0, r5
 800bd40:	f000 ffcc 	bl	800ccdc <__swbuf_r>
 800bd44:	3001      	adds	r0, #1
 800bd46:	d011      	beq.n	800bd6c <_puts_r+0x84>
 800bd48:	250a      	movs	r5, #10
 800bd4a:	e011      	b.n	800bd70 <_puts_r+0x88>
 800bd4c:	4b1b      	ldr	r3, [pc, #108]	; (800bdbc <_puts_r+0xd4>)
 800bd4e:	429c      	cmp	r4, r3
 800bd50:	d101      	bne.n	800bd56 <_puts_r+0x6e>
 800bd52:	68ac      	ldr	r4, [r5, #8]
 800bd54:	e7da      	b.n	800bd0c <_puts_r+0x24>
 800bd56:	4b1a      	ldr	r3, [pc, #104]	; (800bdc0 <_puts_r+0xd8>)
 800bd58:	429c      	cmp	r4, r3
 800bd5a:	bf08      	it	eq
 800bd5c:	68ec      	ldreq	r4, [r5, #12]
 800bd5e:	e7d5      	b.n	800bd0c <_puts_r+0x24>
 800bd60:	4621      	mov	r1, r4
 800bd62:	4628      	mov	r0, r5
 800bd64:	f001 f81e 	bl	800cda4 <__swsetup_r>
 800bd68:	2800      	cmp	r0, #0
 800bd6a:	d0dd      	beq.n	800bd28 <_puts_r+0x40>
 800bd6c:	f04f 35ff 	mov.w	r5, #4294967295
 800bd70:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800bd72:	07da      	lsls	r2, r3, #31
 800bd74:	d405      	bmi.n	800bd82 <_puts_r+0x9a>
 800bd76:	89a3      	ldrh	r3, [r4, #12]
 800bd78:	059b      	lsls	r3, r3, #22
 800bd7a:	d402      	bmi.n	800bd82 <_puts_r+0x9a>
 800bd7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800bd7e:	f7ff fe15 	bl	800b9ac <__retarget_lock_release_recursive>
 800bd82:	4628      	mov	r0, r5
 800bd84:	bd70      	pop	{r4, r5, r6, pc}
 800bd86:	2b00      	cmp	r3, #0
 800bd88:	da04      	bge.n	800bd94 <_puts_r+0xac>
 800bd8a:	69a2      	ldr	r2, [r4, #24]
 800bd8c:	429a      	cmp	r2, r3
 800bd8e:	dc06      	bgt.n	800bd9e <_puts_r+0xb6>
 800bd90:	290a      	cmp	r1, #10
 800bd92:	d004      	beq.n	800bd9e <_puts_r+0xb6>
 800bd94:	6823      	ldr	r3, [r4, #0]
 800bd96:	1c5a      	adds	r2, r3, #1
 800bd98:	6022      	str	r2, [r4, #0]
 800bd9a:	7019      	strb	r1, [r3, #0]
 800bd9c:	e7c5      	b.n	800bd2a <_puts_r+0x42>
 800bd9e:	4622      	mov	r2, r4
 800bda0:	4628      	mov	r0, r5
 800bda2:	f000 ff9b 	bl	800ccdc <__swbuf_r>
 800bda6:	3001      	adds	r0, #1
 800bda8:	d1bf      	bne.n	800bd2a <_puts_r+0x42>
 800bdaa:	e7df      	b.n	800bd6c <_puts_r+0x84>
 800bdac:	6823      	ldr	r3, [r4, #0]
 800bdae:	250a      	movs	r5, #10
 800bdb0:	1c5a      	adds	r2, r3, #1
 800bdb2:	6022      	str	r2, [r4, #0]
 800bdb4:	701d      	strb	r5, [r3, #0]
 800bdb6:	e7db      	b.n	800bd70 <_puts_r+0x88>
 800bdb8:	0800f788 	.word	0x0800f788
 800bdbc:	0800f7a8 	.word	0x0800f7a8
 800bdc0:	0800f768 	.word	0x0800f768

0800bdc4 <puts>:
 800bdc4:	4b02      	ldr	r3, [pc, #8]	; (800bdd0 <puts+0xc>)
 800bdc6:	4601      	mov	r1, r0
 800bdc8:	6818      	ldr	r0, [r3, #0]
 800bdca:	f7ff bf8d 	b.w	800bce8 <_puts_r>
 800bdce:	bf00      	nop
 800bdd0:	20000024 	.word	0x20000024

0800bdd4 <_sbrk_r>:
 800bdd4:	b538      	push	{r3, r4, r5, lr}
 800bdd6:	4d06      	ldr	r5, [pc, #24]	; (800bdf0 <_sbrk_r+0x1c>)
 800bdd8:	2300      	movs	r3, #0
 800bdda:	4604      	mov	r4, r0
 800bddc:	4608      	mov	r0, r1
 800bdde:	602b      	str	r3, [r5, #0]
 800bde0:	f7f9 f8a2 	bl	8004f28 <_sbrk>
 800bde4:	1c43      	adds	r3, r0, #1
 800bde6:	d102      	bne.n	800bdee <_sbrk_r+0x1a>
 800bde8:	682b      	ldr	r3, [r5, #0]
 800bdea:	b103      	cbz	r3, 800bdee <_sbrk_r+0x1a>
 800bdec:	6023      	str	r3, [r4, #0]
 800bdee:	bd38      	pop	{r3, r4, r5, pc}
 800bdf0:	20001764 	.word	0x20001764

0800bdf4 <siprintf>:
 800bdf4:	b40e      	push	{r1, r2, r3}
 800bdf6:	b500      	push	{lr}
 800bdf8:	b09c      	sub	sp, #112	; 0x70
 800bdfa:	ab1d      	add	r3, sp, #116	; 0x74
 800bdfc:	9002      	str	r0, [sp, #8]
 800bdfe:	9006      	str	r0, [sp, #24]
 800be00:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800be04:	4809      	ldr	r0, [pc, #36]	; (800be2c <siprintf+0x38>)
 800be06:	9107      	str	r1, [sp, #28]
 800be08:	9104      	str	r1, [sp, #16]
 800be0a:	4909      	ldr	r1, [pc, #36]	; (800be30 <siprintf+0x3c>)
 800be0c:	f853 2b04 	ldr.w	r2, [r3], #4
 800be10:	9105      	str	r1, [sp, #20]
 800be12:	6800      	ldr	r0, [r0, #0]
 800be14:	9301      	str	r3, [sp, #4]
 800be16:	a902      	add	r1, sp, #8
 800be18:	f002 f966 	bl	800e0e8 <_svfiprintf_r>
 800be1c:	9b02      	ldr	r3, [sp, #8]
 800be1e:	2200      	movs	r2, #0
 800be20:	701a      	strb	r2, [r3, #0]
 800be22:	b01c      	add	sp, #112	; 0x70
 800be24:	f85d eb04 	ldr.w	lr, [sp], #4
 800be28:	b003      	add	sp, #12
 800be2a:	4770      	bx	lr
 800be2c:	20000024 	.word	0x20000024
 800be30:	ffff0208 	.word	0xffff0208

0800be34 <__sread>:
 800be34:	b510      	push	{r4, lr}
 800be36:	460c      	mov	r4, r1
 800be38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800be3c:	f002 fd42 	bl	800e8c4 <_read_r>
 800be40:	2800      	cmp	r0, #0
 800be42:	bfab      	itete	ge
 800be44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800be46:	89a3      	ldrhlt	r3, [r4, #12]
 800be48:	181b      	addge	r3, r3, r0
 800be4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800be4e:	bfac      	ite	ge
 800be50:	6563      	strge	r3, [r4, #84]	; 0x54
 800be52:	81a3      	strhlt	r3, [r4, #12]
 800be54:	bd10      	pop	{r4, pc}

0800be56 <__swrite>:
 800be56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be5a:	461f      	mov	r7, r3
 800be5c:	898b      	ldrh	r3, [r1, #12]
 800be5e:	05db      	lsls	r3, r3, #23
 800be60:	4605      	mov	r5, r0
 800be62:	460c      	mov	r4, r1
 800be64:	4616      	mov	r6, r2
 800be66:	d505      	bpl.n	800be74 <__swrite+0x1e>
 800be68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800be6c:	2302      	movs	r3, #2
 800be6e:	2200      	movs	r2, #0
 800be70:	f001 fba8 	bl	800d5c4 <_lseek_r>
 800be74:	89a3      	ldrh	r3, [r4, #12]
 800be76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800be7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800be7e:	81a3      	strh	r3, [r4, #12]
 800be80:	4632      	mov	r2, r6
 800be82:	463b      	mov	r3, r7
 800be84:	4628      	mov	r0, r5
 800be86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800be8a:	f000 bf79 	b.w	800cd80 <_write_r>

0800be8e <__sseek>:
 800be8e:	b510      	push	{r4, lr}
 800be90:	460c      	mov	r4, r1
 800be92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800be96:	f001 fb95 	bl	800d5c4 <_lseek_r>
 800be9a:	1c43      	adds	r3, r0, #1
 800be9c:	89a3      	ldrh	r3, [r4, #12]
 800be9e:	bf15      	itete	ne
 800bea0:	6560      	strne	r0, [r4, #84]	; 0x54
 800bea2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800bea6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800beaa:	81a3      	strheq	r3, [r4, #12]
 800beac:	bf18      	it	ne
 800beae:	81a3      	strhne	r3, [r4, #12]
 800beb0:	bd10      	pop	{r4, pc}

0800beb2 <__sclose>:
 800beb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800beb6:	f000 bfe3 	b.w	800ce80 <_close_r>

0800beba <strchr>:
 800beba:	b2c9      	uxtb	r1, r1
 800bebc:	4603      	mov	r3, r0
 800bebe:	f810 2b01 	ldrb.w	r2, [r0], #1
 800bec2:	b11a      	cbz	r2, 800becc <strchr+0x12>
 800bec4:	428a      	cmp	r2, r1
 800bec6:	d1f9      	bne.n	800bebc <strchr+0x2>
 800bec8:	4618      	mov	r0, r3
 800beca:	4770      	bx	lr
 800becc:	2900      	cmp	r1, #0
 800bece:	bf18      	it	ne
 800bed0:	2300      	movne	r3, #0
 800bed2:	e7f9      	b.n	800bec8 <strchr+0xe>

0800bed4 <strncmp>:
 800bed4:	b510      	push	{r4, lr}
 800bed6:	b17a      	cbz	r2, 800bef8 <strncmp+0x24>
 800bed8:	4603      	mov	r3, r0
 800beda:	3901      	subs	r1, #1
 800bedc:	1884      	adds	r4, r0, r2
 800bede:	f813 0b01 	ldrb.w	r0, [r3], #1
 800bee2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800bee6:	4290      	cmp	r0, r2
 800bee8:	d101      	bne.n	800beee <strncmp+0x1a>
 800beea:	42a3      	cmp	r3, r4
 800beec:	d101      	bne.n	800bef2 <strncmp+0x1e>
 800beee:	1a80      	subs	r0, r0, r2
 800bef0:	bd10      	pop	{r4, pc}
 800bef2:	2800      	cmp	r0, #0
 800bef4:	d1f3      	bne.n	800bede <strncmp+0xa>
 800bef6:	e7fa      	b.n	800beee <strncmp+0x1a>
 800bef8:	4610      	mov	r0, r2
 800befa:	e7f9      	b.n	800bef0 <strncmp+0x1c>

0800befc <strstr>:
 800befc:	780a      	ldrb	r2, [r1, #0]
 800befe:	b570      	push	{r4, r5, r6, lr}
 800bf00:	b96a      	cbnz	r2, 800bf1e <strstr+0x22>
 800bf02:	bd70      	pop	{r4, r5, r6, pc}
 800bf04:	429a      	cmp	r2, r3
 800bf06:	d109      	bne.n	800bf1c <strstr+0x20>
 800bf08:	460c      	mov	r4, r1
 800bf0a:	4605      	mov	r5, r0
 800bf0c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800bf10:	2b00      	cmp	r3, #0
 800bf12:	d0f6      	beq.n	800bf02 <strstr+0x6>
 800bf14:	f815 6f01 	ldrb.w	r6, [r5, #1]!
 800bf18:	429e      	cmp	r6, r3
 800bf1a:	d0f7      	beq.n	800bf0c <strstr+0x10>
 800bf1c:	3001      	adds	r0, #1
 800bf1e:	7803      	ldrb	r3, [r0, #0]
 800bf20:	2b00      	cmp	r3, #0
 800bf22:	d1ef      	bne.n	800bf04 <strstr+0x8>
 800bf24:	4618      	mov	r0, r3
 800bf26:	e7ec      	b.n	800bf02 <strstr+0x6>

0800bf28 <sulp>:
 800bf28:	b570      	push	{r4, r5, r6, lr}
 800bf2a:	4604      	mov	r4, r0
 800bf2c:	460d      	mov	r5, r1
 800bf2e:	ec45 4b10 	vmov	d0, r4, r5
 800bf32:	4616      	mov	r6, r2
 800bf34:	f001 fee8 	bl	800dd08 <__ulp>
 800bf38:	ec51 0b10 	vmov	r0, r1, d0
 800bf3c:	b17e      	cbz	r6, 800bf5e <sulp+0x36>
 800bf3e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800bf42:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800bf46:	2b00      	cmp	r3, #0
 800bf48:	dd09      	ble.n	800bf5e <sulp+0x36>
 800bf4a:	051b      	lsls	r3, r3, #20
 800bf4c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800bf50:	2400      	movs	r4, #0
 800bf52:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800bf56:	4622      	mov	r2, r4
 800bf58:	462b      	mov	r3, r5
 800bf5a:	f7f4 fb25 	bl	80005a8 <__aeabi_dmul>
 800bf5e:	bd70      	pop	{r4, r5, r6, pc}

0800bf60 <_strtod_l>:
 800bf60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bf64:	ed2d 8b02 	vpush	{d8}
 800bf68:	b09d      	sub	sp, #116	; 0x74
 800bf6a:	461f      	mov	r7, r3
 800bf6c:	2300      	movs	r3, #0
 800bf6e:	9318      	str	r3, [sp, #96]	; 0x60
 800bf70:	4ba2      	ldr	r3, [pc, #648]	; (800c1fc <_strtod_l+0x29c>)
 800bf72:	9213      	str	r2, [sp, #76]	; 0x4c
 800bf74:	681b      	ldr	r3, [r3, #0]
 800bf76:	9305      	str	r3, [sp, #20]
 800bf78:	4604      	mov	r4, r0
 800bf7a:	4618      	mov	r0, r3
 800bf7c:	4688      	mov	r8, r1
 800bf7e:	f7f4 f8ff 	bl	8000180 <strlen>
 800bf82:	f04f 0a00 	mov.w	sl, #0
 800bf86:	4605      	mov	r5, r0
 800bf88:	f04f 0b00 	mov.w	fp, #0
 800bf8c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800bf90:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800bf92:	781a      	ldrb	r2, [r3, #0]
 800bf94:	2a2b      	cmp	r2, #43	; 0x2b
 800bf96:	d04e      	beq.n	800c036 <_strtod_l+0xd6>
 800bf98:	d83b      	bhi.n	800c012 <_strtod_l+0xb2>
 800bf9a:	2a0d      	cmp	r2, #13
 800bf9c:	d834      	bhi.n	800c008 <_strtod_l+0xa8>
 800bf9e:	2a08      	cmp	r2, #8
 800bfa0:	d834      	bhi.n	800c00c <_strtod_l+0xac>
 800bfa2:	2a00      	cmp	r2, #0
 800bfa4:	d03e      	beq.n	800c024 <_strtod_l+0xc4>
 800bfa6:	2300      	movs	r3, #0
 800bfa8:	930a      	str	r3, [sp, #40]	; 0x28
 800bfaa:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800bfac:	7833      	ldrb	r3, [r6, #0]
 800bfae:	2b30      	cmp	r3, #48	; 0x30
 800bfb0:	f040 80b0 	bne.w	800c114 <_strtod_l+0x1b4>
 800bfb4:	7873      	ldrb	r3, [r6, #1]
 800bfb6:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800bfba:	2b58      	cmp	r3, #88	; 0x58
 800bfbc:	d168      	bne.n	800c090 <_strtod_l+0x130>
 800bfbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bfc0:	9301      	str	r3, [sp, #4]
 800bfc2:	ab18      	add	r3, sp, #96	; 0x60
 800bfc4:	9702      	str	r7, [sp, #8]
 800bfc6:	9300      	str	r3, [sp, #0]
 800bfc8:	4a8d      	ldr	r2, [pc, #564]	; (800c200 <_strtod_l+0x2a0>)
 800bfca:	ab19      	add	r3, sp, #100	; 0x64
 800bfcc:	a917      	add	r1, sp, #92	; 0x5c
 800bfce:	4620      	mov	r0, r4
 800bfd0:	f000 ffe0 	bl	800cf94 <__gethex>
 800bfd4:	f010 0707 	ands.w	r7, r0, #7
 800bfd8:	4605      	mov	r5, r0
 800bfda:	d005      	beq.n	800bfe8 <_strtod_l+0x88>
 800bfdc:	2f06      	cmp	r7, #6
 800bfde:	d12c      	bne.n	800c03a <_strtod_l+0xda>
 800bfe0:	3601      	adds	r6, #1
 800bfe2:	2300      	movs	r3, #0
 800bfe4:	9617      	str	r6, [sp, #92]	; 0x5c
 800bfe6:	930a      	str	r3, [sp, #40]	; 0x28
 800bfe8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800bfea:	2b00      	cmp	r3, #0
 800bfec:	f040 8590 	bne.w	800cb10 <_strtod_l+0xbb0>
 800bff0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bff2:	b1eb      	cbz	r3, 800c030 <_strtod_l+0xd0>
 800bff4:	4652      	mov	r2, sl
 800bff6:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800bffa:	ec43 2b10 	vmov	d0, r2, r3
 800bffe:	b01d      	add	sp, #116	; 0x74
 800c000:	ecbd 8b02 	vpop	{d8}
 800c004:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c008:	2a20      	cmp	r2, #32
 800c00a:	d1cc      	bne.n	800bfa6 <_strtod_l+0x46>
 800c00c:	3301      	adds	r3, #1
 800c00e:	9317      	str	r3, [sp, #92]	; 0x5c
 800c010:	e7be      	b.n	800bf90 <_strtod_l+0x30>
 800c012:	2a2d      	cmp	r2, #45	; 0x2d
 800c014:	d1c7      	bne.n	800bfa6 <_strtod_l+0x46>
 800c016:	2201      	movs	r2, #1
 800c018:	920a      	str	r2, [sp, #40]	; 0x28
 800c01a:	1c5a      	adds	r2, r3, #1
 800c01c:	9217      	str	r2, [sp, #92]	; 0x5c
 800c01e:	785b      	ldrb	r3, [r3, #1]
 800c020:	2b00      	cmp	r3, #0
 800c022:	d1c2      	bne.n	800bfaa <_strtod_l+0x4a>
 800c024:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c026:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800c02a:	2b00      	cmp	r3, #0
 800c02c:	f040 856e 	bne.w	800cb0c <_strtod_l+0xbac>
 800c030:	4652      	mov	r2, sl
 800c032:	465b      	mov	r3, fp
 800c034:	e7e1      	b.n	800bffa <_strtod_l+0x9a>
 800c036:	2200      	movs	r2, #0
 800c038:	e7ee      	b.n	800c018 <_strtod_l+0xb8>
 800c03a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c03c:	b13a      	cbz	r2, 800c04e <_strtod_l+0xee>
 800c03e:	2135      	movs	r1, #53	; 0x35
 800c040:	a81a      	add	r0, sp, #104	; 0x68
 800c042:	f001 ff6c 	bl	800df1e <__copybits>
 800c046:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c048:	4620      	mov	r0, r4
 800c04a:	f001 fb2b 	bl	800d6a4 <_Bfree>
 800c04e:	3f01      	subs	r7, #1
 800c050:	2f04      	cmp	r7, #4
 800c052:	d806      	bhi.n	800c062 <_strtod_l+0x102>
 800c054:	e8df f007 	tbb	[pc, r7]
 800c058:	1714030a 	.word	0x1714030a
 800c05c:	0a          	.byte	0x0a
 800c05d:	00          	.byte	0x00
 800c05e:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 800c062:	0728      	lsls	r0, r5, #28
 800c064:	d5c0      	bpl.n	800bfe8 <_strtod_l+0x88>
 800c066:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 800c06a:	e7bd      	b.n	800bfe8 <_strtod_l+0x88>
 800c06c:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 800c070:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800c072:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800c076:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800c07a:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 800c07e:	e7f0      	b.n	800c062 <_strtod_l+0x102>
 800c080:	f8df b180 	ldr.w	fp, [pc, #384]	; 800c204 <_strtod_l+0x2a4>
 800c084:	e7ed      	b.n	800c062 <_strtod_l+0x102>
 800c086:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 800c08a:	f04f 3aff 	mov.w	sl, #4294967295
 800c08e:	e7e8      	b.n	800c062 <_strtod_l+0x102>
 800c090:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c092:	1c5a      	adds	r2, r3, #1
 800c094:	9217      	str	r2, [sp, #92]	; 0x5c
 800c096:	785b      	ldrb	r3, [r3, #1]
 800c098:	2b30      	cmp	r3, #48	; 0x30
 800c09a:	d0f9      	beq.n	800c090 <_strtod_l+0x130>
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d0a3      	beq.n	800bfe8 <_strtod_l+0x88>
 800c0a0:	2301      	movs	r3, #1
 800c0a2:	f04f 0900 	mov.w	r9, #0
 800c0a6:	9304      	str	r3, [sp, #16]
 800c0a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c0aa:	9308      	str	r3, [sp, #32]
 800c0ac:	f8cd 901c 	str.w	r9, [sp, #28]
 800c0b0:	464f      	mov	r7, r9
 800c0b2:	220a      	movs	r2, #10
 800c0b4:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c0b6:	7806      	ldrb	r6, [r0, #0]
 800c0b8:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800c0bc:	b2d9      	uxtb	r1, r3
 800c0be:	2909      	cmp	r1, #9
 800c0c0:	d92a      	bls.n	800c118 <_strtod_l+0x1b8>
 800c0c2:	9905      	ldr	r1, [sp, #20]
 800c0c4:	462a      	mov	r2, r5
 800c0c6:	f7ff ff05 	bl	800bed4 <strncmp>
 800c0ca:	b398      	cbz	r0, 800c134 <_strtod_l+0x1d4>
 800c0cc:	2000      	movs	r0, #0
 800c0ce:	4632      	mov	r2, r6
 800c0d0:	463d      	mov	r5, r7
 800c0d2:	9005      	str	r0, [sp, #20]
 800c0d4:	4603      	mov	r3, r0
 800c0d6:	2a65      	cmp	r2, #101	; 0x65
 800c0d8:	d001      	beq.n	800c0de <_strtod_l+0x17e>
 800c0da:	2a45      	cmp	r2, #69	; 0x45
 800c0dc:	d118      	bne.n	800c110 <_strtod_l+0x1b0>
 800c0de:	b91d      	cbnz	r5, 800c0e8 <_strtod_l+0x188>
 800c0e0:	9a04      	ldr	r2, [sp, #16]
 800c0e2:	4302      	orrs	r2, r0
 800c0e4:	d09e      	beq.n	800c024 <_strtod_l+0xc4>
 800c0e6:	2500      	movs	r5, #0
 800c0e8:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 800c0ec:	f108 0201 	add.w	r2, r8, #1
 800c0f0:	9217      	str	r2, [sp, #92]	; 0x5c
 800c0f2:	f898 2001 	ldrb.w	r2, [r8, #1]
 800c0f6:	2a2b      	cmp	r2, #43	; 0x2b
 800c0f8:	d075      	beq.n	800c1e6 <_strtod_l+0x286>
 800c0fa:	2a2d      	cmp	r2, #45	; 0x2d
 800c0fc:	d07b      	beq.n	800c1f6 <_strtod_l+0x296>
 800c0fe:	f04f 0c00 	mov.w	ip, #0
 800c102:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800c106:	2909      	cmp	r1, #9
 800c108:	f240 8082 	bls.w	800c210 <_strtod_l+0x2b0>
 800c10c:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 800c110:	2600      	movs	r6, #0
 800c112:	e09d      	b.n	800c250 <_strtod_l+0x2f0>
 800c114:	2300      	movs	r3, #0
 800c116:	e7c4      	b.n	800c0a2 <_strtod_l+0x142>
 800c118:	2f08      	cmp	r7, #8
 800c11a:	bfd8      	it	le
 800c11c:	9907      	ldrle	r1, [sp, #28]
 800c11e:	f100 0001 	add.w	r0, r0, #1
 800c122:	bfda      	itte	le
 800c124:	fb02 3301 	mlale	r3, r2, r1, r3
 800c128:	9307      	strle	r3, [sp, #28]
 800c12a:	fb02 3909 	mlagt	r9, r2, r9, r3
 800c12e:	3701      	adds	r7, #1
 800c130:	9017      	str	r0, [sp, #92]	; 0x5c
 800c132:	e7bf      	b.n	800c0b4 <_strtod_l+0x154>
 800c134:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c136:	195a      	adds	r2, r3, r5
 800c138:	9217      	str	r2, [sp, #92]	; 0x5c
 800c13a:	5d5a      	ldrb	r2, [r3, r5]
 800c13c:	2f00      	cmp	r7, #0
 800c13e:	d037      	beq.n	800c1b0 <_strtod_l+0x250>
 800c140:	9005      	str	r0, [sp, #20]
 800c142:	463d      	mov	r5, r7
 800c144:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800c148:	2b09      	cmp	r3, #9
 800c14a:	d912      	bls.n	800c172 <_strtod_l+0x212>
 800c14c:	2301      	movs	r3, #1
 800c14e:	e7c2      	b.n	800c0d6 <_strtod_l+0x176>
 800c150:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c152:	1c5a      	adds	r2, r3, #1
 800c154:	9217      	str	r2, [sp, #92]	; 0x5c
 800c156:	785a      	ldrb	r2, [r3, #1]
 800c158:	3001      	adds	r0, #1
 800c15a:	2a30      	cmp	r2, #48	; 0x30
 800c15c:	d0f8      	beq.n	800c150 <_strtod_l+0x1f0>
 800c15e:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800c162:	2b08      	cmp	r3, #8
 800c164:	f200 84d9 	bhi.w	800cb1a <_strtod_l+0xbba>
 800c168:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c16a:	9005      	str	r0, [sp, #20]
 800c16c:	2000      	movs	r0, #0
 800c16e:	9308      	str	r3, [sp, #32]
 800c170:	4605      	mov	r5, r0
 800c172:	3a30      	subs	r2, #48	; 0x30
 800c174:	f100 0301 	add.w	r3, r0, #1
 800c178:	d014      	beq.n	800c1a4 <_strtod_l+0x244>
 800c17a:	9905      	ldr	r1, [sp, #20]
 800c17c:	4419      	add	r1, r3
 800c17e:	9105      	str	r1, [sp, #20]
 800c180:	462b      	mov	r3, r5
 800c182:	eb00 0e05 	add.w	lr, r0, r5
 800c186:	210a      	movs	r1, #10
 800c188:	4573      	cmp	r3, lr
 800c18a:	d113      	bne.n	800c1b4 <_strtod_l+0x254>
 800c18c:	182b      	adds	r3, r5, r0
 800c18e:	2b08      	cmp	r3, #8
 800c190:	f105 0501 	add.w	r5, r5, #1
 800c194:	4405      	add	r5, r0
 800c196:	dc1c      	bgt.n	800c1d2 <_strtod_l+0x272>
 800c198:	9907      	ldr	r1, [sp, #28]
 800c19a:	230a      	movs	r3, #10
 800c19c:	fb03 2301 	mla	r3, r3, r1, r2
 800c1a0:	9307      	str	r3, [sp, #28]
 800c1a2:	2300      	movs	r3, #0
 800c1a4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800c1a6:	1c51      	adds	r1, r2, #1
 800c1a8:	9117      	str	r1, [sp, #92]	; 0x5c
 800c1aa:	7852      	ldrb	r2, [r2, #1]
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	e7c9      	b.n	800c144 <_strtod_l+0x1e4>
 800c1b0:	4638      	mov	r0, r7
 800c1b2:	e7d2      	b.n	800c15a <_strtod_l+0x1fa>
 800c1b4:	2b08      	cmp	r3, #8
 800c1b6:	dc04      	bgt.n	800c1c2 <_strtod_l+0x262>
 800c1b8:	9e07      	ldr	r6, [sp, #28]
 800c1ba:	434e      	muls	r6, r1
 800c1bc:	9607      	str	r6, [sp, #28]
 800c1be:	3301      	adds	r3, #1
 800c1c0:	e7e2      	b.n	800c188 <_strtod_l+0x228>
 800c1c2:	f103 0c01 	add.w	ip, r3, #1
 800c1c6:	f1bc 0f10 	cmp.w	ip, #16
 800c1ca:	bfd8      	it	le
 800c1cc:	fb01 f909 	mulle.w	r9, r1, r9
 800c1d0:	e7f5      	b.n	800c1be <_strtod_l+0x25e>
 800c1d2:	2d10      	cmp	r5, #16
 800c1d4:	bfdc      	itt	le
 800c1d6:	230a      	movle	r3, #10
 800c1d8:	fb03 2909 	mlale	r9, r3, r9, r2
 800c1dc:	e7e1      	b.n	800c1a2 <_strtod_l+0x242>
 800c1de:	2300      	movs	r3, #0
 800c1e0:	9305      	str	r3, [sp, #20]
 800c1e2:	2301      	movs	r3, #1
 800c1e4:	e77c      	b.n	800c0e0 <_strtod_l+0x180>
 800c1e6:	f04f 0c00 	mov.w	ip, #0
 800c1ea:	f108 0202 	add.w	r2, r8, #2
 800c1ee:	9217      	str	r2, [sp, #92]	; 0x5c
 800c1f0:	f898 2002 	ldrb.w	r2, [r8, #2]
 800c1f4:	e785      	b.n	800c102 <_strtod_l+0x1a2>
 800c1f6:	f04f 0c01 	mov.w	ip, #1
 800c1fa:	e7f6      	b.n	800c1ea <_strtod_l+0x28a>
 800c1fc:	0800f8a0 	.word	0x0800f8a0
 800c200:	0800f7d8 	.word	0x0800f7d8
 800c204:	7ff00000 	.word	0x7ff00000
 800c208:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800c20a:	1c51      	adds	r1, r2, #1
 800c20c:	9117      	str	r1, [sp, #92]	; 0x5c
 800c20e:	7852      	ldrb	r2, [r2, #1]
 800c210:	2a30      	cmp	r2, #48	; 0x30
 800c212:	d0f9      	beq.n	800c208 <_strtod_l+0x2a8>
 800c214:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800c218:	2908      	cmp	r1, #8
 800c21a:	f63f af79 	bhi.w	800c110 <_strtod_l+0x1b0>
 800c21e:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800c222:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800c224:	9206      	str	r2, [sp, #24]
 800c226:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800c228:	1c51      	adds	r1, r2, #1
 800c22a:	9117      	str	r1, [sp, #92]	; 0x5c
 800c22c:	7852      	ldrb	r2, [r2, #1]
 800c22e:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 800c232:	2e09      	cmp	r6, #9
 800c234:	d937      	bls.n	800c2a6 <_strtod_l+0x346>
 800c236:	9e06      	ldr	r6, [sp, #24]
 800c238:	1b89      	subs	r1, r1, r6
 800c23a:	2908      	cmp	r1, #8
 800c23c:	f644 661f 	movw	r6, #19999	; 0x4e1f
 800c240:	dc02      	bgt.n	800c248 <_strtod_l+0x2e8>
 800c242:	4576      	cmp	r6, lr
 800c244:	bfa8      	it	ge
 800c246:	4676      	movge	r6, lr
 800c248:	f1bc 0f00 	cmp.w	ip, #0
 800c24c:	d000      	beq.n	800c250 <_strtod_l+0x2f0>
 800c24e:	4276      	negs	r6, r6
 800c250:	2d00      	cmp	r5, #0
 800c252:	d14d      	bne.n	800c2f0 <_strtod_l+0x390>
 800c254:	9904      	ldr	r1, [sp, #16]
 800c256:	4301      	orrs	r1, r0
 800c258:	f47f aec6 	bne.w	800bfe8 <_strtod_l+0x88>
 800c25c:	2b00      	cmp	r3, #0
 800c25e:	f47f aee1 	bne.w	800c024 <_strtod_l+0xc4>
 800c262:	2a69      	cmp	r2, #105	; 0x69
 800c264:	d027      	beq.n	800c2b6 <_strtod_l+0x356>
 800c266:	dc24      	bgt.n	800c2b2 <_strtod_l+0x352>
 800c268:	2a49      	cmp	r2, #73	; 0x49
 800c26a:	d024      	beq.n	800c2b6 <_strtod_l+0x356>
 800c26c:	2a4e      	cmp	r2, #78	; 0x4e
 800c26e:	f47f aed9 	bne.w	800c024 <_strtod_l+0xc4>
 800c272:	499f      	ldr	r1, [pc, #636]	; (800c4f0 <_strtod_l+0x590>)
 800c274:	a817      	add	r0, sp, #92	; 0x5c
 800c276:	f001 f8e5 	bl	800d444 <__match>
 800c27a:	2800      	cmp	r0, #0
 800c27c:	f43f aed2 	beq.w	800c024 <_strtod_l+0xc4>
 800c280:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c282:	781b      	ldrb	r3, [r3, #0]
 800c284:	2b28      	cmp	r3, #40	; 0x28
 800c286:	d12d      	bne.n	800c2e4 <_strtod_l+0x384>
 800c288:	499a      	ldr	r1, [pc, #616]	; (800c4f4 <_strtod_l+0x594>)
 800c28a:	aa1a      	add	r2, sp, #104	; 0x68
 800c28c:	a817      	add	r0, sp, #92	; 0x5c
 800c28e:	f001 f8ed 	bl	800d46c <__hexnan>
 800c292:	2805      	cmp	r0, #5
 800c294:	d126      	bne.n	800c2e4 <_strtod_l+0x384>
 800c296:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800c298:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 800c29c:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 800c2a0:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 800c2a4:	e6a0      	b.n	800bfe8 <_strtod_l+0x88>
 800c2a6:	210a      	movs	r1, #10
 800c2a8:	fb01 2e0e 	mla	lr, r1, lr, r2
 800c2ac:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800c2b0:	e7b9      	b.n	800c226 <_strtod_l+0x2c6>
 800c2b2:	2a6e      	cmp	r2, #110	; 0x6e
 800c2b4:	e7db      	b.n	800c26e <_strtod_l+0x30e>
 800c2b6:	4990      	ldr	r1, [pc, #576]	; (800c4f8 <_strtod_l+0x598>)
 800c2b8:	a817      	add	r0, sp, #92	; 0x5c
 800c2ba:	f001 f8c3 	bl	800d444 <__match>
 800c2be:	2800      	cmp	r0, #0
 800c2c0:	f43f aeb0 	beq.w	800c024 <_strtod_l+0xc4>
 800c2c4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c2c6:	498d      	ldr	r1, [pc, #564]	; (800c4fc <_strtod_l+0x59c>)
 800c2c8:	3b01      	subs	r3, #1
 800c2ca:	a817      	add	r0, sp, #92	; 0x5c
 800c2cc:	9317      	str	r3, [sp, #92]	; 0x5c
 800c2ce:	f001 f8b9 	bl	800d444 <__match>
 800c2d2:	b910      	cbnz	r0, 800c2da <_strtod_l+0x37a>
 800c2d4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800c2d6:	3301      	adds	r3, #1
 800c2d8:	9317      	str	r3, [sp, #92]	; 0x5c
 800c2da:	f8df b230 	ldr.w	fp, [pc, #560]	; 800c50c <_strtod_l+0x5ac>
 800c2de:	f04f 0a00 	mov.w	sl, #0
 800c2e2:	e681      	b.n	800bfe8 <_strtod_l+0x88>
 800c2e4:	4886      	ldr	r0, [pc, #536]	; (800c500 <_strtod_l+0x5a0>)
 800c2e6:	f002 faff 	bl	800e8e8 <nan>
 800c2ea:	ec5b ab10 	vmov	sl, fp, d0
 800c2ee:	e67b      	b.n	800bfe8 <_strtod_l+0x88>
 800c2f0:	9b05      	ldr	r3, [sp, #20]
 800c2f2:	9807      	ldr	r0, [sp, #28]
 800c2f4:	1af3      	subs	r3, r6, r3
 800c2f6:	2f00      	cmp	r7, #0
 800c2f8:	bf08      	it	eq
 800c2fa:	462f      	moveq	r7, r5
 800c2fc:	2d10      	cmp	r5, #16
 800c2fe:	9306      	str	r3, [sp, #24]
 800c300:	46a8      	mov	r8, r5
 800c302:	bfa8      	it	ge
 800c304:	f04f 0810 	movge.w	r8, #16
 800c308:	f7f4 f8d4 	bl	80004b4 <__aeabi_ui2d>
 800c30c:	2d09      	cmp	r5, #9
 800c30e:	4682      	mov	sl, r0
 800c310:	468b      	mov	fp, r1
 800c312:	dd13      	ble.n	800c33c <_strtod_l+0x3dc>
 800c314:	4b7b      	ldr	r3, [pc, #492]	; (800c504 <_strtod_l+0x5a4>)
 800c316:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800c31a:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800c31e:	f7f4 f943 	bl	80005a8 <__aeabi_dmul>
 800c322:	4682      	mov	sl, r0
 800c324:	4648      	mov	r0, r9
 800c326:	468b      	mov	fp, r1
 800c328:	f7f4 f8c4 	bl	80004b4 <__aeabi_ui2d>
 800c32c:	4602      	mov	r2, r0
 800c32e:	460b      	mov	r3, r1
 800c330:	4650      	mov	r0, sl
 800c332:	4659      	mov	r1, fp
 800c334:	f7f3 ff82 	bl	800023c <__adddf3>
 800c338:	4682      	mov	sl, r0
 800c33a:	468b      	mov	fp, r1
 800c33c:	2d0f      	cmp	r5, #15
 800c33e:	dc38      	bgt.n	800c3b2 <_strtod_l+0x452>
 800c340:	9b06      	ldr	r3, [sp, #24]
 800c342:	2b00      	cmp	r3, #0
 800c344:	f43f ae50 	beq.w	800bfe8 <_strtod_l+0x88>
 800c348:	dd24      	ble.n	800c394 <_strtod_l+0x434>
 800c34a:	2b16      	cmp	r3, #22
 800c34c:	dc0b      	bgt.n	800c366 <_strtod_l+0x406>
 800c34e:	496d      	ldr	r1, [pc, #436]	; (800c504 <_strtod_l+0x5a4>)
 800c350:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c354:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c358:	4652      	mov	r2, sl
 800c35a:	465b      	mov	r3, fp
 800c35c:	f7f4 f924 	bl	80005a8 <__aeabi_dmul>
 800c360:	4682      	mov	sl, r0
 800c362:	468b      	mov	fp, r1
 800c364:	e640      	b.n	800bfe8 <_strtod_l+0x88>
 800c366:	9a06      	ldr	r2, [sp, #24]
 800c368:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 800c36c:	4293      	cmp	r3, r2
 800c36e:	db20      	blt.n	800c3b2 <_strtod_l+0x452>
 800c370:	4c64      	ldr	r4, [pc, #400]	; (800c504 <_strtod_l+0x5a4>)
 800c372:	f1c5 050f 	rsb	r5, r5, #15
 800c376:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 800c37a:	4652      	mov	r2, sl
 800c37c:	465b      	mov	r3, fp
 800c37e:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c382:	f7f4 f911 	bl	80005a8 <__aeabi_dmul>
 800c386:	9b06      	ldr	r3, [sp, #24]
 800c388:	1b5d      	subs	r5, r3, r5
 800c38a:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 800c38e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800c392:	e7e3      	b.n	800c35c <_strtod_l+0x3fc>
 800c394:	9b06      	ldr	r3, [sp, #24]
 800c396:	3316      	adds	r3, #22
 800c398:	db0b      	blt.n	800c3b2 <_strtod_l+0x452>
 800c39a:	9b05      	ldr	r3, [sp, #20]
 800c39c:	1b9e      	subs	r6, r3, r6
 800c39e:	4b59      	ldr	r3, [pc, #356]	; (800c504 <_strtod_l+0x5a4>)
 800c3a0:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 800c3a4:	e9d6 2300 	ldrd	r2, r3, [r6]
 800c3a8:	4650      	mov	r0, sl
 800c3aa:	4659      	mov	r1, fp
 800c3ac:	f7f4 fa26 	bl	80007fc <__aeabi_ddiv>
 800c3b0:	e7d6      	b.n	800c360 <_strtod_l+0x400>
 800c3b2:	9b06      	ldr	r3, [sp, #24]
 800c3b4:	eba5 0808 	sub.w	r8, r5, r8
 800c3b8:	4498      	add	r8, r3
 800c3ba:	f1b8 0f00 	cmp.w	r8, #0
 800c3be:	dd74      	ble.n	800c4aa <_strtod_l+0x54a>
 800c3c0:	f018 030f 	ands.w	r3, r8, #15
 800c3c4:	d00a      	beq.n	800c3dc <_strtod_l+0x47c>
 800c3c6:	494f      	ldr	r1, [pc, #316]	; (800c504 <_strtod_l+0x5a4>)
 800c3c8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800c3cc:	4652      	mov	r2, sl
 800c3ce:	465b      	mov	r3, fp
 800c3d0:	e9d1 0100 	ldrd	r0, r1, [r1]
 800c3d4:	f7f4 f8e8 	bl	80005a8 <__aeabi_dmul>
 800c3d8:	4682      	mov	sl, r0
 800c3da:	468b      	mov	fp, r1
 800c3dc:	f038 080f 	bics.w	r8, r8, #15
 800c3e0:	d04f      	beq.n	800c482 <_strtod_l+0x522>
 800c3e2:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800c3e6:	dd22      	ble.n	800c42e <_strtod_l+0x4ce>
 800c3e8:	2500      	movs	r5, #0
 800c3ea:	462e      	mov	r6, r5
 800c3ec:	9507      	str	r5, [sp, #28]
 800c3ee:	9505      	str	r5, [sp, #20]
 800c3f0:	2322      	movs	r3, #34	; 0x22
 800c3f2:	f8df b118 	ldr.w	fp, [pc, #280]	; 800c50c <_strtod_l+0x5ac>
 800c3f6:	6023      	str	r3, [r4, #0]
 800c3f8:	f04f 0a00 	mov.w	sl, #0
 800c3fc:	9b07      	ldr	r3, [sp, #28]
 800c3fe:	2b00      	cmp	r3, #0
 800c400:	f43f adf2 	beq.w	800bfe8 <_strtod_l+0x88>
 800c404:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c406:	4620      	mov	r0, r4
 800c408:	f001 f94c 	bl	800d6a4 <_Bfree>
 800c40c:	9905      	ldr	r1, [sp, #20]
 800c40e:	4620      	mov	r0, r4
 800c410:	f001 f948 	bl	800d6a4 <_Bfree>
 800c414:	4631      	mov	r1, r6
 800c416:	4620      	mov	r0, r4
 800c418:	f001 f944 	bl	800d6a4 <_Bfree>
 800c41c:	9907      	ldr	r1, [sp, #28]
 800c41e:	4620      	mov	r0, r4
 800c420:	f001 f940 	bl	800d6a4 <_Bfree>
 800c424:	4629      	mov	r1, r5
 800c426:	4620      	mov	r0, r4
 800c428:	f001 f93c 	bl	800d6a4 <_Bfree>
 800c42c:	e5dc      	b.n	800bfe8 <_strtod_l+0x88>
 800c42e:	4b36      	ldr	r3, [pc, #216]	; (800c508 <_strtod_l+0x5a8>)
 800c430:	9304      	str	r3, [sp, #16]
 800c432:	2300      	movs	r3, #0
 800c434:	ea4f 1828 	mov.w	r8, r8, asr #4
 800c438:	4650      	mov	r0, sl
 800c43a:	4659      	mov	r1, fp
 800c43c:	4699      	mov	r9, r3
 800c43e:	f1b8 0f01 	cmp.w	r8, #1
 800c442:	dc21      	bgt.n	800c488 <_strtod_l+0x528>
 800c444:	b10b      	cbz	r3, 800c44a <_strtod_l+0x4ea>
 800c446:	4682      	mov	sl, r0
 800c448:	468b      	mov	fp, r1
 800c44a:	4b2f      	ldr	r3, [pc, #188]	; (800c508 <_strtod_l+0x5a8>)
 800c44c:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 800c450:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 800c454:	4652      	mov	r2, sl
 800c456:	465b      	mov	r3, fp
 800c458:	e9d9 0100 	ldrd	r0, r1, [r9]
 800c45c:	f7f4 f8a4 	bl	80005a8 <__aeabi_dmul>
 800c460:	4b2a      	ldr	r3, [pc, #168]	; (800c50c <_strtod_l+0x5ac>)
 800c462:	460a      	mov	r2, r1
 800c464:	400b      	ands	r3, r1
 800c466:	492a      	ldr	r1, [pc, #168]	; (800c510 <_strtod_l+0x5b0>)
 800c468:	428b      	cmp	r3, r1
 800c46a:	4682      	mov	sl, r0
 800c46c:	d8bc      	bhi.n	800c3e8 <_strtod_l+0x488>
 800c46e:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800c472:	428b      	cmp	r3, r1
 800c474:	bf86      	itte	hi
 800c476:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 800c514 <_strtod_l+0x5b4>
 800c47a:	f04f 3aff 	movhi.w	sl, #4294967295
 800c47e:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 800c482:	2300      	movs	r3, #0
 800c484:	9304      	str	r3, [sp, #16]
 800c486:	e084      	b.n	800c592 <_strtod_l+0x632>
 800c488:	f018 0f01 	tst.w	r8, #1
 800c48c:	d005      	beq.n	800c49a <_strtod_l+0x53a>
 800c48e:	9b04      	ldr	r3, [sp, #16]
 800c490:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c494:	f7f4 f888 	bl	80005a8 <__aeabi_dmul>
 800c498:	2301      	movs	r3, #1
 800c49a:	9a04      	ldr	r2, [sp, #16]
 800c49c:	3208      	adds	r2, #8
 800c49e:	f109 0901 	add.w	r9, r9, #1
 800c4a2:	ea4f 0868 	mov.w	r8, r8, asr #1
 800c4a6:	9204      	str	r2, [sp, #16]
 800c4a8:	e7c9      	b.n	800c43e <_strtod_l+0x4de>
 800c4aa:	d0ea      	beq.n	800c482 <_strtod_l+0x522>
 800c4ac:	f1c8 0800 	rsb	r8, r8, #0
 800c4b0:	f018 020f 	ands.w	r2, r8, #15
 800c4b4:	d00a      	beq.n	800c4cc <_strtod_l+0x56c>
 800c4b6:	4b13      	ldr	r3, [pc, #76]	; (800c504 <_strtod_l+0x5a4>)
 800c4b8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800c4bc:	4650      	mov	r0, sl
 800c4be:	4659      	mov	r1, fp
 800c4c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800c4c4:	f7f4 f99a 	bl	80007fc <__aeabi_ddiv>
 800c4c8:	4682      	mov	sl, r0
 800c4ca:	468b      	mov	fp, r1
 800c4cc:	ea5f 1828 	movs.w	r8, r8, asr #4
 800c4d0:	d0d7      	beq.n	800c482 <_strtod_l+0x522>
 800c4d2:	f1b8 0f1f 	cmp.w	r8, #31
 800c4d6:	dd1f      	ble.n	800c518 <_strtod_l+0x5b8>
 800c4d8:	2500      	movs	r5, #0
 800c4da:	462e      	mov	r6, r5
 800c4dc:	9507      	str	r5, [sp, #28]
 800c4de:	9505      	str	r5, [sp, #20]
 800c4e0:	2322      	movs	r3, #34	; 0x22
 800c4e2:	f04f 0a00 	mov.w	sl, #0
 800c4e6:	f04f 0b00 	mov.w	fp, #0
 800c4ea:	6023      	str	r3, [r4, #0]
 800c4ec:	e786      	b.n	800c3fc <_strtod_l+0x49c>
 800c4ee:	bf00      	nop
 800c4f0:	0800f7d5 	.word	0x0800f7d5
 800c4f4:	0800f7ec 	.word	0x0800f7ec
 800c4f8:	0800f7cc 	.word	0x0800f7cc
 800c4fc:	0800f7cf 	.word	0x0800f7cf
 800c500:	0800fa92 	.word	0x0800fa92
 800c504:	0800f950 	.word	0x0800f950
 800c508:	0800f928 	.word	0x0800f928
 800c50c:	7ff00000 	.word	0x7ff00000
 800c510:	7ca00000 	.word	0x7ca00000
 800c514:	7fefffff 	.word	0x7fefffff
 800c518:	f018 0310 	ands.w	r3, r8, #16
 800c51c:	bf18      	it	ne
 800c51e:	236a      	movne	r3, #106	; 0x6a
 800c520:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 800c8d0 <_strtod_l+0x970>
 800c524:	9304      	str	r3, [sp, #16]
 800c526:	4650      	mov	r0, sl
 800c528:	4659      	mov	r1, fp
 800c52a:	2300      	movs	r3, #0
 800c52c:	f018 0f01 	tst.w	r8, #1
 800c530:	d004      	beq.n	800c53c <_strtod_l+0x5dc>
 800c532:	e9d9 2300 	ldrd	r2, r3, [r9]
 800c536:	f7f4 f837 	bl	80005a8 <__aeabi_dmul>
 800c53a:	2301      	movs	r3, #1
 800c53c:	ea5f 0868 	movs.w	r8, r8, asr #1
 800c540:	f109 0908 	add.w	r9, r9, #8
 800c544:	d1f2      	bne.n	800c52c <_strtod_l+0x5cc>
 800c546:	b10b      	cbz	r3, 800c54c <_strtod_l+0x5ec>
 800c548:	4682      	mov	sl, r0
 800c54a:	468b      	mov	fp, r1
 800c54c:	9b04      	ldr	r3, [sp, #16]
 800c54e:	b1c3      	cbz	r3, 800c582 <_strtod_l+0x622>
 800c550:	f3cb 520a 	ubfx	r2, fp, #20, #11
 800c554:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800c558:	2b00      	cmp	r3, #0
 800c55a:	4659      	mov	r1, fp
 800c55c:	dd11      	ble.n	800c582 <_strtod_l+0x622>
 800c55e:	2b1f      	cmp	r3, #31
 800c560:	f340 8124 	ble.w	800c7ac <_strtod_l+0x84c>
 800c564:	2b34      	cmp	r3, #52	; 0x34
 800c566:	bfde      	ittt	le
 800c568:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800c56c:	f04f 33ff 	movle.w	r3, #4294967295
 800c570:	fa03 f202 	lslle.w	r2, r3, r2
 800c574:	f04f 0a00 	mov.w	sl, #0
 800c578:	bfcc      	ite	gt
 800c57a:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 800c57e:	ea02 0b01 	andle.w	fp, r2, r1
 800c582:	2200      	movs	r2, #0
 800c584:	2300      	movs	r3, #0
 800c586:	4650      	mov	r0, sl
 800c588:	4659      	mov	r1, fp
 800c58a:	f7f4 fa75 	bl	8000a78 <__aeabi_dcmpeq>
 800c58e:	2800      	cmp	r0, #0
 800c590:	d1a2      	bne.n	800c4d8 <_strtod_l+0x578>
 800c592:	9b07      	ldr	r3, [sp, #28]
 800c594:	9300      	str	r3, [sp, #0]
 800c596:	9908      	ldr	r1, [sp, #32]
 800c598:	462b      	mov	r3, r5
 800c59a:	463a      	mov	r2, r7
 800c59c:	4620      	mov	r0, r4
 800c59e:	f001 f8e9 	bl	800d774 <__s2b>
 800c5a2:	9007      	str	r0, [sp, #28]
 800c5a4:	2800      	cmp	r0, #0
 800c5a6:	f43f af1f 	beq.w	800c3e8 <_strtod_l+0x488>
 800c5aa:	9b05      	ldr	r3, [sp, #20]
 800c5ac:	1b9e      	subs	r6, r3, r6
 800c5ae:	9b06      	ldr	r3, [sp, #24]
 800c5b0:	2b00      	cmp	r3, #0
 800c5b2:	bfb4      	ite	lt
 800c5b4:	4633      	movlt	r3, r6
 800c5b6:	2300      	movge	r3, #0
 800c5b8:	930c      	str	r3, [sp, #48]	; 0x30
 800c5ba:	9b06      	ldr	r3, [sp, #24]
 800c5bc:	2500      	movs	r5, #0
 800c5be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800c5c2:	9312      	str	r3, [sp, #72]	; 0x48
 800c5c4:	462e      	mov	r6, r5
 800c5c6:	9b07      	ldr	r3, [sp, #28]
 800c5c8:	4620      	mov	r0, r4
 800c5ca:	6859      	ldr	r1, [r3, #4]
 800c5cc:	f001 f82a 	bl	800d624 <_Balloc>
 800c5d0:	9005      	str	r0, [sp, #20]
 800c5d2:	2800      	cmp	r0, #0
 800c5d4:	f43f af0c 	beq.w	800c3f0 <_strtod_l+0x490>
 800c5d8:	9b07      	ldr	r3, [sp, #28]
 800c5da:	691a      	ldr	r2, [r3, #16]
 800c5dc:	3202      	adds	r2, #2
 800c5de:	f103 010c 	add.w	r1, r3, #12
 800c5e2:	0092      	lsls	r2, r2, #2
 800c5e4:	300c      	adds	r0, #12
 800c5e6:	f7ff fa57 	bl	800ba98 <memcpy>
 800c5ea:	ec4b ab10 	vmov	d0, sl, fp
 800c5ee:	aa1a      	add	r2, sp, #104	; 0x68
 800c5f0:	a919      	add	r1, sp, #100	; 0x64
 800c5f2:	4620      	mov	r0, r4
 800c5f4:	f001 fc04 	bl	800de00 <__d2b>
 800c5f8:	ec4b ab18 	vmov	d8, sl, fp
 800c5fc:	9018      	str	r0, [sp, #96]	; 0x60
 800c5fe:	2800      	cmp	r0, #0
 800c600:	f43f aef6 	beq.w	800c3f0 <_strtod_l+0x490>
 800c604:	2101      	movs	r1, #1
 800c606:	4620      	mov	r0, r4
 800c608:	f001 f94e 	bl	800d8a8 <__i2b>
 800c60c:	4606      	mov	r6, r0
 800c60e:	2800      	cmp	r0, #0
 800c610:	f43f aeee 	beq.w	800c3f0 <_strtod_l+0x490>
 800c614:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800c616:	9904      	ldr	r1, [sp, #16]
 800c618:	2b00      	cmp	r3, #0
 800c61a:	bfab      	itete	ge
 800c61c:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 800c61e:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 800c620:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800c622:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 800c626:	bfac      	ite	ge
 800c628:	eb03 0902 	addge.w	r9, r3, r2
 800c62c:	1ad7      	sublt	r7, r2, r3
 800c62e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800c630:	eba3 0801 	sub.w	r8, r3, r1
 800c634:	4490      	add	r8, r2
 800c636:	4ba1      	ldr	r3, [pc, #644]	; (800c8bc <_strtod_l+0x95c>)
 800c638:	f108 38ff 	add.w	r8, r8, #4294967295
 800c63c:	4598      	cmp	r8, r3
 800c63e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800c642:	f280 80c7 	bge.w	800c7d4 <_strtod_l+0x874>
 800c646:	eba3 0308 	sub.w	r3, r3, r8
 800c64a:	2b1f      	cmp	r3, #31
 800c64c:	eba2 0203 	sub.w	r2, r2, r3
 800c650:	f04f 0101 	mov.w	r1, #1
 800c654:	f300 80b1 	bgt.w	800c7ba <_strtod_l+0x85a>
 800c658:	fa01 f303 	lsl.w	r3, r1, r3
 800c65c:	930d      	str	r3, [sp, #52]	; 0x34
 800c65e:	2300      	movs	r3, #0
 800c660:	9308      	str	r3, [sp, #32]
 800c662:	eb09 0802 	add.w	r8, r9, r2
 800c666:	9b04      	ldr	r3, [sp, #16]
 800c668:	45c1      	cmp	r9, r8
 800c66a:	4417      	add	r7, r2
 800c66c:	441f      	add	r7, r3
 800c66e:	464b      	mov	r3, r9
 800c670:	bfa8      	it	ge
 800c672:	4643      	movge	r3, r8
 800c674:	42bb      	cmp	r3, r7
 800c676:	bfa8      	it	ge
 800c678:	463b      	movge	r3, r7
 800c67a:	2b00      	cmp	r3, #0
 800c67c:	bfc2      	ittt	gt
 800c67e:	eba8 0803 	subgt.w	r8, r8, r3
 800c682:	1aff      	subgt	r7, r7, r3
 800c684:	eba9 0903 	subgt.w	r9, r9, r3
 800c688:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800c68a:	2b00      	cmp	r3, #0
 800c68c:	dd17      	ble.n	800c6be <_strtod_l+0x75e>
 800c68e:	4631      	mov	r1, r6
 800c690:	461a      	mov	r2, r3
 800c692:	4620      	mov	r0, r4
 800c694:	f001 f9c8 	bl	800da28 <__pow5mult>
 800c698:	4606      	mov	r6, r0
 800c69a:	2800      	cmp	r0, #0
 800c69c:	f43f aea8 	beq.w	800c3f0 <_strtod_l+0x490>
 800c6a0:	4601      	mov	r1, r0
 800c6a2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800c6a4:	4620      	mov	r0, r4
 800c6a6:	f001 f915 	bl	800d8d4 <__multiply>
 800c6aa:	900b      	str	r0, [sp, #44]	; 0x2c
 800c6ac:	2800      	cmp	r0, #0
 800c6ae:	f43f ae9f 	beq.w	800c3f0 <_strtod_l+0x490>
 800c6b2:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c6b4:	4620      	mov	r0, r4
 800c6b6:	f000 fff5 	bl	800d6a4 <_Bfree>
 800c6ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c6bc:	9318      	str	r3, [sp, #96]	; 0x60
 800c6be:	f1b8 0f00 	cmp.w	r8, #0
 800c6c2:	f300 808c 	bgt.w	800c7de <_strtod_l+0x87e>
 800c6c6:	9b06      	ldr	r3, [sp, #24]
 800c6c8:	2b00      	cmp	r3, #0
 800c6ca:	dd08      	ble.n	800c6de <_strtod_l+0x77e>
 800c6cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800c6ce:	9905      	ldr	r1, [sp, #20]
 800c6d0:	4620      	mov	r0, r4
 800c6d2:	f001 f9a9 	bl	800da28 <__pow5mult>
 800c6d6:	9005      	str	r0, [sp, #20]
 800c6d8:	2800      	cmp	r0, #0
 800c6da:	f43f ae89 	beq.w	800c3f0 <_strtod_l+0x490>
 800c6de:	2f00      	cmp	r7, #0
 800c6e0:	dd08      	ble.n	800c6f4 <_strtod_l+0x794>
 800c6e2:	9905      	ldr	r1, [sp, #20]
 800c6e4:	463a      	mov	r2, r7
 800c6e6:	4620      	mov	r0, r4
 800c6e8:	f001 f9f8 	bl	800dadc <__lshift>
 800c6ec:	9005      	str	r0, [sp, #20]
 800c6ee:	2800      	cmp	r0, #0
 800c6f0:	f43f ae7e 	beq.w	800c3f0 <_strtod_l+0x490>
 800c6f4:	f1b9 0f00 	cmp.w	r9, #0
 800c6f8:	dd08      	ble.n	800c70c <_strtod_l+0x7ac>
 800c6fa:	4631      	mov	r1, r6
 800c6fc:	464a      	mov	r2, r9
 800c6fe:	4620      	mov	r0, r4
 800c700:	f001 f9ec 	bl	800dadc <__lshift>
 800c704:	4606      	mov	r6, r0
 800c706:	2800      	cmp	r0, #0
 800c708:	f43f ae72 	beq.w	800c3f0 <_strtod_l+0x490>
 800c70c:	9a05      	ldr	r2, [sp, #20]
 800c70e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c710:	4620      	mov	r0, r4
 800c712:	f001 fa6f 	bl	800dbf4 <__mdiff>
 800c716:	4605      	mov	r5, r0
 800c718:	2800      	cmp	r0, #0
 800c71a:	f43f ae69 	beq.w	800c3f0 <_strtod_l+0x490>
 800c71e:	68c3      	ldr	r3, [r0, #12]
 800c720:	930b      	str	r3, [sp, #44]	; 0x2c
 800c722:	2300      	movs	r3, #0
 800c724:	60c3      	str	r3, [r0, #12]
 800c726:	4631      	mov	r1, r6
 800c728:	f001 fa48 	bl	800dbbc <__mcmp>
 800c72c:	2800      	cmp	r0, #0
 800c72e:	da60      	bge.n	800c7f2 <_strtod_l+0x892>
 800c730:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c732:	ea53 030a 	orrs.w	r3, r3, sl
 800c736:	f040 8082 	bne.w	800c83e <_strtod_l+0x8de>
 800c73a:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c73e:	2b00      	cmp	r3, #0
 800c740:	d17d      	bne.n	800c83e <_strtod_l+0x8de>
 800c742:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800c746:	0d1b      	lsrs	r3, r3, #20
 800c748:	051b      	lsls	r3, r3, #20
 800c74a:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800c74e:	d976      	bls.n	800c83e <_strtod_l+0x8de>
 800c750:	696b      	ldr	r3, [r5, #20]
 800c752:	b913      	cbnz	r3, 800c75a <_strtod_l+0x7fa>
 800c754:	692b      	ldr	r3, [r5, #16]
 800c756:	2b01      	cmp	r3, #1
 800c758:	dd71      	ble.n	800c83e <_strtod_l+0x8de>
 800c75a:	4629      	mov	r1, r5
 800c75c:	2201      	movs	r2, #1
 800c75e:	4620      	mov	r0, r4
 800c760:	f001 f9bc 	bl	800dadc <__lshift>
 800c764:	4631      	mov	r1, r6
 800c766:	4605      	mov	r5, r0
 800c768:	f001 fa28 	bl	800dbbc <__mcmp>
 800c76c:	2800      	cmp	r0, #0
 800c76e:	dd66      	ble.n	800c83e <_strtod_l+0x8de>
 800c770:	9904      	ldr	r1, [sp, #16]
 800c772:	4a53      	ldr	r2, [pc, #332]	; (800c8c0 <_strtod_l+0x960>)
 800c774:	465b      	mov	r3, fp
 800c776:	2900      	cmp	r1, #0
 800c778:	f000 8081 	beq.w	800c87e <_strtod_l+0x91e>
 800c77c:	ea02 010b 	and.w	r1, r2, fp
 800c780:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800c784:	dc7b      	bgt.n	800c87e <_strtod_l+0x91e>
 800c786:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800c78a:	f77f aea9 	ble.w	800c4e0 <_strtod_l+0x580>
 800c78e:	4b4d      	ldr	r3, [pc, #308]	; (800c8c4 <_strtod_l+0x964>)
 800c790:	4650      	mov	r0, sl
 800c792:	4659      	mov	r1, fp
 800c794:	2200      	movs	r2, #0
 800c796:	f7f3 ff07 	bl	80005a8 <__aeabi_dmul>
 800c79a:	460b      	mov	r3, r1
 800c79c:	4303      	orrs	r3, r0
 800c79e:	bf08      	it	eq
 800c7a0:	2322      	moveq	r3, #34	; 0x22
 800c7a2:	4682      	mov	sl, r0
 800c7a4:	468b      	mov	fp, r1
 800c7a6:	bf08      	it	eq
 800c7a8:	6023      	streq	r3, [r4, #0]
 800c7aa:	e62b      	b.n	800c404 <_strtod_l+0x4a4>
 800c7ac:	f04f 32ff 	mov.w	r2, #4294967295
 800c7b0:	fa02 f303 	lsl.w	r3, r2, r3
 800c7b4:	ea03 0a0a 	and.w	sl, r3, sl
 800c7b8:	e6e3      	b.n	800c582 <_strtod_l+0x622>
 800c7ba:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 800c7be:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 800c7c2:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 800c7c6:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 800c7ca:	fa01 f308 	lsl.w	r3, r1, r8
 800c7ce:	9308      	str	r3, [sp, #32]
 800c7d0:	910d      	str	r1, [sp, #52]	; 0x34
 800c7d2:	e746      	b.n	800c662 <_strtod_l+0x702>
 800c7d4:	2300      	movs	r3, #0
 800c7d6:	9308      	str	r3, [sp, #32]
 800c7d8:	2301      	movs	r3, #1
 800c7da:	930d      	str	r3, [sp, #52]	; 0x34
 800c7dc:	e741      	b.n	800c662 <_strtod_l+0x702>
 800c7de:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c7e0:	4642      	mov	r2, r8
 800c7e2:	4620      	mov	r0, r4
 800c7e4:	f001 f97a 	bl	800dadc <__lshift>
 800c7e8:	9018      	str	r0, [sp, #96]	; 0x60
 800c7ea:	2800      	cmp	r0, #0
 800c7ec:	f47f af6b 	bne.w	800c6c6 <_strtod_l+0x766>
 800c7f0:	e5fe      	b.n	800c3f0 <_strtod_l+0x490>
 800c7f2:	465f      	mov	r7, fp
 800c7f4:	d16e      	bne.n	800c8d4 <_strtod_l+0x974>
 800c7f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c7f8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c7fc:	b342      	cbz	r2, 800c850 <_strtod_l+0x8f0>
 800c7fe:	4a32      	ldr	r2, [pc, #200]	; (800c8c8 <_strtod_l+0x968>)
 800c800:	4293      	cmp	r3, r2
 800c802:	d128      	bne.n	800c856 <_strtod_l+0x8f6>
 800c804:	9b04      	ldr	r3, [sp, #16]
 800c806:	4651      	mov	r1, sl
 800c808:	b1eb      	cbz	r3, 800c846 <_strtod_l+0x8e6>
 800c80a:	4b2d      	ldr	r3, [pc, #180]	; (800c8c0 <_strtod_l+0x960>)
 800c80c:	403b      	ands	r3, r7
 800c80e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800c812:	f04f 32ff 	mov.w	r2, #4294967295
 800c816:	d819      	bhi.n	800c84c <_strtod_l+0x8ec>
 800c818:	0d1b      	lsrs	r3, r3, #20
 800c81a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800c81e:	fa02 f303 	lsl.w	r3, r2, r3
 800c822:	4299      	cmp	r1, r3
 800c824:	d117      	bne.n	800c856 <_strtod_l+0x8f6>
 800c826:	4b29      	ldr	r3, [pc, #164]	; (800c8cc <_strtod_l+0x96c>)
 800c828:	429f      	cmp	r7, r3
 800c82a:	d102      	bne.n	800c832 <_strtod_l+0x8d2>
 800c82c:	3101      	adds	r1, #1
 800c82e:	f43f addf 	beq.w	800c3f0 <_strtod_l+0x490>
 800c832:	4b23      	ldr	r3, [pc, #140]	; (800c8c0 <_strtod_l+0x960>)
 800c834:	403b      	ands	r3, r7
 800c836:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 800c83a:	f04f 0a00 	mov.w	sl, #0
 800c83e:	9b04      	ldr	r3, [sp, #16]
 800c840:	2b00      	cmp	r3, #0
 800c842:	d1a4      	bne.n	800c78e <_strtod_l+0x82e>
 800c844:	e5de      	b.n	800c404 <_strtod_l+0x4a4>
 800c846:	f04f 33ff 	mov.w	r3, #4294967295
 800c84a:	e7ea      	b.n	800c822 <_strtod_l+0x8c2>
 800c84c:	4613      	mov	r3, r2
 800c84e:	e7e8      	b.n	800c822 <_strtod_l+0x8c2>
 800c850:	ea53 030a 	orrs.w	r3, r3, sl
 800c854:	d08c      	beq.n	800c770 <_strtod_l+0x810>
 800c856:	9b08      	ldr	r3, [sp, #32]
 800c858:	b1db      	cbz	r3, 800c892 <_strtod_l+0x932>
 800c85a:	423b      	tst	r3, r7
 800c85c:	d0ef      	beq.n	800c83e <_strtod_l+0x8de>
 800c85e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c860:	9a04      	ldr	r2, [sp, #16]
 800c862:	4650      	mov	r0, sl
 800c864:	4659      	mov	r1, fp
 800c866:	b1c3      	cbz	r3, 800c89a <_strtod_l+0x93a>
 800c868:	f7ff fb5e 	bl	800bf28 <sulp>
 800c86c:	4602      	mov	r2, r0
 800c86e:	460b      	mov	r3, r1
 800c870:	ec51 0b18 	vmov	r0, r1, d8
 800c874:	f7f3 fce2 	bl	800023c <__adddf3>
 800c878:	4682      	mov	sl, r0
 800c87a:	468b      	mov	fp, r1
 800c87c:	e7df      	b.n	800c83e <_strtod_l+0x8de>
 800c87e:	4013      	ands	r3, r2
 800c880:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800c884:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 800c888:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 800c88c:	f04f 3aff 	mov.w	sl, #4294967295
 800c890:	e7d5      	b.n	800c83e <_strtod_l+0x8de>
 800c892:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800c894:	ea13 0f0a 	tst.w	r3, sl
 800c898:	e7e0      	b.n	800c85c <_strtod_l+0x8fc>
 800c89a:	f7ff fb45 	bl	800bf28 <sulp>
 800c89e:	4602      	mov	r2, r0
 800c8a0:	460b      	mov	r3, r1
 800c8a2:	ec51 0b18 	vmov	r0, r1, d8
 800c8a6:	f7f3 fcc7 	bl	8000238 <__aeabi_dsub>
 800c8aa:	2200      	movs	r2, #0
 800c8ac:	2300      	movs	r3, #0
 800c8ae:	4682      	mov	sl, r0
 800c8b0:	468b      	mov	fp, r1
 800c8b2:	f7f4 f8e1 	bl	8000a78 <__aeabi_dcmpeq>
 800c8b6:	2800      	cmp	r0, #0
 800c8b8:	d0c1      	beq.n	800c83e <_strtod_l+0x8de>
 800c8ba:	e611      	b.n	800c4e0 <_strtod_l+0x580>
 800c8bc:	fffffc02 	.word	0xfffffc02
 800c8c0:	7ff00000 	.word	0x7ff00000
 800c8c4:	39500000 	.word	0x39500000
 800c8c8:	000fffff 	.word	0x000fffff
 800c8cc:	7fefffff 	.word	0x7fefffff
 800c8d0:	0800f800 	.word	0x0800f800
 800c8d4:	4631      	mov	r1, r6
 800c8d6:	4628      	mov	r0, r5
 800c8d8:	f001 faee 	bl	800deb8 <__ratio>
 800c8dc:	ec59 8b10 	vmov	r8, r9, d0
 800c8e0:	ee10 0a10 	vmov	r0, s0
 800c8e4:	2200      	movs	r2, #0
 800c8e6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c8ea:	4649      	mov	r1, r9
 800c8ec:	f7f4 f8d8 	bl	8000aa0 <__aeabi_dcmple>
 800c8f0:	2800      	cmp	r0, #0
 800c8f2:	d07a      	beq.n	800c9ea <_strtod_l+0xa8a>
 800c8f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c8f6:	2b00      	cmp	r3, #0
 800c8f8:	d04a      	beq.n	800c990 <_strtod_l+0xa30>
 800c8fa:	4b95      	ldr	r3, [pc, #596]	; (800cb50 <_strtod_l+0xbf0>)
 800c8fc:	2200      	movs	r2, #0
 800c8fe:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800c902:	f8df 924c 	ldr.w	r9, [pc, #588]	; 800cb50 <_strtod_l+0xbf0>
 800c906:	f04f 0800 	mov.w	r8, #0
 800c90a:	4b92      	ldr	r3, [pc, #584]	; (800cb54 <_strtod_l+0xbf4>)
 800c90c:	403b      	ands	r3, r7
 800c90e:	930d      	str	r3, [sp, #52]	; 0x34
 800c910:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c912:	4b91      	ldr	r3, [pc, #580]	; (800cb58 <_strtod_l+0xbf8>)
 800c914:	429a      	cmp	r2, r3
 800c916:	f040 80b0 	bne.w	800ca7a <_strtod_l+0xb1a>
 800c91a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800c91e:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 800c922:	ec4b ab10 	vmov	d0, sl, fp
 800c926:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800c92a:	f001 f9ed 	bl	800dd08 <__ulp>
 800c92e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800c932:	ec53 2b10 	vmov	r2, r3, d0
 800c936:	f7f3 fe37 	bl	80005a8 <__aeabi_dmul>
 800c93a:	4652      	mov	r2, sl
 800c93c:	465b      	mov	r3, fp
 800c93e:	f7f3 fc7d 	bl	800023c <__adddf3>
 800c942:	460b      	mov	r3, r1
 800c944:	4983      	ldr	r1, [pc, #524]	; (800cb54 <_strtod_l+0xbf4>)
 800c946:	4a85      	ldr	r2, [pc, #532]	; (800cb5c <_strtod_l+0xbfc>)
 800c948:	4019      	ands	r1, r3
 800c94a:	4291      	cmp	r1, r2
 800c94c:	4682      	mov	sl, r0
 800c94e:	d960      	bls.n	800ca12 <_strtod_l+0xab2>
 800c950:	ee18 3a90 	vmov	r3, s17
 800c954:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 800c958:	4293      	cmp	r3, r2
 800c95a:	d104      	bne.n	800c966 <_strtod_l+0xa06>
 800c95c:	ee18 3a10 	vmov	r3, s16
 800c960:	3301      	adds	r3, #1
 800c962:	f43f ad45 	beq.w	800c3f0 <_strtod_l+0x490>
 800c966:	f8df b200 	ldr.w	fp, [pc, #512]	; 800cb68 <_strtod_l+0xc08>
 800c96a:	f04f 3aff 	mov.w	sl, #4294967295
 800c96e:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c970:	4620      	mov	r0, r4
 800c972:	f000 fe97 	bl	800d6a4 <_Bfree>
 800c976:	9905      	ldr	r1, [sp, #20]
 800c978:	4620      	mov	r0, r4
 800c97a:	f000 fe93 	bl	800d6a4 <_Bfree>
 800c97e:	4631      	mov	r1, r6
 800c980:	4620      	mov	r0, r4
 800c982:	f000 fe8f 	bl	800d6a4 <_Bfree>
 800c986:	4629      	mov	r1, r5
 800c988:	4620      	mov	r0, r4
 800c98a:	f000 fe8b 	bl	800d6a4 <_Bfree>
 800c98e:	e61a      	b.n	800c5c6 <_strtod_l+0x666>
 800c990:	f1ba 0f00 	cmp.w	sl, #0
 800c994:	d11b      	bne.n	800c9ce <_strtod_l+0xa6e>
 800c996:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800c99a:	b9f3      	cbnz	r3, 800c9da <_strtod_l+0xa7a>
 800c99c:	4b6c      	ldr	r3, [pc, #432]	; (800cb50 <_strtod_l+0xbf0>)
 800c99e:	2200      	movs	r2, #0
 800c9a0:	4640      	mov	r0, r8
 800c9a2:	4649      	mov	r1, r9
 800c9a4:	f7f4 f872 	bl	8000a8c <__aeabi_dcmplt>
 800c9a8:	b9d0      	cbnz	r0, 800c9e0 <_strtod_l+0xa80>
 800c9aa:	4640      	mov	r0, r8
 800c9ac:	4649      	mov	r1, r9
 800c9ae:	4b6c      	ldr	r3, [pc, #432]	; (800cb60 <_strtod_l+0xc00>)
 800c9b0:	2200      	movs	r2, #0
 800c9b2:	f7f3 fdf9 	bl	80005a8 <__aeabi_dmul>
 800c9b6:	4680      	mov	r8, r0
 800c9b8:	4689      	mov	r9, r1
 800c9ba:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800c9be:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 800c9c2:	9315      	str	r3, [sp, #84]	; 0x54
 800c9c4:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 800c9c8:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800c9cc:	e79d      	b.n	800c90a <_strtod_l+0x9aa>
 800c9ce:	f1ba 0f01 	cmp.w	sl, #1
 800c9d2:	d102      	bne.n	800c9da <_strtod_l+0xa7a>
 800c9d4:	2f00      	cmp	r7, #0
 800c9d6:	f43f ad83 	beq.w	800c4e0 <_strtod_l+0x580>
 800c9da:	4b62      	ldr	r3, [pc, #392]	; (800cb64 <_strtod_l+0xc04>)
 800c9dc:	2200      	movs	r2, #0
 800c9de:	e78e      	b.n	800c8fe <_strtod_l+0x99e>
 800c9e0:	f8df 917c 	ldr.w	r9, [pc, #380]	; 800cb60 <_strtod_l+0xc00>
 800c9e4:	f04f 0800 	mov.w	r8, #0
 800c9e8:	e7e7      	b.n	800c9ba <_strtod_l+0xa5a>
 800c9ea:	4b5d      	ldr	r3, [pc, #372]	; (800cb60 <_strtod_l+0xc00>)
 800c9ec:	4640      	mov	r0, r8
 800c9ee:	4649      	mov	r1, r9
 800c9f0:	2200      	movs	r2, #0
 800c9f2:	f7f3 fdd9 	bl	80005a8 <__aeabi_dmul>
 800c9f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800c9f8:	4680      	mov	r8, r0
 800c9fa:	4689      	mov	r9, r1
 800c9fc:	b933      	cbnz	r3, 800ca0c <_strtod_l+0xaac>
 800c9fe:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800ca02:	900e      	str	r0, [sp, #56]	; 0x38
 800ca04:	930f      	str	r3, [sp, #60]	; 0x3c
 800ca06:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 800ca0a:	e7dd      	b.n	800c9c8 <_strtod_l+0xa68>
 800ca0c:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 800ca10:	e7f9      	b.n	800ca06 <_strtod_l+0xaa6>
 800ca12:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 800ca16:	9b04      	ldr	r3, [sp, #16]
 800ca18:	2b00      	cmp	r3, #0
 800ca1a:	d1a8      	bne.n	800c96e <_strtod_l+0xa0e>
 800ca1c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 800ca20:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ca22:	0d1b      	lsrs	r3, r3, #20
 800ca24:	051b      	lsls	r3, r3, #20
 800ca26:	429a      	cmp	r2, r3
 800ca28:	d1a1      	bne.n	800c96e <_strtod_l+0xa0e>
 800ca2a:	4640      	mov	r0, r8
 800ca2c:	4649      	mov	r1, r9
 800ca2e:	f7f4 f8cb 	bl	8000bc8 <__aeabi_d2lz>
 800ca32:	f7f3 fd8b 	bl	800054c <__aeabi_l2d>
 800ca36:	4602      	mov	r2, r0
 800ca38:	460b      	mov	r3, r1
 800ca3a:	4640      	mov	r0, r8
 800ca3c:	4649      	mov	r1, r9
 800ca3e:	f7f3 fbfb 	bl	8000238 <__aeabi_dsub>
 800ca42:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ca44:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800ca48:	ea43 030a 	orr.w	r3, r3, sl
 800ca4c:	4313      	orrs	r3, r2
 800ca4e:	4680      	mov	r8, r0
 800ca50:	4689      	mov	r9, r1
 800ca52:	d055      	beq.n	800cb00 <_strtod_l+0xba0>
 800ca54:	a336      	add	r3, pc, #216	; (adr r3, 800cb30 <_strtod_l+0xbd0>)
 800ca56:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca5a:	f7f4 f817 	bl	8000a8c <__aeabi_dcmplt>
 800ca5e:	2800      	cmp	r0, #0
 800ca60:	f47f acd0 	bne.w	800c404 <_strtod_l+0x4a4>
 800ca64:	a334      	add	r3, pc, #208	; (adr r3, 800cb38 <_strtod_l+0xbd8>)
 800ca66:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca6a:	4640      	mov	r0, r8
 800ca6c:	4649      	mov	r1, r9
 800ca6e:	f7f4 f82b 	bl	8000ac8 <__aeabi_dcmpgt>
 800ca72:	2800      	cmp	r0, #0
 800ca74:	f43f af7b 	beq.w	800c96e <_strtod_l+0xa0e>
 800ca78:	e4c4      	b.n	800c404 <_strtod_l+0x4a4>
 800ca7a:	9b04      	ldr	r3, [sp, #16]
 800ca7c:	b333      	cbz	r3, 800cacc <_strtod_l+0xb6c>
 800ca7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ca80:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800ca84:	d822      	bhi.n	800cacc <_strtod_l+0xb6c>
 800ca86:	a32e      	add	r3, pc, #184	; (adr r3, 800cb40 <_strtod_l+0xbe0>)
 800ca88:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ca8c:	4640      	mov	r0, r8
 800ca8e:	4649      	mov	r1, r9
 800ca90:	f7f4 f806 	bl	8000aa0 <__aeabi_dcmple>
 800ca94:	b1a0      	cbz	r0, 800cac0 <_strtod_l+0xb60>
 800ca96:	4649      	mov	r1, r9
 800ca98:	4640      	mov	r0, r8
 800ca9a:	f7f4 f85d 	bl	8000b58 <__aeabi_d2uiz>
 800ca9e:	2801      	cmp	r0, #1
 800caa0:	bf38      	it	cc
 800caa2:	2001      	movcc	r0, #1
 800caa4:	f7f3 fd06 	bl	80004b4 <__aeabi_ui2d>
 800caa8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800caaa:	4680      	mov	r8, r0
 800caac:	4689      	mov	r9, r1
 800caae:	bb23      	cbnz	r3, 800cafa <_strtod_l+0xb9a>
 800cab0:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800cab4:	9010      	str	r0, [sp, #64]	; 0x40
 800cab6:	9311      	str	r3, [sp, #68]	; 0x44
 800cab8:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800cabc:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800cac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cac2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800cac4:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800cac8:	1a9b      	subs	r3, r3, r2
 800caca:	9309      	str	r3, [sp, #36]	; 0x24
 800cacc:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800cad0:	eeb0 0a48 	vmov.f32	s0, s16
 800cad4:	eef0 0a68 	vmov.f32	s1, s17
 800cad8:	e9cd 0108 	strd	r0, r1, [sp, #32]
 800cadc:	f001 f914 	bl	800dd08 <__ulp>
 800cae0:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 800cae4:	ec53 2b10 	vmov	r2, r3, d0
 800cae8:	f7f3 fd5e 	bl	80005a8 <__aeabi_dmul>
 800caec:	ec53 2b18 	vmov	r2, r3, d8
 800caf0:	f7f3 fba4 	bl	800023c <__adddf3>
 800caf4:	4682      	mov	sl, r0
 800caf6:	468b      	mov	fp, r1
 800caf8:	e78d      	b.n	800ca16 <_strtod_l+0xab6>
 800cafa:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 800cafe:	e7db      	b.n	800cab8 <_strtod_l+0xb58>
 800cb00:	a311      	add	r3, pc, #68	; (adr r3, 800cb48 <_strtod_l+0xbe8>)
 800cb02:	e9d3 2300 	ldrd	r2, r3, [r3]
 800cb06:	f7f3 ffc1 	bl	8000a8c <__aeabi_dcmplt>
 800cb0a:	e7b2      	b.n	800ca72 <_strtod_l+0xb12>
 800cb0c:	2300      	movs	r3, #0
 800cb0e:	930a      	str	r3, [sp, #40]	; 0x28
 800cb10:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800cb12:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800cb14:	6013      	str	r3, [r2, #0]
 800cb16:	f7ff ba6b 	b.w	800bff0 <_strtod_l+0x90>
 800cb1a:	2a65      	cmp	r2, #101	; 0x65
 800cb1c:	f43f ab5f 	beq.w	800c1de <_strtod_l+0x27e>
 800cb20:	2a45      	cmp	r2, #69	; 0x45
 800cb22:	f43f ab5c 	beq.w	800c1de <_strtod_l+0x27e>
 800cb26:	2301      	movs	r3, #1
 800cb28:	f7ff bb94 	b.w	800c254 <_strtod_l+0x2f4>
 800cb2c:	f3af 8000 	nop.w
 800cb30:	94a03595 	.word	0x94a03595
 800cb34:	3fdfffff 	.word	0x3fdfffff
 800cb38:	35afe535 	.word	0x35afe535
 800cb3c:	3fe00000 	.word	0x3fe00000
 800cb40:	ffc00000 	.word	0xffc00000
 800cb44:	41dfffff 	.word	0x41dfffff
 800cb48:	94a03595 	.word	0x94a03595
 800cb4c:	3fcfffff 	.word	0x3fcfffff
 800cb50:	3ff00000 	.word	0x3ff00000
 800cb54:	7ff00000 	.word	0x7ff00000
 800cb58:	7fe00000 	.word	0x7fe00000
 800cb5c:	7c9fffff 	.word	0x7c9fffff
 800cb60:	3fe00000 	.word	0x3fe00000
 800cb64:	bff00000 	.word	0xbff00000
 800cb68:	7fefffff 	.word	0x7fefffff

0800cb6c <strtod>:
 800cb6c:	460a      	mov	r2, r1
 800cb6e:	4601      	mov	r1, r0
 800cb70:	4802      	ldr	r0, [pc, #8]	; (800cb7c <strtod+0x10>)
 800cb72:	4b03      	ldr	r3, [pc, #12]	; (800cb80 <strtod+0x14>)
 800cb74:	6800      	ldr	r0, [r0, #0]
 800cb76:	f7ff b9f3 	b.w	800bf60 <_strtod_l>
 800cb7a:	bf00      	nop
 800cb7c:	20000024 	.word	0x20000024
 800cb80:	2000008c 	.word	0x2000008c

0800cb84 <_strtol_l.constprop.0>:
 800cb84:	2b01      	cmp	r3, #1
 800cb86:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cb8a:	d001      	beq.n	800cb90 <_strtol_l.constprop.0+0xc>
 800cb8c:	2b24      	cmp	r3, #36	; 0x24
 800cb8e:	d906      	bls.n	800cb9e <_strtol_l.constprop.0+0x1a>
 800cb90:	f7fe fd28 	bl	800b5e4 <__errno>
 800cb94:	2316      	movs	r3, #22
 800cb96:	6003      	str	r3, [r0, #0]
 800cb98:	2000      	movs	r0, #0
 800cb9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb9e:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800cc84 <_strtol_l.constprop.0+0x100>
 800cba2:	460d      	mov	r5, r1
 800cba4:	462e      	mov	r6, r5
 800cba6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800cbaa:	f814 700c 	ldrb.w	r7, [r4, ip]
 800cbae:	f017 0708 	ands.w	r7, r7, #8
 800cbb2:	d1f7      	bne.n	800cba4 <_strtol_l.constprop.0+0x20>
 800cbb4:	2c2d      	cmp	r4, #45	; 0x2d
 800cbb6:	d132      	bne.n	800cc1e <_strtol_l.constprop.0+0x9a>
 800cbb8:	782c      	ldrb	r4, [r5, #0]
 800cbba:	2701      	movs	r7, #1
 800cbbc:	1cb5      	adds	r5, r6, #2
 800cbbe:	2b00      	cmp	r3, #0
 800cbc0:	d05b      	beq.n	800cc7a <_strtol_l.constprop.0+0xf6>
 800cbc2:	2b10      	cmp	r3, #16
 800cbc4:	d109      	bne.n	800cbda <_strtol_l.constprop.0+0x56>
 800cbc6:	2c30      	cmp	r4, #48	; 0x30
 800cbc8:	d107      	bne.n	800cbda <_strtol_l.constprop.0+0x56>
 800cbca:	782c      	ldrb	r4, [r5, #0]
 800cbcc:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800cbd0:	2c58      	cmp	r4, #88	; 0x58
 800cbd2:	d14d      	bne.n	800cc70 <_strtol_l.constprop.0+0xec>
 800cbd4:	786c      	ldrb	r4, [r5, #1]
 800cbd6:	2310      	movs	r3, #16
 800cbd8:	3502      	adds	r5, #2
 800cbda:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800cbde:	f108 38ff 	add.w	r8, r8, #4294967295
 800cbe2:	f04f 0c00 	mov.w	ip, #0
 800cbe6:	fbb8 f9f3 	udiv	r9, r8, r3
 800cbea:	4666      	mov	r6, ip
 800cbec:	fb03 8a19 	mls	sl, r3, r9, r8
 800cbf0:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 800cbf4:	f1be 0f09 	cmp.w	lr, #9
 800cbf8:	d816      	bhi.n	800cc28 <_strtol_l.constprop.0+0xa4>
 800cbfa:	4674      	mov	r4, lr
 800cbfc:	42a3      	cmp	r3, r4
 800cbfe:	dd24      	ble.n	800cc4a <_strtol_l.constprop.0+0xc6>
 800cc00:	f1bc 0f00 	cmp.w	ip, #0
 800cc04:	db1e      	blt.n	800cc44 <_strtol_l.constprop.0+0xc0>
 800cc06:	45b1      	cmp	r9, r6
 800cc08:	d31c      	bcc.n	800cc44 <_strtol_l.constprop.0+0xc0>
 800cc0a:	d101      	bne.n	800cc10 <_strtol_l.constprop.0+0x8c>
 800cc0c:	45a2      	cmp	sl, r4
 800cc0e:	db19      	blt.n	800cc44 <_strtol_l.constprop.0+0xc0>
 800cc10:	fb06 4603 	mla	r6, r6, r3, r4
 800cc14:	f04f 0c01 	mov.w	ip, #1
 800cc18:	f815 4b01 	ldrb.w	r4, [r5], #1
 800cc1c:	e7e8      	b.n	800cbf0 <_strtol_l.constprop.0+0x6c>
 800cc1e:	2c2b      	cmp	r4, #43	; 0x2b
 800cc20:	bf04      	itt	eq
 800cc22:	782c      	ldrbeq	r4, [r5, #0]
 800cc24:	1cb5      	addeq	r5, r6, #2
 800cc26:	e7ca      	b.n	800cbbe <_strtol_l.constprop.0+0x3a>
 800cc28:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 800cc2c:	f1be 0f19 	cmp.w	lr, #25
 800cc30:	d801      	bhi.n	800cc36 <_strtol_l.constprop.0+0xb2>
 800cc32:	3c37      	subs	r4, #55	; 0x37
 800cc34:	e7e2      	b.n	800cbfc <_strtol_l.constprop.0+0x78>
 800cc36:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 800cc3a:	f1be 0f19 	cmp.w	lr, #25
 800cc3e:	d804      	bhi.n	800cc4a <_strtol_l.constprop.0+0xc6>
 800cc40:	3c57      	subs	r4, #87	; 0x57
 800cc42:	e7db      	b.n	800cbfc <_strtol_l.constprop.0+0x78>
 800cc44:	f04f 3cff 	mov.w	ip, #4294967295
 800cc48:	e7e6      	b.n	800cc18 <_strtol_l.constprop.0+0x94>
 800cc4a:	f1bc 0f00 	cmp.w	ip, #0
 800cc4e:	da05      	bge.n	800cc5c <_strtol_l.constprop.0+0xd8>
 800cc50:	2322      	movs	r3, #34	; 0x22
 800cc52:	6003      	str	r3, [r0, #0]
 800cc54:	4646      	mov	r6, r8
 800cc56:	b942      	cbnz	r2, 800cc6a <_strtol_l.constprop.0+0xe6>
 800cc58:	4630      	mov	r0, r6
 800cc5a:	e79e      	b.n	800cb9a <_strtol_l.constprop.0+0x16>
 800cc5c:	b107      	cbz	r7, 800cc60 <_strtol_l.constprop.0+0xdc>
 800cc5e:	4276      	negs	r6, r6
 800cc60:	2a00      	cmp	r2, #0
 800cc62:	d0f9      	beq.n	800cc58 <_strtol_l.constprop.0+0xd4>
 800cc64:	f1bc 0f00 	cmp.w	ip, #0
 800cc68:	d000      	beq.n	800cc6c <_strtol_l.constprop.0+0xe8>
 800cc6a:	1e69      	subs	r1, r5, #1
 800cc6c:	6011      	str	r1, [r2, #0]
 800cc6e:	e7f3      	b.n	800cc58 <_strtol_l.constprop.0+0xd4>
 800cc70:	2430      	movs	r4, #48	; 0x30
 800cc72:	2b00      	cmp	r3, #0
 800cc74:	d1b1      	bne.n	800cbda <_strtol_l.constprop.0+0x56>
 800cc76:	2308      	movs	r3, #8
 800cc78:	e7af      	b.n	800cbda <_strtol_l.constprop.0+0x56>
 800cc7a:	2c30      	cmp	r4, #48	; 0x30
 800cc7c:	d0a5      	beq.n	800cbca <_strtol_l.constprop.0+0x46>
 800cc7e:	230a      	movs	r3, #10
 800cc80:	e7ab      	b.n	800cbda <_strtol_l.constprop.0+0x56>
 800cc82:	bf00      	nop
 800cc84:	0800f665 	.word	0x0800f665

0800cc88 <strtol>:
 800cc88:	4613      	mov	r3, r2
 800cc8a:	460a      	mov	r2, r1
 800cc8c:	4601      	mov	r1, r0
 800cc8e:	4802      	ldr	r0, [pc, #8]	; (800cc98 <strtol+0x10>)
 800cc90:	6800      	ldr	r0, [r0, #0]
 800cc92:	f7ff bf77 	b.w	800cb84 <_strtol_l.constprop.0>
 800cc96:	bf00      	nop
 800cc98:	20000024 	.word	0x20000024

0800cc9c <_vsiprintf_r>:
 800cc9c:	b500      	push	{lr}
 800cc9e:	b09b      	sub	sp, #108	; 0x6c
 800cca0:	9100      	str	r1, [sp, #0]
 800cca2:	9104      	str	r1, [sp, #16]
 800cca4:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800cca8:	9105      	str	r1, [sp, #20]
 800ccaa:	9102      	str	r1, [sp, #8]
 800ccac:	4905      	ldr	r1, [pc, #20]	; (800ccc4 <_vsiprintf_r+0x28>)
 800ccae:	9103      	str	r1, [sp, #12]
 800ccb0:	4669      	mov	r1, sp
 800ccb2:	f001 fa19 	bl	800e0e8 <_svfiprintf_r>
 800ccb6:	9b00      	ldr	r3, [sp, #0]
 800ccb8:	2200      	movs	r2, #0
 800ccba:	701a      	strb	r2, [r3, #0]
 800ccbc:	b01b      	add	sp, #108	; 0x6c
 800ccbe:	f85d fb04 	ldr.w	pc, [sp], #4
 800ccc2:	bf00      	nop
 800ccc4:	ffff0208 	.word	0xffff0208

0800ccc8 <vsiprintf>:
 800ccc8:	4613      	mov	r3, r2
 800ccca:	460a      	mov	r2, r1
 800cccc:	4601      	mov	r1, r0
 800ccce:	4802      	ldr	r0, [pc, #8]	; (800ccd8 <vsiprintf+0x10>)
 800ccd0:	6800      	ldr	r0, [r0, #0]
 800ccd2:	f7ff bfe3 	b.w	800cc9c <_vsiprintf_r>
 800ccd6:	bf00      	nop
 800ccd8:	20000024 	.word	0x20000024

0800ccdc <__swbuf_r>:
 800ccdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ccde:	460e      	mov	r6, r1
 800cce0:	4614      	mov	r4, r2
 800cce2:	4605      	mov	r5, r0
 800cce4:	b118      	cbz	r0, 800ccee <__swbuf_r+0x12>
 800cce6:	6983      	ldr	r3, [r0, #24]
 800cce8:	b90b      	cbnz	r3, 800ccee <__swbuf_r+0x12>
 800ccea:	f7fe fd9b 	bl	800b824 <__sinit>
 800ccee:	4b21      	ldr	r3, [pc, #132]	; (800cd74 <__swbuf_r+0x98>)
 800ccf0:	429c      	cmp	r4, r3
 800ccf2:	d12b      	bne.n	800cd4c <__swbuf_r+0x70>
 800ccf4:	686c      	ldr	r4, [r5, #4]
 800ccf6:	69a3      	ldr	r3, [r4, #24]
 800ccf8:	60a3      	str	r3, [r4, #8]
 800ccfa:	89a3      	ldrh	r3, [r4, #12]
 800ccfc:	071a      	lsls	r2, r3, #28
 800ccfe:	d52f      	bpl.n	800cd60 <__swbuf_r+0x84>
 800cd00:	6923      	ldr	r3, [r4, #16]
 800cd02:	b36b      	cbz	r3, 800cd60 <__swbuf_r+0x84>
 800cd04:	6923      	ldr	r3, [r4, #16]
 800cd06:	6820      	ldr	r0, [r4, #0]
 800cd08:	1ac0      	subs	r0, r0, r3
 800cd0a:	6963      	ldr	r3, [r4, #20]
 800cd0c:	b2f6      	uxtb	r6, r6
 800cd0e:	4283      	cmp	r3, r0
 800cd10:	4637      	mov	r7, r6
 800cd12:	dc04      	bgt.n	800cd1e <__swbuf_r+0x42>
 800cd14:	4621      	mov	r1, r4
 800cd16:	4628      	mov	r0, r5
 800cd18:	f7fe fcf0 	bl	800b6fc <_fflush_r>
 800cd1c:	bb30      	cbnz	r0, 800cd6c <__swbuf_r+0x90>
 800cd1e:	68a3      	ldr	r3, [r4, #8]
 800cd20:	3b01      	subs	r3, #1
 800cd22:	60a3      	str	r3, [r4, #8]
 800cd24:	6823      	ldr	r3, [r4, #0]
 800cd26:	1c5a      	adds	r2, r3, #1
 800cd28:	6022      	str	r2, [r4, #0]
 800cd2a:	701e      	strb	r6, [r3, #0]
 800cd2c:	6963      	ldr	r3, [r4, #20]
 800cd2e:	3001      	adds	r0, #1
 800cd30:	4283      	cmp	r3, r0
 800cd32:	d004      	beq.n	800cd3e <__swbuf_r+0x62>
 800cd34:	89a3      	ldrh	r3, [r4, #12]
 800cd36:	07db      	lsls	r3, r3, #31
 800cd38:	d506      	bpl.n	800cd48 <__swbuf_r+0x6c>
 800cd3a:	2e0a      	cmp	r6, #10
 800cd3c:	d104      	bne.n	800cd48 <__swbuf_r+0x6c>
 800cd3e:	4621      	mov	r1, r4
 800cd40:	4628      	mov	r0, r5
 800cd42:	f7fe fcdb 	bl	800b6fc <_fflush_r>
 800cd46:	b988      	cbnz	r0, 800cd6c <__swbuf_r+0x90>
 800cd48:	4638      	mov	r0, r7
 800cd4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cd4c:	4b0a      	ldr	r3, [pc, #40]	; (800cd78 <__swbuf_r+0x9c>)
 800cd4e:	429c      	cmp	r4, r3
 800cd50:	d101      	bne.n	800cd56 <__swbuf_r+0x7a>
 800cd52:	68ac      	ldr	r4, [r5, #8]
 800cd54:	e7cf      	b.n	800ccf6 <__swbuf_r+0x1a>
 800cd56:	4b09      	ldr	r3, [pc, #36]	; (800cd7c <__swbuf_r+0xa0>)
 800cd58:	429c      	cmp	r4, r3
 800cd5a:	bf08      	it	eq
 800cd5c:	68ec      	ldreq	r4, [r5, #12]
 800cd5e:	e7ca      	b.n	800ccf6 <__swbuf_r+0x1a>
 800cd60:	4621      	mov	r1, r4
 800cd62:	4628      	mov	r0, r5
 800cd64:	f000 f81e 	bl	800cda4 <__swsetup_r>
 800cd68:	2800      	cmp	r0, #0
 800cd6a:	d0cb      	beq.n	800cd04 <__swbuf_r+0x28>
 800cd6c:	f04f 37ff 	mov.w	r7, #4294967295
 800cd70:	e7ea      	b.n	800cd48 <__swbuf_r+0x6c>
 800cd72:	bf00      	nop
 800cd74:	0800f788 	.word	0x0800f788
 800cd78:	0800f7a8 	.word	0x0800f7a8
 800cd7c:	0800f768 	.word	0x0800f768

0800cd80 <_write_r>:
 800cd80:	b538      	push	{r3, r4, r5, lr}
 800cd82:	4d07      	ldr	r5, [pc, #28]	; (800cda0 <_write_r+0x20>)
 800cd84:	4604      	mov	r4, r0
 800cd86:	4608      	mov	r0, r1
 800cd88:	4611      	mov	r1, r2
 800cd8a:	2200      	movs	r2, #0
 800cd8c:	602a      	str	r2, [r5, #0]
 800cd8e:	461a      	mov	r2, r3
 800cd90:	f7f4 febe 	bl	8001b10 <_write>
 800cd94:	1c43      	adds	r3, r0, #1
 800cd96:	d102      	bne.n	800cd9e <_write_r+0x1e>
 800cd98:	682b      	ldr	r3, [r5, #0]
 800cd9a:	b103      	cbz	r3, 800cd9e <_write_r+0x1e>
 800cd9c:	6023      	str	r3, [r4, #0]
 800cd9e:	bd38      	pop	{r3, r4, r5, pc}
 800cda0:	20001764 	.word	0x20001764

0800cda4 <__swsetup_r>:
 800cda4:	4b32      	ldr	r3, [pc, #200]	; (800ce70 <__swsetup_r+0xcc>)
 800cda6:	b570      	push	{r4, r5, r6, lr}
 800cda8:	681d      	ldr	r5, [r3, #0]
 800cdaa:	4606      	mov	r6, r0
 800cdac:	460c      	mov	r4, r1
 800cdae:	b125      	cbz	r5, 800cdba <__swsetup_r+0x16>
 800cdb0:	69ab      	ldr	r3, [r5, #24]
 800cdb2:	b913      	cbnz	r3, 800cdba <__swsetup_r+0x16>
 800cdb4:	4628      	mov	r0, r5
 800cdb6:	f7fe fd35 	bl	800b824 <__sinit>
 800cdba:	4b2e      	ldr	r3, [pc, #184]	; (800ce74 <__swsetup_r+0xd0>)
 800cdbc:	429c      	cmp	r4, r3
 800cdbe:	d10f      	bne.n	800cde0 <__swsetup_r+0x3c>
 800cdc0:	686c      	ldr	r4, [r5, #4]
 800cdc2:	89a3      	ldrh	r3, [r4, #12]
 800cdc4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cdc8:	0719      	lsls	r1, r3, #28
 800cdca:	d42c      	bmi.n	800ce26 <__swsetup_r+0x82>
 800cdcc:	06dd      	lsls	r5, r3, #27
 800cdce:	d411      	bmi.n	800cdf4 <__swsetup_r+0x50>
 800cdd0:	2309      	movs	r3, #9
 800cdd2:	6033      	str	r3, [r6, #0]
 800cdd4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800cdd8:	81a3      	strh	r3, [r4, #12]
 800cdda:	f04f 30ff 	mov.w	r0, #4294967295
 800cdde:	e03e      	b.n	800ce5e <__swsetup_r+0xba>
 800cde0:	4b25      	ldr	r3, [pc, #148]	; (800ce78 <__swsetup_r+0xd4>)
 800cde2:	429c      	cmp	r4, r3
 800cde4:	d101      	bne.n	800cdea <__swsetup_r+0x46>
 800cde6:	68ac      	ldr	r4, [r5, #8]
 800cde8:	e7eb      	b.n	800cdc2 <__swsetup_r+0x1e>
 800cdea:	4b24      	ldr	r3, [pc, #144]	; (800ce7c <__swsetup_r+0xd8>)
 800cdec:	429c      	cmp	r4, r3
 800cdee:	bf08      	it	eq
 800cdf0:	68ec      	ldreq	r4, [r5, #12]
 800cdf2:	e7e6      	b.n	800cdc2 <__swsetup_r+0x1e>
 800cdf4:	0758      	lsls	r0, r3, #29
 800cdf6:	d512      	bpl.n	800ce1e <__swsetup_r+0x7a>
 800cdf8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cdfa:	b141      	cbz	r1, 800ce0e <__swsetup_r+0x6a>
 800cdfc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800ce00:	4299      	cmp	r1, r3
 800ce02:	d002      	beq.n	800ce0a <__swsetup_r+0x66>
 800ce04:	4630      	mov	r0, r6
 800ce06:	f7fe fe77 	bl	800baf8 <_free_r>
 800ce0a:	2300      	movs	r3, #0
 800ce0c:	6363      	str	r3, [r4, #52]	; 0x34
 800ce0e:	89a3      	ldrh	r3, [r4, #12]
 800ce10:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800ce14:	81a3      	strh	r3, [r4, #12]
 800ce16:	2300      	movs	r3, #0
 800ce18:	6063      	str	r3, [r4, #4]
 800ce1a:	6923      	ldr	r3, [r4, #16]
 800ce1c:	6023      	str	r3, [r4, #0]
 800ce1e:	89a3      	ldrh	r3, [r4, #12]
 800ce20:	f043 0308 	orr.w	r3, r3, #8
 800ce24:	81a3      	strh	r3, [r4, #12]
 800ce26:	6923      	ldr	r3, [r4, #16]
 800ce28:	b94b      	cbnz	r3, 800ce3e <__swsetup_r+0x9a>
 800ce2a:	89a3      	ldrh	r3, [r4, #12]
 800ce2c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800ce30:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ce34:	d003      	beq.n	800ce3e <__swsetup_r+0x9a>
 800ce36:	4621      	mov	r1, r4
 800ce38:	4630      	mov	r0, r6
 800ce3a:	f7fe fddd 	bl	800b9f8 <__smakebuf_r>
 800ce3e:	89a0      	ldrh	r0, [r4, #12]
 800ce40:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800ce44:	f010 0301 	ands.w	r3, r0, #1
 800ce48:	d00a      	beq.n	800ce60 <__swsetup_r+0xbc>
 800ce4a:	2300      	movs	r3, #0
 800ce4c:	60a3      	str	r3, [r4, #8]
 800ce4e:	6963      	ldr	r3, [r4, #20]
 800ce50:	425b      	negs	r3, r3
 800ce52:	61a3      	str	r3, [r4, #24]
 800ce54:	6923      	ldr	r3, [r4, #16]
 800ce56:	b943      	cbnz	r3, 800ce6a <__swsetup_r+0xc6>
 800ce58:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800ce5c:	d1ba      	bne.n	800cdd4 <__swsetup_r+0x30>
 800ce5e:	bd70      	pop	{r4, r5, r6, pc}
 800ce60:	0781      	lsls	r1, r0, #30
 800ce62:	bf58      	it	pl
 800ce64:	6963      	ldrpl	r3, [r4, #20]
 800ce66:	60a3      	str	r3, [r4, #8]
 800ce68:	e7f4      	b.n	800ce54 <__swsetup_r+0xb0>
 800ce6a:	2000      	movs	r0, #0
 800ce6c:	e7f7      	b.n	800ce5e <__swsetup_r+0xba>
 800ce6e:	bf00      	nop
 800ce70:	20000024 	.word	0x20000024
 800ce74:	0800f788 	.word	0x0800f788
 800ce78:	0800f7a8 	.word	0x0800f7a8
 800ce7c:	0800f768 	.word	0x0800f768

0800ce80 <_close_r>:
 800ce80:	b538      	push	{r3, r4, r5, lr}
 800ce82:	4d06      	ldr	r5, [pc, #24]	; (800ce9c <_close_r+0x1c>)
 800ce84:	2300      	movs	r3, #0
 800ce86:	4604      	mov	r4, r0
 800ce88:	4608      	mov	r0, r1
 800ce8a:	602b      	str	r3, [r5, #0]
 800ce8c:	f7f8 f817 	bl	8004ebe <_close>
 800ce90:	1c43      	adds	r3, r0, #1
 800ce92:	d102      	bne.n	800ce9a <_close_r+0x1a>
 800ce94:	682b      	ldr	r3, [r5, #0]
 800ce96:	b103      	cbz	r3, 800ce9a <_close_r+0x1a>
 800ce98:	6023      	str	r3, [r4, #0]
 800ce9a:	bd38      	pop	{r3, r4, r5, pc}
 800ce9c:	20001764 	.word	0x20001764

0800cea0 <_fstat_r>:
 800cea0:	b538      	push	{r3, r4, r5, lr}
 800cea2:	4d07      	ldr	r5, [pc, #28]	; (800cec0 <_fstat_r+0x20>)
 800cea4:	2300      	movs	r3, #0
 800cea6:	4604      	mov	r4, r0
 800cea8:	4608      	mov	r0, r1
 800ceaa:	4611      	mov	r1, r2
 800ceac:	602b      	str	r3, [r5, #0]
 800ceae:	f7f8 f812 	bl	8004ed6 <_fstat>
 800ceb2:	1c43      	adds	r3, r0, #1
 800ceb4:	d102      	bne.n	800cebc <_fstat_r+0x1c>
 800ceb6:	682b      	ldr	r3, [r5, #0]
 800ceb8:	b103      	cbz	r3, 800cebc <_fstat_r+0x1c>
 800ceba:	6023      	str	r3, [r4, #0]
 800cebc:	bd38      	pop	{r3, r4, r5, pc}
 800cebe:	bf00      	nop
 800cec0:	20001764 	.word	0x20001764

0800cec4 <rshift>:
 800cec4:	6903      	ldr	r3, [r0, #16]
 800cec6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800ceca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cece:	ea4f 1261 	mov.w	r2, r1, asr #5
 800ced2:	f100 0414 	add.w	r4, r0, #20
 800ced6:	dd45      	ble.n	800cf64 <rshift+0xa0>
 800ced8:	f011 011f 	ands.w	r1, r1, #31
 800cedc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800cee0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800cee4:	d10c      	bne.n	800cf00 <rshift+0x3c>
 800cee6:	f100 0710 	add.w	r7, r0, #16
 800ceea:	4629      	mov	r1, r5
 800ceec:	42b1      	cmp	r1, r6
 800ceee:	d334      	bcc.n	800cf5a <rshift+0x96>
 800cef0:	1a9b      	subs	r3, r3, r2
 800cef2:	009b      	lsls	r3, r3, #2
 800cef4:	1eea      	subs	r2, r5, #3
 800cef6:	4296      	cmp	r6, r2
 800cef8:	bf38      	it	cc
 800cefa:	2300      	movcc	r3, #0
 800cefc:	4423      	add	r3, r4
 800cefe:	e015      	b.n	800cf2c <rshift+0x68>
 800cf00:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800cf04:	f1c1 0820 	rsb	r8, r1, #32
 800cf08:	40cf      	lsrs	r7, r1
 800cf0a:	f105 0e04 	add.w	lr, r5, #4
 800cf0e:	46a1      	mov	r9, r4
 800cf10:	4576      	cmp	r6, lr
 800cf12:	46f4      	mov	ip, lr
 800cf14:	d815      	bhi.n	800cf42 <rshift+0x7e>
 800cf16:	1a9a      	subs	r2, r3, r2
 800cf18:	0092      	lsls	r2, r2, #2
 800cf1a:	3a04      	subs	r2, #4
 800cf1c:	3501      	adds	r5, #1
 800cf1e:	42ae      	cmp	r6, r5
 800cf20:	bf38      	it	cc
 800cf22:	2200      	movcc	r2, #0
 800cf24:	18a3      	adds	r3, r4, r2
 800cf26:	50a7      	str	r7, [r4, r2]
 800cf28:	b107      	cbz	r7, 800cf2c <rshift+0x68>
 800cf2a:	3304      	adds	r3, #4
 800cf2c:	1b1a      	subs	r2, r3, r4
 800cf2e:	42a3      	cmp	r3, r4
 800cf30:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800cf34:	bf08      	it	eq
 800cf36:	2300      	moveq	r3, #0
 800cf38:	6102      	str	r2, [r0, #16]
 800cf3a:	bf08      	it	eq
 800cf3c:	6143      	streq	r3, [r0, #20]
 800cf3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cf42:	f8dc c000 	ldr.w	ip, [ip]
 800cf46:	fa0c fc08 	lsl.w	ip, ip, r8
 800cf4a:	ea4c 0707 	orr.w	r7, ip, r7
 800cf4e:	f849 7b04 	str.w	r7, [r9], #4
 800cf52:	f85e 7b04 	ldr.w	r7, [lr], #4
 800cf56:	40cf      	lsrs	r7, r1
 800cf58:	e7da      	b.n	800cf10 <rshift+0x4c>
 800cf5a:	f851 cb04 	ldr.w	ip, [r1], #4
 800cf5e:	f847 cf04 	str.w	ip, [r7, #4]!
 800cf62:	e7c3      	b.n	800ceec <rshift+0x28>
 800cf64:	4623      	mov	r3, r4
 800cf66:	e7e1      	b.n	800cf2c <rshift+0x68>

0800cf68 <__hexdig_fun>:
 800cf68:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800cf6c:	2b09      	cmp	r3, #9
 800cf6e:	d802      	bhi.n	800cf76 <__hexdig_fun+0xe>
 800cf70:	3820      	subs	r0, #32
 800cf72:	b2c0      	uxtb	r0, r0
 800cf74:	4770      	bx	lr
 800cf76:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800cf7a:	2b05      	cmp	r3, #5
 800cf7c:	d801      	bhi.n	800cf82 <__hexdig_fun+0x1a>
 800cf7e:	3847      	subs	r0, #71	; 0x47
 800cf80:	e7f7      	b.n	800cf72 <__hexdig_fun+0xa>
 800cf82:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800cf86:	2b05      	cmp	r3, #5
 800cf88:	d801      	bhi.n	800cf8e <__hexdig_fun+0x26>
 800cf8a:	3827      	subs	r0, #39	; 0x27
 800cf8c:	e7f1      	b.n	800cf72 <__hexdig_fun+0xa>
 800cf8e:	2000      	movs	r0, #0
 800cf90:	4770      	bx	lr
	...

0800cf94 <__gethex>:
 800cf94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf98:	ed2d 8b02 	vpush	{d8}
 800cf9c:	b089      	sub	sp, #36	; 0x24
 800cf9e:	ee08 0a10 	vmov	s16, r0
 800cfa2:	9304      	str	r3, [sp, #16]
 800cfa4:	4bb4      	ldr	r3, [pc, #720]	; (800d278 <__gethex+0x2e4>)
 800cfa6:	681b      	ldr	r3, [r3, #0]
 800cfa8:	9301      	str	r3, [sp, #4]
 800cfaa:	4618      	mov	r0, r3
 800cfac:	468b      	mov	fp, r1
 800cfae:	4690      	mov	r8, r2
 800cfb0:	f7f3 f8e6 	bl	8000180 <strlen>
 800cfb4:	9b01      	ldr	r3, [sp, #4]
 800cfb6:	f8db 2000 	ldr.w	r2, [fp]
 800cfba:	4403      	add	r3, r0
 800cfbc:	4682      	mov	sl, r0
 800cfbe:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 800cfc2:	9305      	str	r3, [sp, #20]
 800cfc4:	1c93      	adds	r3, r2, #2
 800cfc6:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800cfca:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800cfce:	32fe      	adds	r2, #254	; 0xfe
 800cfd0:	18d1      	adds	r1, r2, r3
 800cfd2:	461f      	mov	r7, r3
 800cfd4:	f813 0b01 	ldrb.w	r0, [r3], #1
 800cfd8:	9100      	str	r1, [sp, #0]
 800cfda:	2830      	cmp	r0, #48	; 0x30
 800cfdc:	d0f8      	beq.n	800cfd0 <__gethex+0x3c>
 800cfde:	f7ff ffc3 	bl	800cf68 <__hexdig_fun>
 800cfe2:	4604      	mov	r4, r0
 800cfe4:	2800      	cmp	r0, #0
 800cfe6:	d13a      	bne.n	800d05e <__gethex+0xca>
 800cfe8:	9901      	ldr	r1, [sp, #4]
 800cfea:	4652      	mov	r2, sl
 800cfec:	4638      	mov	r0, r7
 800cfee:	f7fe ff71 	bl	800bed4 <strncmp>
 800cff2:	4605      	mov	r5, r0
 800cff4:	2800      	cmp	r0, #0
 800cff6:	d168      	bne.n	800d0ca <__gethex+0x136>
 800cff8:	f817 000a 	ldrb.w	r0, [r7, sl]
 800cffc:	eb07 060a 	add.w	r6, r7, sl
 800d000:	f7ff ffb2 	bl	800cf68 <__hexdig_fun>
 800d004:	2800      	cmp	r0, #0
 800d006:	d062      	beq.n	800d0ce <__gethex+0x13a>
 800d008:	4633      	mov	r3, r6
 800d00a:	7818      	ldrb	r0, [r3, #0]
 800d00c:	2830      	cmp	r0, #48	; 0x30
 800d00e:	461f      	mov	r7, r3
 800d010:	f103 0301 	add.w	r3, r3, #1
 800d014:	d0f9      	beq.n	800d00a <__gethex+0x76>
 800d016:	f7ff ffa7 	bl	800cf68 <__hexdig_fun>
 800d01a:	2301      	movs	r3, #1
 800d01c:	fab0 f480 	clz	r4, r0
 800d020:	0964      	lsrs	r4, r4, #5
 800d022:	4635      	mov	r5, r6
 800d024:	9300      	str	r3, [sp, #0]
 800d026:	463a      	mov	r2, r7
 800d028:	4616      	mov	r6, r2
 800d02a:	3201      	adds	r2, #1
 800d02c:	7830      	ldrb	r0, [r6, #0]
 800d02e:	f7ff ff9b 	bl	800cf68 <__hexdig_fun>
 800d032:	2800      	cmp	r0, #0
 800d034:	d1f8      	bne.n	800d028 <__gethex+0x94>
 800d036:	9901      	ldr	r1, [sp, #4]
 800d038:	4652      	mov	r2, sl
 800d03a:	4630      	mov	r0, r6
 800d03c:	f7fe ff4a 	bl	800bed4 <strncmp>
 800d040:	b980      	cbnz	r0, 800d064 <__gethex+0xd0>
 800d042:	b94d      	cbnz	r5, 800d058 <__gethex+0xc4>
 800d044:	eb06 050a 	add.w	r5, r6, sl
 800d048:	462a      	mov	r2, r5
 800d04a:	4616      	mov	r6, r2
 800d04c:	3201      	adds	r2, #1
 800d04e:	7830      	ldrb	r0, [r6, #0]
 800d050:	f7ff ff8a 	bl	800cf68 <__hexdig_fun>
 800d054:	2800      	cmp	r0, #0
 800d056:	d1f8      	bne.n	800d04a <__gethex+0xb6>
 800d058:	1bad      	subs	r5, r5, r6
 800d05a:	00ad      	lsls	r5, r5, #2
 800d05c:	e004      	b.n	800d068 <__gethex+0xd4>
 800d05e:	2400      	movs	r4, #0
 800d060:	4625      	mov	r5, r4
 800d062:	e7e0      	b.n	800d026 <__gethex+0x92>
 800d064:	2d00      	cmp	r5, #0
 800d066:	d1f7      	bne.n	800d058 <__gethex+0xc4>
 800d068:	7833      	ldrb	r3, [r6, #0]
 800d06a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800d06e:	2b50      	cmp	r3, #80	; 0x50
 800d070:	d13b      	bne.n	800d0ea <__gethex+0x156>
 800d072:	7873      	ldrb	r3, [r6, #1]
 800d074:	2b2b      	cmp	r3, #43	; 0x2b
 800d076:	d02c      	beq.n	800d0d2 <__gethex+0x13e>
 800d078:	2b2d      	cmp	r3, #45	; 0x2d
 800d07a:	d02e      	beq.n	800d0da <__gethex+0x146>
 800d07c:	1c71      	adds	r1, r6, #1
 800d07e:	f04f 0900 	mov.w	r9, #0
 800d082:	7808      	ldrb	r0, [r1, #0]
 800d084:	f7ff ff70 	bl	800cf68 <__hexdig_fun>
 800d088:	1e43      	subs	r3, r0, #1
 800d08a:	b2db      	uxtb	r3, r3
 800d08c:	2b18      	cmp	r3, #24
 800d08e:	d82c      	bhi.n	800d0ea <__gethex+0x156>
 800d090:	f1a0 0210 	sub.w	r2, r0, #16
 800d094:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800d098:	f7ff ff66 	bl	800cf68 <__hexdig_fun>
 800d09c:	1e43      	subs	r3, r0, #1
 800d09e:	b2db      	uxtb	r3, r3
 800d0a0:	2b18      	cmp	r3, #24
 800d0a2:	d91d      	bls.n	800d0e0 <__gethex+0x14c>
 800d0a4:	f1b9 0f00 	cmp.w	r9, #0
 800d0a8:	d000      	beq.n	800d0ac <__gethex+0x118>
 800d0aa:	4252      	negs	r2, r2
 800d0ac:	4415      	add	r5, r2
 800d0ae:	f8cb 1000 	str.w	r1, [fp]
 800d0b2:	b1e4      	cbz	r4, 800d0ee <__gethex+0x15a>
 800d0b4:	9b00      	ldr	r3, [sp, #0]
 800d0b6:	2b00      	cmp	r3, #0
 800d0b8:	bf14      	ite	ne
 800d0ba:	2700      	movne	r7, #0
 800d0bc:	2706      	moveq	r7, #6
 800d0be:	4638      	mov	r0, r7
 800d0c0:	b009      	add	sp, #36	; 0x24
 800d0c2:	ecbd 8b02 	vpop	{d8}
 800d0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0ca:	463e      	mov	r6, r7
 800d0cc:	4625      	mov	r5, r4
 800d0ce:	2401      	movs	r4, #1
 800d0d0:	e7ca      	b.n	800d068 <__gethex+0xd4>
 800d0d2:	f04f 0900 	mov.w	r9, #0
 800d0d6:	1cb1      	adds	r1, r6, #2
 800d0d8:	e7d3      	b.n	800d082 <__gethex+0xee>
 800d0da:	f04f 0901 	mov.w	r9, #1
 800d0de:	e7fa      	b.n	800d0d6 <__gethex+0x142>
 800d0e0:	230a      	movs	r3, #10
 800d0e2:	fb03 0202 	mla	r2, r3, r2, r0
 800d0e6:	3a10      	subs	r2, #16
 800d0e8:	e7d4      	b.n	800d094 <__gethex+0x100>
 800d0ea:	4631      	mov	r1, r6
 800d0ec:	e7df      	b.n	800d0ae <__gethex+0x11a>
 800d0ee:	1bf3      	subs	r3, r6, r7
 800d0f0:	3b01      	subs	r3, #1
 800d0f2:	4621      	mov	r1, r4
 800d0f4:	2b07      	cmp	r3, #7
 800d0f6:	dc0b      	bgt.n	800d110 <__gethex+0x17c>
 800d0f8:	ee18 0a10 	vmov	r0, s16
 800d0fc:	f000 fa92 	bl	800d624 <_Balloc>
 800d100:	4604      	mov	r4, r0
 800d102:	b940      	cbnz	r0, 800d116 <__gethex+0x182>
 800d104:	4b5d      	ldr	r3, [pc, #372]	; (800d27c <__gethex+0x2e8>)
 800d106:	4602      	mov	r2, r0
 800d108:	21de      	movs	r1, #222	; 0xde
 800d10a:	485d      	ldr	r0, [pc, #372]	; (800d280 <__gethex+0x2ec>)
 800d10c:	f001 fc02 	bl	800e914 <__assert_func>
 800d110:	3101      	adds	r1, #1
 800d112:	105b      	asrs	r3, r3, #1
 800d114:	e7ee      	b.n	800d0f4 <__gethex+0x160>
 800d116:	f100 0914 	add.w	r9, r0, #20
 800d11a:	f04f 0b00 	mov.w	fp, #0
 800d11e:	f1ca 0301 	rsb	r3, sl, #1
 800d122:	f8cd 9008 	str.w	r9, [sp, #8]
 800d126:	f8cd b000 	str.w	fp, [sp]
 800d12a:	9306      	str	r3, [sp, #24]
 800d12c:	42b7      	cmp	r7, r6
 800d12e:	d340      	bcc.n	800d1b2 <__gethex+0x21e>
 800d130:	9802      	ldr	r0, [sp, #8]
 800d132:	9b00      	ldr	r3, [sp, #0]
 800d134:	f840 3b04 	str.w	r3, [r0], #4
 800d138:	eba0 0009 	sub.w	r0, r0, r9
 800d13c:	1080      	asrs	r0, r0, #2
 800d13e:	0146      	lsls	r6, r0, #5
 800d140:	6120      	str	r0, [r4, #16]
 800d142:	4618      	mov	r0, r3
 800d144:	f000 fb60 	bl	800d808 <__hi0bits>
 800d148:	1a30      	subs	r0, r6, r0
 800d14a:	f8d8 6000 	ldr.w	r6, [r8]
 800d14e:	42b0      	cmp	r0, r6
 800d150:	dd63      	ble.n	800d21a <__gethex+0x286>
 800d152:	1b87      	subs	r7, r0, r6
 800d154:	4639      	mov	r1, r7
 800d156:	4620      	mov	r0, r4
 800d158:	f000 ff04 	bl	800df64 <__any_on>
 800d15c:	4682      	mov	sl, r0
 800d15e:	b1a8      	cbz	r0, 800d18c <__gethex+0x1f8>
 800d160:	1e7b      	subs	r3, r7, #1
 800d162:	1159      	asrs	r1, r3, #5
 800d164:	f003 021f 	and.w	r2, r3, #31
 800d168:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 800d16c:	f04f 0a01 	mov.w	sl, #1
 800d170:	fa0a f202 	lsl.w	r2, sl, r2
 800d174:	420a      	tst	r2, r1
 800d176:	d009      	beq.n	800d18c <__gethex+0x1f8>
 800d178:	4553      	cmp	r3, sl
 800d17a:	dd05      	ble.n	800d188 <__gethex+0x1f4>
 800d17c:	1eb9      	subs	r1, r7, #2
 800d17e:	4620      	mov	r0, r4
 800d180:	f000 fef0 	bl	800df64 <__any_on>
 800d184:	2800      	cmp	r0, #0
 800d186:	d145      	bne.n	800d214 <__gethex+0x280>
 800d188:	f04f 0a02 	mov.w	sl, #2
 800d18c:	4639      	mov	r1, r7
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff fe98 	bl	800cec4 <rshift>
 800d194:	443d      	add	r5, r7
 800d196:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d19a:	42ab      	cmp	r3, r5
 800d19c:	da4c      	bge.n	800d238 <__gethex+0x2a4>
 800d19e:	ee18 0a10 	vmov	r0, s16
 800d1a2:	4621      	mov	r1, r4
 800d1a4:	f000 fa7e 	bl	800d6a4 <_Bfree>
 800d1a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d1aa:	2300      	movs	r3, #0
 800d1ac:	6013      	str	r3, [r2, #0]
 800d1ae:	27a3      	movs	r7, #163	; 0xa3
 800d1b0:	e785      	b.n	800d0be <__gethex+0x12a>
 800d1b2:	1e73      	subs	r3, r6, #1
 800d1b4:	9a05      	ldr	r2, [sp, #20]
 800d1b6:	9303      	str	r3, [sp, #12]
 800d1b8:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800d1bc:	4293      	cmp	r3, r2
 800d1be:	d019      	beq.n	800d1f4 <__gethex+0x260>
 800d1c0:	f1bb 0f20 	cmp.w	fp, #32
 800d1c4:	d107      	bne.n	800d1d6 <__gethex+0x242>
 800d1c6:	9b02      	ldr	r3, [sp, #8]
 800d1c8:	9a00      	ldr	r2, [sp, #0]
 800d1ca:	f843 2b04 	str.w	r2, [r3], #4
 800d1ce:	9302      	str	r3, [sp, #8]
 800d1d0:	2300      	movs	r3, #0
 800d1d2:	9300      	str	r3, [sp, #0]
 800d1d4:	469b      	mov	fp, r3
 800d1d6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800d1da:	f7ff fec5 	bl	800cf68 <__hexdig_fun>
 800d1de:	9b00      	ldr	r3, [sp, #0]
 800d1e0:	f000 000f 	and.w	r0, r0, #15
 800d1e4:	fa00 f00b 	lsl.w	r0, r0, fp
 800d1e8:	4303      	orrs	r3, r0
 800d1ea:	9300      	str	r3, [sp, #0]
 800d1ec:	f10b 0b04 	add.w	fp, fp, #4
 800d1f0:	9b03      	ldr	r3, [sp, #12]
 800d1f2:	e00d      	b.n	800d210 <__gethex+0x27c>
 800d1f4:	9b03      	ldr	r3, [sp, #12]
 800d1f6:	9a06      	ldr	r2, [sp, #24]
 800d1f8:	4413      	add	r3, r2
 800d1fa:	42bb      	cmp	r3, r7
 800d1fc:	d3e0      	bcc.n	800d1c0 <__gethex+0x22c>
 800d1fe:	4618      	mov	r0, r3
 800d200:	9901      	ldr	r1, [sp, #4]
 800d202:	9307      	str	r3, [sp, #28]
 800d204:	4652      	mov	r2, sl
 800d206:	f7fe fe65 	bl	800bed4 <strncmp>
 800d20a:	9b07      	ldr	r3, [sp, #28]
 800d20c:	2800      	cmp	r0, #0
 800d20e:	d1d7      	bne.n	800d1c0 <__gethex+0x22c>
 800d210:	461e      	mov	r6, r3
 800d212:	e78b      	b.n	800d12c <__gethex+0x198>
 800d214:	f04f 0a03 	mov.w	sl, #3
 800d218:	e7b8      	b.n	800d18c <__gethex+0x1f8>
 800d21a:	da0a      	bge.n	800d232 <__gethex+0x29e>
 800d21c:	1a37      	subs	r7, r6, r0
 800d21e:	4621      	mov	r1, r4
 800d220:	ee18 0a10 	vmov	r0, s16
 800d224:	463a      	mov	r2, r7
 800d226:	f000 fc59 	bl	800dadc <__lshift>
 800d22a:	1bed      	subs	r5, r5, r7
 800d22c:	4604      	mov	r4, r0
 800d22e:	f100 0914 	add.w	r9, r0, #20
 800d232:	f04f 0a00 	mov.w	sl, #0
 800d236:	e7ae      	b.n	800d196 <__gethex+0x202>
 800d238:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800d23c:	42a8      	cmp	r0, r5
 800d23e:	dd72      	ble.n	800d326 <__gethex+0x392>
 800d240:	1b45      	subs	r5, r0, r5
 800d242:	42ae      	cmp	r6, r5
 800d244:	dc36      	bgt.n	800d2b4 <__gethex+0x320>
 800d246:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d24a:	2b02      	cmp	r3, #2
 800d24c:	d02a      	beq.n	800d2a4 <__gethex+0x310>
 800d24e:	2b03      	cmp	r3, #3
 800d250:	d02c      	beq.n	800d2ac <__gethex+0x318>
 800d252:	2b01      	cmp	r3, #1
 800d254:	d11c      	bne.n	800d290 <__gethex+0x2fc>
 800d256:	42ae      	cmp	r6, r5
 800d258:	d11a      	bne.n	800d290 <__gethex+0x2fc>
 800d25a:	2e01      	cmp	r6, #1
 800d25c:	d112      	bne.n	800d284 <__gethex+0x2f0>
 800d25e:	9a04      	ldr	r2, [sp, #16]
 800d260:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800d264:	6013      	str	r3, [r2, #0]
 800d266:	2301      	movs	r3, #1
 800d268:	6123      	str	r3, [r4, #16]
 800d26a:	f8c9 3000 	str.w	r3, [r9]
 800d26e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d270:	2762      	movs	r7, #98	; 0x62
 800d272:	601c      	str	r4, [r3, #0]
 800d274:	e723      	b.n	800d0be <__gethex+0x12a>
 800d276:	bf00      	nop
 800d278:	0800f8a0 	.word	0x0800f8a0
 800d27c:	0800f828 	.word	0x0800f828
 800d280:	0800f839 	.word	0x0800f839
 800d284:	1e71      	subs	r1, r6, #1
 800d286:	4620      	mov	r0, r4
 800d288:	f000 fe6c 	bl	800df64 <__any_on>
 800d28c:	2800      	cmp	r0, #0
 800d28e:	d1e6      	bne.n	800d25e <__gethex+0x2ca>
 800d290:	ee18 0a10 	vmov	r0, s16
 800d294:	4621      	mov	r1, r4
 800d296:	f000 fa05 	bl	800d6a4 <_Bfree>
 800d29a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d29c:	2300      	movs	r3, #0
 800d29e:	6013      	str	r3, [r2, #0]
 800d2a0:	2750      	movs	r7, #80	; 0x50
 800d2a2:	e70c      	b.n	800d0be <__gethex+0x12a>
 800d2a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d2a6:	2b00      	cmp	r3, #0
 800d2a8:	d1f2      	bne.n	800d290 <__gethex+0x2fc>
 800d2aa:	e7d8      	b.n	800d25e <__gethex+0x2ca>
 800d2ac:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d2ae:	2b00      	cmp	r3, #0
 800d2b0:	d1d5      	bne.n	800d25e <__gethex+0x2ca>
 800d2b2:	e7ed      	b.n	800d290 <__gethex+0x2fc>
 800d2b4:	1e6f      	subs	r7, r5, #1
 800d2b6:	f1ba 0f00 	cmp.w	sl, #0
 800d2ba:	d131      	bne.n	800d320 <__gethex+0x38c>
 800d2bc:	b127      	cbz	r7, 800d2c8 <__gethex+0x334>
 800d2be:	4639      	mov	r1, r7
 800d2c0:	4620      	mov	r0, r4
 800d2c2:	f000 fe4f 	bl	800df64 <__any_on>
 800d2c6:	4682      	mov	sl, r0
 800d2c8:	117b      	asrs	r3, r7, #5
 800d2ca:	2101      	movs	r1, #1
 800d2cc:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 800d2d0:	f007 071f 	and.w	r7, r7, #31
 800d2d4:	fa01 f707 	lsl.w	r7, r1, r7
 800d2d8:	421f      	tst	r7, r3
 800d2da:	4629      	mov	r1, r5
 800d2dc:	4620      	mov	r0, r4
 800d2de:	bf18      	it	ne
 800d2e0:	f04a 0a02 	orrne.w	sl, sl, #2
 800d2e4:	1b76      	subs	r6, r6, r5
 800d2e6:	f7ff fded 	bl	800cec4 <rshift>
 800d2ea:	f8d8 5004 	ldr.w	r5, [r8, #4]
 800d2ee:	2702      	movs	r7, #2
 800d2f0:	f1ba 0f00 	cmp.w	sl, #0
 800d2f4:	d048      	beq.n	800d388 <__gethex+0x3f4>
 800d2f6:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800d2fa:	2b02      	cmp	r3, #2
 800d2fc:	d015      	beq.n	800d32a <__gethex+0x396>
 800d2fe:	2b03      	cmp	r3, #3
 800d300:	d017      	beq.n	800d332 <__gethex+0x39e>
 800d302:	2b01      	cmp	r3, #1
 800d304:	d109      	bne.n	800d31a <__gethex+0x386>
 800d306:	f01a 0f02 	tst.w	sl, #2
 800d30a:	d006      	beq.n	800d31a <__gethex+0x386>
 800d30c:	f8d9 0000 	ldr.w	r0, [r9]
 800d310:	ea4a 0a00 	orr.w	sl, sl, r0
 800d314:	f01a 0f01 	tst.w	sl, #1
 800d318:	d10e      	bne.n	800d338 <__gethex+0x3a4>
 800d31a:	f047 0710 	orr.w	r7, r7, #16
 800d31e:	e033      	b.n	800d388 <__gethex+0x3f4>
 800d320:	f04f 0a01 	mov.w	sl, #1
 800d324:	e7d0      	b.n	800d2c8 <__gethex+0x334>
 800d326:	2701      	movs	r7, #1
 800d328:	e7e2      	b.n	800d2f0 <__gethex+0x35c>
 800d32a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d32c:	f1c3 0301 	rsb	r3, r3, #1
 800d330:	9315      	str	r3, [sp, #84]	; 0x54
 800d332:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d334:	2b00      	cmp	r3, #0
 800d336:	d0f0      	beq.n	800d31a <__gethex+0x386>
 800d338:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800d33c:	f104 0314 	add.w	r3, r4, #20
 800d340:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 800d344:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 800d348:	f04f 0c00 	mov.w	ip, #0
 800d34c:	4618      	mov	r0, r3
 800d34e:	f853 2b04 	ldr.w	r2, [r3], #4
 800d352:	f1b2 3fff 	cmp.w	r2, #4294967295
 800d356:	d01c      	beq.n	800d392 <__gethex+0x3fe>
 800d358:	3201      	adds	r2, #1
 800d35a:	6002      	str	r2, [r0, #0]
 800d35c:	2f02      	cmp	r7, #2
 800d35e:	f104 0314 	add.w	r3, r4, #20
 800d362:	d13f      	bne.n	800d3e4 <__gethex+0x450>
 800d364:	f8d8 2000 	ldr.w	r2, [r8]
 800d368:	3a01      	subs	r2, #1
 800d36a:	42b2      	cmp	r2, r6
 800d36c:	d10a      	bne.n	800d384 <__gethex+0x3f0>
 800d36e:	1171      	asrs	r1, r6, #5
 800d370:	2201      	movs	r2, #1
 800d372:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 800d376:	f006 061f 	and.w	r6, r6, #31
 800d37a:	fa02 f606 	lsl.w	r6, r2, r6
 800d37e:	421e      	tst	r6, r3
 800d380:	bf18      	it	ne
 800d382:	4617      	movne	r7, r2
 800d384:	f047 0720 	orr.w	r7, r7, #32
 800d388:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800d38a:	601c      	str	r4, [r3, #0]
 800d38c:	9b04      	ldr	r3, [sp, #16]
 800d38e:	601d      	str	r5, [r3, #0]
 800d390:	e695      	b.n	800d0be <__gethex+0x12a>
 800d392:	4299      	cmp	r1, r3
 800d394:	f843 cc04 	str.w	ip, [r3, #-4]
 800d398:	d8d8      	bhi.n	800d34c <__gethex+0x3b8>
 800d39a:	68a3      	ldr	r3, [r4, #8]
 800d39c:	459b      	cmp	fp, r3
 800d39e:	db19      	blt.n	800d3d4 <__gethex+0x440>
 800d3a0:	6861      	ldr	r1, [r4, #4]
 800d3a2:	ee18 0a10 	vmov	r0, s16
 800d3a6:	3101      	adds	r1, #1
 800d3a8:	f000 f93c 	bl	800d624 <_Balloc>
 800d3ac:	4681      	mov	r9, r0
 800d3ae:	b918      	cbnz	r0, 800d3b8 <__gethex+0x424>
 800d3b0:	4b1a      	ldr	r3, [pc, #104]	; (800d41c <__gethex+0x488>)
 800d3b2:	4602      	mov	r2, r0
 800d3b4:	2184      	movs	r1, #132	; 0x84
 800d3b6:	e6a8      	b.n	800d10a <__gethex+0x176>
 800d3b8:	6922      	ldr	r2, [r4, #16]
 800d3ba:	3202      	adds	r2, #2
 800d3bc:	f104 010c 	add.w	r1, r4, #12
 800d3c0:	0092      	lsls	r2, r2, #2
 800d3c2:	300c      	adds	r0, #12
 800d3c4:	f7fe fb68 	bl	800ba98 <memcpy>
 800d3c8:	4621      	mov	r1, r4
 800d3ca:	ee18 0a10 	vmov	r0, s16
 800d3ce:	f000 f969 	bl	800d6a4 <_Bfree>
 800d3d2:	464c      	mov	r4, r9
 800d3d4:	6923      	ldr	r3, [r4, #16]
 800d3d6:	1c5a      	adds	r2, r3, #1
 800d3d8:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800d3dc:	6122      	str	r2, [r4, #16]
 800d3de:	2201      	movs	r2, #1
 800d3e0:	615a      	str	r2, [r3, #20]
 800d3e2:	e7bb      	b.n	800d35c <__gethex+0x3c8>
 800d3e4:	6922      	ldr	r2, [r4, #16]
 800d3e6:	455a      	cmp	r2, fp
 800d3e8:	dd0b      	ble.n	800d402 <__gethex+0x46e>
 800d3ea:	2101      	movs	r1, #1
 800d3ec:	4620      	mov	r0, r4
 800d3ee:	f7ff fd69 	bl	800cec4 <rshift>
 800d3f2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800d3f6:	3501      	adds	r5, #1
 800d3f8:	42ab      	cmp	r3, r5
 800d3fa:	f6ff aed0 	blt.w	800d19e <__gethex+0x20a>
 800d3fe:	2701      	movs	r7, #1
 800d400:	e7c0      	b.n	800d384 <__gethex+0x3f0>
 800d402:	f016 061f 	ands.w	r6, r6, #31
 800d406:	d0fa      	beq.n	800d3fe <__gethex+0x46a>
 800d408:	4453      	add	r3, sl
 800d40a:	f1c6 0620 	rsb	r6, r6, #32
 800d40e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 800d412:	f000 f9f9 	bl	800d808 <__hi0bits>
 800d416:	42b0      	cmp	r0, r6
 800d418:	dbe7      	blt.n	800d3ea <__gethex+0x456>
 800d41a:	e7f0      	b.n	800d3fe <__gethex+0x46a>
 800d41c:	0800f828 	.word	0x0800f828

0800d420 <L_shift>:
 800d420:	f1c2 0208 	rsb	r2, r2, #8
 800d424:	0092      	lsls	r2, r2, #2
 800d426:	b570      	push	{r4, r5, r6, lr}
 800d428:	f1c2 0620 	rsb	r6, r2, #32
 800d42c:	6843      	ldr	r3, [r0, #4]
 800d42e:	6804      	ldr	r4, [r0, #0]
 800d430:	fa03 f506 	lsl.w	r5, r3, r6
 800d434:	432c      	orrs	r4, r5
 800d436:	40d3      	lsrs	r3, r2
 800d438:	6004      	str	r4, [r0, #0]
 800d43a:	f840 3f04 	str.w	r3, [r0, #4]!
 800d43e:	4288      	cmp	r0, r1
 800d440:	d3f4      	bcc.n	800d42c <L_shift+0xc>
 800d442:	bd70      	pop	{r4, r5, r6, pc}

0800d444 <__match>:
 800d444:	b530      	push	{r4, r5, lr}
 800d446:	6803      	ldr	r3, [r0, #0]
 800d448:	3301      	adds	r3, #1
 800d44a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d44e:	b914      	cbnz	r4, 800d456 <__match+0x12>
 800d450:	6003      	str	r3, [r0, #0]
 800d452:	2001      	movs	r0, #1
 800d454:	bd30      	pop	{r4, r5, pc}
 800d456:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d45a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800d45e:	2d19      	cmp	r5, #25
 800d460:	bf98      	it	ls
 800d462:	3220      	addls	r2, #32
 800d464:	42a2      	cmp	r2, r4
 800d466:	d0f0      	beq.n	800d44a <__match+0x6>
 800d468:	2000      	movs	r0, #0
 800d46a:	e7f3      	b.n	800d454 <__match+0x10>

0800d46c <__hexnan>:
 800d46c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d470:	680b      	ldr	r3, [r1, #0]
 800d472:	115e      	asrs	r6, r3, #5
 800d474:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800d478:	f013 031f 	ands.w	r3, r3, #31
 800d47c:	b087      	sub	sp, #28
 800d47e:	bf18      	it	ne
 800d480:	3604      	addne	r6, #4
 800d482:	2500      	movs	r5, #0
 800d484:	1f37      	subs	r7, r6, #4
 800d486:	4690      	mov	r8, r2
 800d488:	6802      	ldr	r2, [r0, #0]
 800d48a:	9301      	str	r3, [sp, #4]
 800d48c:	4682      	mov	sl, r0
 800d48e:	f846 5c04 	str.w	r5, [r6, #-4]
 800d492:	46b9      	mov	r9, r7
 800d494:	463c      	mov	r4, r7
 800d496:	9502      	str	r5, [sp, #8]
 800d498:	46ab      	mov	fp, r5
 800d49a:	7851      	ldrb	r1, [r2, #1]
 800d49c:	1c53      	adds	r3, r2, #1
 800d49e:	9303      	str	r3, [sp, #12]
 800d4a0:	b341      	cbz	r1, 800d4f4 <__hexnan+0x88>
 800d4a2:	4608      	mov	r0, r1
 800d4a4:	9205      	str	r2, [sp, #20]
 800d4a6:	9104      	str	r1, [sp, #16]
 800d4a8:	f7ff fd5e 	bl	800cf68 <__hexdig_fun>
 800d4ac:	2800      	cmp	r0, #0
 800d4ae:	d14f      	bne.n	800d550 <__hexnan+0xe4>
 800d4b0:	9904      	ldr	r1, [sp, #16]
 800d4b2:	9a05      	ldr	r2, [sp, #20]
 800d4b4:	2920      	cmp	r1, #32
 800d4b6:	d818      	bhi.n	800d4ea <__hexnan+0x7e>
 800d4b8:	9b02      	ldr	r3, [sp, #8]
 800d4ba:	459b      	cmp	fp, r3
 800d4bc:	dd13      	ble.n	800d4e6 <__hexnan+0x7a>
 800d4be:	454c      	cmp	r4, r9
 800d4c0:	d206      	bcs.n	800d4d0 <__hexnan+0x64>
 800d4c2:	2d07      	cmp	r5, #7
 800d4c4:	dc04      	bgt.n	800d4d0 <__hexnan+0x64>
 800d4c6:	462a      	mov	r2, r5
 800d4c8:	4649      	mov	r1, r9
 800d4ca:	4620      	mov	r0, r4
 800d4cc:	f7ff ffa8 	bl	800d420 <L_shift>
 800d4d0:	4544      	cmp	r4, r8
 800d4d2:	d950      	bls.n	800d576 <__hexnan+0x10a>
 800d4d4:	2300      	movs	r3, #0
 800d4d6:	f1a4 0904 	sub.w	r9, r4, #4
 800d4da:	f844 3c04 	str.w	r3, [r4, #-4]
 800d4de:	f8cd b008 	str.w	fp, [sp, #8]
 800d4e2:	464c      	mov	r4, r9
 800d4e4:	461d      	mov	r5, r3
 800d4e6:	9a03      	ldr	r2, [sp, #12]
 800d4e8:	e7d7      	b.n	800d49a <__hexnan+0x2e>
 800d4ea:	2929      	cmp	r1, #41	; 0x29
 800d4ec:	d156      	bne.n	800d59c <__hexnan+0x130>
 800d4ee:	3202      	adds	r2, #2
 800d4f0:	f8ca 2000 	str.w	r2, [sl]
 800d4f4:	f1bb 0f00 	cmp.w	fp, #0
 800d4f8:	d050      	beq.n	800d59c <__hexnan+0x130>
 800d4fa:	454c      	cmp	r4, r9
 800d4fc:	d206      	bcs.n	800d50c <__hexnan+0xa0>
 800d4fe:	2d07      	cmp	r5, #7
 800d500:	dc04      	bgt.n	800d50c <__hexnan+0xa0>
 800d502:	462a      	mov	r2, r5
 800d504:	4649      	mov	r1, r9
 800d506:	4620      	mov	r0, r4
 800d508:	f7ff ff8a 	bl	800d420 <L_shift>
 800d50c:	4544      	cmp	r4, r8
 800d50e:	d934      	bls.n	800d57a <__hexnan+0x10e>
 800d510:	f1a8 0204 	sub.w	r2, r8, #4
 800d514:	4623      	mov	r3, r4
 800d516:	f853 1b04 	ldr.w	r1, [r3], #4
 800d51a:	f842 1f04 	str.w	r1, [r2, #4]!
 800d51e:	429f      	cmp	r7, r3
 800d520:	d2f9      	bcs.n	800d516 <__hexnan+0xaa>
 800d522:	1b3b      	subs	r3, r7, r4
 800d524:	f023 0303 	bic.w	r3, r3, #3
 800d528:	3304      	adds	r3, #4
 800d52a:	3401      	adds	r4, #1
 800d52c:	3e03      	subs	r6, #3
 800d52e:	42b4      	cmp	r4, r6
 800d530:	bf88      	it	hi
 800d532:	2304      	movhi	r3, #4
 800d534:	4443      	add	r3, r8
 800d536:	2200      	movs	r2, #0
 800d538:	f843 2b04 	str.w	r2, [r3], #4
 800d53c:	429f      	cmp	r7, r3
 800d53e:	d2fb      	bcs.n	800d538 <__hexnan+0xcc>
 800d540:	683b      	ldr	r3, [r7, #0]
 800d542:	b91b      	cbnz	r3, 800d54c <__hexnan+0xe0>
 800d544:	4547      	cmp	r7, r8
 800d546:	d127      	bne.n	800d598 <__hexnan+0x12c>
 800d548:	2301      	movs	r3, #1
 800d54a:	603b      	str	r3, [r7, #0]
 800d54c:	2005      	movs	r0, #5
 800d54e:	e026      	b.n	800d59e <__hexnan+0x132>
 800d550:	3501      	adds	r5, #1
 800d552:	2d08      	cmp	r5, #8
 800d554:	f10b 0b01 	add.w	fp, fp, #1
 800d558:	dd06      	ble.n	800d568 <__hexnan+0xfc>
 800d55a:	4544      	cmp	r4, r8
 800d55c:	d9c3      	bls.n	800d4e6 <__hexnan+0x7a>
 800d55e:	2300      	movs	r3, #0
 800d560:	f844 3c04 	str.w	r3, [r4, #-4]
 800d564:	2501      	movs	r5, #1
 800d566:	3c04      	subs	r4, #4
 800d568:	6822      	ldr	r2, [r4, #0]
 800d56a:	f000 000f 	and.w	r0, r0, #15
 800d56e:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 800d572:	6022      	str	r2, [r4, #0]
 800d574:	e7b7      	b.n	800d4e6 <__hexnan+0x7a>
 800d576:	2508      	movs	r5, #8
 800d578:	e7b5      	b.n	800d4e6 <__hexnan+0x7a>
 800d57a:	9b01      	ldr	r3, [sp, #4]
 800d57c:	2b00      	cmp	r3, #0
 800d57e:	d0df      	beq.n	800d540 <__hexnan+0xd4>
 800d580:	f04f 32ff 	mov.w	r2, #4294967295
 800d584:	f1c3 0320 	rsb	r3, r3, #32
 800d588:	fa22 f303 	lsr.w	r3, r2, r3
 800d58c:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800d590:	401a      	ands	r2, r3
 800d592:	f846 2c04 	str.w	r2, [r6, #-4]
 800d596:	e7d3      	b.n	800d540 <__hexnan+0xd4>
 800d598:	3f04      	subs	r7, #4
 800d59a:	e7d1      	b.n	800d540 <__hexnan+0xd4>
 800d59c:	2004      	movs	r0, #4
 800d59e:	b007      	add	sp, #28
 800d5a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d5a4 <_isatty_r>:
 800d5a4:	b538      	push	{r3, r4, r5, lr}
 800d5a6:	4d06      	ldr	r5, [pc, #24]	; (800d5c0 <_isatty_r+0x1c>)
 800d5a8:	2300      	movs	r3, #0
 800d5aa:	4604      	mov	r4, r0
 800d5ac:	4608      	mov	r0, r1
 800d5ae:	602b      	str	r3, [r5, #0]
 800d5b0:	f7f7 fca1 	bl	8004ef6 <_isatty>
 800d5b4:	1c43      	adds	r3, r0, #1
 800d5b6:	d102      	bne.n	800d5be <_isatty_r+0x1a>
 800d5b8:	682b      	ldr	r3, [r5, #0]
 800d5ba:	b103      	cbz	r3, 800d5be <_isatty_r+0x1a>
 800d5bc:	6023      	str	r3, [r4, #0]
 800d5be:	bd38      	pop	{r3, r4, r5, pc}
 800d5c0:	20001764 	.word	0x20001764

0800d5c4 <_lseek_r>:
 800d5c4:	b538      	push	{r3, r4, r5, lr}
 800d5c6:	4d07      	ldr	r5, [pc, #28]	; (800d5e4 <_lseek_r+0x20>)
 800d5c8:	4604      	mov	r4, r0
 800d5ca:	4608      	mov	r0, r1
 800d5cc:	4611      	mov	r1, r2
 800d5ce:	2200      	movs	r2, #0
 800d5d0:	602a      	str	r2, [r5, #0]
 800d5d2:	461a      	mov	r2, r3
 800d5d4:	f7f7 fc9a 	bl	8004f0c <_lseek>
 800d5d8:	1c43      	adds	r3, r0, #1
 800d5da:	d102      	bne.n	800d5e2 <_lseek_r+0x1e>
 800d5dc:	682b      	ldr	r3, [r5, #0]
 800d5de:	b103      	cbz	r3, 800d5e2 <_lseek_r+0x1e>
 800d5e0:	6023      	str	r3, [r4, #0]
 800d5e2:	bd38      	pop	{r3, r4, r5, pc}
 800d5e4:	20001764 	.word	0x20001764

0800d5e8 <__ascii_mbtowc>:
 800d5e8:	b082      	sub	sp, #8
 800d5ea:	b901      	cbnz	r1, 800d5ee <__ascii_mbtowc+0x6>
 800d5ec:	a901      	add	r1, sp, #4
 800d5ee:	b142      	cbz	r2, 800d602 <__ascii_mbtowc+0x1a>
 800d5f0:	b14b      	cbz	r3, 800d606 <__ascii_mbtowc+0x1e>
 800d5f2:	7813      	ldrb	r3, [r2, #0]
 800d5f4:	600b      	str	r3, [r1, #0]
 800d5f6:	7812      	ldrb	r2, [r2, #0]
 800d5f8:	1e10      	subs	r0, r2, #0
 800d5fa:	bf18      	it	ne
 800d5fc:	2001      	movne	r0, #1
 800d5fe:	b002      	add	sp, #8
 800d600:	4770      	bx	lr
 800d602:	4610      	mov	r0, r2
 800d604:	e7fb      	b.n	800d5fe <__ascii_mbtowc+0x16>
 800d606:	f06f 0001 	mvn.w	r0, #1
 800d60a:	e7f8      	b.n	800d5fe <__ascii_mbtowc+0x16>

0800d60c <__malloc_lock>:
 800d60c:	4801      	ldr	r0, [pc, #4]	; (800d614 <__malloc_lock+0x8>)
 800d60e:	f7fe b9cc 	b.w	800b9aa <__retarget_lock_acquire_recursive>
 800d612:	bf00      	nop
 800d614:	20001756 	.word	0x20001756

0800d618 <__malloc_unlock>:
 800d618:	4801      	ldr	r0, [pc, #4]	; (800d620 <__malloc_unlock+0x8>)
 800d61a:	f7fe b9c7 	b.w	800b9ac <__retarget_lock_release_recursive>
 800d61e:	bf00      	nop
 800d620:	20001756 	.word	0x20001756

0800d624 <_Balloc>:
 800d624:	b570      	push	{r4, r5, r6, lr}
 800d626:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d628:	4604      	mov	r4, r0
 800d62a:	460d      	mov	r5, r1
 800d62c:	b976      	cbnz	r6, 800d64c <_Balloc+0x28>
 800d62e:	2010      	movs	r0, #16
 800d630:	f7fe fa22 	bl	800ba78 <malloc>
 800d634:	4602      	mov	r2, r0
 800d636:	6260      	str	r0, [r4, #36]	; 0x24
 800d638:	b920      	cbnz	r0, 800d644 <_Balloc+0x20>
 800d63a:	4b18      	ldr	r3, [pc, #96]	; (800d69c <_Balloc+0x78>)
 800d63c:	4818      	ldr	r0, [pc, #96]	; (800d6a0 <_Balloc+0x7c>)
 800d63e:	2166      	movs	r1, #102	; 0x66
 800d640:	f001 f968 	bl	800e914 <__assert_func>
 800d644:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d648:	6006      	str	r6, [r0, #0]
 800d64a:	60c6      	str	r6, [r0, #12]
 800d64c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800d64e:	68f3      	ldr	r3, [r6, #12]
 800d650:	b183      	cbz	r3, 800d674 <_Balloc+0x50>
 800d652:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d654:	68db      	ldr	r3, [r3, #12]
 800d656:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800d65a:	b9b8      	cbnz	r0, 800d68c <_Balloc+0x68>
 800d65c:	2101      	movs	r1, #1
 800d65e:	fa01 f605 	lsl.w	r6, r1, r5
 800d662:	1d72      	adds	r2, r6, #5
 800d664:	0092      	lsls	r2, r2, #2
 800d666:	4620      	mov	r0, r4
 800d668:	f000 fc9d 	bl	800dfa6 <_calloc_r>
 800d66c:	b160      	cbz	r0, 800d688 <_Balloc+0x64>
 800d66e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800d672:	e00e      	b.n	800d692 <_Balloc+0x6e>
 800d674:	2221      	movs	r2, #33	; 0x21
 800d676:	2104      	movs	r1, #4
 800d678:	4620      	mov	r0, r4
 800d67a:	f000 fc94 	bl	800dfa6 <_calloc_r>
 800d67e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d680:	60f0      	str	r0, [r6, #12]
 800d682:	68db      	ldr	r3, [r3, #12]
 800d684:	2b00      	cmp	r3, #0
 800d686:	d1e4      	bne.n	800d652 <_Balloc+0x2e>
 800d688:	2000      	movs	r0, #0
 800d68a:	bd70      	pop	{r4, r5, r6, pc}
 800d68c:	6802      	ldr	r2, [r0, #0]
 800d68e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800d692:	2300      	movs	r3, #0
 800d694:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800d698:	e7f7      	b.n	800d68a <_Balloc+0x66>
 800d69a:	bf00      	nop
 800d69c:	0800f8b4 	.word	0x0800f8b4
 800d6a0:	0800f8cb 	.word	0x0800f8cb

0800d6a4 <_Bfree>:
 800d6a4:	b570      	push	{r4, r5, r6, lr}
 800d6a6:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800d6a8:	4605      	mov	r5, r0
 800d6aa:	460c      	mov	r4, r1
 800d6ac:	b976      	cbnz	r6, 800d6cc <_Bfree+0x28>
 800d6ae:	2010      	movs	r0, #16
 800d6b0:	f7fe f9e2 	bl	800ba78 <malloc>
 800d6b4:	4602      	mov	r2, r0
 800d6b6:	6268      	str	r0, [r5, #36]	; 0x24
 800d6b8:	b920      	cbnz	r0, 800d6c4 <_Bfree+0x20>
 800d6ba:	4b09      	ldr	r3, [pc, #36]	; (800d6e0 <_Bfree+0x3c>)
 800d6bc:	4809      	ldr	r0, [pc, #36]	; (800d6e4 <_Bfree+0x40>)
 800d6be:	218a      	movs	r1, #138	; 0x8a
 800d6c0:	f001 f928 	bl	800e914 <__assert_func>
 800d6c4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800d6c8:	6006      	str	r6, [r0, #0]
 800d6ca:	60c6      	str	r6, [r0, #12]
 800d6cc:	b13c      	cbz	r4, 800d6de <_Bfree+0x3a>
 800d6ce:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800d6d0:	6862      	ldr	r2, [r4, #4]
 800d6d2:	68db      	ldr	r3, [r3, #12]
 800d6d4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800d6d8:	6021      	str	r1, [r4, #0]
 800d6da:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800d6de:	bd70      	pop	{r4, r5, r6, pc}
 800d6e0:	0800f8b4 	.word	0x0800f8b4
 800d6e4:	0800f8cb 	.word	0x0800f8cb

0800d6e8 <__multadd>:
 800d6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6ec:	690d      	ldr	r5, [r1, #16]
 800d6ee:	4607      	mov	r7, r0
 800d6f0:	460c      	mov	r4, r1
 800d6f2:	461e      	mov	r6, r3
 800d6f4:	f101 0c14 	add.w	ip, r1, #20
 800d6f8:	2000      	movs	r0, #0
 800d6fa:	f8dc 3000 	ldr.w	r3, [ip]
 800d6fe:	b299      	uxth	r1, r3
 800d700:	fb02 6101 	mla	r1, r2, r1, r6
 800d704:	0c1e      	lsrs	r6, r3, #16
 800d706:	0c0b      	lsrs	r3, r1, #16
 800d708:	fb02 3306 	mla	r3, r2, r6, r3
 800d70c:	b289      	uxth	r1, r1
 800d70e:	3001      	adds	r0, #1
 800d710:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800d714:	4285      	cmp	r5, r0
 800d716:	f84c 1b04 	str.w	r1, [ip], #4
 800d71a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800d71e:	dcec      	bgt.n	800d6fa <__multadd+0x12>
 800d720:	b30e      	cbz	r6, 800d766 <__multadd+0x7e>
 800d722:	68a3      	ldr	r3, [r4, #8]
 800d724:	42ab      	cmp	r3, r5
 800d726:	dc19      	bgt.n	800d75c <__multadd+0x74>
 800d728:	6861      	ldr	r1, [r4, #4]
 800d72a:	4638      	mov	r0, r7
 800d72c:	3101      	adds	r1, #1
 800d72e:	f7ff ff79 	bl	800d624 <_Balloc>
 800d732:	4680      	mov	r8, r0
 800d734:	b928      	cbnz	r0, 800d742 <__multadd+0x5a>
 800d736:	4602      	mov	r2, r0
 800d738:	4b0c      	ldr	r3, [pc, #48]	; (800d76c <__multadd+0x84>)
 800d73a:	480d      	ldr	r0, [pc, #52]	; (800d770 <__multadd+0x88>)
 800d73c:	21b5      	movs	r1, #181	; 0xb5
 800d73e:	f001 f8e9 	bl	800e914 <__assert_func>
 800d742:	6922      	ldr	r2, [r4, #16]
 800d744:	3202      	adds	r2, #2
 800d746:	f104 010c 	add.w	r1, r4, #12
 800d74a:	0092      	lsls	r2, r2, #2
 800d74c:	300c      	adds	r0, #12
 800d74e:	f7fe f9a3 	bl	800ba98 <memcpy>
 800d752:	4621      	mov	r1, r4
 800d754:	4638      	mov	r0, r7
 800d756:	f7ff ffa5 	bl	800d6a4 <_Bfree>
 800d75a:	4644      	mov	r4, r8
 800d75c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800d760:	3501      	adds	r5, #1
 800d762:	615e      	str	r6, [r3, #20]
 800d764:	6125      	str	r5, [r4, #16]
 800d766:	4620      	mov	r0, r4
 800d768:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d76c:	0800f828 	.word	0x0800f828
 800d770:	0800f8cb 	.word	0x0800f8cb

0800d774 <__s2b>:
 800d774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d778:	460c      	mov	r4, r1
 800d77a:	4615      	mov	r5, r2
 800d77c:	461f      	mov	r7, r3
 800d77e:	2209      	movs	r2, #9
 800d780:	3308      	adds	r3, #8
 800d782:	4606      	mov	r6, r0
 800d784:	fb93 f3f2 	sdiv	r3, r3, r2
 800d788:	2100      	movs	r1, #0
 800d78a:	2201      	movs	r2, #1
 800d78c:	429a      	cmp	r2, r3
 800d78e:	db09      	blt.n	800d7a4 <__s2b+0x30>
 800d790:	4630      	mov	r0, r6
 800d792:	f7ff ff47 	bl	800d624 <_Balloc>
 800d796:	b940      	cbnz	r0, 800d7aa <__s2b+0x36>
 800d798:	4602      	mov	r2, r0
 800d79a:	4b19      	ldr	r3, [pc, #100]	; (800d800 <__s2b+0x8c>)
 800d79c:	4819      	ldr	r0, [pc, #100]	; (800d804 <__s2b+0x90>)
 800d79e:	21ce      	movs	r1, #206	; 0xce
 800d7a0:	f001 f8b8 	bl	800e914 <__assert_func>
 800d7a4:	0052      	lsls	r2, r2, #1
 800d7a6:	3101      	adds	r1, #1
 800d7a8:	e7f0      	b.n	800d78c <__s2b+0x18>
 800d7aa:	9b08      	ldr	r3, [sp, #32]
 800d7ac:	6143      	str	r3, [r0, #20]
 800d7ae:	2d09      	cmp	r5, #9
 800d7b0:	f04f 0301 	mov.w	r3, #1
 800d7b4:	6103      	str	r3, [r0, #16]
 800d7b6:	dd16      	ble.n	800d7e6 <__s2b+0x72>
 800d7b8:	f104 0909 	add.w	r9, r4, #9
 800d7bc:	46c8      	mov	r8, r9
 800d7be:	442c      	add	r4, r5
 800d7c0:	f818 3b01 	ldrb.w	r3, [r8], #1
 800d7c4:	4601      	mov	r1, r0
 800d7c6:	3b30      	subs	r3, #48	; 0x30
 800d7c8:	220a      	movs	r2, #10
 800d7ca:	4630      	mov	r0, r6
 800d7cc:	f7ff ff8c 	bl	800d6e8 <__multadd>
 800d7d0:	45a0      	cmp	r8, r4
 800d7d2:	d1f5      	bne.n	800d7c0 <__s2b+0x4c>
 800d7d4:	f1a5 0408 	sub.w	r4, r5, #8
 800d7d8:	444c      	add	r4, r9
 800d7da:	1b2d      	subs	r5, r5, r4
 800d7dc:	1963      	adds	r3, r4, r5
 800d7de:	42bb      	cmp	r3, r7
 800d7e0:	db04      	blt.n	800d7ec <__s2b+0x78>
 800d7e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d7e6:	340a      	adds	r4, #10
 800d7e8:	2509      	movs	r5, #9
 800d7ea:	e7f6      	b.n	800d7da <__s2b+0x66>
 800d7ec:	f814 3b01 	ldrb.w	r3, [r4], #1
 800d7f0:	4601      	mov	r1, r0
 800d7f2:	3b30      	subs	r3, #48	; 0x30
 800d7f4:	220a      	movs	r2, #10
 800d7f6:	4630      	mov	r0, r6
 800d7f8:	f7ff ff76 	bl	800d6e8 <__multadd>
 800d7fc:	e7ee      	b.n	800d7dc <__s2b+0x68>
 800d7fe:	bf00      	nop
 800d800:	0800f828 	.word	0x0800f828
 800d804:	0800f8cb 	.word	0x0800f8cb

0800d808 <__hi0bits>:
 800d808:	0c03      	lsrs	r3, r0, #16
 800d80a:	041b      	lsls	r3, r3, #16
 800d80c:	b9d3      	cbnz	r3, 800d844 <__hi0bits+0x3c>
 800d80e:	0400      	lsls	r0, r0, #16
 800d810:	2310      	movs	r3, #16
 800d812:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800d816:	bf04      	itt	eq
 800d818:	0200      	lsleq	r0, r0, #8
 800d81a:	3308      	addeq	r3, #8
 800d81c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800d820:	bf04      	itt	eq
 800d822:	0100      	lsleq	r0, r0, #4
 800d824:	3304      	addeq	r3, #4
 800d826:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800d82a:	bf04      	itt	eq
 800d82c:	0080      	lsleq	r0, r0, #2
 800d82e:	3302      	addeq	r3, #2
 800d830:	2800      	cmp	r0, #0
 800d832:	db05      	blt.n	800d840 <__hi0bits+0x38>
 800d834:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800d838:	f103 0301 	add.w	r3, r3, #1
 800d83c:	bf08      	it	eq
 800d83e:	2320      	moveq	r3, #32
 800d840:	4618      	mov	r0, r3
 800d842:	4770      	bx	lr
 800d844:	2300      	movs	r3, #0
 800d846:	e7e4      	b.n	800d812 <__hi0bits+0xa>

0800d848 <__lo0bits>:
 800d848:	6803      	ldr	r3, [r0, #0]
 800d84a:	f013 0207 	ands.w	r2, r3, #7
 800d84e:	4601      	mov	r1, r0
 800d850:	d00b      	beq.n	800d86a <__lo0bits+0x22>
 800d852:	07da      	lsls	r2, r3, #31
 800d854:	d423      	bmi.n	800d89e <__lo0bits+0x56>
 800d856:	0798      	lsls	r0, r3, #30
 800d858:	bf49      	itett	mi
 800d85a:	085b      	lsrmi	r3, r3, #1
 800d85c:	089b      	lsrpl	r3, r3, #2
 800d85e:	2001      	movmi	r0, #1
 800d860:	600b      	strmi	r3, [r1, #0]
 800d862:	bf5c      	itt	pl
 800d864:	600b      	strpl	r3, [r1, #0]
 800d866:	2002      	movpl	r0, #2
 800d868:	4770      	bx	lr
 800d86a:	b298      	uxth	r0, r3
 800d86c:	b9a8      	cbnz	r0, 800d89a <__lo0bits+0x52>
 800d86e:	0c1b      	lsrs	r3, r3, #16
 800d870:	2010      	movs	r0, #16
 800d872:	b2da      	uxtb	r2, r3
 800d874:	b90a      	cbnz	r2, 800d87a <__lo0bits+0x32>
 800d876:	3008      	adds	r0, #8
 800d878:	0a1b      	lsrs	r3, r3, #8
 800d87a:	071a      	lsls	r2, r3, #28
 800d87c:	bf04      	itt	eq
 800d87e:	091b      	lsreq	r3, r3, #4
 800d880:	3004      	addeq	r0, #4
 800d882:	079a      	lsls	r2, r3, #30
 800d884:	bf04      	itt	eq
 800d886:	089b      	lsreq	r3, r3, #2
 800d888:	3002      	addeq	r0, #2
 800d88a:	07da      	lsls	r2, r3, #31
 800d88c:	d403      	bmi.n	800d896 <__lo0bits+0x4e>
 800d88e:	085b      	lsrs	r3, r3, #1
 800d890:	f100 0001 	add.w	r0, r0, #1
 800d894:	d005      	beq.n	800d8a2 <__lo0bits+0x5a>
 800d896:	600b      	str	r3, [r1, #0]
 800d898:	4770      	bx	lr
 800d89a:	4610      	mov	r0, r2
 800d89c:	e7e9      	b.n	800d872 <__lo0bits+0x2a>
 800d89e:	2000      	movs	r0, #0
 800d8a0:	4770      	bx	lr
 800d8a2:	2020      	movs	r0, #32
 800d8a4:	4770      	bx	lr
	...

0800d8a8 <__i2b>:
 800d8a8:	b510      	push	{r4, lr}
 800d8aa:	460c      	mov	r4, r1
 800d8ac:	2101      	movs	r1, #1
 800d8ae:	f7ff feb9 	bl	800d624 <_Balloc>
 800d8b2:	4602      	mov	r2, r0
 800d8b4:	b928      	cbnz	r0, 800d8c2 <__i2b+0x1a>
 800d8b6:	4b05      	ldr	r3, [pc, #20]	; (800d8cc <__i2b+0x24>)
 800d8b8:	4805      	ldr	r0, [pc, #20]	; (800d8d0 <__i2b+0x28>)
 800d8ba:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800d8be:	f001 f829 	bl	800e914 <__assert_func>
 800d8c2:	2301      	movs	r3, #1
 800d8c4:	6144      	str	r4, [r0, #20]
 800d8c6:	6103      	str	r3, [r0, #16]
 800d8c8:	bd10      	pop	{r4, pc}
 800d8ca:	bf00      	nop
 800d8cc:	0800f828 	.word	0x0800f828
 800d8d0:	0800f8cb 	.word	0x0800f8cb

0800d8d4 <__multiply>:
 800d8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8d8:	4691      	mov	r9, r2
 800d8da:	690a      	ldr	r2, [r1, #16]
 800d8dc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800d8e0:	429a      	cmp	r2, r3
 800d8e2:	bfb8      	it	lt
 800d8e4:	460b      	movlt	r3, r1
 800d8e6:	460c      	mov	r4, r1
 800d8e8:	bfbc      	itt	lt
 800d8ea:	464c      	movlt	r4, r9
 800d8ec:	4699      	movlt	r9, r3
 800d8ee:	6927      	ldr	r7, [r4, #16]
 800d8f0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800d8f4:	68a3      	ldr	r3, [r4, #8]
 800d8f6:	6861      	ldr	r1, [r4, #4]
 800d8f8:	eb07 060a 	add.w	r6, r7, sl
 800d8fc:	42b3      	cmp	r3, r6
 800d8fe:	b085      	sub	sp, #20
 800d900:	bfb8      	it	lt
 800d902:	3101      	addlt	r1, #1
 800d904:	f7ff fe8e 	bl	800d624 <_Balloc>
 800d908:	b930      	cbnz	r0, 800d918 <__multiply+0x44>
 800d90a:	4602      	mov	r2, r0
 800d90c:	4b44      	ldr	r3, [pc, #272]	; (800da20 <__multiply+0x14c>)
 800d90e:	4845      	ldr	r0, [pc, #276]	; (800da24 <__multiply+0x150>)
 800d910:	f240 115d 	movw	r1, #349	; 0x15d
 800d914:	f000 fffe 	bl	800e914 <__assert_func>
 800d918:	f100 0514 	add.w	r5, r0, #20
 800d91c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800d920:	462b      	mov	r3, r5
 800d922:	2200      	movs	r2, #0
 800d924:	4543      	cmp	r3, r8
 800d926:	d321      	bcc.n	800d96c <__multiply+0x98>
 800d928:	f104 0314 	add.w	r3, r4, #20
 800d92c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800d930:	f109 0314 	add.w	r3, r9, #20
 800d934:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800d938:	9202      	str	r2, [sp, #8]
 800d93a:	1b3a      	subs	r2, r7, r4
 800d93c:	3a15      	subs	r2, #21
 800d93e:	f022 0203 	bic.w	r2, r2, #3
 800d942:	3204      	adds	r2, #4
 800d944:	f104 0115 	add.w	r1, r4, #21
 800d948:	428f      	cmp	r7, r1
 800d94a:	bf38      	it	cc
 800d94c:	2204      	movcc	r2, #4
 800d94e:	9201      	str	r2, [sp, #4]
 800d950:	9a02      	ldr	r2, [sp, #8]
 800d952:	9303      	str	r3, [sp, #12]
 800d954:	429a      	cmp	r2, r3
 800d956:	d80c      	bhi.n	800d972 <__multiply+0x9e>
 800d958:	2e00      	cmp	r6, #0
 800d95a:	dd03      	ble.n	800d964 <__multiply+0x90>
 800d95c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800d960:	2b00      	cmp	r3, #0
 800d962:	d05a      	beq.n	800da1a <__multiply+0x146>
 800d964:	6106      	str	r6, [r0, #16]
 800d966:	b005      	add	sp, #20
 800d968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d96c:	f843 2b04 	str.w	r2, [r3], #4
 800d970:	e7d8      	b.n	800d924 <__multiply+0x50>
 800d972:	f8b3 a000 	ldrh.w	sl, [r3]
 800d976:	f1ba 0f00 	cmp.w	sl, #0
 800d97a:	d024      	beq.n	800d9c6 <__multiply+0xf2>
 800d97c:	f104 0e14 	add.w	lr, r4, #20
 800d980:	46a9      	mov	r9, r5
 800d982:	f04f 0c00 	mov.w	ip, #0
 800d986:	f85e 2b04 	ldr.w	r2, [lr], #4
 800d98a:	f8d9 1000 	ldr.w	r1, [r9]
 800d98e:	fa1f fb82 	uxth.w	fp, r2
 800d992:	b289      	uxth	r1, r1
 800d994:	fb0a 110b 	mla	r1, sl, fp, r1
 800d998:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800d99c:	f8d9 2000 	ldr.w	r2, [r9]
 800d9a0:	4461      	add	r1, ip
 800d9a2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800d9a6:	fb0a c20b 	mla	r2, sl, fp, ip
 800d9aa:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800d9ae:	b289      	uxth	r1, r1
 800d9b0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800d9b4:	4577      	cmp	r7, lr
 800d9b6:	f849 1b04 	str.w	r1, [r9], #4
 800d9ba:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800d9be:	d8e2      	bhi.n	800d986 <__multiply+0xb2>
 800d9c0:	9a01      	ldr	r2, [sp, #4]
 800d9c2:	f845 c002 	str.w	ip, [r5, r2]
 800d9c6:	9a03      	ldr	r2, [sp, #12]
 800d9c8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800d9cc:	3304      	adds	r3, #4
 800d9ce:	f1b9 0f00 	cmp.w	r9, #0
 800d9d2:	d020      	beq.n	800da16 <__multiply+0x142>
 800d9d4:	6829      	ldr	r1, [r5, #0]
 800d9d6:	f104 0c14 	add.w	ip, r4, #20
 800d9da:	46ae      	mov	lr, r5
 800d9dc:	f04f 0a00 	mov.w	sl, #0
 800d9e0:	f8bc b000 	ldrh.w	fp, [ip]
 800d9e4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800d9e8:	fb09 220b 	mla	r2, r9, fp, r2
 800d9ec:	4492      	add	sl, r2
 800d9ee:	b289      	uxth	r1, r1
 800d9f0:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 800d9f4:	f84e 1b04 	str.w	r1, [lr], #4
 800d9f8:	f85c 2b04 	ldr.w	r2, [ip], #4
 800d9fc:	f8be 1000 	ldrh.w	r1, [lr]
 800da00:	0c12      	lsrs	r2, r2, #16
 800da02:	fb09 1102 	mla	r1, r9, r2, r1
 800da06:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 800da0a:	4567      	cmp	r7, ip
 800da0c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800da10:	d8e6      	bhi.n	800d9e0 <__multiply+0x10c>
 800da12:	9a01      	ldr	r2, [sp, #4]
 800da14:	50a9      	str	r1, [r5, r2]
 800da16:	3504      	adds	r5, #4
 800da18:	e79a      	b.n	800d950 <__multiply+0x7c>
 800da1a:	3e01      	subs	r6, #1
 800da1c:	e79c      	b.n	800d958 <__multiply+0x84>
 800da1e:	bf00      	nop
 800da20:	0800f828 	.word	0x0800f828
 800da24:	0800f8cb 	.word	0x0800f8cb

0800da28 <__pow5mult>:
 800da28:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800da2c:	4615      	mov	r5, r2
 800da2e:	f012 0203 	ands.w	r2, r2, #3
 800da32:	4606      	mov	r6, r0
 800da34:	460f      	mov	r7, r1
 800da36:	d007      	beq.n	800da48 <__pow5mult+0x20>
 800da38:	4c25      	ldr	r4, [pc, #148]	; (800dad0 <__pow5mult+0xa8>)
 800da3a:	3a01      	subs	r2, #1
 800da3c:	2300      	movs	r3, #0
 800da3e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800da42:	f7ff fe51 	bl	800d6e8 <__multadd>
 800da46:	4607      	mov	r7, r0
 800da48:	10ad      	asrs	r5, r5, #2
 800da4a:	d03d      	beq.n	800dac8 <__pow5mult+0xa0>
 800da4c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 800da4e:	b97c      	cbnz	r4, 800da70 <__pow5mult+0x48>
 800da50:	2010      	movs	r0, #16
 800da52:	f7fe f811 	bl	800ba78 <malloc>
 800da56:	4602      	mov	r2, r0
 800da58:	6270      	str	r0, [r6, #36]	; 0x24
 800da5a:	b928      	cbnz	r0, 800da68 <__pow5mult+0x40>
 800da5c:	4b1d      	ldr	r3, [pc, #116]	; (800dad4 <__pow5mult+0xac>)
 800da5e:	481e      	ldr	r0, [pc, #120]	; (800dad8 <__pow5mult+0xb0>)
 800da60:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 800da64:	f000 ff56 	bl	800e914 <__assert_func>
 800da68:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800da6c:	6004      	str	r4, [r0, #0]
 800da6e:	60c4      	str	r4, [r0, #12]
 800da70:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 800da74:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800da78:	b94c      	cbnz	r4, 800da8e <__pow5mult+0x66>
 800da7a:	f240 2171 	movw	r1, #625	; 0x271
 800da7e:	4630      	mov	r0, r6
 800da80:	f7ff ff12 	bl	800d8a8 <__i2b>
 800da84:	2300      	movs	r3, #0
 800da86:	f8c8 0008 	str.w	r0, [r8, #8]
 800da8a:	4604      	mov	r4, r0
 800da8c:	6003      	str	r3, [r0, #0]
 800da8e:	f04f 0900 	mov.w	r9, #0
 800da92:	07eb      	lsls	r3, r5, #31
 800da94:	d50a      	bpl.n	800daac <__pow5mult+0x84>
 800da96:	4639      	mov	r1, r7
 800da98:	4622      	mov	r2, r4
 800da9a:	4630      	mov	r0, r6
 800da9c:	f7ff ff1a 	bl	800d8d4 <__multiply>
 800daa0:	4639      	mov	r1, r7
 800daa2:	4680      	mov	r8, r0
 800daa4:	4630      	mov	r0, r6
 800daa6:	f7ff fdfd 	bl	800d6a4 <_Bfree>
 800daaa:	4647      	mov	r7, r8
 800daac:	106d      	asrs	r5, r5, #1
 800daae:	d00b      	beq.n	800dac8 <__pow5mult+0xa0>
 800dab0:	6820      	ldr	r0, [r4, #0]
 800dab2:	b938      	cbnz	r0, 800dac4 <__pow5mult+0x9c>
 800dab4:	4622      	mov	r2, r4
 800dab6:	4621      	mov	r1, r4
 800dab8:	4630      	mov	r0, r6
 800daba:	f7ff ff0b 	bl	800d8d4 <__multiply>
 800dabe:	6020      	str	r0, [r4, #0]
 800dac0:	f8c0 9000 	str.w	r9, [r0]
 800dac4:	4604      	mov	r4, r0
 800dac6:	e7e4      	b.n	800da92 <__pow5mult+0x6a>
 800dac8:	4638      	mov	r0, r7
 800daca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dace:	bf00      	nop
 800dad0:	0800fa18 	.word	0x0800fa18
 800dad4:	0800f8b4 	.word	0x0800f8b4
 800dad8:	0800f8cb 	.word	0x0800f8cb

0800dadc <__lshift>:
 800dadc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dae0:	460c      	mov	r4, r1
 800dae2:	6849      	ldr	r1, [r1, #4]
 800dae4:	6923      	ldr	r3, [r4, #16]
 800dae6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800daea:	68a3      	ldr	r3, [r4, #8]
 800daec:	4607      	mov	r7, r0
 800daee:	4691      	mov	r9, r2
 800daf0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800daf4:	f108 0601 	add.w	r6, r8, #1
 800daf8:	42b3      	cmp	r3, r6
 800dafa:	db0b      	blt.n	800db14 <__lshift+0x38>
 800dafc:	4638      	mov	r0, r7
 800dafe:	f7ff fd91 	bl	800d624 <_Balloc>
 800db02:	4605      	mov	r5, r0
 800db04:	b948      	cbnz	r0, 800db1a <__lshift+0x3e>
 800db06:	4602      	mov	r2, r0
 800db08:	4b2a      	ldr	r3, [pc, #168]	; (800dbb4 <__lshift+0xd8>)
 800db0a:	482b      	ldr	r0, [pc, #172]	; (800dbb8 <__lshift+0xdc>)
 800db0c:	f240 11d9 	movw	r1, #473	; 0x1d9
 800db10:	f000 ff00 	bl	800e914 <__assert_func>
 800db14:	3101      	adds	r1, #1
 800db16:	005b      	lsls	r3, r3, #1
 800db18:	e7ee      	b.n	800daf8 <__lshift+0x1c>
 800db1a:	2300      	movs	r3, #0
 800db1c:	f100 0114 	add.w	r1, r0, #20
 800db20:	f100 0210 	add.w	r2, r0, #16
 800db24:	4618      	mov	r0, r3
 800db26:	4553      	cmp	r3, sl
 800db28:	db37      	blt.n	800db9a <__lshift+0xbe>
 800db2a:	6920      	ldr	r0, [r4, #16]
 800db2c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800db30:	f104 0314 	add.w	r3, r4, #20
 800db34:	f019 091f 	ands.w	r9, r9, #31
 800db38:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800db3c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 800db40:	d02f      	beq.n	800dba2 <__lshift+0xc6>
 800db42:	f1c9 0e20 	rsb	lr, r9, #32
 800db46:	468a      	mov	sl, r1
 800db48:	f04f 0c00 	mov.w	ip, #0
 800db4c:	681a      	ldr	r2, [r3, #0]
 800db4e:	fa02 f209 	lsl.w	r2, r2, r9
 800db52:	ea42 020c 	orr.w	r2, r2, ip
 800db56:	f84a 2b04 	str.w	r2, [sl], #4
 800db5a:	f853 2b04 	ldr.w	r2, [r3], #4
 800db5e:	4298      	cmp	r0, r3
 800db60:	fa22 fc0e 	lsr.w	ip, r2, lr
 800db64:	d8f2      	bhi.n	800db4c <__lshift+0x70>
 800db66:	1b03      	subs	r3, r0, r4
 800db68:	3b15      	subs	r3, #21
 800db6a:	f023 0303 	bic.w	r3, r3, #3
 800db6e:	3304      	adds	r3, #4
 800db70:	f104 0215 	add.w	r2, r4, #21
 800db74:	4290      	cmp	r0, r2
 800db76:	bf38      	it	cc
 800db78:	2304      	movcc	r3, #4
 800db7a:	f841 c003 	str.w	ip, [r1, r3]
 800db7e:	f1bc 0f00 	cmp.w	ip, #0
 800db82:	d001      	beq.n	800db88 <__lshift+0xac>
 800db84:	f108 0602 	add.w	r6, r8, #2
 800db88:	3e01      	subs	r6, #1
 800db8a:	4638      	mov	r0, r7
 800db8c:	612e      	str	r6, [r5, #16]
 800db8e:	4621      	mov	r1, r4
 800db90:	f7ff fd88 	bl	800d6a4 <_Bfree>
 800db94:	4628      	mov	r0, r5
 800db96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db9a:	f842 0f04 	str.w	r0, [r2, #4]!
 800db9e:	3301      	adds	r3, #1
 800dba0:	e7c1      	b.n	800db26 <__lshift+0x4a>
 800dba2:	3904      	subs	r1, #4
 800dba4:	f853 2b04 	ldr.w	r2, [r3], #4
 800dba8:	f841 2f04 	str.w	r2, [r1, #4]!
 800dbac:	4298      	cmp	r0, r3
 800dbae:	d8f9      	bhi.n	800dba4 <__lshift+0xc8>
 800dbb0:	e7ea      	b.n	800db88 <__lshift+0xac>
 800dbb2:	bf00      	nop
 800dbb4:	0800f828 	.word	0x0800f828
 800dbb8:	0800f8cb 	.word	0x0800f8cb

0800dbbc <__mcmp>:
 800dbbc:	b530      	push	{r4, r5, lr}
 800dbbe:	6902      	ldr	r2, [r0, #16]
 800dbc0:	690c      	ldr	r4, [r1, #16]
 800dbc2:	1b12      	subs	r2, r2, r4
 800dbc4:	d10e      	bne.n	800dbe4 <__mcmp+0x28>
 800dbc6:	f100 0314 	add.w	r3, r0, #20
 800dbca:	3114      	adds	r1, #20
 800dbcc:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800dbd0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800dbd4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800dbd8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800dbdc:	42a5      	cmp	r5, r4
 800dbde:	d003      	beq.n	800dbe8 <__mcmp+0x2c>
 800dbe0:	d305      	bcc.n	800dbee <__mcmp+0x32>
 800dbe2:	2201      	movs	r2, #1
 800dbe4:	4610      	mov	r0, r2
 800dbe6:	bd30      	pop	{r4, r5, pc}
 800dbe8:	4283      	cmp	r3, r0
 800dbea:	d3f3      	bcc.n	800dbd4 <__mcmp+0x18>
 800dbec:	e7fa      	b.n	800dbe4 <__mcmp+0x28>
 800dbee:	f04f 32ff 	mov.w	r2, #4294967295
 800dbf2:	e7f7      	b.n	800dbe4 <__mcmp+0x28>

0800dbf4 <__mdiff>:
 800dbf4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbf8:	460c      	mov	r4, r1
 800dbfa:	4606      	mov	r6, r0
 800dbfc:	4611      	mov	r1, r2
 800dbfe:	4620      	mov	r0, r4
 800dc00:	4690      	mov	r8, r2
 800dc02:	f7ff ffdb 	bl	800dbbc <__mcmp>
 800dc06:	1e05      	subs	r5, r0, #0
 800dc08:	d110      	bne.n	800dc2c <__mdiff+0x38>
 800dc0a:	4629      	mov	r1, r5
 800dc0c:	4630      	mov	r0, r6
 800dc0e:	f7ff fd09 	bl	800d624 <_Balloc>
 800dc12:	b930      	cbnz	r0, 800dc22 <__mdiff+0x2e>
 800dc14:	4b3a      	ldr	r3, [pc, #232]	; (800dd00 <__mdiff+0x10c>)
 800dc16:	4602      	mov	r2, r0
 800dc18:	f240 2132 	movw	r1, #562	; 0x232
 800dc1c:	4839      	ldr	r0, [pc, #228]	; (800dd04 <__mdiff+0x110>)
 800dc1e:	f000 fe79 	bl	800e914 <__assert_func>
 800dc22:	2301      	movs	r3, #1
 800dc24:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800dc28:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc2c:	bfa4      	itt	ge
 800dc2e:	4643      	movge	r3, r8
 800dc30:	46a0      	movge	r8, r4
 800dc32:	4630      	mov	r0, r6
 800dc34:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800dc38:	bfa6      	itte	ge
 800dc3a:	461c      	movge	r4, r3
 800dc3c:	2500      	movge	r5, #0
 800dc3e:	2501      	movlt	r5, #1
 800dc40:	f7ff fcf0 	bl	800d624 <_Balloc>
 800dc44:	b920      	cbnz	r0, 800dc50 <__mdiff+0x5c>
 800dc46:	4b2e      	ldr	r3, [pc, #184]	; (800dd00 <__mdiff+0x10c>)
 800dc48:	4602      	mov	r2, r0
 800dc4a:	f44f 7110 	mov.w	r1, #576	; 0x240
 800dc4e:	e7e5      	b.n	800dc1c <__mdiff+0x28>
 800dc50:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800dc54:	6926      	ldr	r6, [r4, #16]
 800dc56:	60c5      	str	r5, [r0, #12]
 800dc58:	f104 0914 	add.w	r9, r4, #20
 800dc5c:	f108 0514 	add.w	r5, r8, #20
 800dc60:	f100 0e14 	add.w	lr, r0, #20
 800dc64:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800dc68:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800dc6c:	f108 0210 	add.w	r2, r8, #16
 800dc70:	46f2      	mov	sl, lr
 800dc72:	2100      	movs	r1, #0
 800dc74:	f859 3b04 	ldr.w	r3, [r9], #4
 800dc78:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800dc7c:	fa1f f883 	uxth.w	r8, r3
 800dc80:	fa11 f18b 	uxtah	r1, r1, fp
 800dc84:	0c1b      	lsrs	r3, r3, #16
 800dc86:	eba1 0808 	sub.w	r8, r1, r8
 800dc8a:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800dc8e:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800dc92:	fa1f f888 	uxth.w	r8, r8
 800dc96:	1419      	asrs	r1, r3, #16
 800dc98:	454e      	cmp	r6, r9
 800dc9a:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800dc9e:	f84a 3b04 	str.w	r3, [sl], #4
 800dca2:	d8e7      	bhi.n	800dc74 <__mdiff+0x80>
 800dca4:	1b33      	subs	r3, r6, r4
 800dca6:	3b15      	subs	r3, #21
 800dca8:	f023 0303 	bic.w	r3, r3, #3
 800dcac:	3304      	adds	r3, #4
 800dcae:	3415      	adds	r4, #21
 800dcb0:	42a6      	cmp	r6, r4
 800dcb2:	bf38      	it	cc
 800dcb4:	2304      	movcc	r3, #4
 800dcb6:	441d      	add	r5, r3
 800dcb8:	4473      	add	r3, lr
 800dcba:	469e      	mov	lr, r3
 800dcbc:	462e      	mov	r6, r5
 800dcbe:	4566      	cmp	r6, ip
 800dcc0:	d30e      	bcc.n	800dce0 <__mdiff+0xec>
 800dcc2:	f10c 0203 	add.w	r2, ip, #3
 800dcc6:	1b52      	subs	r2, r2, r5
 800dcc8:	f022 0203 	bic.w	r2, r2, #3
 800dccc:	3d03      	subs	r5, #3
 800dcce:	45ac      	cmp	ip, r5
 800dcd0:	bf38      	it	cc
 800dcd2:	2200      	movcc	r2, #0
 800dcd4:	441a      	add	r2, r3
 800dcd6:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 800dcda:	b17b      	cbz	r3, 800dcfc <__mdiff+0x108>
 800dcdc:	6107      	str	r7, [r0, #16]
 800dcde:	e7a3      	b.n	800dc28 <__mdiff+0x34>
 800dce0:	f856 8b04 	ldr.w	r8, [r6], #4
 800dce4:	fa11 f288 	uxtah	r2, r1, r8
 800dce8:	1414      	asrs	r4, r2, #16
 800dcea:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800dcee:	b292      	uxth	r2, r2
 800dcf0:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800dcf4:	f84e 2b04 	str.w	r2, [lr], #4
 800dcf8:	1421      	asrs	r1, r4, #16
 800dcfa:	e7e0      	b.n	800dcbe <__mdiff+0xca>
 800dcfc:	3f01      	subs	r7, #1
 800dcfe:	e7ea      	b.n	800dcd6 <__mdiff+0xe2>
 800dd00:	0800f828 	.word	0x0800f828
 800dd04:	0800f8cb 	.word	0x0800f8cb

0800dd08 <__ulp>:
 800dd08:	b082      	sub	sp, #8
 800dd0a:	ed8d 0b00 	vstr	d0, [sp]
 800dd0e:	9b01      	ldr	r3, [sp, #4]
 800dd10:	4912      	ldr	r1, [pc, #72]	; (800dd5c <__ulp+0x54>)
 800dd12:	4019      	ands	r1, r3
 800dd14:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 800dd18:	2900      	cmp	r1, #0
 800dd1a:	dd05      	ble.n	800dd28 <__ulp+0x20>
 800dd1c:	2200      	movs	r2, #0
 800dd1e:	460b      	mov	r3, r1
 800dd20:	ec43 2b10 	vmov	d0, r2, r3
 800dd24:	b002      	add	sp, #8
 800dd26:	4770      	bx	lr
 800dd28:	4249      	negs	r1, r1
 800dd2a:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 800dd2e:	ea4f 5021 	mov.w	r0, r1, asr #20
 800dd32:	f04f 0200 	mov.w	r2, #0
 800dd36:	f04f 0300 	mov.w	r3, #0
 800dd3a:	da04      	bge.n	800dd46 <__ulp+0x3e>
 800dd3c:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 800dd40:	fa41 f300 	asr.w	r3, r1, r0
 800dd44:	e7ec      	b.n	800dd20 <__ulp+0x18>
 800dd46:	f1a0 0114 	sub.w	r1, r0, #20
 800dd4a:	291e      	cmp	r1, #30
 800dd4c:	bfda      	itte	le
 800dd4e:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 800dd52:	fa20 f101 	lsrle.w	r1, r0, r1
 800dd56:	2101      	movgt	r1, #1
 800dd58:	460a      	mov	r2, r1
 800dd5a:	e7e1      	b.n	800dd20 <__ulp+0x18>
 800dd5c:	7ff00000 	.word	0x7ff00000

0800dd60 <__b2d>:
 800dd60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd62:	6905      	ldr	r5, [r0, #16]
 800dd64:	f100 0714 	add.w	r7, r0, #20
 800dd68:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 800dd6c:	1f2e      	subs	r6, r5, #4
 800dd6e:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800dd72:	4620      	mov	r0, r4
 800dd74:	f7ff fd48 	bl	800d808 <__hi0bits>
 800dd78:	f1c0 0320 	rsb	r3, r0, #32
 800dd7c:	280a      	cmp	r0, #10
 800dd7e:	f8df c07c 	ldr.w	ip, [pc, #124]	; 800ddfc <__b2d+0x9c>
 800dd82:	600b      	str	r3, [r1, #0]
 800dd84:	dc14      	bgt.n	800ddb0 <__b2d+0x50>
 800dd86:	f1c0 0e0b 	rsb	lr, r0, #11
 800dd8a:	fa24 f10e 	lsr.w	r1, r4, lr
 800dd8e:	42b7      	cmp	r7, r6
 800dd90:	ea41 030c 	orr.w	r3, r1, ip
 800dd94:	bf34      	ite	cc
 800dd96:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800dd9a:	2100      	movcs	r1, #0
 800dd9c:	3015      	adds	r0, #21
 800dd9e:	fa04 f000 	lsl.w	r0, r4, r0
 800dda2:	fa21 f10e 	lsr.w	r1, r1, lr
 800dda6:	ea40 0201 	orr.w	r2, r0, r1
 800ddaa:	ec43 2b10 	vmov	d0, r2, r3
 800ddae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ddb0:	42b7      	cmp	r7, r6
 800ddb2:	bf3a      	itte	cc
 800ddb4:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 800ddb8:	f1a5 0608 	subcc.w	r6, r5, #8
 800ddbc:	2100      	movcs	r1, #0
 800ddbe:	380b      	subs	r0, #11
 800ddc0:	d017      	beq.n	800ddf2 <__b2d+0x92>
 800ddc2:	f1c0 0c20 	rsb	ip, r0, #32
 800ddc6:	fa04 f500 	lsl.w	r5, r4, r0
 800ddca:	42be      	cmp	r6, r7
 800ddcc:	fa21 f40c 	lsr.w	r4, r1, ip
 800ddd0:	ea45 0504 	orr.w	r5, r5, r4
 800ddd4:	bf8c      	ite	hi
 800ddd6:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 800ddda:	2400      	movls	r4, #0
 800dddc:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 800dde0:	fa01 f000 	lsl.w	r0, r1, r0
 800dde4:	fa24 f40c 	lsr.w	r4, r4, ip
 800dde8:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800ddec:	ea40 0204 	orr.w	r2, r0, r4
 800ddf0:	e7db      	b.n	800ddaa <__b2d+0x4a>
 800ddf2:	ea44 030c 	orr.w	r3, r4, ip
 800ddf6:	460a      	mov	r2, r1
 800ddf8:	e7d7      	b.n	800ddaa <__b2d+0x4a>
 800ddfa:	bf00      	nop
 800ddfc:	3ff00000 	.word	0x3ff00000

0800de00 <__d2b>:
 800de00:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800de04:	4689      	mov	r9, r1
 800de06:	2101      	movs	r1, #1
 800de08:	ec57 6b10 	vmov	r6, r7, d0
 800de0c:	4690      	mov	r8, r2
 800de0e:	f7ff fc09 	bl	800d624 <_Balloc>
 800de12:	4604      	mov	r4, r0
 800de14:	b930      	cbnz	r0, 800de24 <__d2b+0x24>
 800de16:	4602      	mov	r2, r0
 800de18:	4b25      	ldr	r3, [pc, #148]	; (800deb0 <__d2b+0xb0>)
 800de1a:	4826      	ldr	r0, [pc, #152]	; (800deb4 <__d2b+0xb4>)
 800de1c:	f240 310a 	movw	r1, #778	; 0x30a
 800de20:	f000 fd78 	bl	800e914 <__assert_func>
 800de24:	f3c7 550a 	ubfx	r5, r7, #20, #11
 800de28:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800de2c:	bb35      	cbnz	r5, 800de7c <__d2b+0x7c>
 800de2e:	2e00      	cmp	r6, #0
 800de30:	9301      	str	r3, [sp, #4]
 800de32:	d028      	beq.n	800de86 <__d2b+0x86>
 800de34:	4668      	mov	r0, sp
 800de36:	9600      	str	r6, [sp, #0]
 800de38:	f7ff fd06 	bl	800d848 <__lo0bits>
 800de3c:	9900      	ldr	r1, [sp, #0]
 800de3e:	b300      	cbz	r0, 800de82 <__d2b+0x82>
 800de40:	9a01      	ldr	r2, [sp, #4]
 800de42:	f1c0 0320 	rsb	r3, r0, #32
 800de46:	fa02 f303 	lsl.w	r3, r2, r3
 800de4a:	430b      	orrs	r3, r1
 800de4c:	40c2      	lsrs	r2, r0
 800de4e:	6163      	str	r3, [r4, #20]
 800de50:	9201      	str	r2, [sp, #4]
 800de52:	9b01      	ldr	r3, [sp, #4]
 800de54:	61a3      	str	r3, [r4, #24]
 800de56:	2b00      	cmp	r3, #0
 800de58:	bf14      	ite	ne
 800de5a:	2202      	movne	r2, #2
 800de5c:	2201      	moveq	r2, #1
 800de5e:	6122      	str	r2, [r4, #16]
 800de60:	b1d5      	cbz	r5, 800de98 <__d2b+0x98>
 800de62:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800de66:	4405      	add	r5, r0
 800de68:	f8c9 5000 	str.w	r5, [r9]
 800de6c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800de70:	f8c8 0000 	str.w	r0, [r8]
 800de74:	4620      	mov	r0, r4
 800de76:	b003      	add	sp, #12
 800de78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800de7c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800de80:	e7d5      	b.n	800de2e <__d2b+0x2e>
 800de82:	6161      	str	r1, [r4, #20]
 800de84:	e7e5      	b.n	800de52 <__d2b+0x52>
 800de86:	a801      	add	r0, sp, #4
 800de88:	f7ff fcde 	bl	800d848 <__lo0bits>
 800de8c:	9b01      	ldr	r3, [sp, #4]
 800de8e:	6163      	str	r3, [r4, #20]
 800de90:	2201      	movs	r2, #1
 800de92:	6122      	str	r2, [r4, #16]
 800de94:	3020      	adds	r0, #32
 800de96:	e7e3      	b.n	800de60 <__d2b+0x60>
 800de98:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800de9c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800dea0:	f8c9 0000 	str.w	r0, [r9]
 800dea4:	6918      	ldr	r0, [r3, #16]
 800dea6:	f7ff fcaf 	bl	800d808 <__hi0bits>
 800deaa:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800deae:	e7df      	b.n	800de70 <__d2b+0x70>
 800deb0:	0800f828 	.word	0x0800f828
 800deb4:	0800f8cb 	.word	0x0800f8cb

0800deb8 <__ratio>:
 800deb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800debc:	4688      	mov	r8, r1
 800debe:	4669      	mov	r1, sp
 800dec0:	4681      	mov	r9, r0
 800dec2:	f7ff ff4d 	bl	800dd60 <__b2d>
 800dec6:	a901      	add	r1, sp, #4
 800dec8:	4640      	mov	r0, r8
 800deca:	ec55 4b10 	vmov	r4, r5, d0
 800dece:	f7ff ff47 	bl	800dd60 <__b2d>
 800ded2:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800ded6:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800deda:	eba3 0c02 	sub.w	ip, r3, r2
 800dede:	e9dd 3200 	ldrd	r3, r2, [sp]
 800dee2:	1a9b      	subs	r3, r3, r2
 800dee4:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800dee8:	ec51 0b10 	vmov	r0, r1, d0
 800deec:	2b00      	cmp	r3, #0
 800deee:	bfd6      	itet	le
 800def0:	460a      	movle	r2, r1
 800def2:	462a      	movgt	r2, r5
 800def4:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800def8:	468b      	mov	fp, r1
 800defa:	462f      	mov	r7, r5
 800defc:	bfd4      	ite	le
 800defe:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800df02:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800df06:	4620      	mov	r0, r4
 800df08:	ee10 2a10 	vmov	r2, s0
 800df0c:	465b      	mov	r3, fp
 800df0e:	4639      	mov	r1, r7
 800df10:	f7f2 fc74 	bl	80007fc <__aeabi_ddiv>
 800df14:	ec41 0b10 	vmov	d0, r0, r1
 800df18:	b003      	add	sp, #12
 800df1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800df1e <__copybits>:
 800df1e:	3901      	subs	r1, #1
 800df20:	b570      	push	{r4, r5, r6, lr}
 800df22:	1149      	asrs	r1, r1, #5
 800df24:	6914      	ldr	r4, [r2, #16]
 800df26:	3101      	adds	r1, #1
 800df28:	f102 0314 	add.w	r3, r2, #20
 800df2c:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800df30:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800df34:	1f05      	subs	r5, r0, #4
 800df36:	42a3      	cmp	r3, r4
 800df38:	d30c      	bcc.n	800df54 <__copybits+0x36>
 800df3a:	1aa3      	subs	r3, r4, r2
 800df3c:	3b11      	subs	r3, #17
 800df3e:	f023 0303 	bic.w	r3, r3, #3
 800df42:	3211      	adds	r2, #17
 800df44:	42a2      	cmp	r2, r4
 800df46:	bf88      	it	hi
 800df48:	2300      	movhi	r3, #0
 800df4a:	4418      	add	r0, r3
 800df4c:	2300      	movs	r3, #0
 800df4e:	4288      	cmp	r0, r1
 800df50:	d305      	bcc.n	800df5e <__copybits+0x40>
 800df52:	bd70      	pop	{r4, r5, r6, pc}
 800df54:	f853 6b04 	ldr.w	r6, [r3], #4
 800df58:	f845 6f04 	str.w	r6, [r5, #4]!
 800df5c:	e7eb      	b.n	800df36 <__copybits+0x18>
 800df5e:	f840 3b04 	str.w	r3, [r0], #4
 800df62:	e7f4      	b.n	800df4e <__copybits+0x30>

0800df64 <__any_on>:
 800df64:	f100 0214 	add.w	r2, r0, #20
 800df68:	6900      	ldr	r0, [r0, #16]
 800df6a:	114b      	asrs	r3, r1, #5
 800df6c:	4298      	cmp	r0, r3
 800df6e:	b510      	push	{r4, lr}
 800df70:	db11      	blt.n	800df96 <__any_on+0x32>
 800df72:	dd0a      	ble.n	800df8a <__any_on+0x26>
 800df74:	f011 011f 	ands.w	r1, r1, #31
 800df78:	d007      	beq.n	800df8a <__any_on+0x26>
 800df7a:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800df7e:	fa24 f001 	lsr.w	r0, r4, r1
 800df82:	fa00 f101 	lsl.w	r1, r0, r1
 800df86:	428c      	cmp	r4, r1
 800df88:	d10b      	bne.n	800dfa2 <__any_on+0x3e>
 800df8a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800df8e:	4293      	cmp	r3, r2
 800df90:	d803      	bhi.n	800df9a <__any_on+0x36>
 800df92:	2000      	movs	r0, #0
 800df94:	bd10      	pop	{r4, pc}
 800df96:	4603      	mov	r3, r0
 800df98:	e7f7      	b.n	800df8a <__any_on+0x26>
 800df9a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800df9e:	2900      	cmp	r1, #0
 800dfa0:	d0f5      	beq.n	800df8e <__any_on+0x2a>
 800dfa2:	2001      	movs	r0, #1
 800dfa4:	e7f6      	b.n	800df94 <__any_on+0x30>

0800dfa6 <_calloc_r>:
 800dfa6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dfa8:	fba1 2402 	umull	r2, r4, r1, r2
 800dfac:	b94c      	cbnz	r4, 800dfc2 <_calloc_r+0x1c>
 800dfae:	4611      	mov	r1, r2
 800dfb0:	9201      	str	r2, [sp, #4]
 800dfb2:	f7fd fe0d 	bl	800bbd0 <_malloc_r>
 800dfb6:	9a01      	ldr	r2, [sp, #4]
 800dfb8:	4605      	mov	r5, r0
 800dfba:	b930      	cbnz	r0, 800dfca <_calloc_r+0x24>
 800dfbc:	4628      	mov	r0, r5
 800dfbe:	b003      	add	sp, #12
 800dfc0:	bd30      	pop	{r4, r5, pc}
 800dfc2:	220c      	movs	r2, #12
 800dfc4:	6002      	str	r2, [r0, #0]
 800dfc6:	2500      	movs	r5, #0
 800dfc8:	e7f8      	b.n	800dfbc <_calloc_r+0x16>
 800dfca:	4621      	mov	r1, r4
 800dfcc:	f7fd fd8c 	bl	800bae8 <memset>
 800dfd0:	e7f4      	b.n	800dfbc <_calloc_r+0x16>

0800dfd2 <_realloc_r>:
 800dfd2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfd6:	4680      	mov	r8, r0
 800dfd8:	4614      	mov	r4, r2
 800dfda:	460e      	mov	r6, r1
 800dfdc:	b921      	cbnz	r1, 800dfe8 <_realloc_r+0x16>
 800dfde:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dfe2:	4611      	mov	r1, r2
 800dfe4:	f7fd bdf4 	b.w	800bbd0 <_malloc_r>
 800dfe8:	b92a      	cbnz	r2, 800dff6 <_realloc_r+0x24>
 800dfea:	f7fd fd85 	bl	800baf8 <_free_r>
 800dfee:	4625      	mov	r5, r4
 800dff0:	4628      	mov	r0, r5
 800dff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dff6:	f000 fcbd 	bl	800e974 <_malloc_usable_size_r>
 800dffa:	4284      	cmp	r4, r0
 800dffc:	4607      	mov	r7, r0
 800dffe:	d802      	bhi.n	800e006 <_realloc_r+0x34>
 800e000:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800e004:	d812      	bhi.n	800e02c <_realloc_r+0x5a>
 800e006:	4621      	mov	r1, r4
 800e008:	4640      	mov	r0, r8
 800e00a:	f7fd fde1 	bl	800bbd0 <_malloc_r>
 800e00e:	4605      	mov	r5, r0
 800e010:	2800      	cmp	r0, #0
 800e012:	d0ed      	beq.n	800dff0 <_realloc_r+0x1e>
 800e014:	42bc      	cmp	r4, r7
 800e016:	4622      	mov	r2, r4
 800e018:	4631      	mov	r1, r6
 800e01a:	bf28      	it	cs
 800e01c:	463a      	movcs	r2, r7
 800e01e:	f7fd fd3b 	bl	800ba98 <memcpy>
 800e022:	4631      	mov	r1, r6
 800e024:	4640      	mov	r0, r8
 800e026:	f7fd fd67 	bl	800baf8 <_free_r>
 800e02a:	e7e1      	b.n	800dff0 <_realloc_r+0x1e>
 800e02c:	4635      	mov	r5, r6
 800e02e:	e7df      	b.n	800dff0 <_realloc_r+0x1e>

0800e030 <__ssputs_r>:
 800e030:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e034:	688e      	ldr	r6, [r1, #8]
 800e036:	429e      	cmp	r6, r3
 800e038:	4682      	mov	sl, r0
 800e03a:	460c      	mov	r4, r1
 800e03c:	4690      	mov	r8, r2
 800e03e:	461f      	mov	r7, r3
 800e040:	d838      	bhi.n	800e0b4 <__ssputs_r+0x84>
 800e042:	898a      	ldrh	r2, [r1, #12]
 800e044:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800e048:	d032      	beq.n	800e0b0 <__ssputs_r+0x80>
 800e04a:	6825      	ldr	r5, [r4, #0]
 800e04c:	6909      	ldr	r1, [r1, #16]
 800e04e:	eba5 0901 	sub.w	r9, r5, r1
 800e052:	6965      	ldr	r5, [r4, #20]
 800e054:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800e058:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800e05c:	3301      	adds	r3, #1
 800e05e:	444b      	add	r3, r9
 800e060:	106d      	asrs	r5, r5, #1
 800e062:	429d      	cmp	r5, r3
 800e064:	bf38      	it	cc
 800e066:	461d      	movcc	r5, r3
 800e068:	0553      	lsls	r3, r2, #21
 800e06a:	d531      	bpl.n	800e0d0 <__ssputs_r+0xa0>
 800e06c:	4629      	mov	r1, r5
 800e06e:	f7fd fdaf 	bl	800bbd0 <_malloc_r>
 800e072:	4606      	mov	r6, r0
 800e074:	b950      	cbnz	r0, 800e08c <__ssputs_r+0x5c>
 800e076:	230c      	movs	r3, #12
 800e078:	f8ca 3000 	str.w	r3, [sl]
 800e07c:	89a3      	ldrh	r3, [r4, #12]
 800e07e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e082:	81a3      	strh	r3, [r4, #12]
 800e084:	f04f 30ff 	mov.w	r0, #4294967295
 800e088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e08c:	6921      	ldr	r1, [r4, #16]
 800e08e:	464a      	mov	r2, r9
 800e090:	f7fd fd02 	bl	800ba98 <memcpy>
 800e094:	89a3      	ldrh	r3, [r4, #12]
 800e096:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800e09a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800e09e:	81a3      	strh	r3, [r4, #12]
 800e0a0:	6126      	str	r6, [r4, #16]
 800e0a2:	6165      	str	r5, [r4, #20]
 800e0a4:	444e      	add	r6, r9
 800e0a6:	eba5 0509 	sub.w	r5, r5, r9
 800e0aa:	6026      	str	r6, [r4, #0]
 800e0ac:	60a5      	str	r5, [r4, #8]
 800e0ae:	463e      	mov	r6, r7
 800e0b0:	42be      	cmp	r6, r7
 800e0b2:	d900      	bls.n	800e0b6 <__ssputs_r+0x86>
 800e0b4:	463e      	mov	r6, r7
 800e0b6:	6820      	ldr	r0, [r4, #0]
 800e0b8:	4632      	mov	r2, r6
 800e0ba:	4641      	mov	r1, r8
 800e0bc:	f7fd fcfa 	bl	800bab4 <memmove>
 800e0c0:	68a3      	ldr	r3, [r4, #8]
 800e0c2:	1b9b      	subs	r3, r3, r6
 800e0c4:	60a3      	str	r3, [r4, #8]
 800e0c6:	6823      	ldr	r3, [r4, #0]
 800e0c8:	4433      	add	r3, r6
 800e0ca:	6023      	str	r3, [r4, #0]
 800e0cc:	2000      	movs	r0, #0
 800e0ce:	e7db      	b.n	800e088 <__ssputs_r+0x58>
 800e0d0:	462a      	mov	r2, r5
 800e0d2:	f7ff ff7e 	bl	800dfd2 <_realloc_r>
 800e0d6:	4606      	mov	r6, r0
 800e0d8:	2800      	cmp	r0, #0
 800e0da:	d1e1      	bne.n	800e0a0 <__ssputs_r+0x70>
 800e0dc:	6921      	ldr	r1, [r4, #16]
 800e0de:	4650      	mov	r0, sl
 800e0e0:	f7fd fd0a 	bl	800baf8 <_free_r>
 800e0e4:	e7c7      	b.n	800e076 <__ssputs_r+0x46>
	...

0800e0e8 <_svfiprintf_r>:
 800e0e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0ec:	4698      	mov	r8, r3
 800e0ee:	898b      	ldrh	r3, [r1, #12]
 800e0f0:	061b      	lsls	r3, r3, #24
 800e0f2:	b09d      	sub	sp, #116	; 0x74
 800e0f4:	4607      	mov	r7, r0
 800e0f6:	460d      	mov	r5, r1
 800e0f8:	4614      	mov	r4, r2
 800e0fa:	d50e      	bpl.n	800e11a <_svfiprintf_r+0x32>
 800e0fc:	690b      	ldr	r3, [r1, #16]
 800e0fe:	b963      	cbnz	r3, 800e11a <_svfiprintf_r+0x32>
 800e100:	2140      	movs	r1, #64	; 0x40
 800e102:	f7fd fd65 	bl	800bbd0 <_malloc_r>
 800e106:	6028      	str	r0, [r5, #0]
 800e108:	6128      	str	r0, [r5, #16]
 800e10a:	b920      	cbnz	r0, 800e116 <_svfiprintf_r+0x2e>
 800e10c:	230c      	movs	r3, #12
 800e10e:	603b      	str	r3, [r7, #0]
 800e110:	f04f 30ff 	mov.w	r0, #4294967295
 800e114:	e0d1      	b.n	800e2ba <_svfiprintf_r+0x1d2>
 800e116:	2340      	movs	r3, #64	; 0x40
 800e118:	616b      	str	r3, [r5, #20]
 800e11a:	2300      	movs	r3, #0
 800e11c:	9309      	str	r3, [sp, #36]	; 0x24
 800e11e:	2320      	movs	r3, #32
 800e120:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e124:	f8cd 800c 	str.w	r8, [sp, #12]
 800e128:	2330      	movs	r3, #48	; 0x30
 800e12a:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 800e2d4 <_svfiprintf_r+0x1ec>
 800e12e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e132:	f04f 0901 	mov.w	r9, #1
 800e136:	4623      	mov	r3, r4
 800e138:	469a      	mov	sl, r3
 800e13a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e13e:	b10a      	cbz	r2, 800e144 <_svfiprintf_r+0x5c>
 800e140:	2a25      	cmp	r2, #37	; 0x25
 800e142:	d1f9      	bne.n	800e138 <_svfiprintf_r+0x50>
 800e144:	ebba 0b04 	subs.w	fp, sl, r4
 800e148:	d00b      	beq.n	800e162 <_svfiprintf_r+0x7a>
 800e14a:	465b      	mov	r3, fp
 800e14c:	4622      	mov	r2, r4
 800e14e:	4629      	mov	r1, r5
 800e150:	4638      	mov	r0, r7
 800e152:	f7ff ff6d 	bl	800e030 <__ssputs_r>
 800e156:	3001      	adds	r0, #1
 800e158:	f000 80aa 	beq.w	800e2b0 <_svfiprintf_r+0x1c8>
 800e15c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e15e:	445a      	add	r2, fp
 800e160:	9209      	str	r2, [sp, #36]	; 0x24
 800e162:	f89a 3000 	ldrb.w	r3, [sl]
 800e166:	2b00      	cmp	r3, #0
 800e168:	f000 80a2 	beq.w	800e2b0 <_svfiprintf_r+0x1c8>
 800e16c:	2300      	movs	r3, #0
 800e16e:	f04f 32ff 	mov.w	r2, #4294967295
 800e172:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e176:	f10a 0a01 	add.w	sl, sl, #1
 800e17a:	9304      	str	r3, [sp, #16]
 800e17c:	9307      	str	r3, [sp, #28]
 800e17e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e182:	931a      	str	r3, [sp, #104]	; 0x68
 800e184:	4654      	mov	r4, sl
 800e186:	2205      	movs	r2, #5
 800e188:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e18c:	4851      	ldr	r0, [pc, #324]	; (800e2d4 <_svfiprintf_r+0x1ec>)
 800e18e:	f7f1 ffff 	bl	8000190 <memchr>
 800e192:	9a04      	ldr	r2, [sp, #16]
 800e194:	b9d8      	cbnz	r0, 800e1ce <_svfiprintf_r+0xe6>
 800e196:	06d0      	lsls	r0, r2, #27
 800e198:	bf44      	itt	mi
 800e19a:	2320      	movmi	r3, #32
 800e19c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e1a0:	0711      	lsls	r1, r2, #28
 800e1a2:	bf44      	itt	mi
 800e1a4:	232b      	movmi	r3, #43	; 0x2b
 800e1a6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e1aa:	f89a 3000 	ldrb.w	r3, [sl]
 800e1ae:	2b2a      	cmp	r3, #42	; 0x2a
 800e1b0:	d015      	beq.n	800e1de <_svfiprintf_r+0xf6>
 800e1b2:	9a07      	ldr	r2, [sp, #28]
 800e1b4:	4654      	mov	r4, sl
 800e1b6:	2000      	movs	r0, #0
 800e1b8:	f04f 0c0a 	mov.w	ip, #10
 800e1bc:	4621      	mov	r1, r4
 800e1be:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e1c2:	3b30      	subs	r3, #48	; 0x30
 800e1c4:	2b09      	cmp	r3, #9
 800e1c6:	d94e      	bls.n	800e266 <_svfiprintf_r+0x17e>
 800e1c8:	b1b0      	cbz	r0, 800e1f8 <_svfiprintf_r+0x110>
 800e1ca:	9207      	str	r2, [sp, #28]
 800e1cc:	e014      	b.n	800e1f8 <_svfiprintf_r+0x110>
 800e1ce:	eba0 0308 	sub.w	r3, r0, r8
 800e1d2:	fa09 f303 	lsl.w	r3, r9, r3
 800e1d6:	4313      	orrs	r3, r2
 800e1d8:	9304      	str	r3, [sp, #16]
 800e1da:	46a2      	mov	sl, r4
 800e1dc:	e7d2      	b.n	800e184 <_svfiprintf_r+0x9c>
 800e1de:	9b03      	ldr	r3, [sp, #12]
 800e1e0:	1d19      	adds	r1, r3, #4
 800e1e2:	681b      	ldr	r3, [r3, #0]
 800e1e4:	9103      	str	r1, [sp, #12]
 800e1e6:	2b00      	cmp	r3, #0
 800e1e8:	bfbb      	ittet	lt
 800e1ea:	425b      	neglt	r3, r3
 800e1ec:	f042 0202 	orrlt.w	r2, r2, #2
 800e1f0:	9307      	strge	r3, [sp, #28]
 800e1f2:	9307      	strlt	r3, [sp, #28]
 800e1f4:	bfb8      	it	lt
 800e1f6:	9204      	strlt	r2, [sp, #16]
 800e1f8:	7823      	ldrb	r3, [r4, #0]
 800e1fa:	2b2e      	cmp	r3, #46	; 0x2e
 800e1fc:	d10c      	bne.n	800e218 <_svfiprintf_r+0x130>
 800e1fe:	7863      	ldrb	r3, [r4, #1]
 800e200:	2b2a      	cmp	r3, #42	; 0x2a
 800e202:	d135      	bne.n	800e270 <_svfiprintf_r+0x188>
 800e204:	9b03      	ldr	r3, [sp, #12]
 800e206:	1d1a      	adds	r2, r3, #4
 800e208:	681b      	ldr	r3, [r3, #0]
 800e20a:	9203      	str	r2, [sp, #12]
 800e20c:	2b00      	cmp	r3, #0
 800e20e:	bfb8      	it	lt
 800e210:	f04f 33ff 	movlt.w	r3, #4294967295
 800e214:	3402      	adds	r4, #2
 800e216:	9305      	str	r3, [sp, #20]
 800e218:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 800e2e4 <_svfiprintf_r+0x1fc>
 800e21c:	7821      	ldrb	r1, [r4, #0]
 800e21e:	2203      	movs	r2, #3
 800e220:	4650      	mov	r0, sl
 800e222:	f7f1 ffb5 	bl	8000190 <memchr>
 800e226:	b140      	cbz	r0, 800e23a <_svfiprintf_r+0x152>
 800e228:	2340      	movs	r3, #64	; 0x40
 800e22a:	eba0 000a 	sub.w	r0, r0, sl
 800e22e:	fa03 f000 	lsl.w	r0, r3, r0
 800e232:	9b04      	ldr	r3, [sp, #16]
 800e234:	4303      	orrs	r3, r0
 800e236:	3401      	adds	r4, #1
 800e238:	9304      	str	r3, [sp, #16]
 800e23a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e23e:	4826      	ldr	r0, [pc, #152]	; (800e2d8 <_svfiprintf_r+0x1f0>)
 800e240:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e244:	2206      	movs	r2, #6
 800e246:	f7f1 ffa3 	bl	8000190 <memchr>
 800e24a:	2800      	cmp	r0, #0
 800e24c:	d038      	beq.n	800e2c0 <_svfiprintf_r+0x1d8>
 800e24e:	4b23      	ldr	r3, [pc, #140]	; (800e2dc <_svfiprintf_r+0x1f4>)
 800e250:	bb1b      	cbnz	r3, 800e29a <_svfiprintf_r+0x1b2>
 800e252:	9b03      	ldr	r3, [sp, #12]
 800e254:	3307      	adds	r3, #7
 800e256:	f023 0307 	bic.w	r3, r3, #7
 800e25a:	3308      	adds	r3, #8
 800e25c:	9303      	str	r3, [sp, #12]
 800e25e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e260:	4433      	add	r3, r6
 800e262:	9309      	str	r3, [sp, #36]	; 0x24
 800e264:	e767      	b.n	800e136 <_svfiprintf_r+0x4e>
 800e266:	fb0c 3202 	mla	r2, ip, r2, r3
 800e26a:	460c      	mov	r4, r1
 800e26c:	2001      	movs	r0, #1
 800e26e:	e7a5      	b.n	800e1bc <_svfiprintf_r+0xd4>
 800e270:	2300      	movs	r3, #0
 800e272:	3401      	adds	r4, #1
 800e274:	9305      	str	r3, [sp, #20]
 800e276:	4619      	mov	r1, r3
 800e278:	f04f 0c0a 	mov.w	ip, #10
 800e27c:	4620      	mov	r0, r4
 800e27e:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e282:	3a30      	subs	r2, #48	; 0x30
 800e284:	2a09      	cmp	r2, #9
 800e286:	d903      	bls.n	800e290 <_svfiprintf_r+0x1a8>
 800e288:	2b00      	cmp	r3, #0
 800e28a:	d0c5      	beq.n	800e218 <_svfiprintf_r+0x130>
 800e28c:	9105      	str	r1, [sp, #20]
 800e28e:	e7c3      	b.n	800e218 <_svfiprintf_r+0x130>
 800e290:	fb0c 2101 	mla	r1, ip, r1, r2
 800e294:	4604      	mov	r4, r0
 800e296:	2301      	movs	r3, #1
 800e298:	e7f0      	b.n	800e27c <_svfiprintf_r+0x194>
 800e29a:	ab03      	add	r3, sp, #12
 800e29c:	9300      	str	r3, [sp, #0]
 800e29e:	462a      	mov	r2, r5
 800e2a0:	4b0f      	ldr	r3, [pc, #60]	; (800e2e0 <_svfiprintf_r+0x1f8>)
 800e2a2:	a904      	add	r1, sp, #16
 800e2a4:	4638      	mov	r0, r7
 800e2a6:	f3af 8000 	nop.w
 800e2aa:	1c42      	adds	r2, r0, #1
 800e2ac:	4606      	mov	r6, r0
 800e2ae:	d1d6      	bne.n	800e25e <_svfiprintf_r+0x176>
 800e2b0:	89ab      	ldrh	r3, [r5, #12]
 800e2b2:	065b      	lsls	r3, r3, #25
 800e2b4:	f53f af2c 	bmi.w	800e110 <_svfiprintf_r+0x28>
 800e2b8:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e2ba:	b01d      	add	sp, #116	; 0x74
 800e2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2c0:	ab03      	add	r3, sp, #12
 800e2c2:	9300      	str	r3, [sp, #0]
 800e2c4:	462a      	mov	r2, r5
 800e2c6:	4b06      	ldr	r3, [pc, #24]	; (800e2e0 <_svfiprintf_r+0x1f8>)
 800e2c8:	a904      	add	r1, sp, #16
 800e2ca:	4638      	mov	r0, r7
 800e2cc:	f000 f9d4 	bl	800e678 <_printf_i>
 800e2d0:	e7eb      	b.n	800e2aa <_svfiprintf_r+0x1c2>
 800e2d2:	bf00      	nop
 800e2d4:	0800fa24 	.word	0x0800fa24
 800e2d8:	0800fa2e 	.word	0x0800fa2e
 800e2dc:	00000000 	.word	0x00000000
 800e2e0:	0800e031 	.word	0x0800e031
 800e2e4:	0800fa2a 	.word	0x0800fa2a

0800e2e8 <__sfputc_r>:
 800e2e8:	6893      	ldr	r3, [r2, #8]
 800e2ea:	3b01      	subs	r3, #1
 800e2ec:	2b00      	cmp	r3, #0
 800e2ee:	b410      	push	{r4}
 800e2f0:	6093      	str	r3, [r2, #8]
 800e2f2:	da08      	bge.n	800e306 <__sfputc_r+0x1e>
 800e2f4:	6994      	ldr	r4, [r2, #24]
 800e2f6:	42a3      	cmp	r3, r4
 800e2f8:	db01      	blt.n	800e2fe <__sfputc_r+0x16>
 800e2fa:	290a      	cmp	r1, #10
 800e2fc:	d103      	bne.n	800e306 <__sfputc_r+0x1e>
 800e2fe:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e302:	f7fe bceb 	b.w	800ccdc <__swbuf_r>
 800e306:	6813      	ldr	r3, [r2, #0]
 800e308:	1c58      	adds	r0, r3, #1
 800e30a:	6010      	str	r0, [r2, #0]
 800e30c:	7019      	strb	r1, [r3, #0]
 800e30e:	4608      	mov	r0, r1
 800e310:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e314:	4770      	bx	lr

0800e316 <__sfputs_r>:
 800e316:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e318:	4606      	mov	r6, r0
 800e31a:	460f      	mov	r7, r1
 800e31c:	4614      	mov	r4, r2
 800e31e:	18d5      	adds	r5, r2, r3
 800e320:	42ac      	cmp	r4, r5
 800e322:	d101      	bne.n	800e328 <__sfputs_r+0x12>
 800e324:	2000      	movs	r0, #0
 800e326:	e007      	b.n	800e338 <__sfputs_r+0x22>
 800e328:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e32c:	463a      	mov	r2, r7
 800e32e:	4630      	mov	r0, r6
 800e330:	f7ff ffda 	bl	800e2e8 <__sfputc_r>
 800e334:	1c43      	adds	r3, r0, #1
 800e336:	d1f3      	bne.n	800e320 <__sfputs_r+0xa>
 800e338:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800e33c <_vfiprintf_r>:
 800e33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e340:	460d      	mov	r5, r1
 800e342:	b09d      	sub	sp, #116	; 0x74
 800e344:	4614      	mov	r4, r2
 800e346:	4698      	mov	r8, r3
 800e348:	4606      	mov	r6, r0
 800e34a:	b118      	cbz	r0, 800e354 <_vfiprintf_r+0x18>
 800e34c:	6983      	ldr	r3, [r0, #24]
 800e34e:	b90b      	cbnz	r3, 800e354 <_vfiprintf_r+0x18>
 800e350:	f7fd fa68 	bl	800b824 <__sinit>
 800e354:	4b89      	ldr	r3, [pc, #548]	; (800e57c <_vfiprintf_r+0x240>)
 800e356:	429d      	cmp	r5, r3
 800e358:	d11b      	bne.n	800e392 <_vfiprintf_r+0x56>
 800e35a:	6875      	ldr	r5, [r6, #4]
 800e35c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e35e:	07d9      	lsls	r1, r3, #31
 800e360:	d405      	bmi.n	800e36e <_vfiprintf_r+0x32>
 800e362:	89ab      	ldrh	r3, [r5, #12]
 800e364:	059a      	lsls	r2, r3, #22
 800e366:	d402      	bmi.n	800e36e <_vfiprintf_r+0x32>
 800e368:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e36a:	f7fd fb1e 	bl	800b9aa <__retarget_lock_acquire_recursive>
 800e36e:	89ab      	ldrh	r3, [r5, #12]
 800e370:	071b      	lsls	r3, r3, #28
 800e372:	d501      	bpl.n	800e378 <_vfiprintf_r+0x3c>
 800e374:	692b      	ldr	r3, [r5, #16]
 800e376:	b9eb      	cbnz	r3, 800e3b4 <_vfiprintf_r+0x78>
 800e378:	4629      	mov	r1, r5
 800e37a:	4630      	mov	r0, r6
 800e37c:	f7fe fd12 	bl	800cda4 <__swsetup_r>
 800e380:	b1c0      	cbz	r0, 800e3b4 <_vfiprintf_r+0x78>
 800e382:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e384:	07dc      	lsls	r4, r3, #31
 800e386:	d50e      	bpl.n	800e3a6 <_vfiprintf_r+0x6a>
 800e388:	f04f 30ff 	mov.w	r0, #4294967295
 800e38c:	b01d      	add	sp, #116	; 0x74
 800e38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e392:	4b7b      	ldr	r3, [pc, #492]	; (800e580 <_vfiprintf_r+0x244>)
 800e394:	429d      	cmp	r5, r3
 800e396:	d101      	bne.n	800e39c <_vfiprintf_r+0x60>
 800e398:	68b5      	ldr	r5, [r6, #8]
 800e39a:	e7df      	b.n	800e35c <_vfiprintf_r+0x20>
 800e39c:	4b79      	ldr	r3, [pc, #484]	; (800e584 <_vfiprintf_r+0x248>)
 800e39e:	429d      	cmp	r5, r3
 800e3a0:	bf08      	it	eq
 800e3a2:	68f5      	ldreq	r5, [r6, #12]
 800e3a4:	e7da      	b.n	800e35c <_vfiprintf_r+0x20>
 800e3a6:	89ab      	ldrh	r3, [r5, #12]
 800e3a8:	0598      	lsls	r0, r3, #22
 800e3aa:	d4ed      	bmi.n	800e388 <_vfiprintf_r+0x4c>
 800e3ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e3ae:	f7fd fafd 	bl	800b9ac <__retarget_lock_release_recursive>
 800e3b2:	e7e9      	b.n	800e388 <_vfiprintf_r+0x4c>
 800e3b4:	2300      	movs	r3, #0
 800e3b6:	9309      	str	r3, [sp, #36]	; 0x24
 800e3b8:	2320      	movs	r3, #32
 800e3ba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e3be:	f8cd 800c 	str.w	r8, [sp, #12]
 800e3c2:	2330      	movs	r3, #48	; 0x30
 800e3c4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 800e588 <_vfiprintf_r+0x24c>
 800e3c8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e3cc:	f04f 0901 	mov.w	r9, #1
 800e3d0:	4623      	mov	r3, r4
 800e3d2:	469a      	mov	sl, r3
 800e3d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e3d8:	b10a      	cbz	r2, 800e3de <_vfiprintf_r+0xa2>
 800e3da:	2a25      	cmp	r2, #37	; 0x25
 800e3dc:	d1f9      	bne.n	800e3d2 <_vfiprintf_r+0x96>
 800e3de:	ebba 0b04 	subs.w	fp, sl, r4
 800e3e2:	d00b      	beq.n	800e3fc <_vfiprintf_r+0xc0>
 800e3e4:	465b      	mov	r3, fp
 800e3e6:	4622      	mov	r2, r4
 800e3e8:	4629      	mov	r1, r5
 800e3ea:	4630      	mov	r0, r6
 800e3ec:	f7ff ff93 	bl	800e316 <__sfputs_r>
 800e3f0:	3001      	adds	r0, #1
 800e3f2:	f000 80aa 	beq.w	800e54a <_vfiprintf_r+0x20e>
 800e3f6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e3f8:	445a      	add	r2, fp
 800e3fa:	9209      	str	r2, [sp, #36]	; 0x24
 800e3fc:	f89a 3000 	ldrb.w	r3, [sl]
 800e400:	2b00      	cmp	r3, #0
 800e402:	f000 80a2 	beq.w	800e54a <_vfiprintf_r+0x20e>
 800e406:	2300      	movs	r3, #0
 800e408:	f04f 32ff 	mov.w	r2, #4294967295
 800e40c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e410:	f10a 0a01 	add.w	sl, sl, #1
 800e414:	9304      	str	r3, [sp, #16]
 800e416:	9307      	str	r3, [sp, #28]
 800e418:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e41c:	931a      	str	r3, [sp, #104]	; 0x68
 800e41e:	4654      	mov	r4, sl
 800e420:	2205      	movs	r2, #5
 800e422:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e426:	4858      	ldr	r0, [pc, #352]	; (800e588 <_vfiprintf_r+0x24c>)
 800e428:	f7f1 feb2 	bl	8000190 <memchr>
 800e42c:	9a04      	ldr	r2, [sp, #16]
 800e42e:	b9d8      	cbnz	r0, 800e468 <_vfiprintf_r+0x12c>
 800e430:	06d1      	lsls	r1, r2, #27
 800e432:	bf44      	itt	mi
 800e434:	2320      	movmi	r3, #32
 800e436:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e43a:	0713      	lsls	r3, r2, #28
 800e43c:	bf44      	itt	mi
 800e43e:	232b      	movmi	r3, #43	; 0x2b
 800e440:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e444:	f89a 3000 	ldrb.w	r3, [sl]
 800e448:	2b2a      	cmp	r3, #42	; 0x2a
 800e44a:	d015      	beq.n	800e478 <_vfiprintf_r+0x13c>
 800e44c:	9a07      	ldr	r2, [sp, #28]
 800e44e:	4654      	mov	r4, sl
 800e450:	2000      	movs	r0, #0
 800e452:	f04f 0c0a 	mov.w	ip, #10
 800e456:	4621      	mov	r1, r4
 800e458:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e45c:	3b30      	subs	r3, #48	; 0x30
 800e45e:	2b09      	cmp	r3, #9
 800e460:	d94e      	bls.n	800e500 <_vfiprintf_r+0x1c4>
 800e462:	b1b0      	cbz	r0, 800e492 <_vfiprintf_r+0x156>
 800e464:	9207      	str	r2, [sp, #28]
 800e466:	e014      	b.n	800e492 <_vfiprintf_r+0x156>
 800e468:	eba0 0308 	sub.w	r3, r0, r8
 800e46c:	fa09 f303 	lsl.w	r3, r9, r3
 800e470:	4313      	orrs	r3, r2
 800e472:	9304      	str	r3, [sp, #16]
 800e474:	46a2      	mov	sl, r4
 800e476:	e7d2      	b.n	800e41e <_vfiprintf_r+0xe2>
 800e478:	9b03      	ldr	r3, [sp, #12]
 800e47a:	1d19      	adds	r1, r3, #4
 800e47c:	681b      	ldr	r3, [r3, #0]
 800e47e:	9103      	str	r1, [sp, #12]
 800e480:	2b00      	cmp	r3, #0
 800e482:	bfbb      	ittet	lt
 800e484:	425b      	neglt	r3, r3
 800e486:	f042 0202 	orrlt.w	r2, r2, #2
 800e48a:	9307      	strge	r3, [sp, #28]
 800e48c:	9307      	strlt	r3, [sp, #28]
 800e48e:	bfb8      	it	lt
 800e490:	9204      	strlt	r2, [sp, #16]
 800e492:	7823      	ldrb	r3, [r4, #0]
 800e494:	2b2e      	cmp	r3, #46	; 0x2e
 800e496:	d10c      	bne.n	800e4b2 <_vfiprintf_r+0x176>
 800e498:	7863      	ldrb	r3, [r4, #1]
 800e49a:	2b2a      	cmp	r3, #42	; 0x2a
 800e49c:	d135      	bne.n	800e50a <_vfiprintf_r+0x1ce>
 800e49e:	9b03      	ldr	r3, [sp, #12]
 800e4a0:	1d1a      	adds	r2, r3, #4
 800e4a2:	681b      	ldr	r3, [r3, #0]
 800e4a4:	9203      	str	r2, [sp, #12]
 800e4a6:	2b00      	cmp	r3, #0
 800e4a8:	bfb8      	it	lt
 800e4aa:	f04f 33ff 	movlt.w	r3, #4294967295
 800e4ae:	3402      	adds	r4, #2
 800e4b0:	9305      	str	r3, [sp, #20]
 800e4b2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 800e598 <_vfiprintf_r+0x25c>
 800e4b6:	7821      	ldrb	r1, [r4, #0]
 800e4b8:	2203      	movs	r2, #3
 800e4ba:	4650      	mov	r0, sl
 800e4bc:	f7f1 fe68 	bl	8000190 <memchr>
 800e4c0:	b140      	cbz	r0, 800e4d4 <_vfiprintf_r+0x198>
 800e4c2:	2340      	movs	r3, #64	; 0x40
 800e4c4:	eba0 000a 	sub.w	r0, r0, sl
 800e4c8:	fa03 f000 	lsl.w	r0, r3, r0
 800e4cc:	9b04      	ldr	r3, [sp, #16]
 800e4ce:	4303      	orrs	r3, r0
 800e4d0:	3401      	adds	r4, #1
 800e4d2:	9304      	str	r3, [sp, #16]
 800e4d4:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e4d8:	482c      	ldr	r0, [pc, #176]	; (800e58c <_vfiprintf_r+0x250>)
 800e4da:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e4de:	2206      	movs	r2, #6
 800e4e0:	f7f1 fe56 	bl	8000190 <memchr>
 800e4e4:	2800      	cmp	r0, #0
 800e4e6:	d03f      	beq.n	800e568 <_vfiprintf_r+0x22c>
 800e4e8:	4b29      	ldr	r3, [pc, #164]	; (800e590 <_vfiprintf_r+0x254>)
 800e4ea:	bb1b      	cbnz	r3, 800e534 <_vfiprintf_r+0x1f8>
 800e4ec:	9b03      	ldr	r3, [sp, #12]
 800e4ee:	3307      	adds	r3, #7
 800e4f0:	f023 0307 	bic.w	r3, r3, #7
 800e4f4:	3308      	adds	r3, #8
 800e4f6:	9303      	str	r3, [sp, #12]
 800e4f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e4fa:	443b      	add	r3, r7
 800e4fc:	9309      	str	r3, [sp, #36]	; 0x24
 800e4fe:	e767      	b.n	800e3d0 <_vfiprintf_r+0x94>
 800e500:	fb0c 3202 	mla	r2, ip, r2, r3
 800e504:	460c      	mov	r4, r1
 800e506:	2001      	movs	r0, #1
 800e508:	e7a5      	b.n	800e456 <_vfiprintf_r+0x11a>
 800e50a:	2300      	movs	r3, #0
 800e50c:	3401      	adds	r4, #1
 800e50e:	9305      	str	r3, [sp, #20]
 800e510:	4619      	mov	r1, r3
 800e512:	f04f 0c0a 	mov.w	ip, #10
 800e516:	4620      	mov	r0, r4
 800e518:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e51c:	3a30      	subs	r2, #48	; 0x30
 800e51e:	2a09      	cmp	r2, #9
 800e520:	d903      	bls.n	800e52a <_vfiprintf_r+0x1ee>
 800e522:	2b00      	cmp	r3, #0
 800e524:	d0c5      	beq.n	800e4b2 <_vfiprintf_r+0x176>
 800e526:	9105      	str	r1, [sp, #20]
 800e528:	e7c3      	b.n	800e4b2 <_vfiprintf_r+0x176>
 800e52a:	fb0c 2101 	mla	r1, ip, r1, r2
 800e52e:	4604      	mov	r4, r0
 800e530:	2301      	movs	r3, #1
 800e532:	e7f0      	b.n	800e516 <_vfiprintf_r+0x1da>
 800e534:	ab03      	add	r3, sp, #12
 800e536:	9300      	str	r3, [sp, #0]
 800e538:	462a      	mov	r2, r5
 800e53a:	4b16      	ldr	r3, [pc, #88]	; (800e594 <_vfiprintf_r+0x258>)
 800e53c:	a904      	add	r1, sp, #16
 800e53e:	4630      	mov	r0, r6
 800e540:	f3af 8000 	nop.w
 800e544:	4607      	mov	r7, r0
 800e546:	1c78      	adds	r0, r7, #1
 800e548:	d1d6      	bne.n	800e4f8 <_vfiprintf_r+0x1bc>
 800e54a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e54c:	07d9      	lsls	r1, r3, #31
 800e54e:	d405      	bmi.n	800e55c <_vfiprintf_r+0x220>
 800e550:	89ab      	ldrh	r3, [r5, #12]
 800e552:	059a      	lsls	r2, r3, #22
 800e554:	d402      	bmi.n	800e55c <_vfiprintf_r+0x220>
 800e556:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e558:	f7fd fa28 	bl	800b9ac <__retarget_lock_release_recursive>
 800e55c:	89ab      	ldrh	r3, [r5, #12]
 800e55e:	065b      	lsls	r3, r3, #25
 800e560:	f53f af12 	bmi.w	800e388 <_vfiprintf_r+0x4c>
 800e564:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e566:	e711      	b.n	800e38c <_vfiprintf_r+0x50>
 800e568:	ab03      	add	r3, sp, #12
 800e56a:	9300      	str	r3, [sp, #0]
 800e56c:	462a      	mov	r2, r5
 800e56e:	4b09      	ldr	r3, [pc, #36]	; (800e594 <_vfiprintf_r+0x258>)
 800e570:	a904      	add	r1, sp, #16
 800e572:	4630      	mov	r0, r6
 800e574:	f000 f880 	bl	800e678 <_printf_i>
 800e578:	e7e4      	b.n	800e544 <_vfiprintf_r+0x208>
 800e57a:	bf00      	nop
 800e57c:	0800f788 	.word	0x0800f788
 800e580:	0800f7a8 	.word	0x0800f7a8
 800e584:	0800f768 	.word	0x0800f768
 800e588:	0800fa24 	.word	0x0800fa24
 800e58c:	0800fa2e 	.word	0x0800fa2e
 800e590:	00000000 	.word	0x00000000
 800e594:	0800e317 	.word	0x0800e317
 800e598:	0800fa2a 	.word	0x0800fa2a

0800e59c <_printf_common>:
 800e59c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e5a0:	4616      	mov	r6, r2
 800e5a2:	4699      	mov	r9, r3
 800e5a4:	688a      	ldr	r2, [r1, #8]
 800e5a6:	690b      	ldr	r3, [r1, #16]
 800e5a8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800e5ac:	4293      	cmp	r3, r2
 800e5ae:	bfb8      	it	lt
 800e5b0:	4613      	movlt	r3, r2
 800e5b2:	6033      	str	r3, [r6, #0]
 800e5b4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800e5b8:	4607      	mov	r7, r0
 800e5ba:	460c      	mov	r4, r1
 800e5bc:	b10a      	cbz	r2, 800e5c2 <_printf_common+0x26>
 800e5be:	3301      	adds	r3, #1
 800e5c0:	6033      	str	r3, [r6, #0]
 800e5c2:	6823      	ldr	r3, [r4, #0]
 800e5c4:	0699      	lsls	r1, r3, #26
 800e5c6:	bf42      	ittt	mi
 800e5c8:	6833      	ldrmi	r3, [r6, #0]
 800e5ca:	3302      	addmi	r3, #2
 800e5cc:	6033      	strmi	r3, [r6, #0]
 800e5ce:	6825      	ldr	r5, [r4, #0]
 800e5d0:	f015 0506 	ands.w	r5, r5, #6
 800e5d4:	d106      	bne.n	800e5e4 <_printf_common+0x48>
 800e5d6:	f104 0a19 	add.w	sl, r4, #25
 800e5da:	68e3      	ldr	r3, [r4, #12]
 800e5dc:	6832      	ldr	r2, [r6, #0]
 800e5de:	1a9b      	subs	r3, r3, r2
 800e5e0:	42ab      	cmp	r3, r5
 800e5e2:	dc26      	bgt.n	800e632 <_printf_common+0x96>
 800e5e4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800e5e8:	1e13      	subs	r3, r2, #0
 800e5ea:	6822      	ldr	r2, [r4, #0]
 800e5ec:	bf18      	it	ne
 800e5ee:	2301      	movne	r3, #1
 800e5f0:	0692      	lsls	r2, r2, #26
 800e5f2:	d42b      	bmi.n	800e64c <_printf_common+0xb0>
 800e5f4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800e5f8:	4649      	mov	r1, r9
 800e5fa:	4638      	mov	r0, r7
 800e5fc:	47c0      	blx	r8
 800e5fe:	3001      	adds	r0, #1
 800e600:	d01e      	beq.n	800e640 <_printf_common+0xa4>
 800e602:	6823      	ldr	r3, [r4, #0]
 800e604:	68e5      	ldr	r5, [r4, #12]
 800e606:	6832      	ldr	r2, [r6, #0]
 800e608:	f003 0306 	and.w	r3, r3, #6
 800e60c:	2b04      	cmp	r3, #4
 800e60e:	bf08      	it	eq
 800e610:	1aad      	subeq	r5, r5, r2
 800e612:	68a3      	ldr	r3, [r4, #8]
 800e614:	6922      	ldr	r2, [r4, #16]
 800e616:	bf0c      	ite	eq
 800e618:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800e61c:	2500      	movne	r5, #0
 800e61e:	4293      	cmp	r3, r2
 800e620:	bfc4      	itt	gt
 800e622:	1a9b      	subgt	r3, r3, r2
 800e624:	18ed      	addgt	r5, r5, r3
 800e626:	2600      	movs	r6, #0
 800e628:	341a      	adds	r4, #26
 800e62a:	42b5      	cmp	r5, r6
 800e62c:	d11a      	bne.n	800e664 <_printf_common+0xc8>
 800e62e:	2000      	movs	r0, #0
 800e630:	e008      	b.n	800e644 <_printf_common+0xa8>
 800e632:	2301      	movs	r3, #1
 800e634:	4652      	mov	r2, sl
 800e636:	4649      	mov	r1, r9
 800e638:	4638      	mov	r0, r7
 800e63a:	47c0      	blx	r8
 800e63c:	3001      	adds	r0, #1
 800e63e:	d103      	bne.n	800e648 <_printf_common+0xac>
 800e640:	f04f 30ff 	mov.w	r0, #4294967295
 800e644:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e648:	3501      	adds	r5, #1
 800e64a:	e7c6      	b.n	800e5da <_printf_common+0x3e>
 800e64c:	18e1      	adds	r1, r4, r3
 800e64e:	1c5a      	adds	r2, r3, #1
 800e650:	2030      	movs	r0, #48	; 0x30
 800e652:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800e656:	4422      	add	r2, r4
 800e658:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800e65c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800e660:	3302      	adds	r3, #2
 800e662:	e7c7      	b.n	800e5f4 <_printf_common+0x58>
 800e664:	2301      	movs	r3, #1
 800e666:	4622      	mov	r2, r4
 800e668:	4649      	mov	r1, r9
 800e66a:	4638      	mov	r0, r7
 800e66c:	47c0      	blx	r8
 800e66e:	3001      	adds	r0, #1
 800e670:	d0e6      	beq.n	800e640 <_printf_common+0xa4>
 800e672:	3601      	adds	r6, #1
 800e674:	e7d9      	b.n	800e62a <_printf_common+0x8e>
	...

0800e678 <_printf_i>:
 800e678:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800e67c:	7e0f      	ldrb	r7, [r1, #24]
 800e67e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800e680:	2f78      	cmp	r7, #120	; 0x78
 800e682:	4691      	mov	r9, r2
 800e684:	4680      	mov	r8, r0
 800e686:	460c      	mov	r4, r1
 800e688:	469a      	mov	sl, r3
 800e68a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800e68e:	d807      	bhi.n	800e6a0 <_printf_i+0x28>
 800e690:	2f62      	cmp	r7, #98	; 0x62
 800e692:	d80a      	bhi.n	800e6aa <_printf_i+0x32>
 800e694:	2f00      	cmp	r7, #0
 800e696:	f000 80d8 	beq.w	800e84a <_printf_i+0x1d2>
 800e69a:	2f58      	cmp	r7, #88	; 0x58
 800e69c:	f000 80a3 	beq.w	800e7e6 <_printf_i+0x16e>
 800e6a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800e6a4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800e6a8:	e03a      	b.n	800e720 <_printf_i+0xa8>
 800e6aa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800e6ae:	2b15      	cmp	r3, #21
 800e6b0:	d8f6      	bhi.n	800e6a0 <_printf_i+0x28>
 800e6b2:	a101      	add	r1, pc, #4	; (adr r1, 800e6b8 <_printf_i+0x40>)
 800e6b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800e6b8:	0800e711 	.word	0x0800e711
 800e6bc:	0800e725 	.word	0x0800e725
 800e6c0:	0800e6a1 	.word	0x0800e6a1
 800e6c4:	0800e6a1 	.word	0x0800e6a1
 800e6c8:	0800e6a1 	.word	0x0800e6a1
 800e6cc:	0800e6a1 	.word	0x0800e6a1
 800e6d0:	0800e725 	.word	0x0800e725
 800e6d4:	0800e6a1 	.word	0x0800e6a1
 800e6d8:	0800e6a1 	.word	0x0800e6a1
 800e6dc:	0800e6a1 	.word	0x0800e6a1
 800e6e0:	0800e6a1 	.word	0x0800e6a1
 800e6e4:	0800e831 	.word	0x0800e831
 800e6e8:	0800e755 	.word	0x0800e755
 800e6ec:	0800e813 	.word	0x0800e813
 800e6f0:	0800e6a1 	.word	0x0800e6a1
 800e6f4:	0800e6a1 	.word	0x0800e6a1
 800e6f8:	0800e853 	.word	0x0800e853
 800e6fc:	0800e6a1 	.word	0x0800e6a1
 800e700:	0800e755 	.word	0x0800e755
 800e704:	0800e6a1 	.word	0x0800e6a1
 800e708:	0800e6a1 	.word	0x0800e6a1
 800e70c:	0800e81b 	.word	0x0800e81b
 800e710:	682b      	ldr	r3, [r5, #0]
 800e712:	1d1a      	adds	r2, r3, #4
 800e714:	681b      	ldr	r3, [r3, #0]
 800e716:	602a      	str	r2, [r5, #0]
 800e718:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800e71c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800e720:	2301      	movs	r3, #1
 800e722:	e0a3      	b.n	800e86c <_printf_i+0x1f4>
 800e724:	6820      	ldr	r0, [r4, #0]
 800e726:	6829      	ldr	r1, [r5, #0]
 800e728:	0606      	lsls	r6, r0, #24
 800e72a:	f101 0304 	add.w	r3, r1, #4
 800e72e:	d50a      	bpl.n	800e746 <_printf_i+0xce>
 800e730:	680e      	ldr	r6, [r1, #0]
 800e732:	602b      	str	r3, [r5, #0]
 800e734:	2e00      	cmp	r6, #0
 800e736:	da03      	bge.n	800e740 <_printf_i+0xc8>
 800e738:	232d      	movs	r3, #45	; 0x2d
 800e73a:	4276      	negs	r6, r6
 800e73c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e740:	485e      	ldr	r0, [pc, #376]	; (800e8bc <_printf_i+0x244>)
 800e742:	230a      	movs	r3, #10
 800e744:	e019      	b.n	800e77a <_printf_i+0x102>
 800e746:	680e      	ldr	r6, [r1, #0]
 800e748:	602b      	str	r3, [r5, #0]
 800e74a:	f010 0f40 	tst.w	r0, #64	; 0x40
 800e74e:	bf18      	it	ne
 800e750:	b236      	sxthne	r6, r6
 800e752:	e7ef      	b.n	800e734 <_printf_i+0xbc>
 800e754:	682b      	ldr	r3, [r5, #0]
 800e756:	6820      	ldr	r0, [r4, #0]
 800e758:	1d19      	adds	r1, r3, #4
 800e75a:	6029      	str	r1, [r5, #0]
 800e75c:	0601      	lsls	r1, r0, #24
 800e75e:	d501      	bpl.n	800e764 <_printf_i+0xec>
 800e760:	681e      	ldr	r6, [r3, #0]
 800e762:	e002      	b.n	800e76a <_printf_i+0xf2>
 800e764:	0646      	lsls	r6, r0, #25
 800e766:	d5fb      	bpl.n	800e760 <_printf_i+0xe8>
 800e768:	881e      	ldrh	r6, [r3, #0]
 800e76a:	4854      	ldr	r0, [pc, #336]	; (800e8bc <_printf_i+0x244>)
 800e76c:	2f6f      	cmp	r7, #111	; 0x6f
 800e76e:	bf0c      	ite	eq
 800e770:	2308      	moveq	r3, #8
 800e772:	230a      	movne	r3, #10
 800e774:	2100      	movs	r1, #0
 800e776:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800e77a:	6865      	ldr	r5, [r4, #4]
 800e77c:	60a5      	str	r5, [r4, #8]
 800e77e:	2d00      	cmp	r5, #0
 800e780:	bfa2      	ittt	ge
 800e782:	6821      	ldrge	r1, [r4, #0]
 800e784:	f021 0104 	bicge.w	r1, r1, #4
 800e788:	6021      	strge	r1, [r4, #0]
 800e78a:	b90e      	cbnz	r6, 800e790 <_printf_i+0x118>
 800e78c:	2d00      	cmp	r5, #0
 800e78e:	d04d      	beq.n	800e82c <_printf_i+0x1b4>
 800e790:	4615      	mov	r5, r2
 800e792:	fbb6 f1f3 	udiv	r1, r6, r3
 800e796:	fb03 6711 	mls	r7, r3, r1, r6
 800e79a:	5dc7      	ldrb	r7, [r0, r7]
 800e79c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800e7a0:	4637      	mov	r7, r6
 800e7a2:	42bb      	cmp	r3, r7
 800e7a4:	460e      	mov	r6, r1
 800e7a6:	d9f4      	bls.n	800e792 <_printf_i+0x11a>
 800e7a8:	2b08      	cmp	r3, #8
 800e7aa:	d10b      	bne.n	800e7c4 <_printf_i+0x14c>
 800e7ac:	6823      	ldr	r3, [r4, #0]
 800e7ae:	07de      	lsls	r6, r3, #31
 800e7b0:	d508      	bpl.n	800e7c4 <_printf_i+0x14c>
 800e7b2:	6923      	ldr	r3, [r4, #16]
 800e7b4:	6861      	ldr	r1, [r4, #4]
 800e7b6:	4299      	cmp	r1, r3
 800e7b8:	bfde      	ittt	le
 800e7ba:	2330      	movle	r3, #48	; 0x30
 800e7bc:	f805 3c01 	strble.w	r3, [r5, #-1]
 800e7c0:	f105 35ff 	addle.w	r5, r5, #4294967295
 800e7c4:	1b52      	subs	r2, r2, r5
 800e7c6:	6122      	str	r2, [r4, #16]
 800e7c8:	f8cd a000 	str.w	sl, [sp]
 800e7cc:	464b      	mov	r3, r9
 800e7ce:	aa03      	add	r2, sp, #12
 800e7d0:	4621      	mov	r1, r4
 800e7d2:	4640      	mov	r0, r8
 800e7d4:	f7ff fee2 	bl	800e59c <_printf_common>
 800e7d8:	3001      	adds	r0, #1
 800e7da:	d14c      	bne.n	800e876 <_printf_i+0x1fe>
 800e7dc:	f04f 30ff 	mov.w	r0, #4294967295
 800e7e0:	b004      	add	sp, #16
 800e7e2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e7e6:	4835      	ldr	r0, [pc, #212]	; (800e8bc <_printf_i+0x244>)
 800e7e8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800e7ec:	6829      	ldr	r1, [r5, #0]
 800e7ee:	6823      	ldr	r3, [r4, #0]
 800e7f0:	f851 6b04 	ldr.w	r6, [r1], #4
 800e7f4:	6029      	str	r1, [r5, #0]
 800e7f6:	061d      	lsls	r5, r3, #24
 800e7f8:	d514      	bpl.n	800e824 <_printf_i+0x1ac>
 800e7fa:	07df      	lsls	r7, r3, #31
 800e7fc:	bf44      	itt	mi
 800e7fe:	f043 0320 	orrmi.w	r3, r3, #32
 800e802:	6023      	strmi	r3, [r4, #0]
 800e804:	b91e      	cbnz	r6, 800e80e <_printf_i+0x196>
 800e806:	6823      	ldr	r3, [r4, #0]
 800e808:	f023 0320 	bic.w	r3, r3, #32
 800e80c:	6023      	str	r3, [r4, #0]
 800e80e:	2310      	movs	r3, #16
 800e810:	e7b0      	b.n	800e774 <_printf_i+0xfc>
 800e812:	6823      	ldr	r3, [r4, #0]
 800e814:	f043 0320 	orr.w	r3, r3, #32
 800e818:	6023      	str	r3, [r4, #0]
 800e81a:	2378      	movs	r3, #120	; 0x78
 800e81c:	4828      	ldr	r0, [pc, #160]	; (800e8c0 <_printf_i+0x248>)
 800e81e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800e822:	e7e3      	b.n	800e7ec <_printf_i+0x174>
 800e824:	0659      	lsls	r1, r3, #25
 800e826:	bf48      	it	mi
 800e828:	b2b6      	uxthmi	r6, r6
 800e82a:	e7e6      	b.n	800e7fa <_printf_i+0x182>
 800e82c:	4615      	mov	r5, r2
 800e82e:	e7bb      	b.n	800e7a8 <_printf_i+0x130>
 800e830:	682b      	ldr	r3, [r5, #0]
 800e832:	6826      	ldr	r6, [r4, #0]
 800e834:	6961      	ldr	r1, [r4, #20]
 800e836:	1d18      	adds	r0, r3, #4
 800e838:	6028      	str	r0, [r5, #0]
 800e83a:	0635      	lsls	r5, r6, #24
 800e83c:	681b      	ldr	r3, [r3, #0]
 800e83e:	d501      	bpl.n	800e844 <_printf_i+0x1cc>
 800e840:	6019      	str	r1, [r3, #0]
 800e842:	e002      	b.n	800e84a <_printf_i+0x1d2>
 800e844:	0670      	lsls	r0, r6, #25
 800e846:	d5fb      	bpl.n	800e840 <_printf_i+0x1c8>
 800e848:	8019      	strh	r1, [r3, #0]
 800e84a:	2300      	movs	r3, #0
 800e84c:	6123      	str	r3, [r4, #16]
 800e84e:	4615      	mov	r5, r2
 800e850:	e7ba      	b.n	800e7c8 <_printf_i+0x150>
 800e852:	682b      	ldr	r3, [r5, #0]
 800e854:	1d1a      	adds	r2, r3, #4
 800e856:	602a      	str	r2, [r5, #0]
 800e858:	681d      	ldr	r5, [r3, #0]
 800e85a:	6862      	ldr	r2, [r4, #4]
 800e85c:	2100      	movs	r1, #0
 800e85e:	4628      	mov	r0, r5
 800e860:	f7f1 fc96 	bl	8000190 <memchr>
 800e864:	b108      	cbz	r0, 800e86a <_printf_i+0x1f2>
 800e866:	1b40      	subs	r0, r0, r5
 800e868:	6060      	str	r0, [r4, #4]
 800e86a:	6863      	ldr	r3, [r4, #4]
 800e86c:	6123      	str	r3, [r4, #16]
 800e86e:	2300      	movs	r3, #0
 800e870:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800e874:	e7a8      	b.n	800e7c8 <_printf_i+0x150>
 800e876:	6923      	ldr	r3, [r4, #16]
 800e878:	462a      	mov	r2, r5
 800e87a:	4649      	mov	r1, r9
 800e87c:	4640      	mov	r0, r8
 800e87e:	47d0      	blx	sl
 800e880:	3001      	adds	r0, #1
 800e882:	d0ab      	beq.n	800e7dc <_printf_i+0x164>
 800e884:	6823      	ldr	r3, [r4, #0]
 800e886:	079b      	lsls	r3, r3, #30
 800e888:	d413      	bmi.n	800e8b2 <_printf_i+0x23a>
 800e88a:	68e0      	ldr	r0, [r4, #12]
 800e88c:	9b03      	ldr	r3, [sp, #12]
 800e88e:	4298      	cmp	r0, r3
 800e890:	bfb8      	it	lt
 800e892:	4618      	movlt	r0, r3
 800e894:	e7a4      	b.n	800e7e0 <_printf_i+0x168>
 800e896:	2301      	movs	r3, #1
 800e898:	4632      	mov	r2, r6
 800e89a:	4649      	mov	r1, r9
 800e89c:	4640      	mov	r0, r8
 800e89e:	47d0      	blx	sl
 800e8a0:	3001      	adds	r0, #1
 800e8a2:	d09b      	beq.n	800e7dc <_printf_i+0x164>
 800e8a4:	3501      	adds	r5, #1
 800e8a6:	68e3      	ldr	r3, [r4, #12]
 800e8a8:	9903      	ldr	r1, [sp, #12]
 800e8aa:	1a5b      	subs	r3, r3, r1
 800e8ac:	42ab      	cmp	r3, r5
 800e8ae:	dcf2      	bgt.n	800e896 <_printf_i+0x21e>
 800e8b0:	e7eb      	b.n	800e88a <_printf_i+0x212>
 800e8b2:	2500      	movs	r5, #0
 800e8b4:	f104 0619 	add.w	r6, r4, #25
 800e8b8:	e7f5      	b.n	800e8a6 <_printf_i+0x22e>
 800e8ba:	bf00      	nop
 800e8bc:	0800fa35 	.word	0x0800fa35
 800e8c0:	0800fa46 	.word	0x0800fa46

0800e8c4 <_read_r>:
 800e8c4:	b538      	push	{r3, r4, r5, lr}
 800e8c6:	4d07      	ldr	r5, [pc, #28]	; (800e8e4 <_read_r+0x20>)
 800e8c8:	4604      	mov	r4, r0
 800e8ca:	4608      	mov	r0, r1
 800e8cc:	4611      	mov	r1, r2
 800e8ce:	2200      	movs	r2, #0
 800e8d0:	602a      	str	r2, [r5, #0]
 800e8d2:	461a      	mov	r2, r3
 800e8d4:	f7f6 fad6 	bl	8004e84 <_read>
 800e8d8:	1c43      	adds	r3, r0, #1
 800e8da:	d102      	bne.n	800e8e2 <_read_r+0x1e>
 800e8dc:	682b      	ldr	r3, [r5, #0]
 800e8de:	b103      	cbz	r3, 800e8e2 <_read_r+0x1e>
 800e8e0:	6023      	str	r3, [r4, #0]
 800e8e2:	bd38      	pop	{r3, r4, r5, pc}
 800e8e4:	20001764 	.word	0x20001764

0800e8e8 <nan>:
 800e8e8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800e8f0 <nan+0x8>
 800e8ec:	4770      	bx	lr
 800e8ee:	bf00      	nop
 800e8f0:	00000000 	.word	0x00000000
 800e8f4:	7ff80000 	.word	0x7ff80000

0800e8f8 <__ascii_wctomb>:
 800e8f8:	b149      	cbz	r1, 800e90e <__ascii_wctomb+0x16>
 800e8fa:	2aff      	cmp	r2, #255	; 0xff
 800e8fc:	bf85      	ittet	hi
 800e8fe:	238a      	movhi	r3, #138	; 0x8a
 800e900:	6003      	strhi	r3, [r0, #0]
 800e902:	700a      	strbls	r2, [r1, #0]
 800e904:	f04f 30ff 	movhi.w	r0, #4294967295
 800e908:	bf98      	it	ls
 800e90a:	2001      	movls	r0, #1
 800e90c:	4770      	bx	lr
 800e90e:	4608      	mov	r0, r1
 800e910:	4770      	bx	lr
	...

0800e914 <__assert_func>:
 800e914:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e916:	4614      	mov	r4, r2
 800e918:	461a      	mov	r2, r3
 800e91a:	4b09      	ldr	r3, [pc, #36]	; (800e940 <__assert_func+0x2c>)
 800e91c:	681b      	ldr	r3, [r3, #0]
 800e91e:	4605      	mov	r5, r0
 800e920:	68d8      	ldr	r0, [r3, #12]
 800e922:	b14c      	cbz	r4, 800e938 <__assert_func+0x24>
 800e924:	4b07      	ldr	r3, [pc, #28]	; (800e944 <__assert_func+0x30>)
 800e926:	9100      	str	r1, [sp, #0]
 800e928:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e92c:	4906      	ldr	r1, [pc, #24]	; (800e948 <__assert_func+0x34>)
 800e92e:	462b      	mov	r3, r5
 800e930:	f000 f80e 	bl	800e950 <fiprintf>
 800e934:	f000 f826 	bl	800e984 <abort>
 800e938:	4b04      	ldr	r3, [pc, #16]	; (800e94c <__assert_func+0x38>)
 800e93a:	461c      	mov	r4, r3
 800e93c:	e7f3      	b.n	800e926 <__assert_func+0x12>
 800e93e:	bf00      	nop
 800e940:	20000024 	.word	0x20000024
 800e944:	0800fa57 	.word	0x0800fa57
 800e948:	0800fa64 	.word	0x0800fa64
 800e94c:	0800fa92 	.word	0x0800fa92

0800e950 <fiprintf>:
 800e950:	b40e      	push	{r1, r2, r3}
 800e952:	b503      	push	{r0, r1, lr}
 800e954:	4601      	mov	r1, r0
 800e956:	ab03      	add	r3, sp, #12
 800e958:	4805      	ldr	r0, [pc, #20]	; (800e970 <fiprintf+0x20>)
 800e95a:	f853 2b04 	ldr.w	r2, [r3], #4
 800e95e:	6800      	ldr	r0, [r0, #0]
 800e960:	9301      	str	r3, [sp, #4]
 800e962:	f7ff fceb 	bl	800e33c <_vfiprintf_r>
 800e966:	b002      	add	sp, #8
 800e968:	f85d eb04 	ldr.w	lr, [sp], #4
 800e96c:	b003      	add	sp, #12
 800e96e:	4770      	bx	lr
 800e970:	20000024 	.word	0x20000024

0800e974 <_malloc_usable_size_r>:
 800e974:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e978:	1f18      	subs	r0, r3, #4
 800e97a:	2b00      	cmp	r3, #0
 800e97c:	bfbc      	itt	lt
 800e97e:	580b      	ldrlt	r3, [r1, r0]
 800e980:	18c0      	addlt	r0, r0, r3
 800e982:	4770      	bx	lr

0800e984 <abort>:
 800e984:	b508      	push	{r3, lr}
 800e986:	2006      	movs	r0, #6
 800e988:	f000 f82c 	bl	800e9e4 <raise>
 800e98c:	2001      	movs	r0, #1
 800e98e:	f7f6 fa6f 	bl	8004e70 <_exit>

0800e992 <_raise_r>:
 800e992:	291f      	cmp	r1, #31
 800e994:	b538      	push	{r3, r4, r5, lr}
 800e996:	4604      	mov	r4, r0
 800e998:	460d      	mov	r5, r1
 800e99a:	d904      	bls.n	800e9a6 <_raise_r+0x14>
 800e99c:	2316      	movs	r3, #22
 800e99e:	6003      	str	r3, [r0, #0]
 800e9a0:	f04f 30ff 	mov.w	r0, #4294967295
 800e9a4:	bd38      	pop	{r3, r4, r5, pc}
 800e9a6:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800e9a8:	b112      	cbz	r2, 800e9b0 <_raise_r+0x1e>
 800e9aa:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800e9ae:	b94b      	cbnz	r3, 800e9c4 <_raise_r+0x32>
 800e9b0:	4620      	mov	r0, r4
 800e9b2:	f000 f831 	bl	800ea18 <_getpid_r>
 800e9b6:	462a      	mov	r2, r5
 800e9b8:	4601      	mov	r1, r0
 800e9ba:	4620      	mov	r0, r4
 800e9bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e9c0:	f000 b818 	b.w	800e9f4 <_kill_r>
 800e9c4:	2b01      	cmp	r3, #1
 800e9c6:	d00a      	beq.n	800e9de <_raise_r+0x4c>
 800e9c8:	1c59      	adds	r1, r3, #1
 800e9ca:	d103      	bne.n	800e9d4 <_raise_r+0x42>
 800e9cc:	2316      	movs	r3, #22
 800e9ce:	6003      	str	r3, [r0, #0]
 800e9d0:	2001      	movs	r0, #1
 800e9d2:	e7e7      	b.n	800e9a4 <_raise_r+0x12>
 800e9d4:	2400      	movs	r4, #0
 800e9d6:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800e9da:	4628      	mov	r0, r5
 800e9dc:	4798      	blx	r3
 800e9de:	2000      	movs	r0, #0
 800e9e0:	e7e0      	b.n	800e9a4 <_raise_r+0x12>
	...

0800e9e4 <raise>:
 800e9e4:	4b02      	ldr	r3, [pc, #8]	; (800e9f0 <raise+0xc>)
 800e9e6:	4601      	mov	r1, r0
 800e9e8:	6818      	ldr	r0, [r3, #0]
 800e9ea:	f7ff bfd2 	b.w	800e992 <_raise_r>
 800e9ee:	bf00      	nop
 800e9f0:	20000024 	.word	0x20000024

0800e9f4 <_kill_r>:
 800e9f4:	b538      	push	{r3, r4, r5, lr}
 800e9f6:	4d07      	ldr	r5, [pc, #28]	; (800ea14 <_kill_r+0x20>)
 800e9f8:	2300      	movs	r3, #0
 800e9fa:	4604      	mov	r4, r0
 800e9fc:	4608      	mov	r0, r1
 800e9fe:	4611      	mov	r1, r2
 800ea00:	602b      	str	r3, [r5, #0]
 800ea02:	f7f6 fa25 	bl	8004e50 <_kill>
 800ea06:	1c43      	adds	r3, r0, #1
 800ea08:	d102      	bne.n	800ea10 <_kill_r+0x1c>
 800ea0a:	682b      	ldr	r3, [r5, #0]
 800ea0c:	b103      	cbz	r3, 800ea10 <_kill_r+0x1c>
 800ea0e:	6023      	str	r3, [r4, #0]
 800ea10:	bd38      	pop	{r3, r4, r5, pc}
 800ea12:	bf00      	nop
 800ea14:	20001764 	.word	0x20001764

0800ea18 <_getpid_r>:
 800ea18:	f7f6 ba12 	b.w	8004e40 <_getpid>

0800ea1c <_init>:
 800ea1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea1e:	bf00      	nop
 800ea20:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ea22:	bc08      	pop	{r3}
 800ea24:	469e      	mov	lr, r3
 800ea26:	4770      	bx	lr

0800ea28 <_fini>:
 800ea28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea2a:	bf00      	nop
 800ea2c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800ea2e:	bc08      	pop	{r3}
 800ea30:	469e      	mov	lr, r3
 800ea32:	4770      	bx	lr
